
cable_monitor.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000fa48  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00019090  0800fbf8  0800fbf8  0001fbf8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08028c88  08028c88  000402cc  2**0
                  CONTENTS
  4 .ARM          00000008  08028c88  08028c88  00038c88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08028c90  08028c90  000402cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08028c90  08028c90  00038c90  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08028c94  08028c94  00038c94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000002cc  20000000  08028c98  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000f84  200002d0  08028f64  000402d0  2**3
                  ALLOC
 10 ._user_heap_stack 00000604  20001254  08028f64  00041254  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000402cc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00018122  00000000  00000000  000402fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003d1b  00000000  00000000  0005841e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001620  00000000  00000000  0005c140  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001420  00000000  00000000  0005d760  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002732c  00000000  00000000  0005eb80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001a4e9  00000000  00000000  00085eac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000e0257  00000000  00000000  000a0395  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000be  00000000  00000000  001805ec  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000723c  00000000  00000000  001806ac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_loc    00002a9c  00000000  00000000  001878e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .stab         000000cc  00000000  00000000  0018a384  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .stabstr      000001b9  00000000  00000000  0018a450  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200002d0 	.word	0x200002d0
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0800fbe0 	.word	0x0800fbe0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200002d4 	.word	0x200002d4
 80001ec:	0800fbe0 	.word	0x0800fbe0

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <memchr>:
 80002c0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002c4:	2a10      	cmp	r2, #16
 80002c6:	db2b      	blt.n	8000320 <memchr+0x60>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	d008      	beq.n	80002e0 <memchr+0x20>
 80002ce:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002d2:	3a01      	subs	r2, #1
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d02d      	beq.n	8000334 <memchr+0x74>
 80002d8:	f010 0f07 	tst.w	r0, #7
 80002dc:	b342      	cbz	r2, 8000330 <memchr+0x70>
 80002de:	d1f6      	bne.n	80002ce <memchr+0xe>
 80002e0:	b4f0      	push	{r4, r5, r6, r7}
 80002e2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002e6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002ea:	f022 0407 	bic.w	r4, r2, #7
 80002ee:	f07f 0700 	mvns.w	r7, #0
 80002f2:	2300      	movs	r3, #0
 80002f4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002f8:	3c08      	subs	r4, #8
 80002fa:	ea85 0501 	eor.w	r5, r5, r1
 80002fe:	ea86 0601 	eor.w	r6, r6, r1
 8000302:	fa85 f547 	uadd8	r5, r5, r7
 8000306:	faa3 f587 	sel	r5, r3, r7
 800030a:	fa86 f647 	uadd8	r6, r6, r7
 800030e:	faa5 f687 	sel	r6, r5, r7
 8000312:	b98e      	cbnz	r6, 8000338 <memchr+0x78>
 8000314:	d1ee      	bne.n	80002f4 <memchr+0x34>
 8000316:	bcf0      	pop	{r4, r5, r6, r7}
 8000318:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800031c:	f002 0207 	and.w	r2, r2, #7
 8000320:	b132      	cbz	r2, 8000330 <memchr+0x70>
 8000322:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000326:	3a01      	subs	r2, #1
 8000328:	ea83 0301 	eor.w	r3, r3, r1
 800032c:	b113      	cbz	r3, 8000334 <memchr+0x74>
 800032e:	d1f8      	bne.n	8000322 <memchr+0x62>
 8000330:	2000      	movs	r0, #0
 8000332:	4770      	bx	lr
 8000334:	3801      	subs	r0, #1
 8000336:	4770      	bx	lr
 8000338:	2d00      	cmp	r5, #0
 800033a:	bf06      	itte	eq
 800033c:	4635      	moveq	r5, r6
 800033e:	3803      	subeq	r0, #3
 8000340:	3807      	subne	r0, #7
 8000342:	f015 0f01 	tst.w	r5, #1
 8000346:	d107      	bne.n	8000358 <memchr+0x98>
 8000348:	3001      	adds	r0, #1
 800034a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800034e:	bf02      	ittt	eq
 8000350:	3001      	addeq	r0, #1
 8000352:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000356:	3001      	addeq	r0, #1
 8000358:	bcf0      	pop	{r4, r5, r6, r7}
 800035a:	3801      	subs	r0, #1
 800035c:	4770      	bx	lr
 800035e:	bf00      	nop

08000360 <__aeabi_drsub>:
 8000360:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000364:	e002      	b.n	800036c <__adddf3>
 8000366:	bf00      	nop

08000368 <__aeabi_dsub>:
 8000368:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800036c <__adddf3>:
 800036c:	b530      	push	{r4, r5, lr}
 800036e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000372:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000376:	ea94 0f05 	teq	r4, r5
 800037a:	bf08      	it	eq
 800037c:	ea90 0f02 	teqeq	r0, r2
 8000380:	bf1f      	itttt	ne
 8000382:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000386:	ea55 0c02 	orrsne.w	ip, r5, r2
 800038a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800038e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000392:	f000 80e2 	beq.w	800055a <__adddf3+0x1ee>
 8000396:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800039a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800039e:	bfb8      	it	lt
 80003a0:	426d      	neglt	r5, r5
 80003a2:	dd0c      	ble.n	80003be <__adddf3+0x52>
 80003a4:	442c      	add	r4, r5
 80003a6:	ea80 0202 	eor.w	r2, r0, r2
 80003aa:	ea81 0303 	eor.w	r3, r1, r3
 80003ae:	ea82 0000 	eor.w	r0, r2, r0
 80003b2:	ea83 0101 	eor.w	r1, r3, r1
 80003b6:	ea80 0202 	eor.w	r2, r0, r2
 80003ba:	ea81 0303 	eor.w	r3, r1, r3
 80003be:	2d36      	cmp	r5, #54	; 0x36
 80003c0:	bf88      	it	hi
 80003c2:	bd30      	pophi	{r4, r5, pc}
 80003c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80003d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80003d4:	d002      	beq.n	80003dc <__adddf3+0x70>
 80003d6:	4240      	negs	r0, r0
 80003d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80003dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80003e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80003e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80003e8:	d002      	beq.n	80003f0 <__adddf3+0x84>
 80003ea:	4252      	negs	r2, r2
 80003ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80003f0:	ea94 0f05 	teq	r4, r5
 80003f4:	f000 80a7 	beq.w	8000546 <__adddf3+0x1da>
 80003f8:	f1a4 0401 	sub.w	r4, r4, #1
 80003fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000400:	db0d      	blt.n	800041e <__adddf3+0xb2>
 8000402:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000406:	fa22 f205 	lsr.w	r2, r2, r5
 800040a:	1880      	adds	r0, r0, r2
 800040c:	f141 0100 	adc.w	r1, r1, #0
 8000410:	fa03 f20e 	lsl.w	r2, r3, lr
 8000414:	1880      	adds	r0, r0, r2
 8000416:	fa43 f305 	asr.w	r3, r3, r5
 800041a:	4159      	adcs	r1, r3
 800041c:	e00e      	b.n	800043c <__adddf3+0xd0>
 800041e:	f1a5 0520 	sub.w	r5, r5, #32
 8000422:	f10e 0e20 	add.w	lr, lr, #32
 8000426:	2a01      	cmp	r2, #1
 8000428:	fa03 fc0e 	lsl.w	ip, r3, lr
 800042c:	bf28      	it	cs
 800042e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000432:	fa43 f305 	asr.w	r3, r3, r5
 8000436:	18c0      	adds	r0, r0, r3
 8000438:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800043c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000440:	d507      	bpl.n	8000452 <__adddf3+0xe6>
 8000442:	f04f 0e00 	mov.w	lr, #0
 8000446:	f1dc 0c00 	rsbs	ip, ip, #0
 800044a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800044e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000452:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000456:	d31b      	bcc.n	8000490 <__adddf3+0x124>
 8000458:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800045c:	d30c      	bcc.n	8000478 <__adddf3+0x10c>
 800045e:	0849      	lsrs	r1, r1, #1
 8000460:	ea5f 0030 	movs.w	r0, r0, rrx
 8000464:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000468:	f104 0401 	add.w	r4, r4, #1
 800046c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000470:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000474:	f080 809a 	bcs.w	80005ac <__adddf3+0x240>
 8000478:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800047c:	bf08      	it	eq
 800047e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000482:	f150 0000 	adcs.w	r0, r0, #0
 8000486:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800048a:	ea41 0105 	orr.w	r1, r1, r5
 800048e:	bd30      	pop	{r4, r5, pc}
 8000490:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000494:	4140      	adcs	r0, r0
 8000496:	eb41 0101 	adc.w	r1, r1, r1
 800049a:	3c01      	subs	r4, #1
 800049c:	bf28      	it	cs
 800049e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80004a2:	d2e9      	bcs.n	8000478 <__adddf3+0x10c>
 80004a4:	f091 0f00 	teq	r1, #0
 80004a8:	bf04      	itt	eq
 80004aa:	4601      	moveq	r1, r0
 80004ac:	2000      	moveq	r0, #0
 80004ae:	fab1 f381 	clz	r3, r1
 80004b2:	bf08      	it	eq
 80004b4:	3320      	addeq	r3, #32
 80004b6:	f1a3 030b 	sub.w	r3, r3, #11
 80004ba:	f1b3 0220 	subs.w	r2, r3, #32
 80004be:	da0c      	bge.n	80004da <__adddf3+0x16e>
 80004c0:	320c      	adds	r2, #12
 80004c2:	dd08      	ble.n	80004d6 <__adddf3+0x16a>
 80004c4:	f102 0c14 	add.w	ip, r2, #20
 80004c8:	f1c2 020c 	rsb	r2, r2, #12
 80004cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80004d0:	fa21 f102 	lsr.w	r1, r1, r2
 80004d4:	e00c      	b.n	80004f0 <__adddf3+0x184>
 80004d6:	f102 0214 	add.w	r2, r2, #20
 80004da:	bfd8      	it	le
 80004dc:	f1c2 0c20 	rsble	ip, r2, #32
 80004e0:	fa01 f102 	lsl.w	r1, r1, r2
 80004e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80004e8:	bfdc      	itt	le
 80004ea:	ea41 010c 	orrle.w	r1, r1, ip
 80004ee:	4090      	lslle	r0, r2
 80004f0:	1ae4      	subs	r4, r4, r3
 80004f2:	bfa2      	ittt	ge
 80004f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80004f8:	4329      	orrge	r1, r5
 80004fa:	bd30      	popge	{r4, r5, pc}
 80004fc:	ea6f 0404 	mvn.w	r4, r4
 8000500:	3c1f      	subs	r4, #31
 8000502:	da1c      	bge.n	800053e <__adddf3+0x1d2>
 8000504:	340c      	adds	r4, #12
 8000506:	dc0e      	bgt.n	8000526 <__adddf3+0x1ba>
 8000508:	f104 0414 	add.w	r4, r4, #20
 800050c:	f1c4 0220 	rsb	r2, r4, #32
 8000510:	fa20 f004 	lsr.w	r0, r0, r4
 8000514:	fa01 f302 	lsl.w	r3, r1, r2
 8000518:	ea40 0003 	orr.w	r0, r0, r3
 800051c:	fa21 f304 	lsr.w	r3, r1, r4
 8000520:	ea45 0103 	orr.w	r1, r5, r3
 8000524:	bd30      	pop	{r4, r5, pc}
 8000526:	f1c4 040c 	rsb	r4, r4, #12
 800052a:	f1c4 0220 	rsb	r2, r4, #32
 800052e:	fa20 f002 	lsr.w	r0, r0, r2
 8000532:	fa01 f304 	lsl.w	r3, r1, r4
 8000536:	ea40 0003 	orr.w	r0, r0, r3
 800053a:	4629      	mov	r1, r5
 800053c:	bd30      	pop	{r4, r5, pc}
 800053e:	fa21 f004 	lsr.w	r0, r1, r4
 8000542:	4629      	mov	r1, r5
 8000544:	bd30      	pop	{r4, r5, pc}
 8000546:	f094 0f00 	teq	r4, #0
 800054a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800054e:	bf06      	itte	eq
 8000550:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000554:	3401      	addeq	r4, #1
 8000556:	3d01      	subne	r5, #1
 8000558:	e74e      	b.n	80003f8 <__adddf3+0x8c>
 800055a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800055e:	bf18      	it	ne
 8000560:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000564:	d029      	beq.n	80005ba <__adddf3+0x24e>
 8000566:	ea94 0f05 	teq	r4, r5
 800056a:	bf08      	it	eq
 800056c:	ea90 0f02 	teqeq	r0, r2
 8000570:	d005      	beq.n	800057e <__adddf3+0x212>
 8000572:	ea54 0c00 	orrs.w	ip, r4, r0
 8000576:	bf04      	itt	eq
 8000578:	4619      	moveq	r1, r3
 800057a:	4610      	moveq	r0, r2
 800057c:	bd30      	pop	{r4, r5, pc}
 800057e:	ea91 0f03 	teq	r1, r3
 8000582:	bf1e      	ittt	ne
 8000584:	2100      	movne	r1, #0
 8000586:	2000      	movne	r0, #0
 8000588:	bd30      	popne	{r4, r5, pc}
 800058a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800058e:	d105      	bne.n	800059c <__adddf3+0x230>
 8000590:	0040      	lsls	r0, r0, #1
 8000592:	4149      	adcs	r1, r1
 8000594:	bf28      	it	cs
 8000596:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800059a:	bd30      	pop	{r4, r5, pc}
 800059c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80005a0:	bf3c      	itt	cc
 80005a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80005a6:	bd30      	popcc	{r4, r5, pc}
 80005a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005b4:	f04f 0000 	mov.w	r0, #0
 80005b8:	bd30      	pop	{r4, r5, pc}
 80005ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005be:	bf1a      	itte	ne
 80005c0:	4619      	movne	r1, r3
 80005c2:	4610      	movne	r0, r2
 80005c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005c8:	bf1c      	itt	ne
 80005ca:	460b      	movne	r3, r1
 80005cc:	4602      	movne	r2, r0
 80005ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80005d2:	bf06      	itte	eq
 80005d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80005d8:	ea91 0f03 	teqeq	r1, r3
 80005dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80005e0:	bd30      	pop	{r4, r5, pc}
 80005e2:	bf00      	nop

080005e4 <__aeabi_ui2d>:
 80005e4:	f090 0f00 	teq	r0, #0
 80005e8:	bf04      	itt	eq
 80005ea:	2100      	moveq	r1, #0
 80005ec:	4770      	bxeq	lr
 80005ee:	b530      	push	{r4, r5, lr}
 80005f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005f8:	f04f 0500 	mov.w	r5, #0
 80005fc:	f04f 0100 	mov.w	r1, #0
 8000600:	e750      	b.n	80004a4 <__adddf3+0x138>
 8000602:	bf00      	nop

08000604 <__aeabi_i2d>:
 8000604:	f090 0f00 	teq	r0, #0
 8000608:	bf04      	itt	eq
 800060a:	2100      	moveq	r1, #0
 800060c:	4770      	bxeq	lr
 800060e:	b530      	push	{r4, r5, lr}
 8000610:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000614:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000618:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800061c:	bf48      	it	mi
 800061e:	4240      	negmi	r0, r0
 8000620:	f04f 0100 	mov.w	r1, #0
 8000624:	e73e      	b.n	80004a4 <__adddf3+0x138>
 8000626:	bf00      	nop

08000628 <__aeabi_f2d>:
 8000628:	0042      	lsls	r2, r0, #1
 800062a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800062e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000632:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000636:	bf1f      	itttt	ne
 8000638:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800063c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000640:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000644:	4770      	bxne	lr
 8000646:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800064a:	bf08      	it	eq
 800064c:	4770      	bxeq	lr
 800064e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000652:	bf04      	itt	eq
 8000654:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000658:	4770      	bxeq	lr
 800065a:	b530      	push	{r4, r5, lr}
 800065c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000660:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000664:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000668:	e71c      	b.n	80004a4 <__adddf3+0x138>
 800066a:	bf00      	nop

0800066c <__aeabi_ul2d>:
 800066c:	ea50 0201 	orrs.w	r2, r0, r1
 8000670:	bf08      	it	eq
 8000672:	4770      	bxeq	lr
 8000674:	b530      	push	{r4, r5, lr}
 8000676:	f04f 0500 	mov.w	r5, #0
 800067a:	e00a      	b.n	8000692 <__aeabi_l2d+0x16>

0800067c <__aeabi_l2d>:
 800067c:	ea50 0201 	orrs.w	r2, r0, r1
 8000680:	bf08      	it	eq
 8000682:	4770      	bxeq	lr
 8000684:	b530      	push	{r4, r5, lr}
 8000686:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800068a:	d502      	bpl.n	8000692 <__aeabi_l2d+0x16>
 800068c:	4240      	negs	r0, r0
 800068e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000692:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000696:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800069a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800069e:	f43f aed8 	beq.w	8000452 <__adddf3+0xe6>
 80006a2:	f04f 0203 	mov.w	r2, #3
 80006a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006aa:	bf18      	it	ne
 80006ac:	3203      	addne	r2, #3
 80006ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006b2:	bf18      	it	ne
 80006b4:	3203      	addne	r2, #3
 80006b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006ba:	f1c2 0320 	rsb	r3, r2, #32
 80006be:	fa00 fc03 	lsl.w	ip, r0, r3
 80006c2:	fa20 f002 	lsr.w	r0, r0, r2
 80006c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80006ca:	ea40 000e 	orr.w	r0, r0, lr
 80006ce:	fa21 f102 	lsr.w	r1, r1, r2
 80006d2:	4414      	add	r4, r2
 80006d4:	e6bd      	b.n	8000452 <__adddf3+0xe6>
 80006d6:	bf00      	nop

080006d8 <__aeabi_dmul>:
 80006d8:	b570      	push	{r4, r5, r6, lr}
 80006da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80006de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80006e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80006e6:	bf1d      	ittte	ne
 80006e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80006ec:	ea94 0f0c 	teqne	r4, ip
 80006f0:	ea95 0f0c 	teqne	r5, ip
 80006f4:	f000 f8de 	bleq	80008b4 <__aeabi_dmul+0x1dc>
 80006f8:	442c      	add	r4, r5
 80006fa:	ea81 0603 	eor.w	r6, r1, r3
 80006fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000702:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000706:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800070a:	bf18      	it	ne
 800070c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000710:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000714:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000718:	d038      	beq.n	800078c <__aeabi_dmul+0xb4>
 800071a:	fba0 ce02 	umull	ip, lr, r0, r2
 800071e:	f04f 0500 	mov.w	r5, #0
 8000722:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000726:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800072a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800072e:	f04f 0600 	mov.w	r6, #0
 8000732:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000736:	f09c 0f00 	teq	ip, #0
 800073a:	bf18      	it	ne
 800073c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000740:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000744:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000748:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800074c:	d204      	bcs.n	8000758 <__aeabi_dmul+0x80>
 800074e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000752:	416d      	adcs	r5, r5
 8000754:	eb46 0606 	adc.w	r6, r6, r6
 8000758:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800075c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000760:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000764:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000768:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800076c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000770:	bf88      	it	hi
 8000772:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000776:	d81e      	bhi.n	80007b6 <__aeabi_dmul+0xde>
 8000778:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800077c:	bf08      	it	eq
 800077e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000782:	f150 0000 	adcs.w	r0, r0, #0
 8000786:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000790:	ea46 0101 	orr.w	r1, r6, r1
 8000794:	ea40 0002 	orr.w	r0, r0, r2
 8000798:	ea81 0103 	eor.w	r1, r1, r3
 800079c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80007a0:	bfc2      	ittt	gt
 80007a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80007a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80007aa:	bd70      	popgt	{r4, r5, r6, pc}
 80007ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80007b0:	f04f 0e00 	mov.w	lr, #0
 80007b4:	3c01      	subs	r4, #1
 80007b6:	f300 80ab 	bgt.w	8000910 <__aeabi_dmul+0x238>
 80007ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80007be:	bfde      	ittt	le
 80007c0:	2000      	movle	r0, #0
 80007c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80007c6:	bd70      	pople	{r4, r5, r6, pc}
 80007c8:	f1c4 0400 	rsb	r4, r4, #0
 80007cc:	3c20      	subs	r4, #32
 80007ce:	da35      	bge.n	800083c <__aeabi_dmul+0x164>
 80007d0:	340c      	adds	r4, #12
 80007d2:	dc1b      	bgt.n	800080c <__aeabi_dmul+0x134>
 80007d4:	f104 0414 	add.w	r4, r4, #20
 80007d8:	f1c4 0520 	rsb	r5, r4, #32
 80007dc:	fa00 f305 	lsl.w	r3, r0, r5
 80007e0:	fa20 f004 	lsr.w	r0, r0, r4
 80007e4:	fa01 f205 	lsl.w	r2, r1, r5
 80007e8:	ea40 0002 	orr.w	r0, r0, r2
 80007ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80007f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80007f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007f8:	fa21 f604 	lsr.w	r6, r1, r4
 80007fc:	eb42 0106 	adc.w	r1, r2, r6
 8000800:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000804:	bf08      	it	eq
 8000806:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800080a:	bd70      	pop	{r4, r5, r6, pc}
 800080c:	f1c4 040c 	rsb	r4, r4, #12
 8000810:	f1c4 0520 	rsb	r5, r4, #32
 8000814:	fa00 f304 	lsl.w	r3, r0, r4
 8000818:	fa20 f005 	lsr.w	r0, r0, r5
 800081c:	fa01 f204 	lsl.w	r2, r1, r4
 8000820:	ea40 0002 	orr.w	r0, r0, r2
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000828:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800082c:	f141 0100 	adc.w	r1, r1, #0
 8000830:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000834:	bf08      	it	eq
 8000836:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800083a:	bd70      	pop	{r4, r5, r6, pc}
 800083c:	f1c4 0520 	rsb	r5, r4, #32
 8000840:	fa00 f205 	lsl.w	r2, r0, r5
 8000844:	ea4e 0e02 	orr.w	lr, lr, r2
 8000848:	fa20 f304 	lsr.w	r3, r0, r4
 800084c:	fa01 f205 	lsl.w	r2, r1, r5
 8000850:	ea43 0302 	orr.w	r3, r3, r2
 8000854:	fa21 f004 	lsr.w	r0, r1, r4
 8000858:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800085c:	fa21 f204 	lsr.w	r2, r1, r4
 8000860:	ea20 0002 	bic.w	r0, r0, r2
 8000864:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000868:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800086c:	bf08      	it	eq
 800086e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000872:	bd70      	pop	{r4, r5, r6, pc}
 8000874:	f094 0f00 	teq	r4, #0
 8000878:	d10f      	bne.n	800089a <__aeabi_dmul+0x1c2>
 800087a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800087e:	0040      	lsls	r0, r0, #1
 8000880:	eb41 0101 	adc.w	r1, r1, r1
 8000884:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000888:	bf08      	it	eq
 800088a:	3c01      	subeq	r4, #1
 800088c:	d0f7      	beq.n	800087e <__aeabi_dmul+0x1a6>
 800088e:	ea41 0106 	orr.w	r1, r1, r6
 8000892:	f095 0f00 	teq	r5, #0
 8000896:	bf18      	it	ne
 8000898:	4770      	bxne	lr
 800089a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800089e:	0052      	lsls	r2, r2, #1
 80008a0:	eb43 0303 	adc.w	r3, r3, r3
 80008a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80008a8:	bf08      	it	eq
 80008aa:	3d01      	subeq	r5, #1
 80008ac:	d0f7      	beq.n	800089e <__aeabi_dmul+0x1c6>
 80008ae:	ea43 0306 	orr.w	r3, r3, r6
 80008b2:	4770      	bx	lr
 80008b4:	ea94 0f0c 	teq	r4, ip
 80008b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008bc:	bf18      	it	ne
 80008be:	ea95 0f0c 	teqne	r5, ip
 80008c2:	d00c      	beq.n	80008de <__aeabi_dmul+0x206>
 80008c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008c8:	bf18      	it	ne
 80008ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008ce:	d1d1      	bne.n	8000874 <__aeabi_dmul+0x19c>
 80008d0:	ea81 0103 	eor.w	r1, r1, r3
 80008d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80008d8:	f04f 0000 	mov.w	r0, #0
 80008dc:	bd70      	pop	{r4, r5, r6, pc}
 80008de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e2:	bf06      	itte	eq
 80008e4:	4610      	moveq	r0, r2
 80008e6:	4619      	moveq	r1, r3
 80008e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008ec:	d019      	beq.n	8000922 <__aeabi_dmul+0x24a>
 80008ee:	ea94 0f0c 	teq	r4, ip
 80008f2:	d102      	bne.n	80008fa <__aeabi_dmul+0x222>
 80008f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80008f8:	d113      	bne.n	8000922 <__aeabi_dmul+0x24a>
 80008fa:	ea95 0f0c 	teq	r5, ip
 80008fe:	d105      	bne.n	800090c <__aeabi_dmul+0x234>
 8000900:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000904:	bf1c      	itt	ne
 8000906:	4610      	movne	r0, r2
 8000908:	4619      	movne	r1, r3
 800090a:	d10a      	bne.n	8000922 <__aeabi_dmul+0x24a>
 800090c:	ea81 0103 	eor.w	r1, r1, r3
 8000910:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000914:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000918:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800091c:	f04f 0000 	mov.w	r0, #0
 8000920:	bd70      	pop	{r4, r5, r6, pc}
 8000922:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000926:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800092a:	bd70      	pop	{r4, r5, r6, pc}

0800092c <__aeabi_ddiv>:
 800092c:	b570      	push	{r4, r5, r6, lr}
 800092e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000932:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000936:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800093a:	bf1d      	ittte	ne
 800093c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000940:	ea94 0f0c 	teqne	r4, ip
 8000944:	ea95 0f0c 	teqne	r5, ip
 8000948:	f000 f8a7 	bleq	8000a9a <__aeabi_ddiv+0x16e>
 800094c:	eba4 0405 	sub.w	r4, r4, r5
 8000950:	ea81 0e03 	eor.w	lr, r1, r3
 8000954:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000958:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800095c:	f000 8088 	beq.w	8000a70 <__aeabi_ddiv+0x144>
 8000960:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000964:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000968:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800096c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000970:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000974:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000978:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800097c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000980:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000984:	429d      	cmp	r5, r3
 8000986:	bf08      	it	eq
 8000988:	4296      	cmpeq	r6, r2
 800098a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800098e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000992:	d202      	bcs.n	800099a <__aeabi_ddiv+0x6e>
 8000994:	085b      	lsrs	r3, r3, #1
 8000996:	ea4f 0232 	mov.w	r2, r2, rrx
 800099a:	1ab6      	subs	r6, r6, r2
 800099c:	eb65 0503 	sbc.w	r5, r5, r3
 80009a0:	085b      	lsrs	r3, r3, #1
 80009a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80009aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80009ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80009b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009b6:	bf22      	ittt	cs
 80009b8:	1ab6      	subcs	r6, r6, r2
 80009ba:	4675      	movcs	r5, lr
 80009bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80009c0:	085b      	lsrs	r3, r3, #1
 80009c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009ce:	bf22      	ittt	cs
 80009d0:	1ab6      	subcs	r6, r6, r2
 80009d2:	4675      	movcs	r5, lr
 80009d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80009d8:	085b      	lsrs	r3, r3, #1
 80009da:	ea4f 0232 	mov.w	r2, r2, rrx
 80009de:	ebb6 0e02 	subs.w	lr, r6, r2
 80009e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009e6:	bf22      	ittt	cs
 80009e8:	1ab6      	subcs	r6, r6, r2
 80009ea:	4675      	movcs	r5, lr
 80009ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80009f0:	085b      	lsrs	r3, r3, #1
 80009f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80009f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80009fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80009fe:	bf22      	ittt	cs
 8000a00:	1ab6      	subcs	r6, r6, r2
 8000a02:	4675      	movcs	r5, lr
 8000a04:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000a08:	ea55 0e06 	orrs.w	lr, r5, r6
 8000a0c:	d018      	beq.n	8000a40 <__aeabi_ddiv+0x114>
 8000a0e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000a12:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000a16:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000a1a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000a1e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000a22:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000a26:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000a2a:	d1c0      	bne.n	80009ae <__aeabi_ddiv+0x82>
 8000a2c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a30:	d10b      	bne.n	8000a4a <__aeabi_ddiv+0x11e>
 8000a32:	ea41 0100 	orr.w	r1, r1, r0
 8000a36:	f04f 0000 	mov.w	r0, #0
 8000a3a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000a3e:	e7b6      	b.n	80009ae <__aeabi_ddiv+0x82>
 8000a40:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000a44:	bf04      	itt	eq
 8000a46:	4301      	orreq	r1, r0
 8000a48:	2000      	moveq	r0, #0
 8000a4a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000a4e:	bf88      	it	hi
 8000a50:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000a54:	f63f aeaf 	bhi.w	80007b6 <__aeabi_dmul+0xde>
 8000a58:	ebb5 0c03 	subs.w	ip, r5, r3
 8000a5c:	bf04      	itt	eq
 8000a5e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000a62:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000a66:	f150 0000 	adcs.w	r0, r0, #0
 8000a6a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000a6e:	bd70      	pop	{r4, r5, r6, pc}
 8000a70:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000a74:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000a78:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000a7c:	bfc2      	ittt	gt
 8000a7e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a82:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a86:	bd70      	popgt	{r4, r5, r6, pc}
 8000a88:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a8c:	f04f 0e00 	mov.w	lr, #0
 8000a90:	3c01      	subs	r4, #1
 8000a92:	e690      	b.n	80007b6 <__aeabi_dmul+0xde>
 8000a94:	ea45 0e06 	orr.w	lr, r5, r6
 8000a98:	e68d      	b.n	80007b6 <__aeabi_dmul+0xde>
 8000a9a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a9e:	ea94 0f0c 	teq	r4, ip
 8000aa2:	bf08      	it	eq
 8000aa4:	ea95 0f0c 	teqeq	r5, ip
 8000aa8:	f43f af3b 	beq.w	8000922 <__aeabi_dmul+0x24a>
 8000aac:	ea94 0f0c 	teq	r4, ip
 8000ab0:	d10a      	bne.n	8000ac8 <__aeabi_ddiv+0x19c>
 8000ab2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000ab6:	f47f af34 	bne.w	8000922 <__aeabi_dmul+0x24a>
 8000aba:	ea95 0f0c 	teq	r5, ip
 8000abe:	f47f af25 	bne.w	800090c <__aeabi_dmul+0x234>
 8000ac2:	4610      	mov	r0, r2
 8000ac4:	4619      	mov	r1, r3
 8000ac6:	e72c      	b.n	8000922 <__aeabi_dmul+0x24a>
 8000ac8:	ea95 0f0c 	teq	r5, ip
 8000acc:	d106      	bne.n	8000adc <__aeabi_ddiv+0x1b0>
 8000ace:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000ad2:	f43f aefd 	beq.w	80008d0 <__aeabi_dmul+0x1f8>
 8000ad6:	4610      	mov	r0, r2
 8000ad8:	4619      	mov	r1, r3
 8000ada:	e722      	b.n	8000922 <__aeabi_dmul+0x24a>
 8000adc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000ae0:	bf18      	it	ne
 8000ae2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000ae6:	f47f aec5 	bne.w	8000874 <__aeabi_dmul+0x19c>
 8000aea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000aee:	f47f af0d 	bne.w	800090c <__aeabi_dmul+0x234>
 8000af2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000af6:	f47f aeeb 	bne.w	80008d0 <__aeabi_dmul+0x1f8>
 8000afa:	e712      	b.n	8000922 <__aeabi_dmul+0x24a>

08000afc <__gedf2>:
 8000afc:	f04f 3cff 	mov.w	ip, #4294967295
 8000b00:	e006      	b.n	8000b10 <__cmpdf2+0x4>
 8000b02:	bf00      	nop

08000b04 <__ledf2>:
 8000b04:	f04f 0c01 	mov.w	ip, #1
 8000b08:	e002      	b.n	8000b10 <__cmpdf2+0x4>
 8000b0a:	bf00      	nop

08000b0c <__cmpdf2>:
 8000b0c:	f04f 0c01 	mov.w	ip, #1
 8000b10:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000b14:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b18:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b20:	bf18      	it	ne
 8000b22:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000b26:	d01b      	beq.n	8000b60 <__cmpdf2+0x54>
 8000b28:	b001      	add	sp, #4
 8000b2a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000b2e:	bf0c      	ite	eq
 8000b30:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000b34:	ea91 0f03 	teqne	r1, r3
 8000b38:	bf02      	ittt	eq
 8000b3a:	ea90 0f02 	teqeq	r0, r2
 8000b3e:	2000      	moveq	r0, #0
 8000b40:	4770      	bxeq	lr
 8000b42:	f110 0f00 	cmn.w	r0, #0
 8000b46:	ea91 0f03 	teq	r1, r3
 8000b4a:	bf58      	it	pl
 8000b4c:	4299      	cmppl	r1, r3
 8000b4e:	bf08      	it	eq
 8000b50:	4290      	cmpeq	r0, r2
 8000b52:	bf2c      	ite	cs
 8000b54:	17d8      	asrcs	r0, r3, #31
 8000b56:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000b5a:	f040 0001 	orr.w	r0, r0, #1
 8000b5e:	4770      	bx	lr
 8000b60:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b64:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b68:	d102      	bne.n	8000b70 <__cmpdf2+0x64>
 8000b6a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b6e:	d107      	bne.n	8000b80 <__cmpdf2+0x74>
 8000b70:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b74:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b78:	d1d6      	bne.n	8000b28 <__cmpdf2+0x1c>
 8000b7a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b7e:	d0d3      	beq.n	8000b28 <__cmpdf2+0x1c>
 8000b80:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000b84:	4770      	bx	lr
 8000b86:	bf00      	nop

08000b88 <__aeabi_cdrcmple>:
 8000b88:	4684      	mov	ip, r0
 8000b8a:	4610      	mov	r0, r2
 8000b8c:	4662      	mov	r2, ip
 8000b8e:	468c      	mov	ip, r1
 8000b90:	4619      	mov	r1, r3
 8000b92:	4663      	mov	r3, ip
 8000b94:	e000      	b.n	8000b98 <__aeabi_cdcmpeq>
 8000b96:	bf00      	nop

08000b98 <__aeabi_cdcmpeq>:
 8000b98:	b501      	push	{r0, lr}
 8000b9a:	f7ff ffb7 	bl	8000b0c <__cmpdf2>
 8000b9e:	2800      	cmp	r0, #0
 8000ba0:	bf48      	it	mi
 8000ba2:	f110 0f00 	cmnmi.w	r0, #0
 8000ba6:	bd01      	pop	{r0, pc}

08000ba8 <__aeabi_dcmpeq>:
 8000ba8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bac:	f7ff fff4 	bl	8000b98 <__aeabi_cdcmpeq>
 8000bb0:	bf0c      	ite	eq
 8000bb2:	2001      	moveq	r0, #1
 8000bb4:	2000      	movne	r0, #0
 8000bb6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bba:	bf00      	nop

08000bbc <__aeabi_dcmplt>:
 8000bbc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bc0:	f7ff ffea 	bl	8000b98 <__aeabi_cdcmpeq>
 8000bc4:	bf34      	ite	cc
 8000bc6:	2001      	movcc	r0, #1
 8000bc8:	2000      	movcs	r0, #0
 8000bca:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bce:	bf00      	nop

08000bd0 <__aeabi_dcmple>:
 8000bd0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bd4:	f7ff ffe0 	bl	8000b98 <__aeabi_cdcmpeq>
 8000bd8:	bf94      	ite	ls
 8000bda:	2001      	movls	r0, #1
 8000bdc:	2000      	movhi	r0, #0
 8000bde:	f85d fb08 	ldr.w	pc, [sp], #8
 8000be2:	bf00      	nop

08000be4 <__aeabi_dcmpge>:
 8000be4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000be8:	f7ff ffce 	bl	8000b88 <__aeabi_cdrcmple>
 8000bec:	bf94      	ite	ls
 8000bee:	2001      	movls	r0, #1
 8000bf0:	2000      	movhi	r0, #0
 8000bf2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000bf6:	bf00      	nop

08000bf8 <__aeabi_dcmpgt>:
 8000bf8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000bfc:	f7ff ffc4 	bl	8000b88 <__aeabi_cdrcmple>
 8000c00:	bf34      	ite	cc
 8000c02:	2001      	movcc	r0, #1
 8000c04:	2000      	movcs	r0, #0
 8000c06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000c0a:	bf00      	nop

08000c0c <__aeabi_dcmpun>:
 8000c0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000c10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c14:	d102      	bne.n	8000c1c <__aeabi_dcmpun+0x10>
 8000c16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000c1a:	d10a      	bne.n	8000c32 <__aeabi_dcmpun+0x26>
 8000c1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000c20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000c24:	d102      	bne.n	8000c2c <__aeabi_dcmpun+0x20>
 8000c26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000c2a:	d102      	bne.n	8000c32 <__aeabi_dcmpun+0x26>
 8000c2c:	f04f 0000 	mov.w	r0, #0
 8000c30:	4770      	bx	lr
 8000c32:	f04f 0001 	mov.w	r0, #1
 8000c36:	4770      	bx	lr

08000c38 <__aeabi_d2iz>:
 8000c38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000c40:	d215      	bcs.n	8000c6e <__aeabi_d2iz+0x36>
 8000c42:	d511      	bpl.n	8000c68 <__aeabi_d2iz+0x30>
 8000c44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000c48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c4c:	d912      	bls.n	8000c74 <__aeabi_d2iz+0x3c>
 8000c4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000c5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000c62:	bf18      	it	ne
 8000c64:	4240      	negne	r0, r0
 8000c66:	4770      	bx	lr
 8000c68:	f04f 0000 	mov.w	r0, #0
 8000c6c:	4770      	bx	lr
 8000c6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c72:	d105      	bne.n	8000c80 <__aeabi_d2iz+0x48>
 8000c74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000c78:	bf08      	it	eq
 8000c7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000c7e:	4770      	bx	lr
 8000c80:	f04f 0000 	mov.w	r0, #0
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_d2uiz>:
 8000c88:	004a      	lsls	r2, r1, #1
 8000c8a:	d211      	bcs.n	8000cb0 <__aeabi_d2uiz+0x28>
 8000c8c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000c90:	d211      	bcs.n	8000cb6 <__aeabi_d2uiz+0x2e>
 8000c92:	d50d      	bpl.n	8000cb0 <__aeabi_d2uiz+0x28>
 8000c94:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000c98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c9c:	d40e      	bmi.n	8000cbc <__aeabi_d2uiz+0x34>
 8000c9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ca2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ca6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000caa:	fa23 f002 	lsr.w	r0, r3, r2
 8000cae:	4770      	bx	lr
 8000cb0:	f04f 0000 	mov.w	r0, #0
 8000cb4:	4770      	bx	lr
 8000cb6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000cba:	d102      	bne.n	8000cc2 <__aeabi_d2uiz+0x3a>
 8000cbc:	f04f 30ff 	mov.w	r0, #4294967295
 8000cc0:	4770      	bx	lr
 8000cc2:	f04f 0000 	mov.w	r0, #0
 8000cc6:	4770      	bx	lr

08000cc8 <__aeabi_d2f>:
 8000cc8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ccc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000cd0:	bf24      	itt	cs
 8000cd2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000cd6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000cda:	d90d      	bls.n	8000cf8 <__aeabi_d2f+0x30>
 8000cdc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ce0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ce4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ce8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000cec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000cf0:	bf08      	it	eq
 8000cf2:	f020 0001 	biceq.w	r0, r0, #1
 8000cf6:	4770      	bx	lr
 8000cf8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000cfc:	d121      	bne.n	8000d42 <__aeabi_d2f+0x7a>
 8000cfe:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000d02:	bfbc      	itt	lt
 8000d04:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000d08:	4770      	bxlt	lr
 8000d0a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000d0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000d12:	f1c2 0218 	rsb	r2, r2, #24
 8000d16:	f1c2 0c20 	rsb	ip, r2, #32
 8000d1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000d1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000d22:	bf18      	it	ne
 8000d24:	f040 0001 	orrne.w	r0, r0, #1
 8000d28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000d2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000d30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000d34:	ea40 000c 	orr.w	r0, r0, ip
 8000d38:	fa23 f302 	lsr.w	r3, r3, r2
 8000d3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000d40:	e7cc      	b.n	8000cdc <__aeabi_d2f+0x14>
 8000d42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000d46:	d107      	bne.n	8000d58 <__aeabi_d2f+0x90>
 8000d48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000d4c:	bf1e      	ittt	ne
 8000d4e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000d52:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000d56:	4770      	bxne	lr
 8000d58:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000d5c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000d60:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d64:	4770      	bx	lr
 8000d66:	bf00      	nop

08000d68 <__aeabi_uldivmod>:
 8000d68:	b953      	cbnz	r3, 8000d80 <__aeabi_uldivmod+0x18>
 8000d6a:	b94a      	cbnz	r2, 8000d80 <__aeabi_uldivmod+0x18>
 8000d6c:	2900      	cmp	r1, #0
 8000d6e:	bf08      	it	eq
 8000d70:	2800      	cmpeq	r0, #0
 8000d72:	bf1c      	itt	ne
 8000d74:	f04f 31ff 	movne.w	r1, #4294967295
 8000d78:	f04f 30ff 	movne.w	r0, #4294967295
 8000d7c:	f000 b974 	b.w	8001068 <__aeabi_idiv0>
 8000d80:	f1ad 0c08 	sub.w	ip, sp, #8
 8000d84:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000d88:	f000 f806 	bl	8000d98 <__udivmoddi4>
 8000d8c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d90:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d94:	b004      	add	sp, #16
 8000d96:	4770      	bx	lr

08000d98 <__udivmoddi4>:
 8000d98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d9c:	9d08      	ldr	r5, [sp, #32]
 8000d9e:	4604      	mov	r4, r0
 8000da0:	468e      	mov	lr, r1
 8000da2:	2b00      	cmp	r3, #0
 8000da4:	d14d      	bne.n	8000e42 <__udivmoddi4+0xaa>
 8000da6:	428a      	cmp	r2, r1
 8000da8:	4694      	mov	ip, r2
 8000daa:	d969      	bls.n	8000e80 <__udivmoddi4+0xe8>
 8000dac:	fab2 f282 	clz	r2, r2
 8000db0:	b152      	cbz	r2, 8000dc8 <__udivmoddi4+0x30>
 8000db2:	fa01 f302 	lsl.w	r3, r1, r2
 8000db6:	f1c2 0120 	rsb	r1, r2, #32
 8000dba:	fa20 f101 	lsr.w	r1, r0, r1
 8000dbe:	fa0c fc02 	lsl.w	ip, ip, r2
 8000dc2:	ea41 0e03 	orr.w	lr, r1, r3
 8000dc6:	4094      	lsls	r4, r2
 8000dc8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000dcc:	0c21      	lsrs	r1, r4, #16
 8000dce:	fbbe f6f8 	udiv	r6, lr, r8
 8000dd2:	fa1f f78c 	uxth.w	r7, ip
 8000dd6:	fb08 e316 	mls	r3, r8, r6, lr
 8000dda:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000dde:	fb06 f107 	mul.w	r1, r6, r7
 8000de2:	4299      	cmp	r1, r3
 8000de4:	d90a      	bls.n	8000dfc <__udivmoddi4+0x64>
 8000de6:	eb1c 0303 	adds.w	r3, ip, r3
 8000dea:	f106 30ff 	add.w	r0, r6, #4294967295
 8000dee:	f080 811f 	bcs.w	8001030 <__udivmoddi4+0x298>
 8000df2:	4299      	cmp	r1, r3
 8000df4:	f240 811c 	bls.w	8001030 <__udivmoddi4+0x298>
 8000df8:	3e02      	subs	r6, #2
 8000dfa:	4463      	add	r3, ip
 8000dfc:	1a5b      	subs	r3, r3, r1
 8000dfe:	b2a4      	uxth	r4, r4
 8000e00:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e04:	fb08 3310 	mls	r3, r8, r0, r3
 8000e08:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e0c:	fb00 f707 	mul.w	r7, r0, r7
 8000e10:	42a7      	cmp	r7, r4
 8000e12:	d90a      	bls.n	8000e2a <__udivmoddi4+0x92>
 8000e14:	eb1c 0404 	adds.w	r4, ip, r4
 8000e18:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e1c:	f080 810a 	bcs.w	8001034 <__udivmoddi4+0x29c>
 8000e20:	42a7      	cmp	r7, r4
 8000e22:	f240 8107 	bls.w	8001034 <__udivmoddi4+0x29c>
 8000e26:	4464      	add	r4, ip
 8000e28:	3802      	subs	r0, #2
 8000e2a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e2e:	1be4      	subs	r4, r4, r7
 8000e30:	2600      	movs	r6, #0
 8000e32:	b11d      	cbz	r5, 8000e3c <__udivmoddi4+0xa4>
 8000e34:	40d4      	lsrs	r4, r2
 8000e36:	2300      	movs	r3, #0
 8000e38:	e9c5 4300 	strd	r4, r3, [r5]
 8000e3c:	4631      	mov	r1, r6
 8000e3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e42:	428b      	cmp	r3, r1
 8000e44:	d909      	bls.n	8000e5a <__udivmoddi4+0xc2>
 8000e46:	2d00      	cmp	r5, #0
 8000e48:	f000 80ef 	beq.w	800102a <__udivmoddi4+0x292>
 8000e4c:	2600      	movs	r6, #0
 8000e4e:	e9c5 0100 	strd	r0, r1, [r5]
 8000e52:	4630      	mov	r0, r6
 8000e54:	4631      	mov	r1, r6
 8000e56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e5a:	fab3 f683 	clz	r6, r3
 8000e5e:	2e00      	cmp	r6, #0
 8000e60:	d14a      	bne.n	8000ef8 <__udivmoddi4+0x160>
 8000e62:	428b      	cmp	r3, r1
 8000e64:	d302      	bcc.n	8000e6c <__udivmoddi4+0xd4>
 8000e66:	4282      	cmp	r2, r0
 8000e68:	f200 80f9 	bhi.w	800105e <__udivmoddi4+0x2c6>
 8000e6c:	1a84      	subs	r4, r0, r2
 8000e6e:	eb61 0303 	sbc.w	r3, r1, r3
 8000e72:	2001      	movs	r0, #1
 8000e74:	469e      	mov	lr, r3
 8000e76:	2d00      	cmp	r5, #0
 8000e78:	d0e0      	beq.n	8000e3c <__udivmoddi4+0xa4>
 8000e7a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000e7e:	e7dd      	b.n	8000e3c <__udivmoddi4+0xa4>
 8000e80:	b902      	cbnz	r2, 8000e84 <__udivmoddi4+0xec>
 8000e82:	deff      	udf	#255	; 0xff
 8000e84:	fab2 f282 	clz	r2, r2
 8000e88:	2a00      	cmp	r2, #0
 8000e8a:	f040 8092 	bne.w	8000fb2 <__udivmoddi4+0x21a>
 8000e8e:	eba1 010c 	sub.w	r1, r1, ip
 8000e92:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e96:	fa1f fe8c 	uxth.w	lr, ip
 8000e9a:	2601      	movs	r6, #1
 8000e9c:	0c20      	lsrs	r0, r4, #16
 8000e9e:	fbb1 f3f7 	udiv	r3, r1, r7
 8000ea2:	fb07 1113 	mls	r1, r7, r3, r1
 8000ea6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000eaa:	fb0e f003 	mul.w	r0, lr, r3
 8000eae:	4288      	cmp	r0, r1
 8000eb0:	d908      	bls.n	8000ec4 <__udivmoddi4+0x12c>
 8000eb2:	eb1c 0101 	adds.w	r1, ip, r1
 8000eb6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000eba:	d202      	bcs.n	8000ec2 <__udivmoddi4+0x12a>
 8000ebc:	4288      	cmp	r0, r1
 8000ebe:	f200 80cb 	bhi.w	8001058 <__udivmoddi4+0x2c0>
 8000ec2:	4643      	mov	r3, r8
 8000ec4:	1a09      	subs	r1, r1, r0
 8000ec6:	b2a4      	uxth	r4, r4
 8000ec8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ecc:	fb07 1110 	mls	r1, r7, r0, r1
 8000ed0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000ed4:	fb0e fe00 	mul.w	lr, lr, r0
 8000ed8:	45a6      	cmp	lr, r4
 8000eda:	d908      	bls.n	8000eee <__udivmoddi4+0x156>
 8000edc:	eb1c 0404 	adds.w	r4, ip, r4
 8000ee0:	f100 31ff 	add.w	r1, r0, #4294967295
 8000ee4:	d202      	bcs.n	8000eec <__udivmoddi4+0x154>
 8000ee6:	45a6      	cmp	lr, r4
 8000ee8:	f200 80bb 	bhi.w	8001062 <__udivmoddi4+0x2ca>
 8000eec:	4608      	mov	r0, r1
 8000eee:	eba4 040e 	sub.w	r4, r4, lr
 8000ef2:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000ef6:	e79c      	b.n	8000e32 <__udivmoddi4+0x9a>
 8000ef8:	f1c6 0720 	rsb	r7, r6, #32
 8000efc:	40b3      	lsls	r3, r6
 8000efe:	fa22 fc07 	lsr.w	ip, r2, r7
 8000f02:	ea4c 0c03 	orr.w	ip, ip, r3
 8000f06:	fa20 f407 	lsr.w	r4, r0, r7
 8000f0a:	fa01 f306 	lsl.w	r3, r1, r6
 8000f0e:	431c      	orrs	r4, r3
 8000f10:	40f9      	lsrs	r1, r7
 8000f12:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000f16:	fa00 f306 	lsl.w	r3, r0, r6
 8000f1a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000f1e:	0c20      	lsrs	r0, r4, #16
 8000f20:	fa1f fe8c 	uxth.w	lr, ip
 8000f24:	fb09 1118 	mls	r1, r9, r8, r1
 8000f28:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000f2c:	fb08 f00e 	mul.w	r0, r8, lr
 8000f30:	4288      	cmp	r0, r1
 8000f32:	fa02 f206 	lsl.w	r2, r2, r6
 8000f36:	d90b      	bls.n	8000f50 <__udivmoddi4+0x1b8>
 8000f38:	eb1c 0101 	adds.w	r1, ip, r1
 8000f3c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000f40:	f080 8088 	bcs.w	8001054 <__udivmoddi4+0x2bc>
 8000f44:	4288      	cmp	r0, r1
 8000f46:	f240 8085 	bls.w	8001054 <__udivmoddi4+0x2bc>
 8000f4a:	f1a8 0802 	sub.w	r8, r8, #2
 8000f4e:	4461      	add	r1, ip
 8000f50:	1a09      	subs	r1, r1, r0
 8000f52:	b2a4      	uxth	r4, r4
 8000f54:	fbb1 f0f9 	udiv	r0, r1, r9
 8000f58:	fb09 1110 	mls	r1, r9, r0, r1
 8000f5c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000f60:	fb00 fe0e 	mul.w	lr, r0, lr
 8000f64:	458e      	cmp	lr, r1
 8000f66:	d908      	bls.n	8000f7a <__udivmoddi4+0x1e2>
 8000f68:	eb1c 0101 	adds.w	r1, ip, r1
 8000f6c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000f70:	d26c      	bcs.n	800104c <__udivmoddi4+0x2b4>
 8000f72:	458e      	cmp	lr, r1
 8000f74:	d96a      	bls.n	800104c <__udivmoddi4+0x2b4>
 8000f76:	3802      	subs	r0, #2
 8000f78:	4461      	add	r1, ip
 8000f7a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000f7e:	fba0 9402 	umull	r9, r4, r0, r2
 8000f82:	eba1 010e 	sub.w	r1, r1, lr
 8000f86:	42a1      	cmp	r1, r4
 8000f88:	46c8      	mov	r8, r9
 8000f8a:	46a6      	mov	lr, r4
 8000f8c:	d356      	bcc.n	800103c <__udivmoddi4+0x2a4>
 8000f8e:	d053      	beq.n	8001038 <__udivmoddi4+0x2a0>
 8000f90:	b15d      	cbz	r5, 8000faa <__udivmoddi4+0x212>
 8000f92:	ebb3 0208 	subs.w	r2, r3, r8
 8000f96:	eb61 010e 	sbc.w	r1, r1, lr
 8000f9a:	fa01 f707 	lsl.w	r7, r1, r7
 8000f9e:	fa22 f306 	lsr.w	r3, r2, r6
 8000fa2:	40f1      	lsrs	r1, r6
 8000fa4:	431f      	orrs	r7, r3
 8000fa6:	e9c5 7100 	strd	r7, r1, [r5]
 8000faa:	2600      	movs	r6, #0
 8000fac:	4631      	mov	r1, r6
 8000fae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fb2:	f1c2 0320 	rsb	r3, r2, #32
 8000fb6:	40d8      	lsrs	r0, r3
 8000fb8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000fbc:	fa21 f303 	lsr.w	r3, r1, r3
 8000fc0:	4091      	lsls	r1, r2
 8000fc2:	4301      	orrs	r1, r0
 8000fc4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000fc8:	fa1f fe8c 	uxth.w	lr, ip
 8000fcc:	fbb3 f0f7 	udiv	r0, r3, r7
 8000fd0:	fb07 3610 	mls	r6, r7, r0, r3
 8000fd4:	0c0b      	lsrs	r3, r1, #16
 8000fd6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000fda:	fb00 f60e 	mul.w	r6, r0, lr
 8000fde:	429e      	cmp	r6, r3
 8000fe0:	fa04 f402 	lsl.w	r4, r4, r2
 8000fe4:	d908      	bls.n	8000ff8 <__udivmoddi4+0x260>
 8000fe6:	eb1c 0303 	adds.w	r3, ip, r3
 8000fea:	f100 38ff 	add.w	r8, r0, #4294967295
 8000fee:	d22f      	bcs.n	8001050 <__udivmoddi4+0x2b8>
 8000ff0:	429e      	cmp	r6, r3
 8000ff2:	d92d      	bls.n	8001050 <__udivmoddi4+0x2b8>
 8000ff4:	3802      	subs	r0, #2
 8000ff6:	4463      	add	r3, ip
 8000ff8:	1b9b      	subs	r3, r3, r6
 8000ffa:	b289      	uxth	r1, r1
 8000ffc:	fbb3 f6f7 	udiv	r6, r3, r7
 8001000:	fb07 3316 	mls	r3, r7, r6, r3
 8001004:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8001008:	fb06 f30e 	mul.w	r3, r6, lr
 800100c:	428b      	cmp	r3, r1
 800100e:	d908      	bls.n	8001022 <__udivmoddi4+0x28a>
 8001010:	eb1c 0101 	adds.w	r1, ip, r1
 8001014:	f106 38ff 	add.w	r8, r6, #4294967295
 8001018:	d216      	bcs.n	8001048 <__udivmoddi4+0x2b0>
 800101a:	428b      	cmp	r3, r1
 800101c:	d914      	bls.n	8001048 <__udivmoddi4+0x2b0>
 800101e:	3e02      	subs	r6, #2
 8001020:	4461      	add	r1, ip
 8001022:	1ac9      	subs	r1, r1, r3
 8001024:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8001028:	e738      	b.n	8000e9c <__udivmoddi4+0x104>
 800102a:	462e      	mov	r6, r5
 800102c:	4628      	mov	r0, r5
 800102e:	e705      	b.n	8000e3c <__udivmoddi4+0xa4>
 8001030:	4606      	mov	r6, r0
 8001032:	e6e3      	b.n	8000dfc <__udivmoddi4+0x64>
 8001034:	4618      	mov	r0, r3
 8001036:	e6f8      	b.n	8000e2a <__udivmoddi4+0x92>
 8001038:	454b      	cmp	r3, r9
 800103a:	d2a9      	bcs.n	8000f90 <__udivmoddi4+0x1f8>
 800103c:	ebb9 0802 	subs.w	r8, r9, r2
 8001040:	eb64 0e0c 	sbc.w	lr, r4, ip
 8001044:	3801      	subs	r0, #1
 8001046:	e7a3      	b.n	8000f90 <__udivmoddi4+0x1f8>
 8001048:	4646      	mov	r6, r8
 800104a:	e7ea      	b.n	8001022 <__udivmoddi4+0x28a>
 800104c:	4620      	mov	r0, r4
 800104e:	e794      	b.n	8000f7a <__udivmoddi4+0x1e2>
 8001050:	4640      	mov	r0, r8
 8001052:	e7d1      	b.n	8000ff8 <__udivmoddi4+0x260>
 8001054:	46d0      	mov	r8, sl
 8001056:	e77b      	b.n	8000f50 <__udivmoddi4+0x1b8>
 8001058:	3b02      	subs	r3, #2
 800105a:	4461      	add	r1, ip
 800105c:	e732      	b.n	8000ec4 <__udivmoddi4+0x12c>
 800105e:	4630      	mov	r0, r6
 8001060:	e709      	b.n	8000e76 <__udivmoddi4+0xde>
 8001062:	4464      	add	r4, ip
 8001064:	3802      	subs	r0, #2
 8001066:	e742      	b.n	8000eee <__udivmoddi4+0x156>

08001068 <__aeabi_idiv0>:
 8001068:	4770      	bx	lr
 800106a:	bf00      	nop

0800106c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800106c:	b480      	push	{r7}
 800106e:	b083      	sub	sp, #12
 8001070:	af00      	add	r7, sp, #0
 8001072:	4603      	mov	r3, r0
 8001074:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001076:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800107a:	2b00      	cmp	r3, #0
 800107c:	db0b      	blt.n	8001096 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800107e:	79fb      	ldrb	r3, [r7, #7]
 8001080:	f003 021f 	and.w	r2, r3, #31
 8001084:	4907      	ldr	r1, [pc, #28]	; (80010a4 <__NVIC_EnableIRQ+0x38>)
 8001086:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800108a:	095b      	lsrs	r3, r3, #5
 800108c:	2001      	movs	r0, #1
 800108e:	fa00 f202 	lsl.w	r2, r0, r2
 8001092:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8001096:	bf00      	nop
 8001098:	370c      	adds	r7, #12
 800109a:	46bd      	mov	sp, r7
 800109c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010a0:	4770      	bx	lr
 80010a2:	bf00      	nop
 80010a4:	e000e100 	.word	0xe000e100

080010a8 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 80010a8:	b480      	push	{r7}
 80010aa:	b083      	sub	sp, #12
 80010ac:	af00      	add	r7, sp, #0
 80010ae:	4603      	mov	r3, r0
 80010b0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80010b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	db0c      	blt.n	80010d4 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ba:	79fb      	ldrb	r3, [r7, #7]
 80010bc:	f003 021f 	and.w	r2, r3, #31
 80010c0:	4907      	ldr	r1, [pc, #28]	; (80010e0 <__NVIC_ClearPendingIRQ+0x38>)
 80010c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010c6:	095b      	lsrs	r3, r3, #5
 80010c8:	2001      	movs	r0, #1
 80010ca:	fa00 f202 	lsl.w	r2, r0, r2
 80010ce:	3360      	adds	r3, #96	; 0x60
 80010d0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80010d4:	bf00      	nop
 80010d6:	370c      	adds	r7, #12
 80010d8:	46bd      	mov	sp, r7
 80010da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010de:	4770      	bx	lr
 80010e0:	e000e100 	.word	0xe000e100

080010e4 <BUZZER_init>:
 * @brief Initialize Buzzer
 *
 * @note Call BUZZER_turn_on() to turn the buzzer on.
 *****************************************************************************/
void BUZZER_init(void)
{
 80010e4:	b580      	push	{r7, lr}
 80010e6:	b082      	sub	sp, #8
 80010e8:	af00      	add	r7, sp, #0
    __HAL_RCC_GPIOA_CLK_ENABLE();           // Enable clock for port A
 80010ea:	2300      	movs	r3, #0
 80010ec:	607b      	str	r3, [r7, #4]
 80010ee:	4b23      	ldr	r3, [pc, #140]	; (800117c <BUZZER_init+0x98>)
 80010f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010f2:	4a22      	ldr	r2, [pc, #136]	; (800117c <BUZZER_init+0x98>)
 80010f4:	f043 0301 	orr.w	r3, r3, #1
 80010f8:	6313      	str	r3, [r2, #48]	; 0x30
 80010fa:	4b20      	ldr	r3, [pc, #128]	; (800117c <BUZZER_init+0x98>)
 80010fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010fe:	f003 0301 	and.w	r3, r3, #1
 8001102:	607b      	str	r3, [r7, #4]
 8001104:	687b      	ldr	r3, [r7, #4]
    GPIOA->MODER |= GPIO_MODER_MODER5_0;    // Configure PA5 as output
 8001106:	4b1e      	ldr	r3, [pc, #120]	; (8001180 <BUZZER_init+0x9c>)
 8001108:	681b      	ldr	r3, [r3, #0]
 800110a:	4a1d      	ldr	r2, [pc, #116]	; (8001180 <BUZZER_init+0x9c>)
 800110c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001110:	6013      	str	r3, [r2, #0]
    GPIOA->BSRR = GPIO_BSRR_BR5;            // Bit Reset to turn PA5 off
 8001112:	4b1b      	ldr	r3, [pc, #108]	; (8001180 <BUZZER_init+0x9c>)
 8001114:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8001118:	619a      	str	r2, [r3, #24]

    __HAL_RCC_TIM5_CLK_ENABLE();        // Enable Clock for TIM5
 800111a:	2300      	movs	r3, #0
 800111c:	603b      	str	r3, [r7, #0]
 800111e:	4b17      	ldr	r3, [pc, #92]	; (800117c <BUZZER_init+0x98>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	4a16      	ldr	r2, [pc, #88]	; (800117c <BUZZER_init+0x98>)
 8001124:	f043 0308 	orr.w	r3, r3, #8
 8001128:	6413      	str	r3, [r2, #64]	; 0x40
 800112a:	4b14      	ldr	r3, [pc, #80]	; (800117c <BUZZER_init+0x98>)
 800112c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800112e:	f003 0308 	and.w	r3, r3, #8
 8001132:	603b      	str	r3, [r7, #0]
 8001134:	683b      	ldr	r3, [r7, #0]
    TIM5->PSC   = tim_prescaler;        // Prescaler for clock freq. = 2kHz
 8001136:	4a13      	ldr	r2, [pc, #76]	; (8001184 <BUZZER_init+0xa0>)
 8001138:	4b13      	ldr	r3, [pc, #76]	; (8001188 <BUZZER_init+0xa4>)
 800113a:	681b      	ldr	r3, [r3, #0]
 800113c:	6293      	str	r3, [r2, #40]	; 0x28
    TIM5->ARR   = TIM_TOP;              // Auto reload = counter top value
 800113e:	4b11      	ldr	r3, [pc, #68]	; (8001184 <BUZZER_init+0xa0>)
 8001140:	2209      	movs	r2, #9
 8001142:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM5->CR1  |= TIM_CR1_URS;          // Interrupt when overflow/underflow
 8001144:	4b0f      	ldr	r3, [pc, #60]	; (8001184 <BUZZER_init+0xa0>)
 8001146:	681b      	ldr	r3, [r3, #0]
 8001148:	4a0e      	ldr	r2, [pc, #56]	; (8001184 <BUZZER_init+0xa0>)
 800114a:	f043 0304 	orr.w	r3, r3, #4
 800114e:	6013      	str	r3, [r2, #0]
    TIM5->DIER |= TIM_DIER_UIE;         // Enable Interrupt
 8001150:	4b0c      	ldr	r3, [pc, #48]	; (8001184 <BUZZER_init+0xa0>)
 8001152:	68db      	ldr	r3, [r3, #12]
 8001154:	4a0b      	ldr	r2, [pc, #44]	; (8001184 <BUZZER_init+0xa0>)
 8001156:	f043 0301 	orr.w	r3, r3, #1
 800115a:	60d3      	str	r3, [r2, #12]
    TIM5->EGR  |= TIM_EGR_UG;           // Update settings
 800115c:	4b09      	ldr	r3, [pc, #36]	; (8001184 <BUZZER_init+0xa0>)
 800115e:	695b      	ldr	r3, [r3, #20]
 8001160:	4a08      	ldr	r2, [pc, #32]	; (8001184 <BUZZER_init+0xa0>)
 8001162:	f043 0301 	orr.w	r3, r3, #1
 8001166:	6153      	str	r3, [r2, #20]

    NVIC_ClearPendingIRQ(TIM5_IRQn);    // Clear pending interrupt on line 0
 8001168:	2032      	movs	r0, #50	; 0x32
 800116a:	f7ff ff9d 	bl	80010a8 <__NVIC_ClearPendingIRQ>
    NVIC_EnableIRQ(TIM5_IRQn);          // Enable Interrupt
 800116e:	2032      	movs	r0, #50	; 0x32
 8001170:	f7ff ff7c 	bl	800106c <__NVIC_EnableIRQ>
}
 8001174:	bf00      	nop
 8001176:	3708      	adds	r7, #8
 8001178:	46bd      	mov	sp, r7
 800117a:	bd80      	pop	{r7, pc}
 800117c:	40023800 	.word	0x40023800
 8001180:	40020000 	.word	0x40020000
 8001184:	40000c00 	.word	0x40000c00
 8001188:	20000000 	.word	0x20000000

0800118c <BUZZER_set_freq>:
/** ***************************************************************************
 * @brief Set a frequency
 * @param [in] frequency
 *****************************************************************************/
void BUZZER_set_freq(uint32_t freq)
{
 800118c:	b480      	push	{r7}
 800118e:	b083      	sub	sp, #12
 8001190:	af00      	add	r7, sp, #0
 8001192:	6078      	str	r0, [r7, #4]
    tim_prescaler = (F_CLK) / (freq * (TIM_TOP + 1) / 2);    // Calculation for Prescaler
 8001194:	687a      	ldr	r2, [r7, #4]
 8001196:	4613      	mov	r3, r2
 8001198:	009b      	lsls	r3, r3, #2
 800119a:	4413      	add	r3, r2
 800119c:	005b      	lsls	r3, r3, #1
 800119e:	085b      	lsrs	r3, r3, #1
 80011a0:	4a07      	ldr	r2, [pc, #28]	; (80011c0 <BUZZER_set_freq+0x34>)
 80011a2:	fbb2 f3f3 	udiv	r3, r2, r3
 80011a6:	4a07      	ldr	r2, [pc, #28]	; (80011c4 <BUZZER_set_freq+0x38>)
 80011a8:	6013      	str	r3, [r2, #0]
    TIM5->PSC    = tim_prescaler;                            // Prescaler for clock frequency
 80011aa:	4a07      	ldr	r2, [pc, #28]	; (80011c8 <BUZZER_set_freq+0x3c>)
 80011ac:	4b05      	ldr	r3, [pc, #20]	; (80011c4 <BUZZER_set_freq+0x38>)
 80011ae:	681b      	ldr	r3, [r3, #0]
 80011b0:	6293      	str	r3, [r2, #40]	; 0x28
}
 80011b2:	bf00      	nop
 80011b4:	370c      	adds	r7, #12
 80011b6:	46bd      	mov	sp, r7
 80011b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011bc:	4770      	bx	lr
 80011be:	bf00      	nop
 80011c0:	01406f40 	.word	0x01406f40
 80011c4:	20000000 	.word	0x20000000
 80011c8:	40000c00 	.word	0x40000c00

080011cc <BUZZER_set_note>:
 * @param [in] note
 *
 * @note note refers to the array note
 *****************************************************************************/
void BUZZER_set_note(uint8_t set_note)
{
 80011cc:	b480      	push	{r7}
 80011ce:	b083      	sub	sp, #12
 80011d0:	af00      	add	r7, sp, #0
 80011d2:	4603      	mov	r3, r0
 80011d4:	71fb      	strb	r3, [r7, #7]
    tim_prescaler = (F_CLK) / (note[set_note] * (TIM_TOP + 1) / 2);    // Calculation for Prescaler
 80011d6:	79fb      	ldrb	r3, [r7, #7]
 80011d8:	4a0b      	ldr	r2, [pc, #44]	; (8001208 <BUZZER_set_note+0x3c>)
 80011da:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 80011de:	461a      	mov	r2, r3
 80011e0:	4613      	mov	r3, r2
 80011e2:	009b      	lsls	r3, r3, #2
 80011e4:	4413      	add	r3, r2
 80011e6:	4a09      	ldr	r2, [pc, #36]	; (800120c <BUZZER_set_note+0x40>)
 80011e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80011ec:	461a      	mov	r2, r3
 80011ee:	4b08      	ldr	r3, [pc, #32]	; (8001210 <BUZZER_set_note+0x44>)
 80011f0:	601a      	str	r2, [r3, #0]
    TIM5->PSC    = tim_prescaler;                                      // Prescaler for clock frequency
 80011f2:	4a08      	ldr	r2, [pc, #32]	; (8001214 <BUZZER_set_note+0x48>)
 80011f4:	4b06      	ldr	r3, [pc, #24]	; (8001210 <BUZZER_set_note+0x44>)
 80011f6:	681b      	ldr	r3, [r3, #0]
 80011f8:	6293      	str	r3, [r2, #40]	; 0x28
}
 80011fa:	bf00      	nop
 80011fc:	370c      	adds	r7, #12
 80011fe:	46bd      	mov	sp, r7
 8001200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001204:	4770      	bx	lr
 8001206:	bf00      	nop
 8001208:	0800fe04 	.word	0x0800fe04
 800120c:	01406f40 	.word	0x01406f40
 8001210:	20000000 	.word	0x20000000
 8001214:	40000c00 	.word	0x40000c00

08001218 <BUZZER_turn_on>:

/** ***************************************************************************
 * @brief Turn the buzzer on
 *****************************************************************************/
void BUZZER_turn_on(void)
{
 8001218:	b480      	push	{r7}
 800121a:	af00      	add	r7, sp, #0
    TIM5->CR1  |= TIM_CR1_CEN;    // Turn TIM5 on
 800121c:	4b06      	ldr	r3, [pc, #24]	; (8001238 <BUZZER_turn_on+0x20>)
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	4a05      	ldr	r2, [pc, #20]	; (8001238 <BUZZER_turn_on+0x20>)
 8001222:	f043 0301 	orr.w	r3, r3, #1
 8001226:	6013      	str	r3, [r2, #0]
    flag_buzzer = true;
 8001228:	4b04      	ldr	r3, [pc, #16]	; (800123c <BUZZER_turn_on+0x24>)
 800122a:	2201      	movs	r2, #1
 800122c:	701a      	strb	r2, [r3, #0]
}
 800122e:	bf00      	nop
 8001230:	46bd      	mov	sp, r7
 8001232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001236:	4770      	bx	lr
 8001238:	40000c00 	.word	0x40000c00
 800123c:	200002ed 	.word	0x200002ed

08001240 <BUZZER_turn_off>:

/** ***************************************************************************
 * @brief Turn the buzzer off
 *****************************************************************************/
void BUZZER_turn_off(void)
{
 8001240:	b480      	push	{r7}
 8001242:	af00      	add	r7, sp, #0
    TIM5->CR1  &= ~TIM_CR1_CEN;     // Turn TIM5 off
 8001244:	4b08      	ldr	r3, [pc, #32]	; (8001268 <BUZZER_turn_off+0x28>)
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	4a07      	ldr	r2, [pc, #28]	; (8001268 <BUZZER_turn_off+0x28>)
 800124a:	f023 0301 	bic.w	r3, r3, #1
 800124e:	6013      	str	r3, [r2, #0]
    GPIOA->BSRR = GPIO_BSRR_BR5;    // Set PA5 to low
 8001250:	4b06      	ldr	r3, [pc, #24]	; (800126c <BUZZER_turn_off+0x2c>)
 8001252:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8001256:	619a      	str	r2, [r3, #24]
    flag_buzzer = false;
 8001258:	4b05      	ldr	r3, [pc, #20]	; (8001270 <BUZZER_turn_off+0x30>)
 800125a:	2200      	movs	r2, #0
 800125c:	701a      	strb	r2, [r3, #0]
}
 800125e:	bf00      	nop
 8001260:	46bd      	mov	sp, r7
 8001262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001266:	4770      	bx	lr
 8001268:	40000c00 	.word	0x40000c00
 800126c:	40020000 	.word	0x40020000
 8001270:	200002ed 	.word	0x200002ed

08001274 <BUZZER_get_status>:
 * @brief Check state of Buzzer
 * @return [out] state
 *
 * true when buzzer on or false when buzzer off
 *****************************************************************************/
bool BUZZER_get_status(void){
 8001274:	b480      	push	{r7}
 8001276:	af00      	add	r7, sp, #0
    return flag_buzzer;
 8001278:	4b03      	ldr	r3, [pc, #12]	; (8001288 <BUZZER_get_status+0x14>)
 800127a:	781b      	ldrb	r3, [r3, #0]
}
 800127c:	4618      	mov	r0, r3
 800127e:	46bd      	mov	sp, r7
 8001280:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001284:	4770      	bx	lr
 8001286:	bf00      	nop
 8001288:	200002ed 	.word	0x200002ed

0800128c <BUZZER_play_note>:
 * @brief Set a frequency
 * @param [in] note
 * @param [in] duration [ms]
 *****************************************************************************/
void BUZZER_play_note(uint16_t note,uint16_t length)
{
 800128c:	b580      	push	{r7, lr}
 800128e:	b082      	sub	sp, #8
 8001290:	af00      	add	r7, sp, #0
 8001292:	4603      	mov	r3, r0
 8001294:	460a      	mov	r2, r1
 8001296:	80fb      	strh	r3, [r7, #6]
 8001298:	4613      	mov	r3, r2
 800129a:	80bb      	strh	r3, [r7, #4]
    BUZZER_set_freq(note);
 800129c:	88fb      	ldrh	r3, [r7, #6]
 800129e:	4618      	mov	r0, r3
 80012a0:	f7ff ff74 	bl	800118c <BUZZER_set_freq>
    BUZZER_turn_on();
 80012a4:	f7ff ffb8 	bl	8001218 <BUZZER_turn_on>

    HAL_Delay(length);
 80012a8:	88bb      	ldrh	r3, [r7, #4]
 80012aa:	4618      	mov	r0, r3
 80012ac:	f004 fc80 	bl	8005bb0 <HAL_Delay>

    BUZZER_turn_off();
 80012b0:	f7ff ffc6 	bl	8001240 <BUZZER_turn_off>
}
 80012b4:	bf00      	nop
 80012b6:	3708      	adds	r7, #8
 80012b8:	46bd      	mov	sp, r7
 80012ba:	bd80      	pop	{r7, pc}

080012bc <BUZZER_play_melody>:

/** ***************************************************************************
 * @brief Play Nokia ringtone
 *****************************************************************************/
void BUZZER_play_melody(void)
{
 80012bc:	b580      	push	{r7, lr}
 80012be:	af00      	add	r7, sp, #0
    BUZZER_play_note(note[16],150); // E6
 80012c0:	f240 5327 	movw	r3, #1319	; 0x527
 80012c4:	b29b      	uxth	r3, r3
 80012c6:	2196      	movs	r1, #150	; 0x96
 80012c8:	4618      	mov	r0, r3
 80012ca:	f7ff ffdf 	bl	800128c <BUZZER_play_note>
    BUZZER_play_note(note[14],150); // D6
 80012ce:	f240 4397 	movw	r3, #1175	; 0x497
 80012d2:	b29b      	uxth	r3, r3
 80012d4:	2196      	movs	r1, #150	; 0x96
 80012d6:	4618      	mov	r0, r3
 80012d8:	f7ff ffd8 	bl	800128c <BUZZER_play_note>
    BUZZER_play_note(note[18],300); // F#6
 80012dc:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80012e0:	b29b      	uxth	r3, r3
 80012e2:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80012e6:	4618      	mov	r0, r3
 80012e8:	f7ff ffd0 	bl	800128c <BUZZER_play_note>
    BUZZER_play_note(note[20],300); // G#6
 80012ec:	f240 637d 	movw	r3, #1661	; 0x67d
 80012f0:	b29b      	uxth	r3, r3
 80012f2:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80012f6:	4618      	mov	r0, r3
 80012f8:	f7ff ffc8 	bl	800128c <BUZZER_play_note>

    BUZZER_play_note(note[13],150); // C#6
 80012fc:	f240 4355 	movw	r3, #1109	; 0x455
 8001300:	b29b      	uxth	r3, r3
 8001302:	2196      	movs	r1, #150	; 0x96
 8001304:	4618      	mov	r0, r3
 8001306:	f7ff ffc1 	bl	800128c <BUZZER_play_note>
    BUZZER_play_note(note[11],150); // B5
 800130a:	f44f 7377 	mov.w	r3, #988	; 0x3dc
 800130e:	b29b      	uxth	r3, r3
 8001310:	2196      	movs	r1, #150	; 0x96
 8001312:	4618      	mov	r0, r3
 8001314:	f7ff ffba 	bl	800128c <BUZZER_play_note>
    BUZZER_play_note(note[14],300); // D6
 8001318:	f240 4397 	movw	r3, #1175	; 0x497
 800131c:	b29b      	uxth	r3, r3
 800131e:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8001322:	4618      	mov	r0, r3
 8001324:	f7ff ffb2 	bl	800128c <BUZZER_play_note>
    BUZZER_play_note(note[16],300); // E6
 8001328:	f240 5327 	movw	r3, #1319	; 0x527
 800132c:	b29b      	uxth	r3, r3
 800132e:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8001332:	4618      	mov	r0, r3
 8001334:	f7ff ffaa 	bl	800128c <BUZZER_play_note>

    BUZZER_play_note(note[11],150); // B5
 8001338:	f44f 7377 	mov.w	r3, #988	; 0x3dc
 800133c:	b29b      	uxth	r3, r3
 800133e:	2196      	movs	r1, #150	; 0x96
 8001340:	4618      	mov	r0, r3
 8001342:	f7ff ffa3 	bl	800128c <BUZZER_play_note>
    BUZZER_play_note(note[9],150);  // A5
 8001346:	f44f 735c 	mov.w	r3, #880	; 0x370
 800134a:	b29b      	uxth	r3, r3
 800134c:	2196      	movs	r1, #150	; 0x96
 800134e:	4618      	mov	r0, r3
 8001350:	f7ff ff9c 	bl	800128c <BUZZER_play_note>
    BUZZER_play_note(note[13],300); // C#6
 8001354:	f240 4355 	movw	r3, #1109	; 0x455
 8001358:	b29b      	uxth	r3, r3
 800135a:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800135e:	4618      	mov	r0, r3
 8001360:	f7ff ff94 	bl	800128c <BUZZER_play_note>
    BUZZER_play_note(note[16],300); // E6
 8001364:	f240 5327 	movw	r3, #1319	; 0x527
 8001368:	b29b      	uxth	r3, r3
 800136a:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800136e:	4618      	mov	r0, r3
 8001370:	f7ff ff8c 	bl	800128c <BUZZER_play_note>

    BUZZER_play_note(note[21],450); // A6
 8001374:	f44f 63dc 	mov.w	r3, #1760	; 0x6e0
 8001378:	b29b      	uxth	r3, r3
 800137a:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
 800137e:	4618      	mov	r0, r3
 8001380:	f7ff ff84 	bl	800128c <BUZZER_play_note>
}
 8001384:	bf00      	nop
 8001386:	bd80      	pop	{r7, pc}

08001388 <TIM5_IRQHandler>:
 *
 * Switches buzzer by default with 2 kHz or with set frequency of BUZZER_set_freq(uint32_t freq)
 * @note Interrupt will accrue only when BUZZER_get_status(void) = true
 *****************************************************************************/
void TIM5_IRQHandler(void)
{
 8001388:	b480      	push	{r7}
 800138a:	af00      	add	r7, sp, #0
    TIM5->SR &= ~TIM_SR_UIF;    // Clear pending interrupt flag
 800138c:	4b12      	ldr	r3, [pc, #72]	; (80013d8 <TIM5_IRQHandler+0x50>)
 800138e:	691b      	ldr	r3, [r3, #16]
 8001390:	4a11      	ldr	r2, [pc, #68]	; (80013d8 <TIM5_IRQHandler+0x50>)
 8001392:	f023 0301 	bic.w	r3, r3, #1
 8001396:	6113      	str	r3, [r2, #16]
    if(flag_piezo){
 8001398:	4b10      	ldr	r3, [pc, #64]	; (80013dc <TIM5_IRQHandler+0x54>)
 800139a:	781b      	ldrb	r3, [r3, #0]
 800139c:	2b00      	cmp	r3, #0
 800139e:	d003      	beq.n	80013a8 <TIM5_IRQHandler+0x20>
        GPIOA->BSRR = GPIO_BSRR_BS5; // Set PA5 to high
 80013a0:	4b0f      	ldr	r3, [pc, #60]	; (80013e0 <TIM5_IRQHandler+0x58>)
 80013a2:	2220      	movs	r2, #32
 80013a4:	619a      	str	r2, [r3, #24]
 80013a6:	e003      	b.n	80013b0 <TIM5_IRQHandler+0x28>
    }
    else{
        GPIOA->BSRR = GPIO_BSRR_BR5; // Set PA5 to low
 80013a8:	4b0d      	ldr	r3, [pc, #52]	; (80013e0 <TIM5_IRQHandler+0x58>)
 80013aa:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 80013ae:	619a      	str	r2, [r3, #24]
    }

    flag_piezo = !flag_piezo;   // Toggle flag
 80013b0:	4b0a      	ldr	r3, [pc, #40]	; (80013dc <TIM5_IRQHandler+0x54>)
 80013b2:	781b      	ldrb	r3, [r3, #0]
 80013b4:	2b00      	cmp	r3, #0
 80013b6:	bf14      	ite	ne
 80013b8:	2301      	movne	r3, #1
 80013ba:	2300      	moveq	r3, #0
 80013bc:	b2db      	uxtb	r3, r3
 80013be:	f083 0301 	eor.w	r3, r3, #1
 80013c2:	b2db      	uxtb	r3, r3
 80013c4:	f003 0301 	and.w	r3, r3, #1
 80013c8:	b2da      	uxtb	r2, r3
 80013ca:	4b04      	ldr	r3, [pc, #16]	; (80013dc <TIM5_IRQHandler+0x54>)
 80013cc:	701a      	strb	r2, [r3, #0]
}
 80013ce:	bf00      	nop
 80013d0:	46bd      	mov	sp, r7
 80013d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013d6:	4770      	bx	lr
 80013d8:	40000c00 	.word	0x40000c00
 80013dc:	200002ec 	.word	0x200002ec
 80013e0:	40020000 	.word	0x40020000

080013e4 <get_X_Pos>:
 *
 * This is used to access the X_Pos from an other file.
 * @return X_Pos
 *****************************************************************************/
int get_X_Pos(void)
{
 80013e4:	b480      	push	{r7}
 80013e6:	af00      	add	r7, sp, #0
     return X_Pos;
 80013e8:	4b03      	ldr	r3, [pc, #12]	; (80013f8 <get_X_Pos+0x14>)
 80013ea:	681b      	ldr	r3, [r3, #0]
}
 80013ec:	4618      	mov	r0, r3
 80013ee:	46bd      	mov	sp, r7
 80013f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013f4:	4770      	bx	lr
 80013f6:	bf00      	nop
 80013f8:	20000b30 	.word	0x20000b30

080013fc <get_Y_Pos>:
 *
 * This is used to access the Y_Pos from an other file.
 * @return Y_Pos
 *****************************************************************************/
int get_Y_Pos(void)
{
 80013fc:	b480      	push	{r7}
 80013fe:	af00      	add	r7, sp, #0
     return Y_Pos;
 8001400:	4b03      	ldr	r3, [pc, #12]	; (8001410 <get_Y_Pos+0x14>)
 8001402:	681b      	ldr	r3, [r3, #0]
}
 8001404:	4618      	mov	r0, r3
 8001406:	46bd      	mov	sp, r7
 8001408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800140c:	4770      	bx	lr
 800140e:	bf00      	nop
 8001410:	20000b34 	.word	0x20000b34

08001414 <get_angle>:
 *
 * This is used to access Gamma from an other file.
 * @return Gamma
 *****************************************************************************/
int get_angle(void)
{
 8001414:	b580      	push	{r7, lr}
 8001416:	af00      	add	r7, sp, #0
     return (int)Gamma;
 8001418:	4b04      	ldr	r3, [pc, #16]	; (800142c <get_angle+0x18>)
 800141a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800141e:	4610      	mov	r0, r2
 8001420:	4619      	mov	r1, r3
 8001422:	f7ff fc09 	bl	8000c38 <__aeabi_d2iz>
 8001426:	4603      	mov	r3, r0
}
 8001428:	4618      	mov	r0, r3
 800142a:	bd80      	pop	{r7, pc}
 800142c:	20000b38 	.word	0x20000b38

08001430 <get_current>:
 *
 * This is used to access the current from an other file.
 * @return current
 *****************************************************************************/
float get_current(void)
{
 8001430:	b480      	push	{r7}
 8001432:	af00      	add	r7, sp, #0
    return current;
 8001434:	4b04      	ldr	r3, [pc, #16]	; (8001448 <get_current+0x18>)
 8001436:	681b      	ldr	r3, [r3, #0]
 8001438:	ee07 3a90 	vmov	s15, r3
}
 800143c:	eeb0 0a67 	vmov.f32	s0, s15
 8001440:	46bd      	mov	sp, r7
 8001442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001446:	4770      	bx	lr
 8001448:	20000b40 	.word	0x20000b40
 800144c:	00000000 	.word	0x00000000

08001450 <calculate_pos>:
 * @param Number of FFT output values to be averaged before calculating with it.
 *
 * @note The zero point is at the leading edge of the device between the two pads.
 *****************************************************************************/
void calculate_pos(int fft_avg_num)
{
 8001450:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001454:	b08a      	sub	sp, #40	; 0x28
 8001456:	af00      	add	r7, sp, #0
 8001458:	6078      	str	r0, [r7, #4]
     num_of_samples = fft_avg_num;
 800145a:	4abf      	ldr	r2, [pc, #764]	; (8001758 <calculate_pos+0x308>)
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	6013      	str	r3, [r2, #0]
     double cos_alpha;
     double alpha;
     double cos_beta;
     double beta;

     ADC3_IN4_timer_init();
 8001460:	f001 f9d8 	bl	8002814 <ADC3_IN4_timer_init>
     ADC3_IN4_timer_start();
 8001464:	f001 fa3a 	bl	80028dc <ADC3_IN4_timer_start>

     if (MEAS_data_ready){
 8001468:	4bbc      	ldr	r3, [pc, #752]	; (800175c <calculate_pos+0x30c>)
 800146a:	781b      	ldrb	r3, [r3, #0]
 800146c:	2b00      	cmp	r3, #0
 800146e:	f000 8247 	beq.w	8001900 <calculate_pos+0x4b0>
          /* Sets the error code as a default value*/
          X_Pos = CALC_OUTOF_X_RANGE; // ERROR code
 8001472:	4bbb      	ldr	r3, [pc, #748]	; (8001760 <calculate_pos+0x310>)
 8001474:	f640 121d 	movw	r2, #2333	; 0x91d
 8001478:	601a      	str	r2, [r3, #0]
          Y_Pos = CALC_OUTOF_Y_RANGE; // ERROR code
 800147a:	4bba      	ldr	r3, [pc, #744]	; (8001764 <calculate_pos+0x314>)
 800147c:	f640 02ae 	movw	r2, #2222	; 0x8ae
 8001480:	601a      	str	r2, [r3, #0]
          Gamma = CALC_OUTOF_ANGLE_RANGE; // ERROR code
 8001482:	49b9      	ldr	r1, [pc, #740]	; (8001768 <calculate_pos+0x318>)
 8001484:	a3ae      	add	r3, pc, #696	; (adr r3, 8001740 <calculate_pos+0x2f0>)
 8001486:	e9d3 2300 	ldrd	r2, r3, [r3]
 800148a:	e9c1 2300 	strd	r2, r3, [r1]

          split_Array();
 800148e:	f000 fd17 	bl	8001ec0 <split_Array>
          calculate_FFT();
 8001492:	f000 fb25 	bl	8001ae0 <calculate_FFT>
          clear_Buffer();
 8001496:	f000 fd95 	bl	8001fc4 <clear_Buffer>
          /*Checks if there is no error code from the FFT function*/
          if(LPAD_FFT_distance != FFT_NO_SIGNAL || RPAD_FFT_distance != FFT_NO_SIGNAL){
 800149a:	4bb4      	ldr	r3, [pc, #720]	; (800176c <calculate_pos+0x31c>)
 800149c:	681b      	ldr	r3, [r3, #0]
 800149e:	f240 4257 	movw	r2, #1111	; 0x457
 80014a2:	4293      	cmp	r3, r2
 80014a4:	d106      	bne.n	80014b4 <calculate_pos+0x64>
 80014a6:	4bb2      	ldr	r3, [pc, #712]	; (8001770 <calculate_pos+0x320>)
 80014a8:	681b      	ldr	r3, [r3, #0]
 80014aa:	f240 4257 	movw	r2, #1111	; 0x457
 80014ae:	4293      	cmp	r3, r2
 80014b0:	f000 8226 	beq.w	8001900 <calculate_pos+0x4b0>

            cos_beta   = (double)( LPAD_FFT_distance*LPAD_FFT_distance
 80014b4:	4bad      	ldr	r3, [pc, #692]	; (800176c <calculate_pos+0x31c>)
 80014b6:	681b      	ldr	r3, [r3, #0]
 80014b8:	4aac      	ldr	r2, [pc, #688]	; (800176c <calculate_pos+0x31c>)
 80014ba:	6812      	ldr	r2, [r2, #0]
 80014bc:	fb02 f303 	mul.w	r3, r2, r3
                                  + PAD_SPACING*PAD_SPACING
 80014c0:	f603 12c4 	addw	r2, r3, #2500	; 0x9c4
                                  - RPAD_FFT_distance*RPAD_FFT_distance)
 80014c4:	4baa      	ldr	r3, [pc, #680]	; (8001770 <calculate_pos+0x320>)
 80014c6:	681b      	ldr	r3, [r3, #0]
 80014c8:	49a9      	ldr	r1, [pc, #676]	; (8001770 <calculate_pos+0x320>)
 80014ca:	6809      	ldr	r1, [r1, #0]
 80014cc:	fb01 f303 	mul.w	r3, r1, r3
 80014d0:	1ad3      	subs	r3, r2, r3
            cos_beta   = (double)( LPAD_FFT_distance*LPAD_FFT_distance
 80014d2:	4618      	mov	r0, r3
 80014d4:	f7ff f896 	bl	8000604 <__aeabi_i2d>
 80014d8:	4680      	mov	r8, r0
 80014da:	4689      	mov	r9, r1
                                  / (2*LPAD_FFT_distance*PAD_SPACING);  // Law of cosines
 80014dc:	4ba3      	ldr	r3, [pc, #652]	; (800176c <calculate_pos+0x31c>)
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	2264      	movs	r2, #100	; 0x64
 80014e2:	fb02 f303 	mul.w	r3, r2, r3
 80014e6:	4618      	mov	r0, r3
 80014e8:	f7ff f88c 	bl	8000604 <__aeabi_i2d>
 80014ec:	4602      	mov	r2, r0
 80014ee:	460b      	mov	r3, r1
            cos_beta   = (double)( LPAD_FFT_distance*LPAD_FFT_distance
 80014f0:	4640      	mov	r0, r8
 80014f2:	4649      	mov	r1, r9
 80014f4:	f7ff fa1a 	bl	800092c <__aeabi_ddiv>
 80014f8:	4602      	mov	r2, r0
 80014fa:	460b      	mov	r3, r1
 80014fc:	e9c7 2308 	strd	r2, r3, [r7, #32]

            cos_alpha = (double)( RPAD_FFT_distance*RPAD_FFT_distance
 8001500:	4b9b      	ldr	r3, [pc, #620]	; (8001770 <calculate_pos+0x320>)
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	4a9a      	ldr	r2, [pc, #616]	; (8001770 <calculate_pos+0x320>)
 8001506:	6812      	ldr	r2, [r2, #0]
 8001508:	fb03 f202 	mul.w	r2, r3, r2
                                  - LPAD_FFT_distance*LPAD_FFT_distance
 800150c:	4b97      	ldr	r3, [pc, #604]	; (800176c <calculate_pos+0x31c>)
 800150e:	681b      	ldr	r3, [r3, #0]
 8001510:	4996      	ldr	r1, [pc, #600]	; (800176c <calculate_pos+0x31c>)
 8001512:	6809      	ldr	r1, [r1, #0]
 8001514:	fb01 f303 	mul.w	r3, r1, r3
 8001518:	1ad3      	subs	r3, r2, r3
                                  + PAD_SPACING*PAD_SPACING)
 800151a:	f603 13c4 	addw	r3, r3, #2500	; 0x9c4
            cos_alpha = (double)( RPAD_FFT_distance*RPAD_FFT_distance
 800151e:	4618      	mov	r0, r3
 8001520:	f7ff f870 	bl	8000604 <__aeabi_i2d>
 8001524:	4680      	mov	r8, r0
 8001526:	4689      	mov	r9, r1
                                  / (2*RPAD_FFT_distance*PAD_SPACING); // Law of cosines
 8001528:	4b91      	ldr	r3, [pc, #580]	; (8001770 <calculate_pos+0x320>)
 800152a:	681b      	ldr	r3, [r3, #0]
 800152c:	2264      	movs	r2, #100	; 0x64
 800152e:	fb02 f303 	mul.w	r3, r2, r3
 8001532:	4618      	mov	r0, r3
 8001534:	f7ff f866 	bl	8000604 <__aeabi_i2d>
 8001538:	4602      	mov	r2, r0
 800153a:	460b      	mov	r3, r1
            cos_alpha = (double)( RPAD_FFT_distance*RPAD_FFT_distance
 800153c:	4640      	mov	r0, r8
 800153e:	4649      	mov	r1, r9
 8001540:	f7ff f9f4 	bl	800092c <__aeabi_ddiv>
 8001544:	4602      	mov	r2, r0
 8001546:	460b      	mov	r3, r1
 8001548:	e9c7 2306 	strd	r2, r3, [r7, #24]
            /* Checks if cos_alpha and cos_beta are in range of arccosine*/
            if(cos_alpha <= 1 && cos_beta <= 1 && cos_alpha > -1 && cos_beta >-1){
 800154c:	f04f 0200 	mov.w	r2, #0
 8001550:	4b88      	ldr	r3, [pc, #544]	; (8001774 <calculate_pos+0x324>)
 8001552:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001556:	f7ff fb3b 	bl	8000bd0 <__aeabi_dcmple>
 800155a:	4603      	mov	r3, r0
 800155c:	2b00      	cmp	r3, #0
 800155e:	d100      	bne.n	8001562 <calculate_pos+0x112>
                calculate_current();
                check_display_bounderies();
            }
          }
     }
}
 8001560:	e1ce      	b.n	8001900 <calculate_pos+0x4b0>
            if(cos_alpha <= 1 && cos_beta <= 1 && cos_alpha > -1 && cos_beta >-1){
 8001562:	f04f 0200 	mov.w	r2, #0
 8001566:	4b83      	ldr	r3, [pc, #524]	; (8001774 <calculate_pos+0x324>)
 8001568:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800156c:	f7ff fb30 	bl	8000bd0 <__aeabi_dcmple>
 8001570:	4603      	mov	r3, r0
 8001572:	2b00      	cmp	r3, #0
 8001574:	d100      	bne.n	8001578 <calculate_pos+0x128>
}
 8001576:	e1c3      	b.n	8001900 <calculate_pos+0x4b0>
            if(cos_alpha <= 1 && cos_beta <= 1 && cos_alpha > -1 && cos_beta >-1){
 8001578:	f04f 0200 	mov.w	r2, #0
 800157c:	4b7e      	ldr	r3, [pc, #504]	; (8001778 <calculate_pos+0x328>)
 800157e:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8001582:	f7ff fb39 	bl	8000bf8 <__aeabi_dcmpgt>
 8001586:	4603      	mov	r3, r0
 8001588:	2b00      	cmp	r3, #0
 800158a:	d100      	bne.n	800158e <calculate_pos+0x13e>
}
 800158c:	e1b8      	b.n	8001900 <calculate_pos+0x4b0>
            if(cos_alpha <= 1 && cos_beta <= 1 && cos_alpha > -1 && cos_beta >-1){
 800158e:	f04f 0200 	mov.w	r2, #0
 8001592:	4b79      	ldr	r3, [pc, #484]	; (8001778 <calculate_pos+0x328>)
 8001594:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8001598:	f7ff fb2e 	bl	8000bf8 <__aeabi_dcmpgt>
 800159c:	4603      	mov	r3, r0
 800159e:	2b00      	cmp	r3, #0
 80015a0:	d100      	bne.n	80015a4 <calculate_pos+0x154>
}
 80015a2:	e1ad      	b.n	8001900 <calculate_pos+0x4b0>
                alpha = acos(cos_alpha);   //Left angle
 80015a4:	ed97 0b06 	vldr	d0, [r7, #24]
 80015a8:	f00c fbb2 	bl	800dd10 <acos>
 80015ac:	ed87 0b04 	vstr	d0, [r7, #16]
                beta  = acos(cos_beta);    //Right angle
 80015b0:	ed97 0b08 	vldr	d0, [r7, #32]
 80015b4:	f00c fbac 	bl	800dd10 <acos>
 80015b8:	ed87 0b02 	vstr	d0, [r7, #8]
                if (alpha < M_PI/2 && beta < M_PI/2){// First case : cable in between pads
 80015bc:	a362      	add	r3, pc, #392	; (adr r3, 8001748 <calculate_pos+0x2f8>)
 80015be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015c2:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 80015c6:	f7ff faf9 	bl	8000bbc <__aeabi_dcmplt>
 80015ca:	4603      	mov	r3, r0
 80015cc:	2b00      	cmp	r3, #0
 80015ce:	d04a      	beq.n	8001666 <calculate_pos+0x216>
 80015d0:	a35d      	add	r3, pc, #372	; (adr r3, 8001748 <calculate_pos+0x2f8>)
 80015d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015d6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80015da:	f7ff faef 	bl	8000bbc <__aeabi_dcmplt>
 80015de:	4603      	mov	r3, r0
 80015e0:	2b00      	cmp	r3, #0
 80015e2:	d040      	beq.n	8001666 <calculate_pos+0x216>
                    X_Pos = fabs((cos(alpha)*RPAD_FFT_distance - PAD_SPACING/2));
 80015e4:	ed97 0b04 	vldr	d0, [r7, #16]
 80015e8:	f00c fae6 	bl	800dbb8 <cos>
 80015ec:	ec59 8b10 	vmov	r8, r9, d0
 80015f0:	4b5f      	ldr	r3, [pc, #380]	; (8001770 <calculate_pos+0x320>)
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	4618      	mov	r0, r3
 80015f6:	f7ff f805 	bl	8000604 <__aeabi_i2d>
 80015fa:	4602      	mov	r2, r0
 80015fc:	460b      	mov	r3, r1
 80015fe:	4640      	mov	r0, r8
 8001600:	4649      	mov	r1, r9
 8001602:	f7ff f869 	bl	80006d8 <__aeabi_dmul>
 8001606:	4602      	mov	r2, r0
 8001608:	460b      	mov	r3, r1
 800160a:	4610      	mov	r0, r2
 800160c:	4619      	mov	r1, r3
 800160e:	f04f 0200 	mov.w	r2, #0
 8001612:	4b5a      	ldr	r3, [pc, #360]	; (800177c <calculate_pos+0x32c>)
 8001614:	f7fe fea8 	bl	8000368 <__aeabi_dsub>
 8001618:	4602      	mov	r2, r0
 800161a:	460b      	mov	r3, r1
 800161c:	4614      	mov	r4, r2
 800161e:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 8001622:	4620      	mov	r0, r4
 8001624:	4629      	mov	r1, r5
 8001626:	f7ff fb07 	bl	8000c38 <__aeabi_d2iz>
 800162a:	4603      	mov	r3, r0
 800162c:	4a4c      	ldr	r2, [pc, #304]	; (8001760 <calculate_pos+0x310>)
 800162e:	6013      	str	r3, [r2, #0]
                    Y_Pos = sin(alpha)*RPAD_FFT_distance;
 8001630:	ed97 0b04 	vldr	d0, [r7, #16]
 8001634:	f00c fb14 	bl	800dc60 <sin>
 8001638:	ec55 4b10 	vmov	r4, r5, d0
 800163c:	4b4c      	ldr	r3, [pc, #304]	; (8001770 <calculate_pos+0x320>)
 800163e:	681b      	ldr	r3, [r3, #0]
 8001640:	4618      	mov	r0, r3
 8001642:	f7fe ffdf 	bl	8000604 <__aeabi_i2d>
 8001646:	4602      	mov	r2, r0
 8001648:	460b      	mov	r3, r1
 800164a:	4620      	mov	r0, r4
 800164c:	4629      	mov	r1, r5
 800164e:	f7ff f843 	bl	80006d8 <__aeabi_dmul>
 8001652:	4602      	mov	r2, r0
 8001654:	460b      	mov	r3, r1
 8001656:	4610      	mov	r0, r2
 8001658:	4619      	mov	r1, r3
 800165a:	f7ff faed 	bl	8000c38 <__aeabi_d2iz>
 800165e:	4603      	mov	r3, r0
 8001660:	4a40      	ldr	r2, [pc, #256]	; (8001764 <calculate_pos+0x314>)
 8001662:	6013      	str	r3, [r2, #0]
 8001664:	e0f7      	b.n	8001856 <calculate_pos+0x406>
                else if (alpha >= M_PI/2 && beta < M_PI/2){ //Second case: cable on the left side of the device
 8001666:	a338      	add	r3, pc, #224	; (adr r3, 8001748 <calculate_pos+0x2f8>)
 8001668:	e9d3 2300 	ldrd	r2, r3, [r3]
 800166c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001670:	f7ff fab8 	bl	8000be4 <__aeabi_dcmpge>
 8001674:	4603      	mov	r3, r0
 8001676:	2b00      	cmp	r3, #0
 8001678:	f000 8082 	beq.w	8001780 <calculate_pos+0x330>
 800167c:	a332      	add	r3, pc, #200	; (adr r3, 8001748 <calculate_pos+0x2f8>)
 800167e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001682:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001686:	f7ff fa99 	bl	8000bbc <__aeabi_dcmplt>
 800168a:	4603      	mov	r3, r0
 800168c:	2b00      	cmp	r3, #0
 800168e:	d077      	beq.n	8001780 <calculate_pos+0x330>
                    X_Pos = cos(M_PI-alpha)*RPAD_FFT_distance + PAD_SPACING/2;
 8001690:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8001694:	a12e      	add	r1, pc, #184	; (adr r1, 8001750 <calculate_pos+0x300>)
 8001696:	e9d1 0100 	ldrd	r0, r1, [r1]
 800169a:	f7fe fe65 	bl	8000368 <__aeabi_dsub>
 800169e:	4602      	mov	r2, r0
 80016a0:	460b      	mov	r3, r1
 80016a2:	ec43 2b17 	vmov	d7, r2, r3
 80016a6:	eeb0 0a47 	vmov.f32	s0, s14
 80016aa:	eef0 0a67 	vmov.f32	s1, s15
 80016ae:	f00c fa83 	bl	800dbb8 <cos>
 80016b2:	ec55 4b10 	vmov	r4, r5, d0
 80016b6:	4b2e      	ldr	r3, [pc, #184]	; (8001770 <calculate_pos+0x320>)
 80016b8:	681b      	ldr	r3, [r3, #0]
 80016ba:	4618      	mov	r0, r3
 80016bc:	f7fe ffa2 	bl	8000604 <__aeabi_i2d>
 80016c0:	4602      	mov	r2, r0
 80016c2:	460b      	mov	r3, r1
 80016c4:	4620      	mov	r0, r4
 80016c6:	4629      	mov	r1, r5
 80016c8:	f7ff f806 	bl	80006d8 <__aeabi_dmul>
 80016cc:	4602      	mov	r2, r0
 80016ce:	460b      	mov	r3, r1
 80016d0:	4610      	mov	r0, r2
 80016d2:	4619      	mov	r1, r3
 80016d4:	f04f 0200 	mov.w	r2, #0
 80016d8:	4b28      	ldr	r3, [pc, #160]	; (800177c <calculate_pos+0x32c>)
 80016da:	f7fe fe47 	bl	800036c <__adddf3>
 80016de:	4602      	mov	r2, r0
 80016e0:	460b      	mov	r3, r1
 80016e2:	4610      	mov	r0, r2
 80016e4:	4619      	mov	r1, r3
 80016e6:	f7ff faa7 	bl	8000c38 <__aeabi_d2iz>
 80016ea:	4603      	mov	r3, r0
 80016ec:	4a1c      	ldr	r2, [pc, #112]	; (8001760 <calculate_pos+0x310>)
 80016ee:	6013      	str	r3, [r2, #0]
                    Y_Pos = sin(M_PI-alpha)*RPAD_FFT_distance;
 80016f0:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80016f4:	a116      	add	r1, pc, #88	; (adr r1, 8001750 <calculate_pos+0x300>)
 80016f6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80016fa:	f7fe fe35 	bl	8000368 <__aeabi_dsub>
 80016fe:	4602      	mov	r2, r0
 8001700:	460b      	mov	r3, r1
 8001702:	ec43 2b17 	vmov	d7, r2, r3
 8001706:	eeb0 0a47 	vmov.f32	s0, s14
 800170a:	eef0 0a67 	vmov.f32	s1, s15
 800170e:	f00c faa7 	bl	800dc60 <sin>
 8001712:	ec55 4b10 	vmov	r4, r5, d0
 8001716:	4b16      	ldr	r3, [pc, #88]	; (8001770 <calculate_pos+0x320>)
 8001718:	681b      	ldr	r3, [r3, #0]
 800171a:	4618      	mov	r0, r3
 800171c:	f7fe ff72 	bl	8000604 <__aeabi_i2d>
 8001720:	4602      	mov	r2, r0
 8001722:	460b      	mov	r3, r1
 8001724:	4620      	mov	r0, r4
 8001726:	4629      	mov	r1, r5
 8001728:	f7fe ffd6 	bl	80006d8 <__aeabi_dmul>
 800172c:	4602      	mov	r2, r0
 800172e:	460b      	mov	r3, r1
 8001730:	4610      	mov	r0, r2
 8001732:	4619      	mov	r1, r3
 8001734:	f7ff fa80 	bl	8000c38 <__aeabi_d2iz>
 8001738:	4603      	mov	r3, r0
 800173a:	4a0a      	ldr	r2, [pc, #40]	; (8001764 <calculate_pos+0x314>)
 800173c:	6013      	str	r3, [r2, #0]
 800173e:	e08a      	b.n	8001856 <calculate_pos+0x406>
 8001740:	00000000 	.word	0x00000000
 8001744:	40a31800 	.word	0x40a31800
 8001748:	54442d18 	.word	0x54442d18
 800174c:	3ff921fb 	.word	0x3ff921fb
 8001750:	54442d18 	.word	0x54442d18
 8001754:	400921fb 	.word	0x400921fb
 8001758:	20000b48 	.word	0x20000b48
 800175c:	20000b64 	.word	0x20000b64
 8001760:	20000b30 	.word	0x20000b30
 8001764:	20000b34 	.word	0x20000b34
 8001768:	20000b38 	.word	0x20000b38
 800176c:	20000b20 	.word	0x20000b20
 8001770:	20000b24 	.word	0x20000b24
 8001774:	3ff00000 	.word	0x3ff00000
 8001778:	bff00000 	.word	0xbff00000
 800177c:	40390000 	.word	0x40390000
                else if (alpha < M_PI/2 && beta >= M_PI/2){ //Third case: cable on the right side of the device
 8001780:	a365      	add	r3, pc, #404	; (adr r3, 8001918 <calculate_pos+0x4c8>)
 8001782:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001786:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800178a:	f7ff fa17 	bl	8000bbc <__aeabi_dcmplt>
 800178e:	4603      	mov	r3, r0
 8001790:	2b00      	cmp	r3, #0
 8001792:	d060      	beq.n	8001856 <calculate_pos+0x406>
 8001794:	a360      	add	r3, pc, #384	; (adr r3, 8001918 <calculate_pos+0x4c8>)
 8001796:	e9d3 2300 	ldrd	r2, r3, [r3]
 800179a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800179e:	f7ff fa21 	bl	8000be4 <__aeabi_dcmpge>
 80017a2:	4603      	mov	r3, r0
 80017a4:	2b00      	cmp	r3, #0
 80017a6:	d056      	beq.n	8001856 <calculate_pos+0x406>
                    X_Pos = (cos(M_PI-beta)*LPAD_FFT_distance + PAD_SPACING/2);
 80017a8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80017ac:	a158      	add	r1, pc, #352	; (adr r1, 8001910 <calculate_pos+0x4c0>)
 80017ae:	e9d1 0100 	ldrd	r0, r1, [r1]
 80017b2:	f7fe fdd9 	bl	8000368 <__aeabi_dsub>
 80017b6:	4602      	mov	r2, r0
 80017b8:	460b      	mov	r3, r1
 80017ba:	ec43 2b17 	vmov	d7, r2, r3
 80017be:	eeb0 0a47 	vmov.f32	s0, s14
 80017c2:	eef0 0a67 	vmov.f32	s1, s15
 80017c6:	f00c f9f7 	bl	800dbb8 <cos>
 80017ca:	ec55 4b10 	vmov	r4, r5, d0
 80017ce:	4b56      	ldr	r3, [pc, #344]	; (8001928 <calculate_pos+0x4d8>)
 80017d0:	681b      	ldr	r3, [r3, #0]
 80017d2:	4618      	mov	r0, r3
 80017d4:	f7fe ff16 	bl	8000604 <__aeabi_i2d>
 80017d8:	4602      	mov	r2, r0
 80017da:	460b      	mov	r3, r1
 80017dc:	4620      	mov	r0, r4
 80017de:	4629      	mov	r1, r5
 80017e0:	f7fe ff7a 	bl	80006d8 <__aeabi_dmul>
 80017e4:	4602      	mov	r2, r0
 80017e6:	460b      	mov	r3, r1
 80017e8:	4610      	mov	r0, r2
 80017ea:	4619      	mov	r1, r3
 80017ec:	f04f 0200 	mov.w	r2, #0
 80017f0:	4b4e      	ldr	r3, [pc, #312]	; (800192c <calculate_pos+0x4dc>)
 80017f2:	f7fe fdbb 	bl	800036c <__adddf3>
 80017f6:	4602      	mov	r2, r0
 80017f8:	460b      	mov	r3, r1
 80017fa:	4610      	mov	r0, r2
 80017fc:	4619      	mov	r1, r3
 80017fe:	f7ff fa1b 	bl	8000c38 <__aeabi_d2iz>
 8001802:	4603      	mov	r3, r0
 8001804:	4a4a      	ldr	r2, [pc, #296]	; (8001930 <calculate_pos+0x4e0>)
 8001806:	6013      	str	r3, [r2, #0]
                    Y_Pos =  sin(M_PI-beta)*LPAD_FFT_distance;
 8001808:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800180c:	a140      	add	r1, pc, #256	; (adr r1, 8001910 <calculate_pos+0x4c0>)
 800180e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001812:	f7fe fda9 	bl	8000368 <__aeabi_dsub>
 8001816:	4602      	mov	r2, r0
 8001818:	460b      	mov	r3, r1
 800181a:	ec43 2b17 	vmov	d7, r2, r3
 800181e:	eeb0 0a47 	vmov.f32	s0, s14
 8001822:	eef0 0a67 	vmov.f32	s1, s15
 8001826:	f00c fa1b 	bl	800dc60 <sin>
 800182a:	ec55 4b10 	vmov	r4, r5, d0
 800182e:	4b3e      	ldr	r3, [pc, #248]	; (8001928 <calculate_pos+0x4d8>)
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	4618      	mov	r0, r3
 8001834:	f7fe fee6 	bl	8000604 <__aeabi_i2d>
 8001838:	4602      	mov	r2, r0
 800183a:	460b      	mov	r3, r1
 800183c:	4620      	mov	r0, r4
 800183e:	4629      	mov	r1, r5
 8001840:	f7fe ff4a 	bl	80006d8 <__aeabi_dmul>
 8001844:	4602      	mov	r2, r0
 8001846:	460b      	mov	r3, r1
 8001848:	4610      	mov	r0, r2
 800184a:	4619      	mov	r1, r3
 800184c:	f7ff f9f4 	bl	8000c38 <__aeabi_d2iz>
 8001850:	4603      	mov	r3, r0
 8001852:	4a38      	ldr	r2, [pc, #224]	; (8001934 <calculate_pos+0x4e4>)
 8001854:	6013      	str	r3, [r2, #0]
                Gamma= atan2(Y_Pos,X_Pos );
 8001856:	4b37      	ldr	r3, [pc, #220]	; (8001934 <calculate_pos+0x4e4>)
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	4618      	mov	r0, r3
 800185c:	f7fe fed2 	bl	8000604 <__aeabi_i2d>
 8001860:	4604      	mov	r4, r0
 8001862:	460d      	mov	r5, r1
 8001864:	4b32      	ldr	r3, [pc, #200]	; (8001930 <calculate_pos+0x4e0>)
 8001866:	681b      	ldr	r3, [r3, #0]
 8001868:	4618      	mov	r0, r3
 800186a:	f7fe fecb 	bl	8000604 <__aeabi_i2d>
 800186e:	4602      	mov	r2, r0
 8001870:	460b      	mov	r3, r1
 8001872:	ec43 2b11 	vmov	d1, r2, r3
 8001876:	ec45 4b10 	vmov	d0, r4, r5
 800187a:	f00c fa7d 	bl	800dd78 <atan2>
 800187e:	eeb0 7a40 	vmov.f32	s14, s0
 8001882:	eef0 7a60 	vmov.f32	s15, s1
 8001886:	4b2c      	ldr	r3, [pc, #176]	; (8001938 <calculate_pos+0x4e8>)
 8001888:	ed83 7b00 	vstr	d7, [r3]
                if(alpha < beta){//Check if cable is on the right side of the zero point.
 800188c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8001890:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8001894:	f7ff f992 	bl	8000bbc <__aeabi_dcmplt>
 8001898:	4603      	mov	r3, r0
 800189a:	2b00      	cmp	r3, #0
 800189c:	d012      	beq.n	80018c4 <calculate_pos+0x474>
                    Gamma = M_PI/2-Gamma;/* Angle minus 90 degree, so that angel is zero degree
 800189e:	4b26      	ldr	r3, [pc, #152]	; (8001938 <calculate_pos+0x4e8>)
 80018a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018a4:	a11c      	add	r1, pc, #112	; (adr r1, 8001918 <calculate_pos+0x4c8>)
 80018a6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80018aa:	f7fe fd5d 	bl	8000368 <__aeabi_dsub>
 80018ae:	4602      	mov	r2, r0
 80018b0:	460b      	mov	r3, r1
 80018b2:	4921      	ldr	r1, [pc, #132]	; (8001938 <calculate_pos+0x4e8>)
 80018b4:	e9c1 2300 	strd	r2, r3, [r1]
                    X_Pos = -X_Pos;
 80018b8:	4b1d      	ldr	r3, [pc, #116]	; (8001930 <calculate_pos+0x4e0>)
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	425b      	negs	r3, r3
 80018be:	4a1c      	ldr	r2, [pc, #112]	; (8001930 <calculate_pos+0x4e0>)
 80018c0:	6013      	str	r3, [r2, #0]
 80018c2:	e00c      	b.n	80018de <calculate_pos+0x48e>
                     Gamma -= M_PI/2;       /* 90 degree minus angle, so that angel is zero degree
 80018c4:	4b1c      	ldr	r3, [pc, #112]	; (8001938 <calculate_pos+0x4e8>)
 80018c6:	e9d3 0100 	ldrd	r0, r1, [r3]
 80018ca:	a313      	add	r3, pc, #76	; (adr r3, 8001918 <calculate_pos+0x4c8>)
 80018cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018d0:	f7fe fd4a 	bl	8000368 <__aeabi_dsub>
 80018d4:	4602      	mov	r2, r0
 80018d6:	460b      	mov	r3, r1
 80018d8:	4917      	ldr	r1, [pc, #92]	; (8001938 <calculate_pos+0x4e8>)
 80018da:	e9c1 2300 	strd	r2, r3, [r1]
                Gamma=Gamma*RAD_TO_DEGREE;
 80018de:	4b16      	ldr	r3, [pc, #88]	; (8001938 <calculate_pos+0x4e8>)
 80018e0:	e9d3 0100 	ldrd	r0, r1, [r3]
 80018e4:	a30e      	add	r3, pc, #56	; (adr r3, 8001920 <calculate_pos+0x4d0>)
 80018e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018ea:	f7fe fef5 	bl	80006d8 <__aeabi_dmul>
 80018ee:	4602      	mov	r2, r0
 80018f0:	460b      	mov	r3, r1
 80018f2:	4911      	ldr	r1, [pc, #68]	; (8001938 <calculate_pos+0x4e8>)
 80018f4:	e9c1 2300 	strd	r2, r3, [r1]
                calculate_current();
 80018f8:	f000 f822 	bl	8001940 <calculate_current>
                check_display_bounderies();
 80018fc:	f000 f8c4 	bl	8001a88 <check_display_bounderies>
}
 8001900:	bf00      	nop
 8001902:	3728      	adds	r7, #40	; 0x28
 8001904:	46bd      	mov	sp, r7
 8001906:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800190a:	bf00      	nop
 800190c:	f3af 8000 	nop.w
 8001910:	54442d18 	.word	0x54442d18
 8001914:	400921fb 	.word	0x400921fb
 8001918:	54442d18 	.word	0x54442d18
 800191c:	3ff921fb 	.word	0x3ff921fb
 8001920:	1a6394b6 	.word	0x1a6394b6
 8001924:	404ca5dc 	.word	0x404ca5dc
 8001928:	20000b20 	.word	0x20000b20
 800192c:	40390000 	.word	0x40390000
 8001930:	20000b30 	.word	0x20000b30
 8001934:	20000b34 	.word	0x20000b34
 8001938:	20000b38 	.word	0x20000b38
 800193c:	00000000 	.word	0x00000000

08001940 <calculate_current>:
 *
 * with the magnetic field detected by the Hall sensor.
 *
 *****************************************************************************/
void calculate_current(void)
{
 8001940:	b5b0      	push	{r4, r5, r7, lr}
 8001942:	af00      	add	r7, sp, #0
     /* Checks that the distance between the cable and the Hall sensor is not too large*/
     if(Y_Pos > 15 && Y_Pos < 25  ){
 8001944:	4b46      	ldr	r3, [pc, #280]	; (8001a60 <calculate_current+0x120>)
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	2b0f      	cmp	r3, #15
 800194a:	dd7c      	ble.n	8001a46 <calculate_current+0x106>
 800194c:	4b44      	ldr	r3, [pc, #272]	; (8001a60 <calculate_current+0x120>)
 800194e:	681b      	ldr	r3, [r3, #0]
 8001950:	2b18      	cmp	r3, #24
 8001952:	dc78      	bgt.n	8001a46 <calculate_current+0x106>

        /*Checks that the angle between the cable and the Hall sensor is not too large.*/
        if(Gamma < 15 && Gamma > -15){
 8001954:	4b43      	ldr	r3, [pc, #268]	; (8001a64 <calculate_current+0x124>)
 8001956:	e9d3 0100 	ldrd	r0, r1, [r3]
 800195a:	f04f 0200 	mov.w	r2, #0
 800195e:	4b42      	ldr	r3, [pc, #264]	; (8001a68 <calculate_current+0x128>)
 8001960:	f7ff f92c 	bl	8000bbc <__aeabi_dcmplt>
 8001964:	4603      	mov	r3, r0
 8001966:	2b00      	cmp	r3, #0
 8001968:	d068      	beq.n	8001a3c <calculate_current+0xfc>
 800196a:	4b3e      	ldr	r3, [pc, #248]	; (8001a64 <calculate_current+0x124>)
 800196c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001970:	f04f 0200 	mov.w	r2, #0
 8001974:	4b3d      	ldr	r3, [pc, #244]	; (8001a6c <calculate_current+0x12c>)
 8001976:	f7ff f93f 	bl	8000bf8 <__aeabi_dcmpgt>
 800197a:	4603      	mov	r3, r0
 800197c:	2b00      	cmp	r3, #0
 800197e:	d05d      	beq.n	8001a3c <calculate_current+0xfc>

           /* Detection of the higher Hall sensor voltage and storage of the higher voltage in the current variable */
           if(RHALL_FFT_voltage > LHALL_FFT_voltage){
 8001980:	4b3b      	ldr	r3, [pc, #236]	; (8001a70 <calculate_current+0x130>)
 8001982:	681a      	ldr	r2, [r3, #0]
 8001984:	4b3b      	ldr	r3, [pc, #236]	; (8001a74 <calculate_current+0x134>)
 8001986:	681b      	ldr	r3, [r3, #0]
 8001988:	429a      	cmp	r2, r3
 800198a:	dd2b      	ble.n	80019e4 <calculate_current+0xa4>
               current = (RHALL_FFT_voltage*CURRENT_FACTOR*Y_Pos)/1000;
 800198c:	4b38      	ldr	r3, [pc, #224]	; (8001a70 <calculate_current+0x130>)
 800198e:	681b      	ldr	r3, [r3, #0]
 8001990:	4618      	mov	r0, r3
 8001992:	f7fe fe37 	bl	8000604 <__aeabi_i2d>
 8001996:	a330      	add	r3, pc, #192	; (adr r3, 8001a58 <calculate_current+0x118>)
 8001998:	e9d3 2300 	ldrd	r2, r3, [r3]
 800199c:	f7fe fe9c 	bl	80006d8 <__aeabi_dmul>
 80019a0:	4602      	mov	r2, r0
 80019a2:	460b      	mov	r3, r1
 80019a4:	4614      	mov	r4, r2
 80019a6:	461d      	mov	r5, r3
 80019a8:	4b2d      	ldr	r3, [pc, #180]	; (8001a60 <calculate_current+0x120>)
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	4618      	mov	r0, r3
 80019ae:	f7fe fe29 	bl	8000604 <__aeabi_i2d>
 80019b2:	4602      	mov	r2, r0
 80019b4:	460b      	mov	r3, r1
 80019b6:	4620      	mov	r0, r4
 80019b8:	4629      	mov	r1, r5
 80019ba:	f7fe fe8d 	bl	80006d8 <__aeabi_dmul>
 80019be:	4602      	mov	r2, r0
 80019c0:	460b      	mov	r3, r1
 80019c2:	4610      	mov	r0, r2
 80019c4:	4619      	mov	r1, r3
 80019c6:	f04f 0200 	mov.w	r2, #0
 80019ca:	4b2b      	ldr	r3, [pc, #172]	; (8001a78 <calculate_current+0x138>)
 80019cc:	f7fe ffae 	bl	800092c <__aeabi_ddiv>
 80019d0:	4602      	mov	r2, r0
 80019d2:	460b      	mov	r3, r1
 80019d4:	4610      	mov	r0, r2
 80019d6:	4619      	mov	r1, r3
 80019d8:	f7ff f976 	bl	8000cc8 <__aeabi_d2f>
 80019dc:	4603      	mov	r3, r0
 80019de:	4a27      	ldr	r2, [pc, #156]	; (8001a7c <calculate_current+0x13c>)
 80019e0:	6013      	str	r3, [r2, #0]
           if(RHALL_FFT_voltage > LHALL_FFT_voltage){
 80019e2:	e02f      	b.n	8001a44 <calculate_current+0x104>
            }else{
               current = (LHALL_FFT_voltage*CURRENT_FACTOR*Y_Pos)/1000;
 80019e4:	4b23      	ldr	r3, [pc, #140]	; (8001a74 <calculate_current+0x134>)
 80019e6:	681b      	ldr	r3, [r3, #0]
 80019e8:	4618      	mov	r0, r3
 80019ea:	f7fe fe0b 	bl	8000604 <__aeabi_i2d>
 80019ee:	a31a      	add	r3, pc, #104	; (adr r3, 8001a58 <calculate_current+0x118>)
 80019f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019f4:	f7fe fe70 	bl	80006d8 <__aeabi_dmul>
 80019f8:	4602      	mov	r2, r0
 80019fa:	460b      	mov	r3, r1
 80019fc:	4614      	mov	r4, r2
 80019fe:	461d      	mov	r5, r3
 8001a00:	4b17      	ldr	r3, [pc, #92]	; (8001a60 <calculate_current+0x120>)
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	4618      	mov	r0, r3
 8001a06:	f7fe fdfd 	bl	8000604 <__aeabi_i2d>
 8001a0a:	4602      	mov	r2, r0
 8001a0c:	460b      	mov	r3, r1
 8001a0e:	4620      	mov	r0, r4
 8001a10:	4629      	mov	r1, r5
 8001a12:	f7fe fe61 	bl	80006d8 <__aeabi_dmul>
 8001a16:	4602      	mov	r2, r0
 8001a18:	460b      	mov	r3, r1
 8001a1a:	4610      	mov	r0, r2
 8001a1c:	4619      	mov	r1, r3
 8001a1e:	f04f 0200 	mov.w	r2, #0
 8001a22:	4b15      	ldr	r3, [pc, #84]	; (8001a78 <calculate_current+0x138>)
 8001a24:	f7fe ff82 	bl	800092c <__aeabi_ddiv>
 8001a28:	4602      	mov	r2, r0
 8001a2a:	460b      	mov	r3, r1
 8001a2c:	4610      	mov	r0, r2
 8001a2e:	4619      	mov	r1, r3
 8001a30:	f7ff f94a 	bl	8000cc8 <__aeabi_d2f>
 8001a34:	4603      	mov	r3, r0
 8001a36:	4a11      	ldr	r2, [pc, #68]	; (8001a7c <calculate_current+0x13c>)
 8001a38:	6013      	str	r3, [r2, #0]
           if(RHALL_FFT_voltage > LHALL_FFT_voltage){
 8001a3a:	e003      	b.n	8001a44 <calculate_current+0x104>
            }

        }else{
             current = CURR_OUTOF_Angle_RANGE; // ERROR code
 8001a3c:	4b0f      	ldr	r3, [pc, #60]	; (8001a7c <calculate_current+0x13c>)
 8001a3e:	4a10      	ldr	r2, [pc, #64]	; (8001a80 <calculate_current+0x140>)
 8001a40:	601a      	str	r2, [r3, #0]
        if(Gamma < 15 && Gamma > -15){
 8001a42:	e004      	b.n	8001a4e <calculate_current+0x10e>
 8001a44:	e003      	b.n	8001a4e <calculate_current+0x10e>
        }
     }else{
          current = CURR_OUTOF_Y_RANGE;// ERROR code
 8001a46:	4b0d      	ldr	r3, [pc, #52]	; (8001a7c <calculate_current+0x13c>)
 8001a48:	4a0e      	ldr	r2, [pc, #56]	; (8001a84 <calculate_current+0x144>)
 8001a4a:	601a      	str	r2, [r3, #0]
     }
}
 8001a4c:	bf00      	nop
 8001a4e:	bf00      	nop
 8001a50:	bdb0      	pop	{r4, r5, r7, pc}
 8001a52:	bf00      	nop
 8001a54:	f3af 8000 	nop.w
 8001a58:	872b020c 	.word	0x872b020c
 8001a5c:	3fd6d916 	.word	0x3fd6d916
 8001a60:	20000b34 	.word	0x20000b34
 8001a64:	20000b38 	.word	0x20000b38
 8001a68:	402e0000 	.word	0x402e0000
 8001a6c:	c02e0000 	.word	0xc02e0000
 8001a70:	20000b2c 	.word	0x20000b2c
 8001a74:	20000b28 	.word	0x20000b28
 8001a78:	408f4000 	.word	0x408f4000
 8001a7c:	20000b40 	.word	0x20000b40
 8001a80:	458e5800 	.word	0x458e5800
 8001a84:	458ae000 	.word	0x458ae000

08001a88 <check_display_bounderies>:
 *
 * If they are too large an error code will be saved in the X_Pos or the Y_Pos.
 *
 *****************************************************************************/
void check_display_bounderies(void)
{
 8001a88:	b5b0      	push	{r4, r5, r7, lr}
 8001a8a:	af00      	add	r7, sp, #0
      if(fabs(X_Pos) > MAX_X_DISTANCE){
 8001a8c:	4b10      	ldr	r3, [pc, #64]	; (8001ad0 <check_display_bounderies+0x48>)
 8001a8e:	681b      	ldr	r3, [r3, #0]
 8001a90:	4618      	mov	r0, r3
 8001a92:	f7fe fdb7 	bl	8000604 <__aeabi_i2d>
 8001a96:	4602      	mov	r2, r0
 8001a98:	460b      	mov	r3, r1
 8001a9a:	4614      	mov	r4, r2
 8001a9c:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 8001aa0:	f04f 0200 	mov.w	r2, #0
 8001aa4:	4b0b      	ldr	r3, [pc, #44]	; (8001ad4 <check_display_bounderies+0x4c>)
 8001aa6:	4620      	mov	r0, r4
 8001aa8:	4629      	mov	r1, r5
 8001aaa:	f7ff f8a5 	bl	8000bf8 <__aeabi_dcmpgt>
 8001aae:	4603      	mov	r3, r0
 8001ab0:	2b00      	cmp	r3, #0
 8001ab2:	d003      	beq.n	8001abc <check_display_bounderies+0x34>
         X_Pos = CALC_OUTOF_X_RANGE;// ERROR code
 8001ab4:	4b06      	ldr	r3, [pc, #24]	; (8001ad0 <check_display_bounderies+0x48>)
 8001ab6:	f640 121d 	movw	r2, #2333	; 0x91d
 8001aba:	601a      	str	r2, [r3, #0]
     }

     if(Y_Pos > MAX_Y_DISTANCE){
 8001abc:	4b06      	ldr	r3, [pc, #24]	; (8001ad8 <check_display_bounderies+0x50>)
 8001abe:	681b      	ldr	r3, [r3, #0]
 8001ac0:	2bc8      	cmp	r3, #200	; 0xc8
 8001ac2:	dd03      	ble.n	8001acc <check_display_bounderies+0x44>
          Y_Pos = CALC_OUTOF_Y_RANGE;// ERROR code
 8001ac4:	4b04      	ldr	r3, [pc, #16]	; (8001ad8 <check_display_bounderies+0x50>)
 8001ac6:	f640 02ae 	movw	r2, #2222	; 0x8ae
 8001aca:	601a      	str	r2, [r3, #0]
     }
}
 8001acc:	bf00      	nop
 8001ace:	bdb0      	pop	{r4, r5, r7, pc}
 8001ad0:	20000b30 	.word	0x20000b30
 8001ad4:	40590000 	.word	0x40590000
 8001ad8:	20000b34 	.word	0x20000b34
 8001adc:	00000000 	.word	0x00000000

08001ae0 <calculate_FFT>:
 * {LPAD_FFT_avg_array[],RPAD_FFT_avg_array[],LHALL_FFT_avg_array[],RHALL_FFT_avg_array[]}
 * at the position of the avg_counter.
 *
 *****************************************************************************/
void calculate_FFT (void)
{
 8001ae0:	b5b0      	push	{r4, r5, r7, lr}
 8001ae2:	b082      	sub	sp, #8
 8001ae4:	af00      	add	r7, sp, #0

     uint8_t RFFT =0;  // Flag which declares that an real fast Fourier transformation is required.
 8001ae6:	2300      	movs	r3, #0
 8001ae8:	71fb      	strb	r3, [r7, #7]
     /* Writes real and imaginary part of different frequencies (from 0 to 320 Hz with delta-frequency) in LPAD_FFT.*/
     arm_rfft_fast_f32(&fft_handler,LPAD_samples, LPAD_FFT,RFFT);
 8001aea:	79fb      	ldrb	r3, [r7, #7]
 8001aec:	4a70      	ldr	r2, [pc, #448]	; (8001cb0 <calculate_FFT+0x1d0>)
 8001aee:	4971      	ldr	r1, [pc, #452]	; (8001cb4 <calculate_FFT+0x1d4>)
 8001af0:	4871      	ldr	r0, [pc, #452]	; (8001cb8 <calculate_FFT+0x1d8>)
 8001af2:	f008 f9df 	bl	8009eb4 <arm_rfft_fast_f32>
     LPAD_FFT_avg_array[avg_counter]=(uint32_t)(hypot(LPAD_FFT[10],LPAD_FFT[11])*sqrt(2)/ADC_NUMS);  /* 50 Hz real part is at position 10 and
 8001af6:	4b6e      	ldr	r3, [pc, #440]	; (8001cb0 <calculate_FFT+0x1d0>)
 8001af8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001afa:	4618      	mov	r0, r3
 8001afc:	f7fe fd94 	bl	8000628 <__aeabi_f2d>
 8001b00:	4604      	mov	r4, r0
 8001b02:	460d      	mov	r5, r1
 8001b04:	4b6a      	ldr	r3, [pc, #424]	; (8001cb0 <calculate_FFT+0x1d0>)
 8001b06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001b08:	4618      	mov	r0, r3
 8001b0a:	f7fe fd8d 	bl	8000628 <__aeabi_f2d>
 8001b0e:	4602      	mov	r2, r0
 8001b10:	460b      	mov	r3, r1
 8001b12:	ec43 2b11 	vmov	d1, r2, r3
 8001b16:	ec45 4b10 	vmov	d0, r4, r5
 8001b1a:	f00c f931 	bl	800dd80 <hypot>
 8001b1e:	ec51 0b10 	vmov	r0, r1, d0
 8001b22:	a361      	add	r3, pc, #388	; (adr r3, 8001ca8 <calculate_FFT+0x1c8>)
 8001b24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b28:	f7fe fdd6 	bl	80006d8 <__aeabi_dmul>
 8001b2c:	4602      	mov	r2, r0
 8001b2e:	460b      	mov	r3, r1
 8001b30:	4610      	mov	r0, r2
 8001b32:	4619      	mov	r1, r3
 8001b34:	f04f 0200 	mov.w	r2, #0
 8001b38:	4b60      	ldr	r3, [pc, #384]	; (8001cbc <calculate_FFT+0x1dc>)
 8001b3a:	f7fe fef7 	bl	800092c <__aeabi_ddiv>
 8001b3e:	4602      	mov	r2, r0
 8001b40:	460b      	mov	r3, r1
 8001b42:	495f      	ldr	r1, [pc, #380]	; (8001cc0 <calculate_FFT+0x1e0>)
 8001b44:	680c      	ldr	r4, [r1, #0]
 8001b46:	4610      	mov	r0, r2
 8001b48:	4619      	mov	r1, r3
 8001b4a:	f7ff f89d 	bl	8000c88 <__aeabi_d2uiz>
 8001b4e:	4603      	mov	r3, r0
 8001b50:	4a5c      	ldr	r2, [pc, #368]	; (8001cc4 <calculate_FFT+0x1e4>)
 8001b52:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
                                                                                                      imaginary part is at position 11 of the LPAD_FFT[] array.*/
     arm_rfft_fast_f32(&fft_handler,RPAD_samples,RPAD_FFT,RFFT);
 8001b56:	79fb      	ldrb	r3, [r7, #7]
 8001b58:	4a5b      	ldr	r2, [pc, #364]	; (8001cc8 <calculate_FFT+0x1e8>)
 8001b5a:	495c      	ldr	r1, [pc, #368]	; (8001ccc <calculate_FFT+0x1ec>)
 8001b5c:	4856      	ldr	r0, [pc, #344]	; (8001cb8 <calculate_FFT+0x1d8>)
 8001b5e:	f008 f9a9 	bl	8009eb4 <arm_rfft_fast_f32>
     RPAD_FFT_avg_array[avg_counter]= (uint32_t)(hypot(RPAD_FFT[10],RPAD_FFT[11])*sqrt(2)/ADC_NUMS);
 8001b62:	4b59      	ldr	r3, [pc, #356]	; (8001cc8 <calculate_FFT+0x1e8>)
 8001b64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001b66:	4618      	mov	r0, r3
 8001b68:	f7fe fd5e 	bl	8000628 <__aeabi_f2d>
 8001b6c:	4604      	mov	r4, r0
 8001b6e:	460d      	mov	r5, r1
 8001b70:	4b55      	ldr	r3, [pc, #340]	; (8001cc8 <calculate_FFT+0x1e8>)
 8001b72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001b74:	4618      	mov	r0, r3
 8001b76:	f7fe fd57 	bl	8000628 <__aeabi_f2d>
 8001b7a:	4602      	mov	r2, r0
 8001b7c:	460b      	mov	r3, r1
 8001b7e:	ec43 2b11 	vmov	d1, r2, r3
 8001b82:	ec45 4b10 	vmov	d0, r4, r5
 8001b86:	f00c f8fb 	bl	800dd80 <hypot>
 8001b8a:	ec51 0b10 	vmov	r0, r1, d0
 8001b8e:	a346      	add	r3, pc, #280	; (adr r3, 8001ca8 <calculate_FFT+0x1c8>)
 8001b90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b94:	f7fe fda0 	bl	80006d8 <__aeabi_dmul>
 8001b98:	4602      	mov	r2, r0
 8001b9a:	460b      	mov	r3, r1
 8001b9c:	4610      	mov	r0, r2
 8001b9e:	4619      	mov	r1, r3
 8001ba0:	f04f 0200 	mov.w	r2, #0
 8001ba4:	4b45      	ldr	r3, [pc, #276]	; (8001cbc <calculate_FFT+0x1dc>)
 8001ba6:	f7fe fec1 	bl	800092c <__aeabi_ddiv>
 8001baa:	4602      	mov	r2, r0
 8001bac:	460b      	mov	r3, r1
 8001bae:	4944      	ldr	r1, [pc, #272]	; (8001cc0 <calculate_FFT+0x1e0>)
 8001bb0:	680c      	ldr	r4, [r1, #0]
 8001bb2:	4610      	mov	r0, r2
 8001bb4:	4619      	mov	r1, r3
 8001bb6:	f7ff f867 	bl	8000c88 <__aeabi_d2uiz>
 8001bba:	4603      	mov	r3, r0
 8001bbc:	4a44      	ldr	r2, [pc, #272]	; (8001cd0 <calculate_FFT+0x1f0>)
 8001bbe:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
     arm_rfft_fast_f32(&fft_handler,LHALL_samples, LHALL_FFT,RFFT);
 8001bc2:	79fb      	ldrb	r3, [r7, #7]
 8001bc4:	4a43      	ldr	r2, [pc, #268]	; (8001cd4 <calculate_FFT+0x1f4>)
 8001bc6:	4944      	ldr	r1, [pc, #272]	; (8001cd8 <calculate_FFT+0x1f8>)
 8001bc8:	483b      	ldr	r0, [pc, #236]	; (8001cb8 <calculate_FFT+0x1d8>)
 8001bca:	f008 f973 	bl	8009eb4 <arm_rfft_fast_f32>
     LHALL_FFT_avg_array[avg_counter]=(uint32_t)(hypot(LHALL_FFT[10],LHALL_FFT[11])*sqrt(2)/ADC_NUMS);
 8001bce:	4b41      	ldr	r3, [pc, #260]	; (8001cd4 <calculate_FFT+0x1f4>)
 8001bd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001bd2:	4618      	mov	r0, r3
 8001bd4:	f7fe fd28 	bl	8000628 <__aeabi_f2d>
 8001bd8:	4604      	mov	r4, r0
 8001bda:	460d      	mov	r5, r1
 8001bdc:	4b3d      	ldr	r3, [pc, #244]	; (8001cd4 <calculate_FFT+0x1f4>)
 8001bde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001be0:	4618      	mov	r0, r3
 8001be2:	f7fe fd21 	bl	8000628 <__aeabi_f2d>
 8001be6:	4602      	mov	r2, r0
 8001be8:	460b      	mov	r3, r1
 8001bea:	ec43 2b11 	vmov	d1, r2, r3
 8001bee:	ec45 4b10 	vmov	d0, r4, r5
 8001bf2:	f00c f8c5 	bl	800dd80 <hypot>
 8001bf6:	ec51 0b10 	vmov	r0, r1, d0
 8001bfa:	a32b      	add	r3, pc, #172	; (adr r3, 8001ca8 <calculate_FFT+0x1c8>)
 8001bfc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c00:	f7fe fd6a 	bl	80006d8 <__aeabi_dmul>
 8001c04:	4602      	mov	r2, r0
 8001c06:	460b      	mov	r3, r1
 8001c08:	4610      	mov	r0, r2
 8001c0a:	4619      	mov	r1, r3
 8001c0c:	f04f 0200 	mov.w	r2, #0
 8001c10:	4b2a      	ldr	r3, [pc, #168]	; (8001cbc <calculate_FFT+0x1dc>)
 8001c12:	f7fe fe8b 	bl	800092c <__aeabi_ddiv>
 8001c16:	4602      	mov	r2, r0
 8001c18:	460b      	mov	r3, r1
 8001c1a:	4929      	ldr	r1, [pc, #164]	; (8001cc0 <calculate_FFT+0x1e0>)
 8001c1c:	680c      	ldr	r4, [r1, #0]
 8001c1e:	4610      	mov	r0, r2
 8001c20:	4619      	mov	r1, r3
 8001c22:	f7ff f831 	bl	8000c88 <__aeabi_d2uiz>
 8001c26:	4603      	mov	r3, r0
 8001c28:	4a2c      	ldr	r2, [pc, #176]	; (8001cdc <calculate_FFT+0x1fc>)
 8001c2a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]

     arm_rfft_fast_f32(&fft_handler,RHALL_samples, RHALL_FFT,RFFT);
 8001c2e:	79fb      	ldrb	r3, [r7, #7]
 8001c30:	4a2b      	ldr	r2, [pc, #172]	; (8001ce0 <calculate_FFT+0x200>)
 8001c32:	492c      	ldr	r1, [pc, #176]	; (8001ce4 <calculate_FFT+0x204>)
 8001c34:	4820      	ldr	r0, [pc, #128]	; (8001cb8 <calculate_FFT+0x1d8>)
 8001c36:	f008 f93d 	bl	8009eb4 <arm_rfft_fast_f32>
     RHALL_FFT_avg_array[avg_counter]=(uint32_t)(hypot(RHALL_FFT[10],RHALL_FFT[11])*sqrt(2)/ADC_NUMS);
 8001c3a:	4b29      	ldr	r3, [pc, #164]	; (8001ce0 <calculate_FFT+0x200>)
 8001c3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001c3e:	4618      	mov	r0, r3
 8001c40:	f7fe fcf2 	bl	8000628 <__aeabi_f2d>
 8001c44:	4604      	mov	r4, r0
 8001c46:	460d      	mov	r5, r1
 8001c48:	4b25      	ldr	r3, [pc, #148]	; (8001ce0 <calculate_FFT+0x200>)
 8001c4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001c4c:	4618      	mov	r0, r3
 8001c4e:	f7fe fceb 	bl	8000628 <__aeabi_f2d>
 8001c52:	4602      	mov	r2, r0
 8001c54:	460b      	mov	r3, r1
 8001c56:	ec43 2b11 	vmov	d1, r2, r3
 8001c5a:	ec45 4b10 	vmov	d0, r4, r5
 8001c5e:	f00c f88f 	bl	800dd80 <hypot>
 8001c62:	ec51 0b10 	vmov	r0, r1, d0
 8001c66:	a310      	add	r3, pc, #64	; (adr r3, 8001ca8 <calculate_FFT+0x1c8>)
 8001c68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c6c:	f7fe fd34 	bl	80006d8 <__aeabi_dmul>
 8001c70:	4602      	mov	r2, r0
 8001c72:	460b      	mov	r3, r1
 8001c74:	4610      	mov	r0, r2
 8001c76:	4619      	mov	r1, r3
 8001c78:	f04f 0200 	mov.w	r2, #0
 8001c7c:	4b0f      	ldr	r3, [pc, #60]	; (8001cbc <calculate_FFT+0x1dc>)
 8001c7e:	f7fe fe55 	bl	800092c <__aeabi_ddiv>
 8001c82:	4602      	mov	r2, r0
 8001c84:	460b      	mov	r3, r1
 8001c86:	490e      	ldr	r1, [pc, #56]	; (8001cc0 <calculate_FFT+0x1e0>)
 8001c88:	680c      	ldr	r4, [r1, #0]
 8001c8a:	4610      	mov	r0, r2
 8001c8c:	4619      	mov	r1, r3
 8001c8e:	f7fe fffb 	bl	8000c88 <__aeabi_d2uiz>
 8001c92:	4603      	mov	r3, r0
 8001c94:	4a14      	ldr	r2, [pc, #80]	; (8001ce8 <calculate_FFT+0x208>)
 8001c96:	f842 3024 	str.w	r3, [r2, r4, lsl #2]

    averaging_FFT_semples();
 8001c9a:	f000 f827 	bl	8001cec <averaging_FFT_semples>
}
 8001c9e:	bf00      	nop
 8001ca0:	3708      	adds	r7, #8
 8001ca2:	46bd      	mov	sp, r7
 8001ca4:	bdb0      	pop	{r4, r5, r7, pc}
 8001ca6:	bf00      	nop
 8001ca8:	667f3bcd 	.word	0x667f3bcd
 8001cac:	3ff6a09e 	.word	0x3ff6a09e
 8001cb0:	200006f0 	.word	0x200006f0
 8001cb4:	200002f0 	.word	0x200002f0
 8001cb8:	20000b4c 	.word	0x20000b4c
 8001cbc:	40500000 	.word	0x40500000
 8001cc0:	20000b44 	.word	0x20000b44
 8001cc4:	20000af0 	.word	0x20000af0
 8001cc8:	200007f0 	.word	0x200007f0
 8001ccc:	200003f0 	.word	0x200003f0
 8001cd0:	20000afc 	.word	0x20000afc
 8001cd4:	200008f0 	.word	0x200008f0
 8001cd8:	200004f0 	.word	0x200004f0
 8001cdc:	20000b08 	.word	0x20000b08
 8001ce0:	200009f0 	.word	0x200009f0
 8001ce4:	200005f0 	.word	0x200005f0
 8001ce8:	20000b14 	.word	0x20000b14

08001cec <averaging_FFT_semples>:
 *
 * The averages will be saved in the variables {LPAD_FFT_distance, RPAD_FFT_distance, LHALL_FFT_voltage, RHALL_FFT_voltage}.
 *
 *****************************************************************************/
void averaging_FFT_semples(void)
{
 8001cec:	b580      	push	{r7, lr}
 8001cee:	b082      	sub	sp, #8
 8001cf0:	af00      	add	r7, sp, #0

      if(avg_counter == num_of_samples-1){
 8001cf2:	4b3a      	ldr	r3, [pc, #232]	; (8001ddc <averaging_FFT_semples+0xf0>)
 8001cf4:	681b      	ldr	r3, [r3, #0]
 8001cf6:	1e5a      	subs	r2, r3, #1
 8001cf8:	4b39      	ldr	r3, [pc, #228]	; (8001de0 <averaging_FFT_semples+0xf4>)
 8001cfa:	681b      	ldr	r3, [r3, #0]
 8001cfc:	429a      	cmp	r2, r3
 8001cfe:	d164      	bne.n	8001dca <averaging_FFT_semples+0xde>

          LPAD_FFT_distance=0;
 8001d00:	4b38      	ldr	r3, [pc, #224]	; (8001de4 <averaging_FFT_semples+0xf8>)
 8001d02:	2200      	movs	r2, #0
 8001d04:	601a      	str	r2, [r3, #0]
          RPAD_FFT_distance=0;
 8001d06:	4b38      	ldr	r3, [pc, #224]	; (8001de8 <averaging_FFT_semples+0xfc>)
 8001d08:	2200      	movs	r2, #0
 8001d0a:	601a      	str	r2, [r3, #0]
          LHALL_FFT_voltage =0;
 8001d0c:	4b37      	ldr	r3, [pc, #220]	; (8001dec <averaging_FFT_semples+0x100>)
 8001d0e:	2200      	movs	r2, #0
 8001d10:	601a      	str	r2, [r3, #0]
          RHALL_FFT_voltage =0;
 8001d12:	4b37      	ldr	r3, [pc, #220]	; (8001df0 <averaging_FFT_semples+0x104>)
 8001d14:	2200      	movs	r2, #0
 8001d16:	601a      	str	r2, [r3, #0]

          for(int i =0; i < num_of_samples; i++){                 //If the desired number of samples is achieved, they get summed up.
 8001d18:	2300      	movs	r3, #0
 8001d1a:	607b      	str	r3, [r7, #4]
 8001d1c:	e02a      	b.n	8001d74 <averaging_FFT_semples+0x88>

               LPAD_FFT_distance += LPAD_FFT_avg_array[i];
 8001d1e:	4a35      	ldr	r2, [pc, #212]	; (8001df4 <averaging_FFT_semples+0x108>)
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d26:	4a2f      	ldr	r2, [pc, #188]	; (8001de4 <averaging_FFT_semples+0xf8>)
 8001d28:	6812      	ldr	r2, [r2, #0]
 8001d2a:	4413      	add	r3, r2
 8001d2c:	461a      	mov	r2, r3
 8001d2e:	4b2d      	ldr	r3, [pc, #180]	; (8001de4 <averaging_FFT_semples+0xf8>)
 8001d30:	601a      	str	r2, [r3, #0]
               RPAD_FFT_distance += RPAD_FFT_avg_array[i];
 8001d32:	4a31      	ldr	r2, [pc, #196]	; (8001df8 <averaging_FFT_semples+0x10c>)
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d3a:	4a2b      	ldr	r2, [pc, #172]	; (8001de8 <averaging_FFT_semples+0xfc>)
 8001d3c:	6812      	ldr	r2, [r2, #0]
 8001d3e:	4413      	add	r3, r2
 8001d40:	461a      	mov	r2, r3
 8001d42:	4b29      	ldr	r3, [pc, #164]	; (8001de8 <averaging_FFT_semples+0xfc>)
 8001d44:	601a      	str	r2, [r3, #0]
               LHALL_FFT_voltage += LHALL_FFT_avg_array[i];
 8001d46:	4a2d      	ldr	r2, [pc, #180]	; (8001dfc <averaging_FFT_semples+0x110>)
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d4e:	4a27      	ldr	r2, [pc, #156]	; (8001dec <averaging_FFT_semples+0x100>)
 8001d50:	6812      	ldr	r2, [r2, #0]
 8001d52:	4413      	add	r3, r2
 8001d54:	461a      	mov	r2, r3
 8001d56:	4b25      	ldr	r3, [pc, #148]	; (8001dec <averaging_FFT_semples+0x100>)
 8001d58:	601a      	str	r2, [r3, #0]
               RHALL_FFT_voltage += RHALL_FFT_avg_array[i];
 8001d5a:	4a29      	ldr	r2, [pc, #164]	; (8001e00 <averaging_FFT_semples+0x114>)
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d62:	4a23      	ldr	r2, [pc, #140]	; (8001df0 <averaging_FFT_semples+0x104>)
 8001d64:	6812      	ldr	r2, [r2, #0]
 8001d66:	4413      	add	r3, r2
 8001d68:	461a      	mov	r2, r3
 8001d6a:	4b21      	ldr	r3, [pc, #132]	; (8001df0 <averaging_FFT_semples+0x104>)
 8001d6c:	601a      	str	r2, [r3, #0]
          for(int i =0; i < num_of_samples; i++){                 //If the desired number of samples is achieved, they get summed up.
 8001d6e:	687b      	ldr	r3, [r7, #4]
 8001d70:	3301      	adds	r3, #1
 8001d72:	607b      	str	r3, [r7, #4]
 8001d74:	4b19      	ldr	r3, [pc, #100]	; (8001ddc <averaging_FFT_semples+0xf0>)
 8001d76:	681b      	ldr	r3, [r3, #0]
 8001d78:	687a      	ldr	r2, [r7, #4]
 8001d7a:	429a      	cmp	r2, r3
 8001d7c:	dbcf      	blt.n	8001d1e <averaging_FFT_semples+0x32>
          }

          LPAD_FFT_distance = LPAD_FFT_distance/(num_of_samples); //The summed up samples get divided by the number of samples to get the average.
 8001d7e:	4b19      	ldr	r3, [pc, #100]	; (8001de4 <averaging_FFT_semples+0xf8>)
 8001d80:	681a      	ldr	r2, [r3, #0]
 8001d82:	4b16      	ldr	r3, [pc, #88]	; (8001ddc <averaging_FFT_semples+0xf0>)
 8001d84:	681b      	ldr	r3, [r3, #0]
 8001d86:	fb92 f3f3 	sdiv	r3, r2, r3
 8001d8a:	4a16      	ldr	r2, [pc, #88]	; (8001de4 <averaging_FFT_semples+0xf8>)
 8001d8c:	6013      	str	r3, [r2, #0]
          RPAD_FFT_distance = RPAD_FFT_distance/(num_of_samples);
 8001d8e:	4b16      	ldr	r3, [pc, #88]	; (8001de8 <averaging_FFT_semples+0xfc>)
 8001d90:	681a      	ldr	r2, [r3, #0]
 8001d92:	4b12      	ldr	r3, [pc, #72]	; (8001ddc <averaging_FFT_semples+0xf0>)
 8001d94:	681b      	ldr	r3, [r3, #0]
 8001d96:	fb92 f3f3 	sdiv	r3, r2, r3
 8001d9a:	4a13      	ldr	r2, [pc, #76]	; (8001de8 <averaging_FFT_semples+0xfc>)
 8001d9c:	6013      	str	r3, [r2, #0]
          LHALL_FFT_voltage = LHALL_FFT_voltage/(num_of_samples);
 8001d9e:	4b13      	ldr	r3, [pc, #76]	; (8001dec <averaging_FFT_semples+0x100>)
 8001da0:	681a      	ldr	r2, [r3, #0]
 8001da2:	4b0e      	ldr	r3, [pc, #56]	; (8001ddc <averaging_FFT_semples+0xf0>)
 8001da4:	681b      	ldr	r3, [r3, #0]
 8001da6:	fb92 f3f3 	sdiv	r3, r2, r3
 8001daa:	4a10      	ldr	r2, [pc, #64]	; (8001dec <averaging_FFT_semples+0x100>)
 8001dac:	6013      	str	r3, [r2, #0]
          RHALL_FFT_voltage = RHALL_FFT_voltage/(num_of_samples);
 8001dae:	4b10      	ldr	r3, [pc, #64]	; (8001df0 <averaging_FFT_semples+0x104>)
 8001db0:	681a      	ldr	r2, [r3, #0]
 8001db2:	4b0a      	ldr	r3, [pc, #40]	; (8001ddc <averaging_FFT_semples+0xf0>)
 8001db4:	681b      	ldr	r3, [r3, #0]
 8001db6:	fb92 f3f3 	sdiv	r3, r2, r3
 8001dba:	4a0d      	ldr	r2, [pc, #52]	; (8001df0 <averaging_FFT_semples+0x104>)
 8001dbc:	6013      	str	r3, [r2, #0]
          avg_counter = 0;
 8001dbe:	4b08      	ldr	r3, [pc, #32]	; (8001de0 <averaging_FFT_semples+0xf4>)
 8001dc0:	2200      	movs	r2, #0
 8001dc2:	601a      	str	r2, [r3, #0]
          distance_LUT();
 8001dc4:	f000 f81e 	bl	8001e04 <distance_LUT>
     }else{
          avg_counter++;
     }

}
 8001dc8:	e004      	b.n	8001dd4 <averaging_FFT_semples+0xe8>
          avg_counter++;
 8001dca:	4b05      	ldr	r3, [pc, #20]	; (8001de0 <averaging_FFT_semples+0xf4>)
 8001dcc:	681b      	ldr	r3, [r3, #0]
 8001dce:	3301      	adds	r3, #1
 8001dd0:	4a03      	ldr	r2, [pc, #12]	; (8001de0 <averaging_FFT_semples+0xf4>)
 8001dd2:	6013      	str	r3, [r2, #0]
}
 8001dd4:	bf00      	nop
 8001dd6:	3708      	adds	r7, #8
 8001dd8:	46bd      	mov	sp, r7
 8001dda:	bd80      	pop	{r7, pc}
 8001ddc:	20000b48 	.word	0x20000b48
 8001de0:	20000b44 	.word	0x20000b44
 8001de4:	20000b20 	.word	0x20000b20
 8001de8:	20000b24 	.word	0x20000b24
 8001dec:	20000b28 	.word	0x20000b28
 8001df0:	20000b2c 	.word	0x20000b2c
 8001df4:	20000af0 	.word	0x20000af0
 8001df8:	20000afc 	.word	0x20000afc
 8001dfc:	20000b08 	.word	0x20000b08
 8001e00:	20000b14 	.word	0x20000b14

08001e04 <distance_LUT>:
/** ***************************************************************************
 * @brief Determines the distance of the cable to the pads from a look-up table.
 *
 *****************************************************************************/
void distance_LUT(void)
{
 8001e04:	b480      	push	{r7}
 8001e06:	b085      	sub	sp, #20
 8001e08:	af00      	add	r7, sp, #0
     const int LPAD_Max = 1458;
 8001e0a:	f240 53b2 	movw	r3, #1458	; 0x5b2
 8001e0e:	60fb      	str	r3, [r7, #12]
     const int LPAD_Min = 200;
 8001e10:	23c8      	movs	r3, #200	; 0xc8
 8001e12:	60bb      	str	r3, [r7, #8]
     const int RPAD_Max = 1466;
 8001e14:	f240 53ba 	movw	r3, #1466	; 0x5ba
 8001e18:	607b      	str	r3, [r7, #4]
     const int RPAD_Min = 200;
 8001e1a:	23c8      	movs	r3, #200	; 0xc8
 8001e1c:	603b      	str	r3, [r7, #0]

     if(LPAD_FFT_distance > LPAD_Min && LPAD_FFT_distance < LPAD_Max){
 8001e1e:	4b24      	ldr	r3, [pc, #144]	; (8001eb0 <distance_LUT+0xac>)
 8001e20:	681b      	ldr	r3, [r3, #0]
 8001e22:	68ba      	ldr	r2, [r7, #8]
 8001e24:	429a      	cmp	r2, r3
 8001e26:	da0e      	bge.n	8001e46 <distance_LUT+0x42>
 8001e28:	4b21      	ldr	r3, [pc, #132]	; (8001eb0 <distance_LUT+0xac>)
 8001e2a:	681b      	ldr	r3, [r3, #0]
 8001e2c:	68fa      	ldr	r2, [r7, #12]
 8001e2e:	429a      	cmp	r2, r3
 8001e30:	dd09      	ble.n	8001e46 <distance_LUT+0x42>

          LPAD_FFT_distance = LPAD_LUT[LPAD_FFT_distance-LPAD_Min];
 8001e32:	4b1f      	ldr	r3, [pc, #124]	; (8001eb0 <distance_LUT+0xac>)
 8001e34:	681a      	ldr	r2, [r3, #0]
 8001e36:	68bb      	ldr	r3, [r7, #8]
 8001e38:	1ad3      	subs	r3, r2, r3
 8001e3a:	4a1e      	ldr	r2, [pc, #120]	; (8001eb4 <distance_LUT+0xb0>)
 8001e3c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e40:	4a1b      	ldr	r2, [pc, #108]	; (8001eb0 <distance_LUT+0xac>)
 8001e42:	6013      	str	r3, [r2, #0]
 8001e44:	e00c      	b.n	8001e60 <distance_LUT+0x5c>

     }else if(LPAD_FFT_distance > LPAD_Max){
 8001e46:	4b1a      	ldr	r3, [pc, #104]	; (8001eb0 <distance_LUT+0xac>)
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	68fa      	ldr	r2, [r7, #12]
 8001e4c:	429a      	cmp	r2, r3
 8001e4e:	da03      	bge.n	8001e58 <distance_LUT+0x54>

          LPAD_FFT_distance = 0;
 8001e50:	4b17      	ldr	r3, [pc, #92]	; (8001eb0 <distance_LUT+0xac>)
 8001e52:	2200      	movs	r2, #0
 8001e54:	601a      	str	r2, [r3, #0]
 8001e56:	e003      	b.n	8001e60 <distance_LUT+0x5c>

     }else{
          LPAD_FFT_distance = FFT_NO_SIGNAL; // ERROR code
 8001e58:	4b15      	ldr	r3, [pc, #84]	; (8001eb0 <distance_LUT+0xac>)
 8001e5a:	f240 4257 	movw	r2, #1111	; 0x457
 8001e5e:	601a      	str	r2, [r3, #0]
     }


     if(RPAD_FFT_distance > RPAD_Min && RPAD_FFT_distance < RPAD_Max){
 8001e60:	4b15      	ldr	r3, [pc, #84]	; (8001eb8 <distance_LUT+0xb4>)
 8001e62:	681b      	ldr	r3, [r3, #0]
 8001e64:	683a      	ldr	r2, [r7, #0]
 8001e66:	429a      	cmp	r2, r3
 8001e68:	da0e      	bge.n	8001e88 <distance_LUT+0x84>
 8001e6a:	4b13      	ldr	r3, [pc, #76]	; (8001eb8 <distance_LUT+0xb4>)
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	687a      	ldr	r2, [r7, #4]
 8001e70:	429a      	cmp	r2, r3
 8001e72:	dd09      	ble.n	8001e88 <distance_LUT+0x84>

               RPAD_FFT_distance = RPAD_LUT[RPAD_FFT_distance-RPAD_Min];
 8001e74:	4b10      	ldr	r3, [pc, #64]	; (8001eb8 <distance_LUT+0xb4>)
 8001e76:	681a      	ldr	r2, [r3, #0]
 8001e78:	683b      	ldr	r3, [r7, #0]
 8001e7a:	1ad3      	subs	r3, r2, r3
 8001e7c:	4a0f      	ldr	r2, [pc, #60]	; (8001ebc <distance_LUT+0xb8>)
 8001e7e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001e82:	4a0d      	ldr	r2, [pc, #52]	; (8001eb8 <distance_LUT+0xb4>)
 8001e84:	6013      	str	r3, [r2, #0]

          }else{
               RPAD_FFT_distance = FFT_NO_SIGNAL; // ERROR code
          }

}
 8001e86:	e00c      	b.n	8001ea2 <distance_LUT+0x9e>
          }else if(RPAD_FFT_distance > RPAD_Max){
 8001e88:	4b0b      	ldr	r3, [pc, #44]	; (8001eb8 <distance_LUT+0xb4>)
 8001e8a:	681b      	ldr	r3, [r3, #0]
 8001e8c:	687a      	ldr	r2, [r7, #4]
 8001e8e:	429a      	cmp	r2, r3
 8001e90:	da03      	bge.n	8001e9a <distance_LUT+0x96>
               RPAD_FFT_distance = 0;
 8001e92:	4b09      	ldr	r3, [pc, #36]	; (8001eb8 <distance_LUT+0xb4>)
 8001e94:	2200      	movs	r2, #0
 8001e96:	601a      	str	r2, [r3, #0]
}
 8001e98:	e003      	b.n	8001ea2 <distance_LUT+0x9e>
               RPAD_FFT_distance = FFT_NO_SIGNAL; // ERROR code
 8001e9a:	4b07      	ldr	r3, [pc, #28]	; (8001eb8 <distance_LUT+0xb4>)
 8001e9c:	f240 4257 	movw	r2, #1111	; 0x457
 8001ea0:	601a      	str	r2, [r3, #0]
}
 8001ea2:	bf00      	nop
 8001ea4:	3714      	adds	r7, #20
 8001ea6:	46bd      	mov	sp, r7
 8001ea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eac:	4770      	bx	lr
 8001eae:	bf00      	nop
 8001eb0:	20000b20 	.word	0x20000b20
 8001eb4:	0800fe34 	.word	0x0800fe34
 8001eb8:	20000b24 	.word	0x20000b24
 8001ebc:	08011288 	.word	0x08011288

08001ec0 <split_Array>:
 *
 * A copy of each Array will be saved in { LPAD_samples, RPAD_samples, LHALL_samples, RHALL_samples}.
 *
 *****************************************************************************/
void split_Array(void)
{
 8001ec0:	b580      	push	{r7, lr}
 8001ec2:	b086      	sub	sp, #24
 8001ec4:	af00      	add	r7, sp, #0
     int j=0;
 8001ec6:	2300      	movs	r3, #0
 8001ec8:	617b      	str	r3, [r7, #20]
     for(int i =0; i<(4*ADC_NUMS);i+=4){
 8001eca:	2300      	movs	r3, #0
 8001ecc:	613b      	str	r3, [r7, #16]
 8001ece:	e011      	b.n	8001ef4 <split_Array+0x34>
          LPAD_samples[j++] =MEAS_return_data(i);
 8001ed0:	6938      	ldr	r0, [r7, #16]
 8001ed2:	f000 fd65 	bl	80029a0 <MEAS_return_data>
 8001ed6:	ee07 0a90 	vmov	s15, r0
 8001eda:	697b      	ldr	r3, [r7, #20]
 8001edc:	1c5a      	adds	r2, r3, #1
 8001ede:	617a      	str	r2, [r7, #20]
 8001ee0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001ee4:	4a2e      	ldr	r2, [pc, #184]	; (8001fa0 <split_Array+0xe0>)
 8001ee6:	009b      	lsls	r3, r3, #2
 8001ee8:	4413      	add	r3, r2
 8001eea:	edc3 7a00 	vstr	s15, [r3]
     for(int i =0; i<(4*ADC_NUMS);i+=4){
 8001eee:	693b      	ldr	r3, [r7, #16]
 8001ef0:	3304      	adds	r3, #4
 8001ef2:	613b      	str	r3, [r7, #16]
 8001ef4:	693b      	ldr	r3, [r7, #16]
 8001ef6:	2bff      	cmp	r3, #255	; 0xff
 8001ef8:	ddea      	ble.n	8001ed0 <split_Array+0x10>
     }
     j=0;
 8001efa:	2300      	movs	r3, #0
 8001efc:	617b      	str	r3, [r7, #20]
     for(int i =1; i<4*ADC_NUMS;i+=4){
 8001efe:	2301      	movs	r3, #1
 8001f00:	60fb      	str	r3, [r7, #12]
 8001f02:	e011      	b.n	8001f28 <split_Array+0x68>
          RPAD_samples[j++] = MEAS_return_data(i);
 8001f04:	68f8      	ldr	r0, [r7, #12]
 8001f06:	f000 fd4b 	bl	80029a0 <MEAS_return_data>
 8001f0a:	ee07 0a90 	vmov	s15, r0
 8001f0e:	697b      	ldr	r3, [r7, #20]
 8001f10:	1c5a      	adds	r2, r3, #1
 8001f12:	617a      	str	r2, [r7, #20]
 8001f14:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001f18:	4a22      	ldr	r2, [pc, #136]	; (8001fa4 <split_Array+0xe4>)
 8001f1a:	009b      	lsls	r3, r3, #2
 8001f1c:	4413      	add	r3, r2
 8001f1e:	edc3 7a00 	vstr	s15, [r3]
     for(int i =1; i<4*ADC_NUMS;i+=4){
 8001f22:	68fb      	ldr	r3, [r7, #12]
 8001f24:	3304      	adds	r3, #4
 8001f26:	60fb      	str	r3, [r7, #12]
 8001f28:	68fb      	ldr	r3, [r7, #12]
 8001f2a:	2bff      	cmp	r3, #255	; 0xff
 8001f2c:	ddea      	ble.n	8001f04 <split_Array+0x44>
     }
     j=0;
 8001f2e:	2300      	movs	r3, #0
 8001f30:	617b      	str	r3, [r7, #20]
     for(int i =2; i<4*ADC_NUMS;i+=4){
 8001f32:	2302      	movs	r3, #2
 8001f34:	60bb      	str	r3, [r7, #8]
 8001f36:	e011      	b.n	8001f5c <split_Array+0x9c>
          LHALL_samples[j++] = MEAS_return_data(i);
 8001f38:	68b8      	ldr	r0, [r7, #8]
 8001f3a:	f000 fd31 	bl	80029a0 <MEAS_return_data>
 8001f3e:	ee07 0a90 	vmov	s15, r0
 8001f42:	697b      	ldr	r3, [r7, #20]
 8001f44:	1c5a      	adds	r2, r3, #1
 8001f46:	617a      	str	r2, [r7, #20]
 8001f48:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001f4c:	4a16      	ldr	r2, [pc, #88]	; (8001fa8 <split_Array+0xe8>)
 8001f4e:	009b      	lsls	r3, r3, #2
 8001f50:	4413      	add	r3, r2
 8001f52:	edc3 7a00 	vstr	s15, [r3]
     for(int i =2; i<4*ADC_NUMS;i+=4){
 8001f56:	68bb      	ldr	r3, [r7, #8]
 8001f58:	3304      	adds	r3, #4
 8001f5a:	60bb      	str	r3, [r7, #8]
 8001f5c:	68bb      	ldr	r3, [r7, #8]
 8001f5e:	2bff      	cmp	r3, #255	; 0xff
 8001f60:	ddea      	ble.n	8001f38 <split_Array+0x78>
     }
     j=0;
 8001f62:	2300      	movs	r3, #0
 8001f64:	617b      	str	r3, [r7, #20]
     for(int i =3; i<4*ADC_NUMS;i+=4){
 8001f66:	2303      	movs	r3, #3
 8001f68:	607b      	str	r3, [r7, #4]
 8001f6a:	e011      	b.n	8001f90 <split_Array+0xd0>
          RHALL_samples[j++] =MEAS_return_data(i);
 8001f6c:	6878      	ldr	r0, [r7, #4]
 8001f6e:	f000 fd17 	bl	80029a0 <MEAS_return_data>
 8001f72:	ee07 0a90 	vmov	s15, r0
 8001f76:	697b      	ldr	r3, [r7, #20]
 8001f78:	1c5a      	adds	r2, r3, #1
 8001f7a:	617a      	str	r2, [r7, #20]
 8001f7c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001f80:	4a0a      	ldr	r2, [pc, #40]	; (8001fac <split_Array+0xec>)
 8001f82:	009b      	lsls	r3, r3, #2
 8001f84:	4413      	add	r3, r2
 8001f86:	edc3 7a00 	vstr	s15, [r3]
     for(int i =3; i<4*ADC_NUMS;i+=4){
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	3304      	adds	r3, #4
 8001f8e:	607b      	str	r3, [r7, #4]
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	2bff      	cmp	r3, #255	; 0xff
 8001f94:	ddea      	ble.n	8001f6c <split_Array+0xac>
     }

}
 8001f96:	bf00      	nop
 8001f98:	bf00      	nop
 8001f9a:	3718      	adds	r7, #24
 8001f9c:	46bd      	mov	sp, r7
 8001f9e:	bd80      	pop	{r7, pc}
 8001fa0:	200002f0 	.word	0x200002f0
 8001fa4:	200003f0 	.word	0x200003f0
 8001fa8:	200004f0 	.word	0x200004f0
 8001fac:	200005f0 	.word	0x200005f0

08001fb0 <FFT_Init>:
 * @brief Initialisation for the FFT function
 *
 * @note Needs to be initialised only ones before using the arm_rfft_fast_f32() function.
 *****************************************************************************/
void FFT_Init(void)
{
 8001fb0:	b580      	push	{r7, lr}
 8001fb2:	af00      	add	r7, sp, #0
     arm_rfft_fast_init_f32(&fft_handler, ADC_NUMS);
 8001fb4:	2140      	movs	r1, #64	; 0x40
 8001fb6:	4802      	ldr	r0, [pc, #8]	; (8001fc0 <FFT_Init+0x10>)
 8001fb8:	f007 fefa 	bl	8009db0 <arm_rfft_fast_init_f32>
}
 8001fbc:	bf00      	nop
 8001fbe:	bd80      	pop	{r7, pc}
 8001fc0:	20000b4c 	.word	0x20000b4c

08001fc4 <clear_Buffer>:
/** ***************************************************************************
 * @brief Clearing all four ADS samples arrays
 *
 *****************************************************************************/
void clear_Buffer (void)
{
 8001fc4:	b480      	push	{r7}
 8001fc6:	b083      	sub	sp, #12
 8001fc8:	af00      	add	r7, sp, #0
     /* Clear buffer and flag */
     for (uint32_t i = 0; i < ADC_NUMS/2; i++){
 8001fca:	2300      	movs	r3, #0
 8001fcc:	607b      	str	r3, [r7, #4]
 8001fce:	e046      	b.n	800205e <clear_Buffer+0x9a>
          RPAD_samples[2*i] = 0;
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	005b      	lsls	r3, r3, #1
 8001fd4:	4a27      	ldr	r2, [pc, #156]	; (8002074 <clear_Buffer+0xb0>)
 8001fd6:	009b      	lsls	r3, r3, #2
 8001fd8:	4413      	add	r3, r2
 8001fda:	f04f 0200 	mov.w	r2, #0
 8001fde:	601a      	str	r2, [r3, #0]
          RPAD_samples[2*i+1] = 0;
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	005b      	lsls	r3, r3, #1
 8001fe4:	3301      	adds	r3, #1
 8001fe6:	4a23      	ldr	r2, [pc, #140]	; (8002074 <clear_Buffer+0xb0>)
 8001fe8:	009b      	lsls	r3, r3, #2
 8001fea:	4413      	add	r3, r2
 8001fec:	f04f 0200 	mov.w	r2, #0
 8001ff0:	601a      	str	r2, [r3, #0]
          LPAD_samples[2*i] = 0;
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	005b      	lsls	r3, r3, #1
 8001ff6:	4a20      	ldr	r2, [pc, #128]	; (8002078 <clear_Buffer+0xb4>)
 8001ff8:	009b      	lsls	r3, r3, #2
 8001ffa:	4413      	add	r3, r2
 8001ffc:	f04f 0200 	mov.w	r2, #0
 8002000:	601a      	str	r2, [r3, #0]
          LPAD_samples[2*i+1] = 0;
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	005b      	lsls	r3, r3, #1
 8002006:	3301      	adds	r3, #1
 8002008:	4a1b      	ldr	r2, [pc, #108]	; (8002078 <clear_Buffer+0xb4>)
 800200a:	009b      	lsls	r3, r3, #2
 800200c:	4413      	add	r3, r2
 800200e:	f04f 0200 	mov.w	r2, #0
 8002012:	601a      	str	r2, [r3, #0]
          RHALL_samples[2*i] = 0;
 8002014:	687b      	ldr	r3, [r7, #4]
 8002016:	005b      	lsls	r3, r3, #1
 8002018:	4a18      	ldr	r2, [pc, #96]	; (800207c <clear_Buffer+0xb8>)
 800201a:	009b      	lsls	r3, r3, #2
 800201c:	4413      	add	r3, r2
 800201e:	f04f 0200 	mov.w	r2, #0
 8002022:	601a      	str	r2, [r3, #0]
          RHALL_samples[2*i+1] = 0;
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	005b      	lsls	r3, r3, #1
 8002028:	3301      	adds	r3, #1
 800202a:	4a14      	ldr	r2, [pc, #80]	; (800207c <clear_Buffer+0xb8>)
 800202c:	009b      	lsls	r3, r3, #2
 800202e:	4413      	add	r3, r2
 8002030:	f04f 0200 	mov.w	r2, #0
 8002034:	601a      	str	r2, [r3, #0]
          LHALL_samples[2*i] = 0;
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	005b      	lsls	r3, r3, #1
 800203a:	4a11      	ldr	r2, [pc, #68]	; (8002080 <clear_Buffer+0xbc>)
 800203c:	009b      	lsls	r3, r3, #2
 800203e:	4413      	add	r3, r2
 8002040:	f04f 0200 	mov.w	r2, #0
 8002044:	601a      	str	r2, [r3, #0]
          LHALL_samples[2*i+1] = 0;
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	005b      	lsls	r3, r3, #1
 800204a:	3301      	adds	r3, #1
 800204c:	4a0c      	ldr	r2, [pc, #48]	; (8002080 <clear_Buffer+0xbc>)
 800204e:	009b      	lsls	r3, r3, #2
 8002050:	4413      	add	r3, r2
 8002052:	f04f 0200 	mov.w	r2, #0
 8002056:	601a      	str	r2, [r3, #0]
     for (uint32_t i = 0; i < ADC_NUMS/2; i++){
 8002058:	687b      	ldr	r3, [r7, #4]
 800205a:	3301      	adds	r3, #1
 800205c:	607b      	str	r3, [r7, #4]
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	2b1f      	cmp	r3, #31
 8002062:	d9b5      	bls.n	8001fd0 <clear_Buffer+0xc>
     }
}
 8002064:	bf00      	nop
 8002066:	bf00      	nop
 8002068:	370c      	adds	r7, #12
 800206a:	46bd      	mov	sp, r7
 800206c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002070:	4770      	bx	lr
 8002072:	bf00      	nop
 8002074:	200003f0 	.word	0x200003f0
 8002078:	200002f0 	.word	0x200002f0
 800207c:	200005f0 	.word	0x200005f0
 8002080:	200004f0 	.word	0x200004f0

08002084 <main>:
 * @brief  Main function
 * @return not used because main ends in an infinite loop
 *
 * Initialization and infinite while loop
 *****************************************************************************/
int main(void) {
 8002084:	b590      	push	{r4, r7, lr}
 8002086:	b08b      	sub	sp, #44	; 0x2c
 8002088:	af00      	add	r7, sp, #0
    HAL_Init();                         // Initialize the system
 800208a:	f003 fd17 	bl	8005abc <HAL_Init>

    SystemClock_Config();               // Configure system clocks
 800208e:	f000 f9db 	bl	8002448 <SystemClock_Config>

#ifdef FLIPPED_LCD
    BSP_LCD_Init_Flipped();             // Initialize the LCD for flipped orientation
 8002092:	f002 fb7f 	bl	8004794 <BSP_LCD_Init_Flipped>
#else
    BSP_LCD_Init();                     // Initialize the LCD display
#endif
    BSP_LCD_LayerDefaultInit(LCD_FOREGROUND_LAYER, LCD_FRAME_BUFFER);
 8002096:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
 800209a:	2001      	movs	r0, #1
 800209c:	f002 fc08 	bl	80048b0 <BSP_LCD_LayerDefaultInit>
    BSP_LCD_SelectLayer(LCD_FOREGROUND_LAYER);
 80020a0:	2001      	movs	r0, #1
 80020a2:	f002 fc69 	bl	8004978 <BSP_LCD_SelectLayer>
    BSP_LCD_DisplayOn();
 80020a6:	f003 f81d 	bl	80050e4 <BSP_LCD_DisplayOn>
    BSP_LCD_Clear(LCD_COLOR_WHITE);
 80020aa:	f04f 30ff 	mov.w	r0, #4294967295
 80020ae:	f002 fcbf 	bl	8004a30 <BSP_LCD_Clear>

    BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());    // Touchscreen
 80020b2:	f002 fbe5 	bl	8004880 <BSP_LCD_GetXSize>
 80020b6:	4603      	mov	r3, r0
 80020b8:	b29c      	uxth	r4, r3
 80020ba:	f002 fbed 	bl	8004898 <BSP_LCD_GetYSize>
 80020be:	4603      	mov	r3, r0
 80020c0:	b29b      	uxth	r3, r3
 80020c2:	4619      	mov	r1, r3
 80020c4:	4620      	mov	r0, r4
 80020c6:	f003 fbf5 	bl	80058b4 <BSP_TS_Init>

    PB_init();                  // Initialize the user pushbutton
 80020ca:	f001 fa33 	bl	8003534 <PB_init>
    PB_enableIRQ();             // Enable interrupt on user pushbutton
 80020ce:	f001 fa51 	bl	8003574 <PB_enableIRQ>

    BSP_LED_Init(LED3);         // Toggles in while loop
 80020d2:	2000      	movs	r0, #0
 80020d4:	f001 ff60 	bl	8003f98 <BSP_LED_Init>
    BSP_LED_Init(LED4);         // Is toggled by user button
 80020d8:	2001      	movs	r0, #1
 80020da:	f001 ff5d 	bl	8003f98 <BSP_LED_Init>

    MENU_draw();                // Draw the menu
 80020de:	f000 fff5 	bl	80030cc <MENU_draw>
    MENU_hint();                // Show hint at startup
 80020e2:	f001 f89d 	bl	8003220 <MENU_hint>

    gyro_disable();             // Disable gyro, use those analog inputs
 80020e6:	f000 fa2d 	bl	8002544 <gyro_disable>

    MEAS_GPIO_analog_init();    // Configure GPIOs in analog mode
 80020ea:	f000 faeb 	bl	80026c4 <MEAS_GPIO_analog_init>
    MEAS_timer_init();          // Configure the timer
 80020ee:	f000 fb5b 	bl	80027a8 <MEAS_timer_init>

    BUZZER_init();              // Configure buzzer
 80020f2:	f7fe fff7 	bl	80010e4 <BUZZER_init>

    FFT_Init();                 // Configure FFT
 80020f6:	f7ff ff5b 	bl	8001fb0 <FFT_Init>

    // Task
    uint8_t task        = NOTHING;
 80020fa:	2301      	movs	r3, #1
 80020fc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
    uint8_t subtask     = SUB_GRAPHIC;
 8002100:	2302      	movs	r3, #2
 8002102:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
    uint8_t table_cable = TABLE_ONE_PHASE;
 8002106:	2301      	movs	r3, #1
 8002108:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25

    uint8_t task_old        = task;
 800210c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002110:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
    uint8_t subttask_old    = subtask;
 8002114:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002118:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
    uint8_t table_cable_old = table_cable;
 800211c:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8002120:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22

    // Measurement
    int16_t  x_distance = 0;
 8002124:	2300      	movs	r3, #0
 8002126:	843b      	strh	r3, [r7, #32]
    int16_t  y_distance = 0;
 8002128:	2300      	movs	r3, #0
 800212a:	83fb      	strh	r3, [r7, #30]
    int16_t  angle      = 0;
 800212c:	2300      	movs	r3, #0
 800212e:	83bb      	strh	r3, [r7, #28]
    float    current    = 0.0;
 8002130:	f04f 0300 	mov.w	r3, #0
 8002134:	61bb      	str	r3, [r7, #24]

    uint8_t responsive_counter = 0; //Responsiveness for touch
 8002136:	2300      	movs	r3, #0
 8002138:	75fb      	strb	r3, [r7, #23]

    bool flag_setting_change = false;
 800213a:	2300      	movs	r3, #0
 800213c:	75bb      	strb	r3, [r7, #22]
    bool flag_blue_btn       = false;
 800213e:	2300      	movs	r3, #0
 8002140:	757b      	strb	r3, [r7, #21]
    char text[20];

    /* Infinite while loop */
    while (1) { // Infinitely loop in main function

        BSP_LED_Toggle(LED3); // Visual feedback when running
 8002142:	2000      	movs	r0, #0
 8002144:	f001 ff96 	bl	8004074 <BSP_LED_Toggle>

        MENU_check_transition();
 8002148:	f001 f920 	bl	800338c <MENU_check_transition>

        switch (MENU_get_transition()) { // Handle user menu choice
 800214c:	f001 f90c 	bl	8003368 <MENU_get_transition>
 8002150:	4603      	mov	r3, r0
 8002152:	2b04      	cmp	r3, #4
 8002154:	d847      	bhi.n	80021e6 <main+0x162>
 8002156:	a201      	add	r2, pc, #4	; (adr r2, 800215c <main+0xd8>)
 8002158:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800215c:	0800217f 	.word	0x0800217f
 8002160:	08002187 	.word	0x08002187
 8002164:	0800218f 	.word	0x0800218f
 8002168:	080021bb 	.word	0x080021bb
 800216c:	08002171 	.word	0x08002171
            case MENU_NONE:

                if(responsive_counter < 10){
 8002170:	7dfb      	ldrb	r3, [r7, #23]
 8002172:	2b09      	cmp	r3, #9
 8002174:	d839      	bhi.n	80021ea <main+0x166>
                    responsive_counter++;
 8002176:	7dfb      	ldrb	r3, [r7, #23]
 8002178:	3301      	adds	r3, #1
 800217a:	75fb      	strb	r3, [r7, #23]
                }
                break;
 800217c:	e035      	b.n	80021ea <main+0x166>

            case MENU_SINGLE:
                task = SINGLE_MEAS;
 800217e:	2302      	movs	r3, #2
 8002180:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
                break;
 8002184:	e036      	b.n	80021f4 <main+0x170>

            case MENU_MULTI:
                task = AVERAGE_MEAS;
 8002186:	2303      	movs	r3, #3
 8002188:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
                break;
 800218c:	e032      	b.n	80021f4 <main+0x170>

            case MENU_CABLE:
                if(task != NOTHING){
 800218e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002192:	2b01      	cmp	r3, #1
 8002194:	d02b      	beq.n	80021ee <main+0x16a>
                    if(responsive_counter > 2){
 8002196:	7dfb      	ldrb	r3, [r7, #23]
 8002198:	2b02      	cmp	r3, #2
 800219a:	d90b      	bls.n	80021b4 <main+0x130>

                        ++table_cable;
 800219c:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 80021a0:	3301      	adds	r3, #1
 80021a2:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25

                        if(table_cable > MAX_TABLES){
 80021a6:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 80021aa:	2b01      	cmp	r3, #1
 80021ac:	d902      	bls.n	80021b4 <main+0x130>
                            table_cable = 1;
 80021ae:	2301      	movs	r3, #1
 80021b0:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
                        }
                    }
                    responsive_counter = 0;
 80021b4:	2300      	movs	r3, #0
 80021b6:	75fb      	strb	r3, [r7, #23]
                }
                break;
 80021b8:	e019      	b.n	80021ee <main+0x16a>
            case MENU_SUBTASK:
                if(task != NOTHING){
 80021ba:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80021be:	2b01      	cmp	r3, #1
 80021c0:	d017      	beq.n	80021f2 <main+0x16e>
                    if(responsive_counter > 2){
 80021c2:	7dfb      	ldrb	r3, [r7, #23]
 80021c4:	2b02      	cmp	r3, #2
 80021c6:	d90b      	bls.n	80021e0 <main+0x15c>

                        ++subtask;
 80021c8:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80021cc:	3301      	adds	r3, #1
 80021ce:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26

                        if(subtask > MAX_SUBTASKS){
 80021d2:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80021d6:	2b02      	cmp	r3, #2
 80021d8:	d902      	bls.n	80021e0 <main+0x15c>
                            subtask = 1;
 80021da:	2301      	movs	r3, #1
 80021dc:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
                        }
                    }
                    responsive_counter = 0;
 80021e0:	2300      	movs	r3, #0
 80021e2:	75fb      	strb	r3, [r7, #23]
                }

                break;
 80021e4:	e005      	b.n	80021f2 <main+0x16e>
            default:  // Should never occur
                break;
 80021e6:	bf00      	nop
 80021e8:	e004      	b.n	80021f4 <main+0x170>
                break;
 80021ea:	bf00      	nop
 80021ec:	e002      	b.n	80021f4 <main+0x170>
                break;
 80021ee:	bf00      	nop
 80021f0:	e000      	b.n	80021f4 <main+0x170>
                break;
 80021f2:	bf00      	nop
        }

        flag_setting_change = false;
 80021f4:	2300      	movs	r3, #0
 80021f6:	75bb      	strb	r3, [r7, #22]

        if(task_old != task || subttask_old != subtask || table_cable_old != table_cable){
 80021f8:	f897 2024 	ldrb.w	r2, [r7, #36]	; 0x24
 80021fc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002200:	429a      	cmp	r2, r3
 8002202:	d10b      	bne.n	800221c <main+0x198>
 8002204:	f897 2023 	ldrb.w	r2, [r7, #35]	; 0x23
 8002208:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 800220c:	429a      	cmp	r2, r3
 800220e:	d105      	bne.n	800221c <main+0x198>
 8002210:	f897 2022 	ldrb.w	r2, [r7, #34]	; 0x22
 8002214:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8002218:	429a      	cmp	r2, r3
 800221a:	d001      	beq.n	8002220 <main+0x19c>
            flag_setting_change = true;
 800221c:	2301      	movs	r3, #1
 800221e:	75bb      	strb	r3, [r7, #22]
        }

        task_old        = task;
 8002220:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002224:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
        subttask_old    = subtask;
 8002228:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 800222c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
        table_cable_old = table_cable;
 8002230:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8002234:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22

        if(flag_setting_change){
 8002238:	7dbb      	ldrb	r3, [r7, #22]
 800223a:	2b00      	cmp	r3, #0
 800223c:	d04b      	beq.n	80022d6 <main+0x252>

            if(task == SINGLE_MEAS && table_cable == TABLE_ONE_PHASE){
 800223e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002242:	2b02      	cmp	r3, #2
 8002244:	d10a      	bne.n	800225c <main+0x1d8>
 8002246:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 800224a:	2b01      	cmp	r3, #1
 800224c:	d106      	bne.n	800225c <main+0x1d8>
                snprintf(text, 18, "SINGLE: ONE PHASE");
 800224e:	463b      	mov	r3, r7
 8002250:	4a78      	ldr	r2, [pc, #480]	; (8002434 <main+0x3b0>)
 8002252:	2112      	movs	r1, #18
 8002254:	4618      	mov	r0, r3
 8002256:	f009 fa21 	bl	800b69c <sniprintf>
 800225a:	e02b      	b.n	80022b4 <main+0x230>
            }

            else if(task == SINGLE_MEAS && table_cable == TABLE_TWO_PHASE){
 800225c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002260:	2b02      	cmp	r3, #2
 8002262:	d10a      	bne.n	800227a <main+0x1f6>
 8002264:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8002268:	2b02      	cmp	r3, #2
 800226a:	d106      	bne.n	800227a <main+0x1f6>
                snprintf(text, 18, "SINGLE: TWO PHASE");
 800226c:	463b      	mov	r3, r7
 800226e:	4a72      	ldr	r2, [pc, #456]	; (8002438 <main+0x3b4>)
 8002270:	2112      	movs	r1, #18
 8002272:	4618      	mov	r0, r3
 8002274:	f009 fa12 	bl	800b69c <sniprintf>
 8002278:	e01c      	b.n	80022b4 <main+0x230>
            }

            else if(task == AVERAGE_MEAS && table_cable == TABLE_ONE_PHASE){
 800227a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800227e:	2b03      	cmp	r3, #3
 8002280:	d10a      	bne.n	8002298 <main+0x214>
 8002282:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8002286:	2b01      	cmp	r3, #1
 8002288:	d106      	bne.n	8002298 <main+0x214>
                snprintf(text, 19, "AVERAGE: ONE PHASE");
 800228a:	463b      	mov	r3, r7
 800228c:	4a6b      	ldr	r2, [pc, #428]	; (800243c <main+0x3b8>)
 800228e:	2113      	movs	r1, #19
 8002290:	4618      	mov	r0, r3
 8002292:	f009 fa03 	bl	800b69c <sniprintf>
 8002296:	e00d      	b.n	80022b4 <main+0x230>
            }

            else if(task == AVERAGE_MEAS && table_cable == TABLE_TWO_PHASE){
 8002298:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800229c:	2b03      	cmp	r3, #3
 800229e:	d109      	bne.n	80022b4 <main+0x230>
 80022a0:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 80022a4:	2b02      	cmp	r3, #2
 80022a6:	d105      	bne.n	80022b4 <main+0x230>
                snprintf(text, 19, "AVERAGE: TWO PHASE");
 80022a8:	463b      	mov	r3, r7
 80022aa:	4a65      	ldr	r2, [pc, #404]	; (8002440 <main+0x3bc>)
 80022ac:	2113      	movs	r1, #19
 80022ae:	4618      	mov	r0, r3
 80022b0:	f009 f9f4 	bl	800b69c <sniprintf>
            }

            if(subtask == SUB_VALUES){
 80022b4:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80022b8:	2b01      	cmp	r3, #1
 80022ba:	d104      	bne.n	80022c6 <main+0x242>
                MENU_values_init((uint8_t *)text);
 80022bc:	463b      	mov	r3, r7
 80022be:	4618      	mov	r0, r3
 80022c0:	f000 fc8e 	bl	8002be0 <MENU_values_init>
 80022c4:	e007      	b.n	80022d6 <main+0x252>
            }
            else if(subtask == SUB_GRAPHIC){
 80022c6:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80022ca:	2b02      	cmp	r3, #2
 80022cc:	d103      	bne.n	80022d6 <main+0x252>
                MENU_visual_init((uint8_t *)text);
 80022ce:	463b      	mov	r3, r7
 80022d0:	4618      	mov	r0, r3
 80022d2:	f000 fdb9 	bl	8002e48 <MENU_visual_init>
            }
        }

        switch(task){
 80022d6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80022da:	2b03      	cmp	r3, #3
 80022dc:	d027      	beq.n	800232e <main+0x2aa>
 80022de:	2b03      	cmp	r3, #3
 80022e0:	dc3c      	bgt.n	800235c <main+0x2d8>
 80022e2:	2b01      	cmp	r3, #1
 80022e4:	d002      	beq.n	80022ec <main+0x268>
 80022e6:	2b02      	cmp	r3, #2
 80022e8:	d00b      	beq.n	8002302 <main+0x27e>
 80022ea:	e037      	b.n	800235c <main+0x2d8>

            case NOTHING:

                if (PB_pressed()){
 80022ec:	f001 f974 	bl	80035d8 <PB_pressed>
 80022f0:	4603      	mov	r3, r0
 80022f2:	2b00      	cmp	r3, #0
 80022f4:	d031      	beq.n	800235a <main+0x2d6>
                    BSP_LED_On(LED3);
 80022f6:	2000      	movs	r0, #0
 80022f8:	f001 fea2 	bl	8004040 <BSP_LED_On>
                    BUZZER_play_melody();
 80022fc:	f7fe ffde 	bl	80012bc <BUZZER_play_melody>
                }

                break;
 8002300:	e02b      	b.n	800235a <main+0x2d6>

            case SINGLE_MEAS:

                calculate_pos(1);
 8002302:	2001      	movs	r0, #1
 8002304:	f7ff f8a4 	bl	8001450 <calculate_pos>

                y_distance = get_Y_Pos();
 8002308:	f7ff f878 	bl	80013fc <get_Y_Pos>
 800230c:	4603      	mov	r3, r0
 800230e:	83fb      	strh	r3, [r7, #30]
                x_distance = get_X_Pos();
 8002310:	f7ff f868 	bl	80013e4 <get_X_Pos>
 8002314:	4603      	mov	r3, r0
 8002316:	843b      	strh	r3, [r7, #32]
                angle      = get_angle();
 8002318:	f7ff f87c 	bl	8001414 <get_angle>
 800231c:	4603      	mov	r3, r0
 800231e:	83bb      	strh	r3, [r7, #28]
                current    = get_current();
 8002320:	f7ff f886 	bl	8001430 <get_current>
 8002324:	ed87 0a06 	vstr	s0, [r7, #24]

                reset_sample_counter();
 8002328:	f000 fc44 	bl	8002bb4 <reset_sample_counter>

                break;
 800232c:	e016      	b.n	800235c <main+0x2d8>

            case AVERAGE_MEAS:

                calculate_pos(3);
 800232e:	2003      	movs	r0, #3
 8002330:	f7ff f88e 	bl	8001450 <calculate_pos>

                y_distance = get_Y_Pos();
 8002334:	f7ff f862 	bl	80013fc <get_Y_Pos>
 8002338:	4603      	mov	r3, r0
 800233a:	83fb      	strh	r3, [r7, #30]
                x_distance = get_X_Pos();
 800233c:	f7ff f852 	bl	80013e4 <get_X_Pos>
 8002340:	4603      	mov	r3, r0
 8002342:	843b      	strh	r3, [r7, #32]
                angle      = get_angle();
 8002344:	f7ff f866 	bl	8001414 <get_angle>
 8002348:	4603      	mov	r3, r0
 800234a:	83bb      	strh	r3, [r7, #28]
                current    = get_current();
 800234c:	f7ff f870 	bl	8001430 <get_current>
 8002350:	ed87 0a06 	vstr	s0, [r7, #24]

                reset_sample_counter();
 8002354:	f000 fc2e 	bl	8002bb4 <reset_sample_counter>

                break;
 8002358:	e000      	b.n	800235c <main+0x2d8>
                break;
 800235a:	bf00      	nop
        }

        if(task != NOTHING){
 800235c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002360:	2b01      	cmp	r3, #1
 8002362:	d063      	beq.n	800242c <main+0x3a8>
            switch(subtask){
 8002364:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002368:	2b01      	cmp	r3, #1
 800236a:	d002      	beq.n	8002372 <main+0x2ee>
 800236c:	2b02      	cmp	r3, #2
 800236e:	d00b      	beq.n	8002388 <main+0x304>
 8002370:	e014      	b.n	800239c <main+0x318>
                case SUB_VALUES:
                    MENU_values_act(x_distance,y_distance,angle,current);
 8002372:	8bf9      	ldrh	r1, [r7, #30]
 8002374:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8002378:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800237c:	ed97 0a06 	vldr	s0, [r7, #24]
 8002380:	4618      	mov	r0, r3
 8002382:	f000 fc8b 	bl	8002c9c <MENU_values_act>
                    break;
 8002386:	e00c      	b.n	80023a2 <main+0x31e>
                case SUB_GRAPHIC:
                    MENU_visual_act(x_distance,y_distance,current);
 8002388:	8bfa      	ldrh	r2, [r7, #30]
 800238a:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800238e:	ed97 0a06 	vldr	s0, [r7, #24]
 8002392:	4611      	mov	r1, r2
 8002394:	4618      	mov	r0, r3
 8002396:	f000 fd87 	bl	8002ea8 <MENU_visual_act>
                    break;
 800239a:	e002      	b.n	80023a2 <main+0x31e>
                default:
                    MENU_empty(); // Should never occur
 800239c:	f000 ffae 	bl	80032fc <MENU_empty>
                    break;
 80023a0:	bf00      	nop
            }

            if (PB_pressed()) {
 80023a2:	f001 f919 	bl	80035d8 <PB_pressed>
 80023a6:	4603      	mov	r3, r0
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d010      	beq.n	80023ce <main+0x34a>
                BSP_LED_Toggle(LED4);
 80023ac:	2001      	movs	r0, #1
 80023ae:	f001 fe61 	bl	8004074 <BSP_LED_Toggle>
                flag_blue_btn = !flag_blue_btn;
 80023b2:	7d7b      	ldrb	r3, [r7, #21]
 80023b4:	2b00      	cmp	r3, #0
 80023b6:	bf14      	ite	ne
 80023b8:	2301      	movne	r3, #1
 80023ba:	2300      	moveq	r3, #0
 80023bc:	b2db      	uxtb	r3, r3
 80023be:	f083 0301 	eor.w	r3, r3, #1
 80023c2:	b2db      	uxtb	r3, r3
 80023c4:	757b      	strb	r3, [r7, #21]
 80023c6:	7d7b      	ldrb	r3, [r7, #21]
 80023c8:	f003 0301 	and.w	r3, r3, #1
 80023cc:	757b      	strb	r3, [r7, #21]
            }

            if(flag_blue_btn && (x_distance != CALC_OUTOF_X_RANGE) && (y_distance != CALC_OUTOF_Y_RANGE)){
 80023ce:	7d7b      	ldrb	r3, [r7, #21]
 80023d0:	2b00      	cmp	r3, #0
 80023d2:	d024      	beq.n	800241e <main+0x39a>
 80023d4:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 80023d8:	f640 121d 	movw	r2, #2333	; 0x91d
 80023dc:	4293      	cmp	r3, r2
 80023de:	d01e      	beq.n	800241e <main+0x39a>
 80023e0:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 80023e4:	f640 02ae 	movw	r2, #2222	; 0x8ae
 80023e8:	4293      	cmp	r3, r2
 80023ea:	d018      	beq.n	800241e <main+0x39a>

                if(!BUZZER_get_status()){
 80023ec:	f7fe ff42 	bl	8001274 <BUZZER_get_status>
 80023f0:	4603      	mov	r3, r0
 80023f2:	f083 0301 	eor.w	r3, r3, #1
 80023f6:	b2db      	uxtb	r3, r3
 80023f8:	2b00      	cmp	r3, #0
 80023fa:	d001      	beq.n	8002400 <main+0x37c>
                    BUZZER_turn_on();
 80023fc:	f7fe ff0c 	bl	8001218 <BUZZER_turn_on>
                }

                BUZZER_set_note((MAX_DISTANCE - y_distance ) / 10); // Set frequency when buzzer on
 8002400:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 8002404:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
 8002408:	4a0e      	ldr	r2, [pc, #56]	; (8002444 <main+0x3c0>)
 800240a:	fb82 1203 	smull	r1, r2, r2, r3
 800240e:	1092      	asrs	r2, r2, #2
 8002410:	17db      	asrs	r3, r3, #31
 8002412:	1ad3      	subs	r3, r2, r3
 8002414:	b2db      	uxtb	r3, r3
 8002416:	4618      	mov	r0, r3
 8002418:	f7fe fed8 	bl	80011cc <BUZZER_set_note>
 800241c:	e006      	b.n	800242c <main+0x3a8>
            }
            else{

                if(BUZZER_get_status()){
 800241e:	f7fe ff29 	bl	8001274 <BUZZER_get_status>
 8002422:	4603      	mov	r3, r0
 8002424:	2b00      	cmp	r3, #0
 8002426:	d001      	beq.n	800242c <main+0x3a8>
                    BUZZER_turn_off();
 8002428:	f7fe ff0a 	bl	8001240 <BUZZER_turn_off>
                }
            }
        }
        HAL_Delay(10);
 800242c:	200a      	movs	r0, #10
 800242e:	f003 fbbf 	bl	8005bb0 <HAL_Delay>
        BSP_LED_Toggle(LED3); // Visual feedback when running
 8002432:	e686      	b.n	8002142 <main+0xbe>
 8002434:	0800fbf8 	.word	0x0800fbf8
 8002438:	0800fc0c 	.word	0x0800fc0c
 800243c:	0800fc20 	.word	0x0800fc20
 8002440:	0800fc34 	.word	0x0800fc34
 8002444:	66666667 	.word	0x66666667

08002448 <SystemClock_Config>:

/** ***************************************************************************
 * @brief System Clock Configuration
 *
 *****************************************************************************/
static void SystemClock_Config(void){
 8002448:	b580      	push	{r7, lr}
 800244a:	b0a0      	sub	sp, #128	; 0x80
 800244c:	af00      	add	r7, sp, #0
    RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800244e:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8002452:	2230      	movs	r2, #48	; 0x30
 8002454:	2100      	movs	r1, #0
 8002456:	4618      	mov	r0, r3
 8002458:	f008 fcae 	bl	800adb8 <memset>
    RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800245c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8002460:	2200      	movs	r2, #0
 8002462:	601a      	str	r2, [r3, #0]
 8002464:	605a      	str	r2, [r3, #4]
 8002466:	609a      	str	r2, [r3, #8]
 8002468:	60da      	str	r2, [r3, #12]
 800246a:	611a      	str	r2, [r3, #16]
    RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800246c:	f107 030c 	add.w	r3, r7, #12
 8002470:	2230      	movs	r2, #48	; 0x30
 8002472:	2100      	movs	r1, #0
 8002474:	4618      	mov	r0, r3
 8002476:	f008 fc9f 	bl	800adb8 <memset>
    /* Configure the main internal regulator output voltage */
    __HAL_RCC_PWR_CLK_ENABLE();
 800247a:	2300      	movs	r3, #0
 800247c:	60bb      	str	r3, [r7, #8]
 800247e:	4b2e      	ldr	r3, [pc, #184]	; (8002538 <SystemClock_Config+0xf0>)
 8002480:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002482:	4a2d      	ldr	r2, [pc, #180]	; (8002538 <SystemClock_Config+0xf0>)
 8002484:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002488:	6413      	str	r3, [r2, #64]	; 0x40
 800248a:	4b2b      	ldr	r3, [pc, #172]	; (8002538 <SystemClock_Config+0xf0>)
 800248c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800248e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002492:	60bb      	str	r3, [r7, #8]
 8002494:	68bb      	ldr	r3, [r7, #8]
    __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002496:	2300      	movs	r3, #0
 8002498:	607b      	str	r3, [r7, #4]
 800249a:	4b28      	ldr	r3, [pc, #160]	; (800253c <SystemClock_Config+0xf4>)
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	4a27      	ldr	r2, [pc, #156]	; (800253c <SystemClock_Config+0xf4>)
 80024a0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80024a4:	6013      	str	r3, [r2, #0]
 80024a6:	4b25      	ldr	r3, [pc, #148]	; (800253c <SystemClock_Config+0xf4>)
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80024ae:	607b      	str	r3, [r7, #4]
 80024b0:	687b      	ldr	r3, [r7, #4]
    /* Initialize High Speed External Oscillator and PLL circuits */
    RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80024b2:	2301      	movs	r3, #1
 80024b4:	653b      	str	r3, [r7, #80]	; 0x50
    RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80024b6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80024ba:	657b      	str	r3, [r7, #84]	; 0x54
    RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80024bc:	2302      	movs	r3, #2
 80024be:	66bb      	str	r3, [r7, #104]	; 0x68
    RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80024c0:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80024c4:	66fb      	str	r3, [r7, #108]	; 0x6c
    RCC_OscInitStruct.PLL.PLLM = 8;
 80024c6:	2308      	movs	r3, #8
 80024c8:	673b      	str	r3, [r7, #112]	; 0x70
    RCC_OscInitStruct.PLL.PLLN = 336;
 80024ca:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80024ce:	677b      	str	r3, [r7, #116]	; 0x74
    RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80024d0:	2302      	movs	r3, #2
 80024d2:	67bb      	str	r3, [r7, #120]	; 0x78
    RCC_OscInitStruct.PLL.PLLQ = 7;
 80024d4:	2307      	movs	r3, #7
 80024d6:	67fb      	str	r3, [r7, #124]	; 0x7c
    HAL_RCC_OscConfig(&RCC_OscInitStruct);
 80024d8:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80024dc:	4618      	mov	r0, r3
 80024de:	f005 fdb9 	bl	8008054 <HAL_RCC_OscConfig>
    /* Initialize gates and clock dividers for CPU, AHB and APB busses */
    RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK
 80024e2:	230f      	movs	r3, #15
 80024e4:	63fb      	str	r3, [r7, #60]	; 0x3c
            | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
    RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80024e6:	2302      	movs	r3, #2
 80024e8:	643b      	str	r3, [r7, #64]	; 0x40
    RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80024ea:	2300      	movs	r3, #0
 80024ec:	647b      	str	r3, [r7, #68]	; 0x44
    RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80024ee:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80024f2:	64bb      	str	r3, [r7, #72]	; 0x48
    RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80024f4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80024f8:	64fb      	str	r3, [r7, #76]	; 0x4c
    HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5);
 80024fa:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80024fe:	2105      	movs	r1, #5
 8002500:	4618      	mov	r0, r3
 8002502:	f006 f815 	bl	8008530 <HAL_RCC_ClockConfig>
    /* Initialize PLL and clock divider for the LCD */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002506:	2308      	movs	r3, #8
 8002508:	60fb      	str	r3, [r7, #12]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800250a:	23c0      	movs	r3, #192	; 0xc0
 800250c:	61fb      	str	r3, [r7, #28]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800250e:	2304      	movs	r3, #4
 8002510:	627b      	str	r3, [r7, #36]	; 0x24
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002512:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8002516:	633b      	str	r3, [r7, #48]	; 0x30
    HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 8002518:	f107 030c 	add.w	r3, r7, #12
 800251c:	4618      	mov	r0, r3
 800251e:	f006 fa13 	bl	8008948 <HAL_RCCEx_PeriphCLKConfig>
    /* Set clock prescaler for ADCs */
    ADC->CCR |= ADC_CCR_ADCPRE_0;
 8002522:	4b07      	ldr	r3, [pc, #28]	; (8002540 <SystemClock_Config+0xf8>)
 8002524:	685b      	ldr	r3, [r3, #4]
 8002526:	4a06      	ldr	r2, [pc, #24]	; (8002540 <SystemClock_Config+0xf8>)
 8002528:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800252c:	6053      	str	r3, [r2, #4]
}
 800252e:	bf00      	nop
 8002530:	3780      	adds	r7, #128	; 0x80
 8002532:	46bd      	mov	sp, r7
 8002534:	bd80      	pop	{r7, pc}
 8002536:	bf00      	nop
 8002538:	40023800 	.word	0x40023800
 800253c:	40007000 	.word	0x40007000
 8002540:	40012300 	.word	0x40012300

08002544 <gyro_disable>:
 * @n PF8 is also reconfigured.
 * @n An other solution would be to remove the GYRO
 * from the microcontroller board by unsoldering it.
 *****************************************************************************/
static void gyro_disable(void)
{
 8002544:	b580      	push	{r7, lr}
 8002546:	b082      	sub	sp, #8
 8002548:	af00      	add	r7, sp, #0
    __HAL_RCC_GPIOC_CLK_ENABLE();       // Enable Clock for GPIO port C
 800254a:	2300      	movs	r3, #0
 800254c:	607b      	str	r3, [r7, #4]
 800254e:	4b2a      	ldr	r3, [pc, #168]	; (80025f8 <gyro_disable+0xb4>)
 8002550:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002552:	4a29      	ldr	r2, [pc, #164]	; (80025f8 <gyro_disable+0xb4>)
 8002554:	f043 0304 	orr.w	r3, r3, #4
 8002558:	6313      	str	r3, [r2, #48]	; 0x30
 800255a:	4b27      	ldr	r3, [pc, #156]	; (80025f8 <gyro_disable+0xb4>)
 800255c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800255e:	f003 0304 	and.w	r3, r3, #4
 8002562:	607b      	str	r3, [r7, #4]
 8002564:	687b      	ldr	r3, [r7, #4]
    /* Disable PC1 and PF8 first */
    GPIOC->MODER &= ~GPIO_MODER_MODER1; // Reset mode for PC1
 8002566:	4b25      	ldr	r3, [pc, #148]	; (80025fc <gyro_disable+0xb8>)
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	4a24      	ldr	r2, [pc, #144]	; (80025fc <gyro_disable+0xb8>)
 800256c:	f023 030c 	bic.w	r3, r3, #12
 8002570:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= GPIO_MODER_MODER1_0;    // Set PC1 as output
 8002572:	4b22      	ldr	r3, [pc, #136]	; (80025fc <gyro_disable+0xb8>)
 8002574:	681b      	ldr	r3, [r3, #0]
 8002576:	4a21      	ldr	r2, [pc, #132]	; (80025fc <gyro_disable+0xb8>)
 8002578:	f043 0304 	orr.w	r3, r3, #4
 800257c:	6013      	str	r3, [r2, #0]
    GPIOC->BSRR |= GPIO_BSRR_BR1;       // Set GYRO (CS) to 0 for a short time
 800257e:	4b1f      	ldr	r3, [pc, #124]	; (80025fc <gyro_disable+0xb8>)
 8002580:	699b      	ldr	r3, [r3, #24]
 8002582:	4a1e      	ldr	r2, [pc, #120]	; (80025fc <gyro_disable+0xb8>)
 8002584:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002588:	6193      	str	r3, [r2, #24]
    HAL_Delay(10);                      // Wait some time
 800258a:	200a      	movs	r0, #10
 800258c:	f003 fb10 	bl	8005bb0 <HAL_Delay>
    GPIOC->MODER |= GPIO_MODER_MODER1_Msk; // Analog mode PC1 = ADC123_IN11
 8002590:	4b1a      	ldr	r3, [pc, #104]	; (80025fc <gyro_disable+0xb8>)
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	4a19      	ldr	r2, [pc, #100]	; (80025fc <gyro_disable+0xb8>)
 8002596:	f043 030c 	orr.w	r3, r3, #12
 800259a:	6013      	str	r3, [r2, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();       // Enable Clock for GPIO port F
 800259c:	2300      	movs	r3, #0
 800259e:	603b      	str	r3, [r7, #0]
 80025a0:	4b15      	ldr	r3, [pc, #84]	; (80025f8 <gyro_disable+0xb4>)
 80025a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025a4:	4a14      	ldr	r2, [pc, #80]	; (80025f8 <gyro_disable+0xb4>)
 80025a6:	f043 0320 	orr.w	r3, r3, #32
 80025aa:	6313      	str	r3, [r2, #48]	; 0x30
 80025ac:	4b12      	ldr	r3, [pc, #72]	; (80025f8 <gyro_disable+0xb4>)
 80025ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025b0:	f003 0320 	and.w	r3, r3, #32
 80025b4:	603b      	str	r3, [r7, #0]
 80025b6:	683b      	ldr	r3, [r7, #0]
    GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8;    // Reset speed of PF8
 80025b8:	4b11      	ldr	r3, [pc, #68]	; (8002600 <gyro_disable+0xbc>)
 80025ba:	689b      	ldr	r3, [r3, #8]
 80025bc:	4a10      	ldr	r2, [pc, #64]	; (8002600 <gyro_disable+0xbc>)
 80025be:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80025c2:	6093      	str	r3, [r2, #8]
    GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8;         // Reset alternate func. of PF8
 80025c4:	4b0e      	ldr	r3, [pc, #56]	; (8002600 <gyro_disable+0xbc>)
 80025c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025c8:	4a0d      	ldr	r2, [pc, #52]	; (8002600 <gyro_disable+0xbc>)
 80025ca:	f023 030f 	bic.w	r3, r3, #15
 80025ce:	6253      	str	r3, [r2, #36]	; 0x24
    GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8;          // Reset pulup/down of PF8
 80025d0:	4b0b      	ldr	r3, [pc, #44]	; (8002600 <gyro_disable+0xbc>)
 80025d2:	68db      	ldr	r3, [r3, #12]
 80025d4:	4a0a      	ldr	r2, [pc, #40]	; (8002600 <gyro_disable+0xbc>)
 80025d6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80025da:	60d3      	str	r3, [r2, #12]
    HAL_Delay(10);                      // Wait some time
 80025dc:	200a      	movs	r0, #10
 80025de:	f003 fae7 	bl	8005bb0 <HAL_Delay>
    GPIOF->MODER |= GPIO_MODER_MODER8_Msk; // Analog mode for PF6 = ADC3_IN4
 80025e2:	4b07      	ldr	r3, [pc, #28]	; (8002600 <gyro_disable+0xbc>)
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	4a06      	ldr	r2, [pc, #24]	; (8002600 <gyro_disable+0xbc>)
 80025e8:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 80025ec:	6013      	str	r3, [r2, #0]
}
 80025ee:	bf00      	nop
 80025f0:	3708      	adds	r7, #8
 80025f2:	46bd      	mov	sp, r7
 80025f4:	bd80      	pop	{r7, pc}
 80025f6:	bf00      	nop
 80025f8:	40023800 	.word	0x40023800
 80025fc:	40020800 	.word	0x40020800
 8002600:	40021400 	.word	0x40021400

08002604 <__NVIC_EnableIRQ>:
{
 8002604:	b480      	push	{r7}
 8002606:	b083      	sub	sp, #12
 8002608:	af00      	add	r7, sp, #0
 800260a:	4603      	mov	r3, r0
 800260c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800260e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002612:	2b00      	cmp	r3, #0
 8002614:	db0b      	blt.n	800262e <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002616:	79fb      	ldrb	r3, [r7, #7]
 8002618:	f003 021f 	and.w	r2, r3, #31
 800261c:	4907      	ldr	r1, [pc, #28]	; (800263c <__NVIC_EnableIRQ+0x38>)
 800261e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002622:	095b      	lsrs	r3, r3, #5
 8002624:	2001      	movs	r0, #1
 8002626:	fa00 f202 	lsl.w	r2, r0, r2
 800262a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800262e:	bf00      	nop
 8002630:	370c      	adds	r7, #12
 8002632:	46bd      	mov	sp, r7
 8002634:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002638:	4770      	bx	lr
 800263a:	bf00      	nop
 800263c:	e000e100 	.word	0xe000e100

08002640 <__NVIC_DisableIRQ>:
{
 8002640:	b480      	push	{r7}
 8002642:	b083      	sub	sp, #12
 8002644:	af00      	add	r7, sp, #0
 8002646:	4603      	mov	r3, r0
 8002648:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800264a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800264e:	2b00      	cmp	r3, #0
 8002650:	db12      	blt.n	8002678 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002652:	79fb      	ldrb	r3, [r7, #7]
 8002654:	f003 021f 	and.w	r2, r3, #31
 8002658:	490a      	ldr	r1, [pc, #40]	; (8002684 <__NVIC_DisableIRQ+0x44>)
 800265a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800265e:	095b      	lsrs	r3, r3, #5
 8002660:	2001      	movs	r0, #1
 8002662:	fa00 f202 	lsl.w	r2, r0, r2
 8002666:	3320      	adds	r3, #32
 8002668:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800266c:	f3bf 8f4f 	dsb	sy
}
 8002670:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8002672:	f3bf 8f6f 	isb	sy
}
 8002676:	bf00      	nop
}
 8002678:	bf00      	nop
 800267a:	370c      	adds	r7, #12
 800267c:	46bd      	mov	sp, r7
 800267e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002682:	4770      	bx	lr
 8002684:	e000e100 	.word	0xe000e100

08002688 <__NVIC_ClearPendingIRQ>:
{
 8002688:	b480      	push	{r7}
 800268a:	b083      	sub	sp, #12
 800268c:	af00      	add	r7, sp, #0
 800268e:	4603      	mov	r3, r0
 8002690:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002692:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002696:	2b00      	cmp	r3, #0
 8002698:	db0c      	blt.n	80026b4 <__NVIC_ClearPendingIRQ+0x2c>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800269a:	79fb      	ldrb	r3, [r7, #7]
 800269c:	f003 021f 	and.w	r2, r3, #31
 80026a0:	4907      	ldr	r1, [pc, #28]	; (80026c0 <__NVIC_ClearPendingIRQ+0x38>)
 80026a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80026a6:	095b      	lsrs	r3, r3, #5
 80026a8:	2001      	movs	r0, #1
 80026aa:	fa00 f202 	lsl.w	r2, r0, r2
 80026ae:	3360      	adds	r3, #96	; 0x60
 80026b0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80026b4:	bf00      	nop
 80026b6:	370c      	adds	r7, #12
 80026b8:	46bd      	mov	sp, r7
 80026ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026be:	4770      	bx	lr
 80026c0:	e000e100 	.word	0xe000e100

080026c4 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3
 * - ADC12_IN5 = GPIO PA5
 * - DAC_OUT2 = GPIO PA5 (= same GPIO as ADC12_IN5)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 80026c4:	b480      	push	{r7}
 80026c6:	b083      	sub	sp, #12
 80026c8:	af00      	add	r7, sp, #0
    __HAL_RCC_GPIOF_CLK_ENABLE();       // Enable Clock for GPIO port F
 80026ca:	2300      	movs	r3, #0
 80026cc:	607b      	str	r3, [r7, #4]
 80026ce:	4b16      	ldr	r3, [pc, #88]	; (8002728 <MEAS_GPIO_analog_init+0x64>)
 80026d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80026d2:	4a15      	ldr	r2, [pc, #84]	; (8002728 <MEAS_GPIO_analog_init+0x64>)
 80026d4:	f043 0320 	orr.w	r3, r3, #32
 80026d8:	6313      	str	r3, [r2, #48]	; 0x30
 80026da:	4b13      	ldr	r3, [pc, #76]	; (8002728 <MEAS_GPIO_analog_init+0x64>)
 80026dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80026de:	f003 0320 	and.w	r3, r3, #32
 80026e2:	607b      	str	r3, [r7, #4]
 80026e4:	687b      	ldr	r3, [r7, #4]
    GPIOF->MODER |= (GPIO_MODER_MODER6_Msk);// Analog mode for PF6 = ADC3_IN4
 80026e6:	4b11      	ldr	r3, [pc, #68]	; (800272c <MEAS_GPIO_analog_init+0x68>)
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	4a10      	ldr	r2, [pc, #64]	; (800272c <MEAS_GPIO_analog_init+0x68>)
 80026ec:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 80026f0:	6013      	str	r3, [r2, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();       // Enable Clock for GPIO port C
 80026f2:	2300      	movs	r3, #0
 80026f4:	603b      	str	r3, [r7, #0]
 80026f6:	4b0c      	ldr	r3, [pc, #48]	; (8002728 <MEAS_GPIO_analog_init+0x64>)
 80026f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80026fa:	4a0b      	ldr	r2, [pc, #44]	; (8002728 <MEAS_GPIO_analog_init+0x64>)
 80026fc:	f043 0304 	orr.w	r3, r3, #4
 8002700:	6313      	str	r3, [r2, #48]	; 0x30
 8002702:	4b09      	ldr	r3, [pc, #36]	; (8002728 <MEAS_GPIO_analog_init+0x64>)
 8002704:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002706:	f003 0304 	and.w	r3, r3, #4
 800270a:	603b      	str	r3, [r7, #0]
 800270c:	683b      	ldr	r3, [r7, #0]
    GPIOC->MODER |= (GPIO_MODER_MODER3_Msk);// Analog mode for PC3 = ADC123_IN13
 800270e:	4b08      	ldr	r3, [pc, #32]	; (8002730 <MEAS_GPIO_analog_init+0x6c>)
 8002710:	681b      	ldr	r3, [r3, #0]
 8002712:	4a07      	ldr	r2, [pc, #28]	; (8002730 <MEAS_GPIO_analog_init+0x6c>)
 8002714:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8002718:	6013      	str	r3, [r2, #0]
    //__HAL_RCC_GPIOA_CLK_ENABLE();       // Enable Clock for GPIO port A
    //GPIOA->MODER |= (GPIO_MODER_MODER5_Msk);// Analog mode for PA5 ADC12_IN5
}
 800271a:	bf00      	nop
 800271c:	370c      	adds	r7, #12
 800271e:	46bd      	mov	sp, r7
 8002720:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002724:	4770      	bx	lr
 8002726:	bf00      	nop
 8002728:	40023800 	.word	0x40023800
 800272c:	40021400 	.word	0x40021400
 8002730:	40020800 	.word	0x40020800

08002734 <DAC_increment>:

/** ***************************************************************************
 * @brief Increment the DAC value and write it to the output
 *
 *****************************************************************************/
void DAC_increment(void) {
 8002734:	b480      	push	{r7}
 8002736:	af00      	add	r7, sp, #0
    DAC_sample += 20;               // Increment DAC output
 8002738:	4b0a      	ldr	r3, [pc, #40]	; (8002764 <DAC_increment+0x30>)
 800273a:	681b      	ldr	r3, [r3, #0]
 800273c:	3314      	adds	r3, #20
 800273e:	4a09      	ldr	r2, [pc, #36]	; (8002764 <DAC_increment+0x30>)
 8002740:	6013      	str	r3, [r2, #0]
    if (DAC_sample >= (1UL << ADC_DAC_RES)) { DAC_sample = 0; } // Go to 0
 8002742:	4b08      	ldr	r3, [pc, #32]	; (8002764 <DAC_increment+0x30>)
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800274a:	d302      	bcc.n	8002752 <DAC_increment+0x1e>
 800274c:	4b05      	ldr	r3, [pc, #20]	; (8002764 <DAC_increment+0x30>)
 800274e:	2200      	movs	r2, #0
 8002750:	601a      	str	r2, [r3, #0]
    DAC->DHR12R2 = DAC_sample;      // Write new DAC output value
 8002752:	4a05      	ldr	r2, [pc, #20]	; (8002768 <DAC_increment+0x34>)
 8002754:	4b03      	ldr	r3, [pc, #12]	; (8002764 <DAC_increment+0x30>)
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	6153      	str	r3, [r2, #20]
}
 800275a:	bf00      	nop
 800275c:	46bd      	mov	sp, r7
 800275e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002762:	4770      	bx	lr
 8002764:	20000f6c 	.word	0x20000f6c
 8002768:	40007400 	.word	0x40007400

0800276c <ADC_reset>:
/** ***************************************************************************
 * @brief Resets the ADCs and the timer
 *
 * to make sure the different demos do not interfere.
 *****************************************************************************/
void ADC_reset(void) {
 800276c:	b480      	push	{r7}
 800276e:	af00      	add	r7, sp, #0
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8002770:	4b0c      	ldr	r3, [pc, #48]	; (80027a4 <ADC_reset+0x38>)
 8002772:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002774:	4a0b      	ldr	r2, [pc, #44]	; (80027a4 <ADC_reset+0x38>)
 8002776:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800277a:	6253      	str	r3, [r2, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 800277c:	4b09      	ldr	r3, [pc, #36]	; (80027a4 <ADC_reset+0x38>)
 800277e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002780:	4a08      	ldr	r2, [pc, #32]	; (80027a4 <ADC_reset+0x38>)
 8002782:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002786:	6253      	str	r3, [r2, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8002788:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800278c:	681b      	ldr	r3, [r3, #0]
 800278e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002792:	f023 0301 	bic.w	r3, r3, #1
 8002796:	6013      	str	r3, [r2, #0]
}
 8002798:	bf00      	nop
 800279a:	46bd      	mov	sp, r7
 800279c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027a0:	4770      	bx	lr
 80027a2:	bf00      	nop
 80027a4:	40023800 	.word	0x40023800

080027a8 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 80027a8:	b580      	push	{r7, lr}
 80027aa:	b082      	sub	sp, #8
 80027ac:	af00      	add	r7, sp, #0
    __HAL_RCC_TIM2_CLK_ENABLE();        // Enable Clock for TIM2
 80027ae:	2300      	movs	r3, #0
 80027b0:	607b      	str	r3, [r7, #4]
 80027b2:	4b17      	ldr	r3, [pc, #92]	; (8002810 <MEAS_timer_init+0x68>)
 80027b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027b6:	4a16      	ldr	r2, [pc, #88]	; (8002810 <MEAS_timer_init+0x68>)
 80027b8:	f043 0301 	orr.w	r3, r3, #1
 80027bc:	6413      	str	r3, [r2, #64]	; 0x40
 80027be:	4b14      	ldr	r3, [pc, #80]	; (8002810 <MEAS_timer_init+0x68>)
 80027c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027c2:	f003 0301 	and.w	r3, r3, #1
 80027c6:	607b      	str	r3, [r7, #4]
 80027c8:	687b      	ldr	r3, [r7, #4]
    TIM2->PSC = TIM_PRESCALE;           // Prescaler for clock freq. = 1MHz
 80027ca:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80027ce:	f243 3244 	movw	r2, #13124	; 0x3344
 80027d2:	629a      	str	r2, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;                // Auto reload = counter top value
 80027d4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80027d8:	2209      	movs	r2, #9
 80027da:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;         // TRGO on update
 80027dc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80027e0:	685b      	ldr	r3, [r3, #4]
 80027e2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80027e6:	f043 0320 	orr.w	r3, r3, #32
 80027ea:	6053      	str	r3, [r2, #4]
    /* If timer interrupt is not needed, comment the following lines */
    TIM2->DIER |= TIM_DIER_UIE;         // Enable update interrupt
 80027ec:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80027f0:	68db      	ldr	r3, [r3, #12]
 80027f2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80027f6:	f043 0301 	orr.w	r3, r3, #1
 80027fa:	60d3      	str	r3, [r2, #12]
    NVIC_ClearPendingIRQ(TIM2_IRQn);    // Clear pending interrupt on line 0
 80027fc:	201c      	movs	r0, #28
 80027fe:	f7ff ff43 	bl	8002688 <__NVIC_ClearPendingIRQ>
    NVIC_EnableIRQ(TIM2_IRQn);          // Enable interrupt line 0 in the NVIC
 8002802:	201c      	movs	r0, #28
 8002804:	f7ff fefe 	bl	8002604 <__NVIC_EnableIRQ>
}
 8002808:	bf00      	nop
 800280a:	3708      	adds	r7, #8
 800280c:	46bd      	mov	sp, r7
 800280e:	bd80      	pop	{r7, pc}
 8002810:	40023800 	.word	0x40023800

08002814 <ADC3_IN4_timer_init>:
 * -ADC3_IN6 = GPIO PF8
 * -ADC3_IN11 = GPIO PC1
 *
 *****************************************************************************/
void ADC3_IN4_timer_init(void)
{
 8002814:	b480      	push	{r7}
 8002816:	b083      	sub	sp, #12
 8002818:	af00      	add	r7, sp, #0
    MEAS_input_count = 4;                       // 4 inputs to convert
 800281a:	4b2c      	ldr	r3, [pc, #176]	; (80028cc <ADC3_IN4_timer_init+0xb8>)
 800281c:	2204      	movs	r2, #4
 800281e:	601a      	str	r2, [r3, #0]
    __HAL_RCC_ADC3_CLK_ENABLE();                // Enable Clock for ADC3
 8002820:	2300      	movs	r3, #0
 8002822:	607b      	str	r3, [r7, #4]
 8002824:	4b2a      	ldr	r3, [pc, #168]	; (80028d0 <ADC3_IN4_timer_init+0xbc>)
 8002826:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002828:	4a29      	ldr	r2, [pc, #164]	; (80028d0 <ADC3_IN4_timer_init+0xbc>)
 800282a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800282e:	6453      	str	r3, [r2, #68]	; 0x44
 8002830:	4b27      	ldr	r3, [pc, #156]	; (80028d0 <ADC3_IN4_timer_init+0xbc>)
 8002832:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002834:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002838:	607b      	str	r3, [r7, #4]
 800283a:	687b      	ldr	r3, [r7, #4]
    ADC3->SQR1 |= ( 3UL << ADC_SQR1_L_Pos);     // Scan mode scans 4 conversions
 800283c:	4b25      	ldr	r3, [pc, #148]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 800283e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002840:	4a24      	ldr	r2, [pc, #144]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 8002842:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8002846:	62d3      	str	r3, [r2, #44]	; 0x2c

    ADC3->SQR3 |= ( 4UL << ADC_SQR3_SQ1_Pos); // IN4  (PF6): 1st conversion PAD_LEFT
 8002848:	4b22      	ldr	r3, [pc, #136]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 800284a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800284c:	4a21      	ldr	r2, [pc, #132]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 800284e:	f043 0304 	orr.w	r3, r3, #4
 8002852:	6353      	str	r3, [r2, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos); // IN13 (PC3): 2nd conversion PAD_RIGHT
 8002854:	4b1f      	ldr	r3, [pc, #124]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 8002856:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002858:	4a1e      	ldr	r2, [pc, #120]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 800285a:	f443 73d0 	orr.w	r3, r3, #416	; 0x1a0
 800285e:	6353      	str	r3, [r2, #52]	; 0x34
    ADC3->SQR3 |= ( 6UL << ADC_SQR3_SQ3_Pos); // IN6  (PF8): 3rd conversion COIL_LEFT
 8002860:	4b1c      	ldr	r3, [pc, #112]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 8002862:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002864:	4a1b      	ldr	r2, [pc, #108]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 8002866:	f443 53c0 	orr.w	r3, r3, #6144	; 0x1800
 800286a:	6353      	str	r3, [r2, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos); // IN11 (PC1): 4th conversion COIL_RIGHT
 800286c:	4b19      	ldr	r3, [pc, #100]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 800286e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002870:	4a18      	ldr	r2, [pc, #96]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 8002872:	f443 23b0 	orr.w	r3, r3, #360448	; 0x58000
 8002876:	6353      	str	r3, [r2, #52]	; 0x34

    ADC3->CR1 |= ADC_CR1_EOCIE;                 // Enable end of conversion interrupt
 8002878:	4b16      	ldr	r3, [pc, #88]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 800287a:	685b      	ldr	r3, [r3, #4]
 800287c:	4a15      	ldr	r2, [pc, #84]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 800287e:	f043 0320 	orr.w	r3, r3, #32
 8002882:	6053      	str	r3, [r2, #4]
    ADC3->CR1 |= ADC_CR1_SCAN;                  // Turn on scan mode
 8002884:	4b13      	ldr	r3, [pc, #76]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 8002886:	685b      	ldr	r3, [r3, #4]
 8002888:	4a12      	ldr	r2, [pc, #72]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 800288a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800288e:	6053      	str	r3, [r2, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);    // En. ext. trigger on rising e.
 8002890:	4b10      	ldr	r3, [pc, #64]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 8002892:	689b      	ldr	r3, [r3, #8]
 8002894:	4a0f      	ldr	r2, [pc, #60]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 8002896:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800289a:	6093      	str	r3, [r2, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);   // Timer 2 TRGO event
 800289c:	4b0d      	ldr	r3, [pc, #52]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 800289e:	689b      	ldr	r3, [r3, #8]
 80028a0:	4a0c      	ldr	r2, [pc, #48]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 80028a2:	f043 63c0 	orr.w	r3, r3, #100663296	; 0x6000000
 80028a6:	6093      	str	r3, [r2, #8]
    ADC3->CR2 |= (ADC_CR2_EOCS);                // Notify EOC after each scanned channel
 80028a8:	4b0a      	ldr	r3, [pc, #40]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 80028aa:	689b      	ldr	r3, [r3, #8]
 80028ac:	4a09      	ldr	r2, [pc, #36]	; (80028d4 <ADC3_IN4_timer_init+0xc0>)
 80028ae:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80028b2:	6093      	str	r3, [r2, #8]
    ADC->CCR |=  (3UL <<ADC_CCR_ADCPRE_Pos);    // ADC Prescaler DIV8
 80028b4:	4b08      	ldr	r3, [pc, #32]	; (80028d8 <ADC3_IN4_timer_init+0xc4>)
 80028b6:	685b      	ldr	r3, [r3, #4]
 80028b8:	4a07      	ldr	r2, [pc, #28]	; (80028d8 <ADC3_IN4_timer_init+0xc4>)
 80028ba:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 80028be:	6053      	str	r3, [r2, #4]

}
 80028c0:	bf00      	nop
 80028c2:	370c      	adds	r7, #12
 80028c4:	46bd      	mov	sp, r7
 80028c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ca:	4770      	bx	lr
 80028cc:	20000004 	.word	0x20000004
 80028d0:	40023800 	.word	0x40023800
 80028d4:	40012200 	.word	0x40012200
 80028d8:	40012300 	.word	0x40012300

080028dc <ADC3_IN4_timer_start>:
 *
 * The ADC isues an end of conversion interrupt.
 * The converted value can be read in the associated interrupt handler.
 *****************************************************************************/
void ADC3_IN4_timer_start(void)
{
 80028dc:	b580      	push	{r7, lr}
 80028de:	af00      	add	r7, sp, #0
    NVIC_ClearPendingIRQ(ADC_IRQn);     // Clear pending interrupt on line 0
 80028e0:	2012      	movs	r0, #18
 80028e2:	f7ff fed1 	bl	8002688 <__NVIC_ClearPendingIRQ>
    NVIC_EnableIRQ(ADC_IRQn);           // Enable interrupt line 0 in the NVIC
 80028e6:	2012      	movs	r0, #18
 80028e8:	f7ff fe8c 	bl	8002604 <__NVIC_EnableIRQ>
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80028ec:	4b07      	ldr	r3, [pc, #28]	; (800290c <ADC3_IN4_timer_start+0x30>)
 80028ee:	689b      	ldr	r3, [r3, #8]
 80028f0:	4a06      	ldr	r2, [pc, #24]	; (800290c <ADC3_IN4_timer_start+0x30>)
 80028f2:	f043 0301 	orr.w	r3, r3, #1
 80028f6:	6093      	str	r3, [r2, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 80028f8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80028fc:	681b      	ldr	r3, [r3, #0]
 80028fe:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002902:	f043 0301 	orr.w	r3, r3, #1
 8002906:	6013      	str	r3, [r2, #0]
}
 8002908:	bf00      	nop
 800290a:	bd80      	pop	{r7, pc}
 800290c:	40012200 	.word	0x40012200

08002910 <TIM2_IRQHandler>:
 *
 * @note This interrupt handler was only used for debugging purposes
 * and to increment the DAC value.
 *****************************************************************************/
void TIM2_IRQHandler(void)
{
 8002910:	b580      	push	{r7, lr}
 8002912:	af00      	add	r7, sp, #0
    TIM2->SR &= ~TIM_SR_UIF;            // Clear pending interrupt flag
 8002914:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002918:	691b      	ldr	r3, [r3, #16]
 800291a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800291e:	f023 0301 	bic.w	r3, r3, #1
 8002922:	6113      	str	r3, [r2, #16]
    if (DAC_active) {
 8002924:	4b03      	ldr	r3, [pc, #12]	; (8002934 <TIM2_IRQHandler+0x24>)
 8002926:	781b      	ldrb	r3, [r3, #0]
 8002928:	2b00      	cmp	r3, #0
 800292a:	d001      	beq.n	8002930 <TIM2_IRQHandler+0x20>
        DAC_increment();
 800292c:	f7ff ff02 	bl	8002734 <DAC_increment>
    }
}
 8002930:	bf00      	nop
 8002932:	bd80      	pop	{r7, pc}
 8002934:	20000b65 	.word	0x20000b65

08002938 <ADC_IRQHandler>:
 *
 * Reads one sample from the ADC3 DataRegister and transfers it to a buffer.
 * @n Stops when four times the ADC_NUMS samples have been read.
 *****************************************************************************/
void ADC_IRQHandler(void)
{
 8002938:	b580      	push	{r7, lr}
 800293a:	af00      	add	r7, sp, #0
    if (ADC3->SR & ADC_SR_EOC) {        // Check if ADC3 end of conversion
 800293c:	4b14      	ldr	r3, [pc, #80]	; (8002990 <ADC_IRQHandler+0x58>)
 800293e:	681b      	ldr	r3, [r3, #0]
 8002940:	f003 0302 	and.w	r3, r3, #2
 8002944:	2b00      	cmp	r3, #0
 8002946:	d020      	beq.n	800298a <ADC_IRQHandler+0x52>
        ADC_samples[ADC_sample_count++] = ADC3->DR; // Read input of 4 channels
 8002948:	4911      	ldr	r1, [pc, #68]	; (8002990 <ADC_IRQHandler+0x58>)
 800294a:	4b12      	ldr	r3, [pc, #72]	; (8002994 <ADC_IRQHandler+0x5c>)
 800294c:	681b      	ldr	r3, [r3, #0]
 800294e:	1c5a      	adds	r2, r3, #1
 8002950:	4810      	ldr	r0, [pc, #64]	; (8002994 <ADC_IRQHandler+0x5c>)
 8002952:	6002      	str	r2, [r0, #0]
 8002954:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 8002956:	4910      	ldr	r1, [pc, #64]	; (8002998 <ADC_IRQHandler+0x60>)
 8002958:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        if (ADC_sample_count >= 4*ADC_NUMS) {       // Buffer full
 800295c:	4b0d      	ldr	r3, [pc, #52]	; (8002994 <ADC_IRQHandler+0x5c>)
 800295e:	681b      	ldr	r3, [r3, #0]
 8002960:	2bff      	cmp	r3, #255	; 0xff
 8002962:	d912      	bls.n	800298a <ADC_IRQHandler+0x52>
            TIM2->CR1 &= ~TIM_CR1_CEN;  // Disable timer
 8002964:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800296e:	f023 0301 	bic.w	r3, r3, #1
 8002972:	6013      	str	r3, [r2, #0]
            ADC3->CR2 &= ~ADC_CR2_ADON; // Disable ADC3
 8002974:	4b06      	ldr	r3, [pc, #24]	; (8002990 <ADC_IRQHandler+0x58>)
 8002976:	689b      	ldr	r3, [r3, #8]
 8002978:	4a05      	ldr	r2, [pc, #20]	; (8002990 <ADC_IRQHandler+0x58>)
 800297a:	f023 0301 	bic.w	r3, r3, #1
 800297e:	6093      	str	r3, [r2, #8]
            ADC_reset();
 8002980:	f7ff fef4 	bl	800276c <ADC_reset>
            MEAS_data_ready = true;
 8002984:	4b05      	ldr	r3, [pc, #20]	; (800299c <ADC_IRQHandler+0x64>)
 8002986:	2201      	movs	r2, #1
 8002988:	701a      	strb	r2, [r3, #0]
        }

    }
}
 800298a:	bf00      	nop
 800298c:	bd80      	pop	{r7, pc}
 800298e:	bf00      	nop
 8002990:	40012200 	.word	0x40012200
 8002994:	20000b68 	.word	0x20000b68
 8002998:	20000b6c 	.word	0x20000b6c
 800299c:	20000b64 	.word	0x20000b64

080029a0 <MEAS_return_data>:
 * @brief returns the ADC_samples
 *
 * This is used to access the sampling data in other files.
 *
 *****************************************************************************/
uint32_t MEAS_return_data(int i){
 80029a0:	b480      	push	{r7}
 80029a2:	b083      	sub	sp, #12
 80029a4:	af00      	add	r7, sp, #0
 80029a6:	6078      	str	r0, [r7, #4]
    return ADC_samples[i];
 80029a8:	4a04      	ldr	r2, [pc, #16]	; (80029bc <MEAS_return_data+0x1c>)
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
}
 80029b0:	4618      	mov	r0, r3
 80029b2:	370c      	adds	r7, #12
 80029b4:	46bd      	mov	sp, r7
 80029b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ba:	4770      	bx	lr
 80029bc:	20000b6c 	.word	0x20000b6c

080029c0 <DMA2_Stream1_IRQHandler>:
 *
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
 80029c0:	b580      	push	{r7, lr}
 80029c2:	af00      	add	r7, sp, #0
    if (DMA2->LISR & DMA_LISR_TCIF1) {  // Stream1 transfer compl. interrupt f.
 80029c4:	4b1c      	ldr	r3, [pc, #112]	; (8002a38 <DMA2_Stream1_IRQHandler+0x78>)
 80029c6:	681b      	ldr	r3, [r3, #0]
 80029c8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80029cc:	2b00      	cmp	r3, #0
 80029ce:	d031      	beq.n	8002a34 <DMA2_Stream1_IRQHandler+0x74>
        NVIC_DisableIRQ(DMA2_Stream1_IRQn); // Disable DMA interrupt in the NVIC
 80029d0:	2039      	movs	r0, #57	; 0x39
 80029d2:	f7ff fe35 	bl	8002640 <__NVIC_DisableIRQ>
        NVIC_ClearPendingIRQ(DMA2_Stream1_IRQn);// Clear pending DMA interrupt
 80029d6:	2039      	movs	r0, #57	; 0x39
 80029d8:	f7ff fe56 	bl	8002688 <__NVIC_ClearPendingIRQ>
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;   // Disable the DMA
 80029dc:	4b17      	ldr	r3, [pc, #92]	; (8002a3c <DMA2_Stream1_IRQHandler+0x7c>)
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	4a16      	ldr	r2, [pc, #88]	; (8002a3c <DMA2_Stream1_IRQHandler+0x7c>)
 80029e2:	f023 0301 	bic.w	r3, r3, #1
 80029e6:	6013      	str	r3, [r2, #0]
        while (DMA2_Stream1->CR & DMA_SxCR_EN) { ; }    // Wait for DMA to finish
 80029e8:	bf00      	nop
 80029ea:	4b14      	ldr	r3, [pc, #80]	; (8002a3c <DMA2_Stream1_IRQHandler+0x7c>)
 80029ec:	681b      	ldr	r3, [r3, #0]
 80029ee:	f003 0301 	and.w	r3, r3, #1
 80029f2:	2b00      	cmp	r3, #0
 80029f4:	d1f9      	bne.n	80029ea <DMA2_Stream1_IRQHandler+0x2a>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// Clear transfer complete interrupt fl.
 80029f6:	4b10      	ldr	r3, [pc, #64]	; (8002a38 <DMA2_Stream1_IRQHandler+0x78>)
 80029f8:	689b      	ldr	r3, [r3, #8]
 80029fa:	4a0f      	ldr	r2, [pc, #60]	; (8002a38 <DMA2_Stream1_IRQHandler+0x78>)
 80029fc:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002a00:	6093      	str	r3, [r2, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;      // Disable timer
 8002a02:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002a0c:	f023 0301 	bic.w	r3, r3, #1
 8002a10:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;     // Disable ADC3
 8002a12:	4b0b      	ldr	r3, [pc, #44]	; (8002a40 <DMA2_Stream1_IRQHandler+0x80>)
 8002a14:	689b      	ldr	r3, [r3, #8]
 8002a16:	4a0a      	ldr	r2, [pc, #40]	; (8002a40 <DMA2_Stream1_IRQHandler+0x80>)
 8002a18:	f023 0301 	bic.w	r3, r3, #1
 8002a1c:	6093      	str	r3, [r2, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;      // Disable DMA mode
 8002a1e:	4b08      	ldr	r3, [pc, #32]	; (8002a40 <DMA2_Stream1_IRQHandler+0x80>)
 8002a20:	689b      	ldr	r3, [r3, #8]
 8002a22:	4a07      	ldr	r2, [pc, #28]	; (8002a40 <DMA2_Stream1_IRQHandler+0x80>)
 8002a24:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002a28:	6093      	str	r3, [r2, #8]
        ADC_reset();
 8002a2a:	f7ff fe9f 	bl	800276c <ADC_reset>
        MEAS_data_ready = true;
 8002a2e:	4b05      	ldr	r3, [pc, #20]	; (8002a44 <DMA2_Stream1_IRQHandler+0x84>)
 8002a30:	2201      	movs	r2, #1
 8002a32:	701a      	strb	r2, [r3, #0]
    }
}
 8002a34:	bf00      	nop
 8002a36:	bd80      	pop	{r7, pc}
 8002a38:	40026400 	.word	0x40026400
 8002a3c:	40026428 	.word	0x40026428
 8002a40:	40012200 	.word	0x40012200
 8002a44:	20000b64 	.word	0x20000b64

08002a48 <DMA2_Stream3_IRQHandler>:
 *
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream3_IRQHandler(void)
{
 8002a48:	b580      	push	{r7, lr}
 8002a4a:	af00      	add	r7, sp, #0
    if (DMA2->LISR & DMA_LISR_TCIF3) {  // Stream3 transfer compl. interrupt f.
 8002a4c:	4b1c      	ldr	r3, [pc, #112]	; (8002ac0 <DMA2_Stream3_IRQHandler+0x78>)
 8002a4e:	681b      	ldr	r3, [r3, #0]
 8002a50:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8002a54:	2b00      	cmp	r3, #0
 8002a56:	d031      	beq.n	8002abc <DMA2_Stream3_IRQHandler+0x74>
        NVIC_DisableIRQ(DMA2_Stream3_IRQn); // Disable DMA interrupt in the NVIC
 8002a58:	203b      	movs	r0, #59	; 0x3b
 8002a5a:	f7ff fdf1 	bl	8002640 <__NVIC_DisableIRQ>
        NVIC_ClearPendingIRQ(DMA2_Stream3_IRQn);// Clear pending DMA interrupt
 8002a5e:	203b      	movs	r0, #59	; 0x3b
 8002a60:	f7ff fe12 	bl	8002688 <__NVIC_ClearPendingIRQ>
        DMA2_Stream3->CR &= ~DMA_SxCR_EN;   // Disable the DMA
 8002a64:	4b17      	ldr	r3, [pc, #92]	; (8002ac4 <DMA2_Stream3_IRQHandler+0x7c>)
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	4a16      	ldr	r2, [pc, #88]	; (8002ac4 <DMA2_Stream3_IRQHandler+0x7c>)
 8002a6a:	f023 0301 	bic.w	r3, r3, #1
 8002a6e:	6013      	str	r3, [r2, #0]
        while (DMA2_Stream3->CR & DMA_SxCR_EN) { ; }    // Wait for DMA to finish
 8002a70:	bf00      	nop
 8002a72:	4b14      	ldr	r3, [pc, #80]	; (8002ac4 <DMA2_Stream3_IRQHandler+0x7c>)
 8002a74:	681b      	ldr	r3, [r3, #0]
 8002a76:	f003 0301 	and.w	r3, r3, #1
 8002a7a:	2b00      	cmp	r3, #0
 8002a7c:	d1f9      	bne.n	8002a72 <DMA2_Stream3_IRQHandler+0x2a>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF3;// Clear transfer complete interrupt fl.
 8002a7e:	4b10      	ldr	r3, [pc, #64]	; (8002ac0 <DMA2_Stream3_IRQHandler+0x78>)
 8002a80:	689b      	ldr	r3, [r3, #8]
 8002a82:	4a0f      	ldr	r2, [pc, #60]	; (8002ac0 <DMA2_Stream3_IRQHandler+0x78>)
 8002a84:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8002a88:	6093      	str	r3, [r2, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;      // Disable timer
 8002a8a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002a8e:	681b      	ldr	r3, [r3, #0]
 8002a90:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002a94:	f023 0301 	bic.w	r3, r3, #1
 8002a98:	6013      	str	r3, [r2, #0]
        ADC2->CR2 &= ~ADC_CR2_ADON;     // Disable ADC2
 8002a9a:	4b0b      	ldr	r3, [pc, #44]	; (8002ac8 <DMA2_Stream3_IRQHandler+0x80>)
 8002a9c:	689b      	ldr	r3, [r3, #8]
 8002a9e:	4a0a      	ldr	r2, [pc, #40]	; (8002ac8 <DMA2_Stream3_IRQHandler+0x80>)
 8002aa0:	f023 0301 	bic.w	r3, r3, #1
 8002aa4:	6093      	str	r3, [r2, #8]
        ADC2->CR2 &= ~ADC_CR2_DMA;      // Disable DMA mode
 8002aa6:	4b08      	ldr	r3, [pc, #32]	; (8002ac8 <DMA2_Stream3_IRQHandler+0x80>)
 8002aa8:	689b      	ldr	r3, [r3, #8]
 8002aaa:	4a07      	ldr	r2, [pc, #28]	; (8002ac8 <DMA2_Stream3_IRQHandler+0x80>)
 8002aac:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002ab0:	6093      	str	r3, [r2, #8]
        ADC_reset();
 8002ab2:	f7ff fe5b 	bl	800276c <ADC_reset>
        MEAS_data_ready = true;
 8002ab6:	4b05      	ldr	r3, [pc, #20]	; (8002acc <DMA2_Stream3_IRQHandler+0x84>)
 8002ab8:	2201      	movs	r2, #1
 8002aba:	701a      	strb	r2, [r3, #0]
    }
}
 8002abc:	bf00      	nop
 8002abe:	bd80      	pop	{r7, pc}
 8002ac0:	40026400 	.word	0x40026400
 8002ac4:	40026458 	.word	0x40026458
 8002ac8:	40012100 	.word	0x40012100
 8002acc:	20000b64 	.word	0x20000b64

08002ad0 <DMA2_Stream4_IRQHandler>:
 * @note In dual ADC mode two values are combined (packed) in a single uint32_t
 * ADC_CDR[31:0] = ADC2_DR[15:0] | ADC1_DR[15:0]
 * and are therefore extracted before further processing.
 *****************************************************************************/
void DMA2_Stream4_IRQHandler(void)
{
 8002ad0:	b580      	push	{r7, lr}
 8002ad2:	b082      	sub	sp, #8
 8002ad4:	af00      	add	r7, sp, #0
    if (DMA2->HISR & DMA_HISR_TCIF4) {  // Stream4 transfer compl. interrupt f.
 8002ad6:	4b30      	ldr	r3, [pc, #192]	; (8002b98 <DMA2_Stream4_IRQHandler+0xc8>)
 8002ad8:	685b      	ldr	r3, [r3, #4]
 8002ada:	f003 0320 	and.w	r3, r3, #32
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d055      	beq.n	8002b8e <DMA2_Stream4_IRQHandler+0xbe>
        NVIC_DisableIRQ(DMA2_Stream4_IRQn); // Disable DMA interrupt in the NVIC
 8002ae2:	203c      	movs	r0, #60	; 0x3c
 8002ae4:	f7ff fdac 	bl	8002640 <__NVIC_DisableIRQ>
        NVIC_ClearPendingIRQ(DMA2_Stream4_IRQn);// Clear pending DMA interrupt
 8002ae8:	203c      	movs	r0, #60	; 0x3c
 8002aea:	f7ff fdcd 	bl	8002688 <__NVIC_ClearPendingIRQ>
        DMA2_Stream4->CR &= ~DMA_SxCR_EN;   // Disable the DMA
 8002aee:	4b2b      	ldr	r3, [pc, #172]	; (8002b9c <DMA2_Stream4_IRQHandler+0xcc>)
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	4a2a      	ldr	r2, [pc, #168]	; (8002b9c <DMA2_Stream4_IRQHandler+0xcc>)
 8002af4:	f023 0301 	bic.w	r3, r3, #1
 8002af8:	6013      	str	r3, [r2, #0]
        while (DMA2_Stream4->CR & DMA_SxCR_EN) { ; }    // Wait for DMA to finish
 8002afa:	bf00      	nop
 8002afc:	4b27      	ldr	r3, [pc, #156]	; (8002b9c <DMA2_Stream4_IRQHandler+0xcc>)
 8002afe:	681b      	ldr	r3, [r3, #0]
 8002b00:	f003 0301 	and.w	r3, r3, #1
 8002b04:	2b00      	cmp	r3, #0
 8002b06:	d1f9      	bne.n	8002afc <DMA2_Stream4_IRQHandler+0x2c>
        DMA2->HIFCR |= DMA_HIFCR_CTCIF4;// Clear transfer complete interrupt fl.
 8002b08:	4b23      	ldr	r3, [pc, #140]	; (8002b98 <DMA2_Stream4_IRQHandler+0xc8>)
 8002b0a:	68db      	ldr	r3, [r3, #12]
 8002b0c:	4a22      	ldr	r2, [pc, #136]	; (8002b98 <DMA2_Stream4_IRQHandler+0xc8>)
 8002b0e:	f043 0320 	orr.w	r3, r3, #32
 8002b12:	60d3      	str	r3, [r2, #12]
        TIM2->CR1 &= ~TIM_CR1_CEN;      // Disable timer
 8002b14:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002b18:	681b      	ldr	r3, [r3, #0]
 8002b1a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002b1e:	f023 0301 	bic.w	r3, r3, #1
 8002b22:	6013      	str	r3, [r2, #0]
        ADC1->CR2 &= ~ADC_CR2_ADON;     // Disable ADC1
 8002b24:	4b1e      	ldr	r3, [pc, #120]	; (8002ba0 <DMA2_Stream4_IRQHandler+0xd0>)
 8002b26:	689b      	ldr	r3, [r3, #8]
 8002b28:	4a1d      	ldr	r2, [pc, #116]	; (8002ba0 <DMA2_Stream4_IRQHandler+0xd0>)
 8002b2a:	f023 0301 	bic.w	r3, r3, #1
 8002b2e:	6093      	str	r3, [r2, #8]
        ADC2->CR2 &= ~ADC_CR2_ADON;     // Disable ADC2
 8002b30:	4b1c      	ldr	r3, [pc, #112]	; (8002ba4 <DMA2_Stream4_IRQHandler+0xd4>)
 8002b32:	689b      	ldr	r3, [r3, #8]
 8002b34:	4a1b      	ldr	r2, [pc, #108]	; (8002ba4 <DMA2_Stream4_IRQHandler+0xd4>)
 8002b36:	f023 0301 	bic.w	r3, r3, #1
 8002b3a:	6093      	str	r3, [r2, #8]
        ADC->CCR &= ~ADC_CCR_DMA_1;     // Disable DMA mode
 8002b3c:	4b1a      	ldr	r3, [pc, #104]	; (8002ba8 <DMA2_Stream4_IRQHandler+0xd8>)
 8002b3e:	685b      	ldr	r3, [r3, #4]
 8002b40:	4a19      	ldr	r2, [pc, #100]	; (8002ba8 <DMA2_Stream4_IRQHandler+0xd8>)
 8002b42:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8002b46:	6053      	str	r3, [r2, #4]
        /* Extract combined samples */
        for (int32_t i = ADC_NUMS-1; i >= 0; i--){
 8002b48:	233f      	movs	r3, #63	; 0x3f
 8002b4a:	607b      	str	r3, [r7, #4]
 8002b4c:	e017      	b.n	8002b7e <DMA2_Stream4_IRQHandler+0xae>
            ADC_samples[2*i+1] = (ADC_samples[i] >> 16);
 8002b4e:	4a17      	ldr	r2, [pc, #92]	; (8002bac <DMA2_Stream4_IRQHandler+0xdc>)
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	005b      	lsls	r3, r3, #1
 8002b5a:	3301      	adds	r3, #1
 8002b5c:	0c12      	lsrs	r2, r2, #16
 8002b5e:	4913      	ldr	r1, [pc, #76]	; (8002bac <DMA2_Stream4_IRQHandler+0xdc>)
 8002b60:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
            ADC_samples[2*i]   = (ADC_samples[i] & 0xffff);
 8002b64:	4a11      	ldr	r2, [pc, #68]	; (8002bac <DMA2_Stream4_IRQHandler+0xdc>)
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8002b6c:	687b      	ldr	r3, [r7, #4]
 8002b6e:	005b      	lsls	r3, r3, #1
 8002b70:	b292      	uxth	r2, r2
 8002b72:	490e      	ldr	r1, [pc, #56]	; (8002bac <DMA2_Stream4_IRQHandler+0xdc>)
 8002b74:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        for (int32_t i = ADC_NUMS-1; i >= 0; i--){
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	3b01      	subs	r3, #1
 8002b7c:	607b      	str	r3, [r7, #4]
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	2b00      	cmp	r3, #0
 8002b82:	dae4      	bge.n	8002b4e <DMA2_Stream4_IRQHandler+0x7e>
        }
        ADC_reset();
 8002b84:	f7ff fdf2 	bl	800276c <ADC_reset>
        MEAS_data_ready = true;
 8002b88:	4b09      	ldr	r3, [pc, #36]	; (8002bb0 <DMA2_Stream4_IRQHandler+0xe0>)
 8002b8a:	2201      	movs	r2, #1
 8002b8c:	701a      	strb	r2, [r3, #0]
    }
}
 8002b8e:	bf00      	nop
 8002b90:	3708      	adds	r7, #8
 8002b92:	46bd      	mov	sp, r7
 8002b94:	bd80      	pop	{r7, pc}
 8002b96:	bf00      	nop
 8002b98:	40026400 	.word	0x40026400
 8002b9c:	40026470 	.word	0x40026470
 8002ba0:	40012000 	.word	0x40012000
 8002ba4:	40012100 	.word	0x40012100
 8002ba8:	40012300 	.word	0x40012300
 8002bac:	20000b6c 	.word	0x20000b6c
 8002bb0:	20000b64 	.word	0x20000b64

08002bb4 <reset_sample_counter>:
    //  ADC_samples[2*i+1] = 0;
    //}

}

void reset_sample_counter(void){
 8002bb4:	b480      	push	{r7}
 8002bb6:	af00      	add	r7, sp, #0
    if(MEAS_data_ready){
 8002bb8:	4b07      	ldr	r3, [pc, #28]	; (8002bd8 <reset_sample_counter+0x24>)
 8002bba:	781b      	ldrb	r3, [r3, #0]
 8002bbc:	2b00      	cmp	r3, #0
 8002bbe:	d005      	beq.n	8002bcc <reset_sample_counter+0x18>
        ADC_sample_count = 0;
 8002bc0:	4b06      	ldr	r3, [pc, #24]	; (8002bdc <reset_sample_counter+0x28>)
 8002bc2:	2200      	movs	r2, #0
 8002bc4:	601a      	str	r2, [r3, #0]
        MEAS_data_ready=false;
 8002bc6:	4b04      	ldr	r3, [pc, #16]	; (8002bd8 <reset_sample_counter+0x24>)
 8002bc8:	2200      	movs	r2, #0
 8002bca:	701a      	strb	r2, [r3, #0]
    }
}
 8002bcc:	bf00      	nop
 8002bce:	46bd      	mov	sp, r7
 8002bd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bd4:	4770      	bx	lr
 8002bd6:	bf00      	nop
 8002bd8:	20000b64 	.word	0x20000b64
 8002bdc:	20000b68 	.word	0x20000b68

08002be0 <MENU_values_init>:
/** ***************************************************************************
 * @brief Set Layout for all values
 *
 *****************************************************************************/
void MENU_values_init(uint8_t *title)
{
 8002be0:	b580      	push	{r7, lr}
 8002be2:	b082      	sub	sp, #8
 8002be4:	af00      	add	r7, sp, #0
 8002be6:	6078      	str	r0, [r7, #4]
    MENU_clear();
 8002be8:	f000 fba2 	bl	8003330 <MENU_clear>
    BSP_LCD_SetFont(&Font16);
 8002bec:	4824      	ldr	r0, [pc, #144]	; (8002c80 <MENU_values_init+0xa0>)
 8002bee:	f001 ff05 	bl	80049fc <BSP_LCD_SetFont>
    BSP_LCD_SetBackColor(MENU_COLOR);
 8002bf2:	4824      	ldr	r0, [pc, #144]	; (8002c84 <MENU_values_init+0xa4>)
 8002bf4:	f001 fee8 	bl	80049c8 <BSP_LCD_SetBackColor>

    BSP_LCD_SetTextColor(MENU_COLOR);
 8002bf8:	4822      	ldr	r0, [pc, #136]	; (8002c84 <MENU_values_init+0xa4>)
 8002bfa:	f001 fecd 	bl	8004998 <BSP_LCD_SetTextColor>
    BSP_LCD_FillRect(5, 5, BSP_LCD_GetXSize()-10, TITLE_HIGHT-10);
 8002bfe:	f001 fe3f 	bl	8004880 <BSP_LCD_GetXSize>
 8002c02:	4603      	mov	r3, r0
 8002c04:	b29b      	uxth	r3, r3
 8002c06:	3b0a      	subs	r3, #10
 8002c08:	b29a      	uxth	r2, r3
 8002c0a:	2323      	movs	r3, #35	; 0x23
 8002c0c:	2105      	movs	r1, #5
 8002c0e:	2005      	movs	r0, #5
 8002c10:	f002 f9ec 	bl	8004fec <BSP_LCD_FillRect>

    BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8002c14:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8002c18:	f001 febe 	bl	8004998 <BSP_LCD_SetTextColor>
    BSP_LCD_DisplayStringAt(0, TITLE_HIGHT/2 - 5, (uint8_t *)title, CENTER_MODE);
 8002c1c:	2301      	movs	r3, #1
 8002c1e:	687a      	ldr	r2, [r7, #4]
 8002c20:	2111      	movs	r1, #17
 8002c22:	2000      	movs	r0, #0
 8002c24:	f001 ff70 	bl	8004b08 <BSP_LCD_DisplayStringAt>

    BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 8002c28:	f04f 30ff 	mov.w	r0, #4294967295
 8002c2c:	f001 fecc 	bl	80049c8 <BSP_LCD_SetBackColor>
    BSP_LCD_DisplayStringAt(10, TITLE_HIGHT+20,  (uint8_t *)"X-Distance:       mm", LEFT_MODE); // offset to cable
 8002c30:	2303      	movs	r3, #3
 8002c32:	4a15      	ldr	r2, [pc, #84]	; (8002c88 <MENU_values_init+0xa8>)
 8002c34:	2141      	movs	r1, #65	; 0x41
 8002c36:	200a      	movs	r0, #10
 8002c38:	f001 ff66 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_DisplayStringAt(10, TITLE_HIGHT+40,  (uint8_t *)"Y-Distance:       mm", LEFT_MODE); // distance to cable
 8002c3c:	2303      	movs	r3, #3
 8002c3e:	4a13      	ldr	r2, [pc, #76]	; (8002c8c <MENU_values_init+0xac>)
 8002c40:	2155      	movs	r1, #85	; 0x55
 8002c42:	200a      	movs	r0, #10
 8002c44:	f001 ff60 	bl	8004b08 <BSP_LCD_DisplayStringAt>

    BSP_LCD_DisplayStringAt(10, TITLE_HIGHT+80,  (uint8_t *)"Distance:         mm", LEFT_MODE); // abs. distance to cable
 8002c48:	2303      	movs	r3, #3
 8002c4a:	4a11      	ldr	r2, [pc, #68]	; (8002c90 <MENU_values_init+0xb0>)
 8002c4c:	217d      	movs	r1, #125	; 0x7d
 8002c4e:	200a      	movs	r0, #10
 8002c50:	f001 ff5a 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_DisplayStringAt(10, TITLE_HIGHT+100, (uint8_t *)"Angle:            ",   LEFT_MODE); // angle to cable
 8002c54:	2303      	movs	r3, #3
 8002c56:	4a0f      	ldr	r2, [pc, #60]	; (8002c94 <MENU_values_init+0xb4>)
 8002c58:	2191      	movs	r1, #145	; 0x91
 8002c5a:	200a      	movs	r0, #10
 8002c5c:	f001 ff54 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_DrawCircle(210,TITLE_HIGHT+102,2);                                                  // degree (°)
 8002c60:	2202      	movs	r2, #2
 8002c62:	2193      	movs	r1, #147	; 0x93
 8002c64:	20d2      	movs	r0, #210	; 0xd2
 8002c66:	f002 f8d7 	bl	8004e18 <BSP_LCD_DrawCircle>

    BSP_LCD_DisplayStringAt(10, TITLE_HIGHT+140, (uint8_t *)"Current:          A ", LEFT_MODE); // current in cable
 8002c6a:	2303      	movs	r3, #3
 8002c6c:	4a0a      	ldr	r2, [pc, #40]	; (8002c98 <MENU_values_init+0xb8>)
 8002c6e:	21b9      	movs	r1, #185	; 0xb9
 8002c70:	200a      	movs	r0, #10
 8002c72:	f001 ff49 	bl	8004b08 <BSP_LCD_DisplayStringAt>
}
 8002c76:	bf00      	nop
 8002c78:	3708      	adds	r7, #8
 8002c7a:	46bd      	mov	sp, r7
 8002c7c:	bd80      	pop	{r7, pc}
 8002c7e:	bf00      	nop
 8002c80:	200000e0 	.word	0x200000e0
 8002c84:	ffd3d3d3 	.word	0xffd3d3d3
 8002c88:	0800fc48 	.word	0x0800fc48
 8002c8c:	0800fc60 	.word	0x0800fc60
 8002c90:	0800fc78 	.word	0x0800fc78
 8002c94:	0800fc90 	.word	0x0800fc90
 8002c98:	0800fca4 	.word	0x0800fca4

08002c9c <MENU_values_act>:
 * Shows the offset, distance and angle to the cable.
 * When the cable is in a certain range the current will be displayed.
 * @note Call MENU_values_init() first
 *****************************************************************************/
void MENU_values_act(int16_t x_distance, uint16_t y_distance, int16_t angle, float current)
{
 8002c9c:	b5b0      	push	{r4, r5, r7, lr}
 8002c9e:	b090      	sub	sp, #64	; 0x40
 8002ca0:	af02      	add	r7, sp, #8
 8002ca2:	4603      	mov	r3, r0
 8002ca4:	ed87 0a01 	vstr	s0, [r7, #4]
 8002ca8:	81fb      	strh	r3, [r7, #14]
 8002caa:	460b      	mov	r3, r1
 8002cac:	81bb      	strh	r3, [r7, #12]
 8002cae:	4613      	mov	r3, r2
 8002cb0:	817b      	strh	r3, [r7, #10]
    char text_abs_distance[7];
    char text_angle[7];
    char text_current[8];

    // check error code
    if(x_distance == CALC_OUTOF_X_RANGE){
 8002cb2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002cb6:	f640 121d 	movw	r2, #2333	; 0x91d
 8002cba:	4293      	cmp	r3, r2
 8002cbc:	d107      	bne.n	8002cce <MENU_values_act+0x32>
        snprintf(text_x_distance, 6, "NaNs");
 8002cbe:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8002cc2:	4a5c      	ldr	r2, [pc, #368]	; (8002e34 <MENU_values_act+0x198>)
 8002cc4:	2106      	movs	r1, #6
 8002cc6:	4618      	mov	r0, r3
 8002cc8:	f008 fce8 	bl	800b69c <sniprintf>
 8002ccc:	e007      	b.n	8002cde <MENU_values_act+0x42>
    }
    else{
        snprintf(text_x_distance, 5, "%4d",(int)(x_distance));
 8002cce:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002cd2:	f107 0030 	add.w	r0, r7, #48	; 0x30
 8002cd6:	4a58      	ldr	r2, [pc, #352]	; (8002e38 <MENU_values_act+0x19c>)
 8002cd8:	2105      	movs	r1, #5
 8002cda:	f008 fcdf 	bl	800b69c <sniprintf>
    }

    if(y_distance == CALC_OUTOF_Y_RANGE){
 8002cde:	89bb      	ldrh	r3, [r7, #12]
 8002ce0:	f640 02ae 	movw	r2, #2222	; 0x8ae
 8002ce4:	4293      	cmp	r3, r2
 8002ce6:	d107      	bne.n	8002cf8 <MENU_values_act+0x5c>
        snprintf(text_y_distance, 6, "NaNs");
 8002ce8:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002cec:	4a51      	ldr	r2, [pc, #324]	; (8002e34 <MENU_values_act+0x198>)
 8002cee:	2106      	movs	r1, #6
 8002cf0:	4618      	mov	r0, r3
 8002cf2:	f008 fcd3 	bl	800b69c <sniprintf>
 8002cf6:	e006      	b.n	8002d06 <MENU_values_act+0x6a>
    }
    else{
        snprintf(text_y_distance, 5, "%4d",(int)(y_distance));
 8002cf8:	89bb      	ldrh	r3, [r7, #12]
 8002cfa:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8002cfe:	4a4e      	ldr	r2, [pc, #312]	; (8002e38 <MENU_values_act+0x19c>)
 8002d00:	2105      	movs	r1, #5
 8002d02:	f008 fccb 	bl	800b69c <sniprintf>
    }

    if(x_distance == CALC_OUTOF_X_RANGE || y_distance == CALC_OUTOF_Y_RANGE){
 8002d06:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002d0a:	f640 121d 	movw	r2, #2333	; 0x91d
 8002d0e:	4293      	cmp	r3, r2
 8002d10:	d004      	beq.n	8002d1c <MENU_values_act+0x80>
 8002d12:	89bb      	ldrh	r3, [r7, #12]
 8002d14:	f640 02ae 	movw	r2, #2222	; 0x8ae
 8002d18:	4293      	cmp	r3, r2
 8002d1a:	d107      	bne.n	8002d2c <MENU_values_act+0x90>
        snprintf(text_abs_distance, 6, "NaNs");
 8002d1c:	f107 0320 	add.w	r3, r7, #32
 8002d20:	4a44      	ldr	r2, [pc, #272]	; (8002e34 <MENU_values_act+0x198>)
 8002d22:	2106      	movs	r1, #6
 8002d24:	4618      	mov	r0, r3
 8002d26:	f008 fcb9 	bl	800b69c <sniprintf>
 8002d2a:	e01f      	b.n	8002d6c <MENU_values_act+0xd0>
    }
    else{
        snprintf(text_abs_distance, 5, "%4d",(int)(hypot(y_distance, x_distance)));
 8002d2c:	89bb      	ldrh	r3, [r7, #12]
 8002d2e:	4618      	mov	r0, r3
 8002d30:	f7fd fc58 	bl	80005e4 <__aeabi_ui2d>
 8002d34:	4604      	mov	r4, r0
 8002d36:	460d      	mov	r5, r1
 8002d38:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002d3c:	4618      	mov	r0, r3
 8002d3e:	f7fd fc61 	bl	8000604 <__aeabi_i2d>
 8002d42:	4602      	mov	r2, r0
 8002d44:	460b      	mov	r3, r1
 8002d46:	ec43 2b11 	vmov	d1, r2, r3
 8002d4a:	ec45 4b10 	vmov	d0, r4, r5
 8002d4e:	f00b f817 	bl	800dd80 <hypot>
 8002d52:	ec53 2b10 	vmov	r2, r3, d0
 8002d56:	4610      	mov	r0, r2
 8002d58:	4619      	mov	r1, r3
 8002d5a:	f7fd ff6d 	bl	8000c38 <__aeabi_d2iz>
 8002d5e:	4603      	mov	r3, r0
 8002d60:	f107 0020 	add.w	r0, r7, #32
 8002d64:	4a34      	ldr	r2, [pc, #208]	; (8002e38 <MENU_values_act+0x19c>)
 8002d66:	2105      	movs	r1, #5
 8002d68:	f008 fc98 	bl	800b69c <sniprintf>
    }

    if(angle == CALC_OUTOF_ANGLE_RANGE){
 8002d6c:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002d70:	f640 128c 	movw	r2, #2444	; 0x98c
 8002d74:	4293      	cmp	r3, r2
 8002d76:	d107      	bne.n	8002d88 <MENU_values_act+0xec>
        snprintf(text_angle, 6, "NaNs");
 8002d78:	f107 0318 	add.w	r3, r7, #24
 8002d7c:	4a2d      	ldr	r2, [pc, #180]	; (8002e34 <MENU_values_act+0x198>)
 8002d7e:	2106      	movs	r1, #6
 8002d80:	4618      	mov	r0, r3
 8002d82:	f008 fc8b 	bl	800b69c <sniprintf>
 8002d86:	e007      	b.n	8002d98 <MENU_values_act+0xfc>
    }
    else{
        snprintf(text_angle, 5, "%4d",(int)(angle));
 8002d88:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002d8c:	f107 0018 	add.w	r0, r7, #24
 8002d90:	4a29      	ldr	r2, [pc, #164]	; (8002e38 <MENU_values_act+0x19c>)
 8002d92:	2105      	movs	r1, #5
 8002d94:	f008 fc82 	bl	800b69c <sniprintf>
    }

    if(current == CURR_OUTOF_Y_RANGE || current == CURR_OUTOF_Angle_RANGE){
 8002d98:	edd7 7a01 	vldr	s15, [r7, #4]
 8002d9c:	ed9f 7a27 	vldr	s14, [pc, #156]	; 8002e3c <MENU_values_act+0x1a0>
 8002da0:	eef4 7a47 	vcmp.f32	s15, s14
 8002da4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002da8:	d008      	beq.n	8002dbc <MENU_values_act+0x120>
 8002daa:	edd7 7a01 	vldr	s15, [r7, #4]
 8002dae:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8002e40 <MENU_values_act+0x1a4>
 8002db2:	eef4 7a47 	vcmp.f32	s15, s14
 8002db6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002dba:	d107      	bne.n	8002dcc <MENU_values_act+0x130>
        snprintf(text_current, 6, "NaNs");
 8002dbc:	f107 0310 	add.w	r3, r7, #16
 8002dc0:	4a1c      	ldr	r2, [pc, #112]	; (8002e34 <MENU_values_act+0x198>)
 8002dc2:	2106      	movs	r1, #6
 8002dc4:	4618      	mov	r0, r3
 8002dc6:	f008 fc69 	bl	800b69c <sniprintf>
 8002dca:	e00c      	b.n	8002de6 <MENU_values_act+0x14a>
    }
    else{
        snprintf(text_current, 7, " %.1f",(float)(current));
 8002dcc:	6878      	ldr	r0, [r7, #4]
 8002dce:	f7fd fc2b 	bl	8000628 <__aeabi_f2d>
 8002dd2:	4602      	mov	r2, r0
 8002dd4:	460b      	mov	r3, r1
 8002dd6:	f107 0010 	add.w	r0, r7, #16
 8002dda:	e9cd 2300 	strd	r2, r3, [sp]
 8002dde:	4a19      	ldr	r2, [pc, #100]	; (8002e44 <MENU_values_act+0x1a8>)
 8002de0:	2107      	movs	r1, #7
 8002de2:	f008 fc5b 	bl	800b69c <sniprintf>
    }

    // display values
    BSP_LCD_DisplayStringAt(160, TITLE_HIGHT+20,  (uint8_t *)text_x_distance,   LEFT_MODE);
 8002de6:	f107 0230 	add.w	r2, r7, #48	; 0x30
 8002dea:	2303      	movs	r3, #3
 8002dec:	2141      	movs	r1, #65	; 0x41
 8002dee:	20a0      	movs	r0, #160	; 0xa0
 8002df0:	f001 fe8a 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_DisplayStringAt(160, TITLE_HIGHT+40,  (uint8_t *)text_y_distance,   LEFT_MODE);
 8002df4:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8002df8:	2303      	movs	r3, #3
 8002dfa:	2155      	movs	r1, #85	; 0x55
 8002dfc:	20a0      	movs	r0, #160	; 0xa0
 8002dfe:	f001 fe83 	bl	8004b08 <BSP_LCD_DisplayStringAt>

    BSP_LCD_DisplayStringAt(160, TITLE_HIGHT+80,  (uint8_t *)text_abs_distance, LEFT_MODE);
 8002e02:	f107 0220 	add.w	r2, r7, #32
 8002e06:	2303      	movs	r3, #3
 8002e08:	217d      	movs	r1, #125	; 0x7d
 8002e0a:	20a0      	movs	r0, #160	; 0xa0
 8002e0c:	f001 fe7c 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_DisplayStringAt(160, TITLE_HIGHT+100, (uint8_t *)text_angle,        LEFT_MODE);
 8002e10:	f107 0218 	add.w	r2, r7, #24
 8002e14:	2303      	movs	r3, #3
 8002e16:	2191      	movs	r1, #145	; 0x91
 8002e18:	20a0      	movs	r0, #160	; 0xa0
 8002e1a:	f001 fe75 	bl	8004b08 <BSP_LCD_DisplayStringAt>

    BSP_LCD_DisplayStringAt(160, TITLE_HIGHT+140, (uint8_t *)text_current,      LEFT_MODE);
 8002e1e:	f107 0210 	add.w	r2, r7, #16
 8002e22:	2303      	movs	r3, #3
 8002e24:	21b9      	movs	r1, #185	; 0xb9
 8002e26:	20a0      	movs	r0, #160	; 0xa0
 8002e28:	f001 fe6e 	bl	8004b08 <BSP_LCD_DisplayStringAt>
}
 8002e2c:	bf00      	nop
 8002e2e:	3738      	adds	r7, #56	; 0x38
 8002e30:	46bd      	mov	sp, r7
 8002e32:	bdb0      	pop	{r4, r5, r7, pc}
 8002e34:	0800fcbc 	.word	0x0800fcbc
 8002e38:	0800fcc4 	.word	0x0800fcc4
 8002e3c:	458ae000 	.word	0x458ae000
 8002e40:	458e5800 	.word	0x458e5800
 8002e44:	0800fcc8 	.word	0x0800fcc8

08002e48 <MENU_visual_init>:
 *
 * @note Call MENU_visual_act(int16_t x_distance, uint16_t y_distance,
 * float current) to show new data.
 *****************************************************************************/
void MENU_visual_init(uint8_t *title)
{
 8002e48:	b580      	push	{r7, lr}
 8002e4a:	b082      	sub	sp, #8
 8002e4c:	af00      	add	r7, sp, #0
 8002e4e:	6078      	str	r0, [r7, #4]
    MENU_clear();
 8002e50:	f000 fa6e 	bl	8003330 <MENU_clear>
    BSP_LCD_SetFont(&Font16);
 8002e54:	4812      	ldr	r0, [pc, #72]	; (8002ea0 <MENU_visual_init+0x58>)
 8002e56:	f001 fdd1 	bl	80049fc <BSP_LCD_SetFont>
    BSP_LCD_SetBackColor(MENU_COLOR);
 8002e5a:	4812      	ldr	r0, [pc, #72]	; (8002ea4 <MENU_visual_init+0x5c>)
 8002e5c:	f001 fdb4 	bl	80049c8 <BSP_LCD_SetBackColor>

    BSP_LCD_SetTextColor(MENU_COLOR);
 8002e60:	4810      	ldr	r0, [pc, #64]	; (8002ea4 <MENU_visual_init+0x5c>)
 8002e62:	f001 fd99 	bl	8004998 <BSP_LCD_SetTextColor>
    BSP_LCD_FillRect(5, 5, BSP_LCD_GetXSize()-10, TITLE_HIGHT-10);
 8002e66:	f001 fd0b 	bl	8004880 <BSP_LCD_GetXSize>
 8002e6a:	4603      	mov	r3, r0
 8002e6c:	b29b      	uxth	r3, r3
 8002e6e:	3b0a      	subs	r3, #10
 8002e70:	b29a      	uxth	r2, r3
 8002e72:	2323      	movs	r3, #35	; 0x23
 8002e74:	2105      	movs	r1, #5
 8002e76:	2005      	movs	r0, #5
 8002e78:	f002 f8b8 	bl	8004fec <BSP_LCD_FillRect>

    BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8002e7c:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8002e80:	f001 fd8a 	bl	8004998 <BSP_LCD_SetTextColor>
    BSP_LCD_DisplayStringAt(0, TITLE_HIGHT/2 - 5, (uint8_t *)title, CENTER_MODE);
 8002e84:	2301      	movs	r3, #1
 8002e86:	687a      	ldr	r2, [r7, #4]
 8002e88:	2111      	movs	r1, #17
 8002e8a:	2000      	movs	r0, #0
 8002e8c:	f001 fe3c 	bl	8004b08 <BSP_LCD_DisplayStringAt>

    BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 8002e90:	f04f 30ff 	mov.w	r0, #4294967295
 8002e94:	f001 fd98 	bl	80049c8 <BSP_LCD_SetBackColor>

}
 8002e98:	bf00      	nop
 8002e9a:	3708      	adds	r7, #8
 8002e9c:	46bd      	mov	sp, r7
 8002e9e:	bd80      	pop	{r7, pc}
 8002ea0:	200000e0 	.word	0x200000e0
 8002ea4:	ffd3d3d3 	.word	0xffd3d3d3

08002ea8 <MENU_visual_act>:
 * in mm, when the cable is in range of the device.
 * When the cable is in a certain range the current will be displayed.
 * @note Call MENU_visual_init(uint8_t *title) first
 *****************************************************************************/
void MENU_visual_act(int16_t x_distance, uint16_t y_distance, float current)
{
 8002ea8:	b5b0      	push	{r4, r5, r7, lr}
 8002eaa:	b08c      	sub	sp, #48	; 0x30
 8002eac:	af02      	add	r7, sp, #8
 8002eae:	4603      	mov	r3, r0
 8002eb0:	460a      	mov	r2, r1
 8002eb2:	ed87 0a00 	vstr	s0, [r7]
 8002eb6:	80fb      	strh	r3, [r7, #6]
 8002eb8:	4613      	mov	r3, r2
 8002eba:	80bb      	strh	r3, [r7, #4]
    char text_position[9];  // in mm
    char text_current[9];   // in A

    snprintf(text_current, 8, "NaNs A"); // default
 8002ebc:	f107 030c 	add.w	r3, r7, #12
 8002ec0:	4a78      	ldr	r2, [pc, #480]	; (80030a4 <MENU_visual_act+0x1fc>)
 8002ec2:	2108      	movs	r1, #8
 8002ec4:	4618      	mov	r0, r3
 8002ec6:	f008 fbe9 	bl	800b69c <sniprintf>

    // erase old position
    BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002eca:	f04f 30ff 	mov.w	r0, #4294967295
 8002ece:	f001 fd63 	bl	8004998 <BSP_LCD_SetTextColor>
    BSP_LCD_DrawCircle(x_circle_old,y_circle_old+TITLE_HIGHT,10);
 8002ed2:	4b75      	ldr	r3, [pc, #468]	; (80030a8 <MENU_visual_act+0x200>)
 8002ed4:	8818      	ldrh	r0, [r3, #0]
 8002ed6:	4b75      	ldr	r3, [pc, #468]	; (80030ac <MENU_visual_act+0x204>)
 8002ed8:	881b      	ldrh	r3, [r3, #0]
 8002eda:	332d      	adds	r3, #45	; 0x2d
 8002edc:	b29b      	uxth	r3, r3
 8002ede:	220a      	movs	r2, #10
 8002ee0:	4619      	mov	r1, r3
 8002ee2:	f001 ff99 	bl	8004e18 <BSP_LCD_DrawCircle>
    BSP_LCD_DrawLine(120,TITLE_HIGHT+220,x_circle_old,y_circle_old+TITLE_HIGHT);
 8002ee6:	4b70      	ldr	r3, [pc, #448]	; (80030a8 <MENU_visual_act+0x200>)
 8002ee8:	881a      	ldrh	r2, [r3, #0]
 8002eea:	4b70      	ldr	r3, [pc, #448]	; (80030ac <MENU_visual_act+0x204>)
 8002eec:	881b      	ldrh	r3, [r3, #0]
 8002eee:	332d      	adds	r3, #45	; 0x2d
 8002ef0:	b29b      	uxth	r3, r3
 8002ef2:	f240 1109 	movw	r1, #265	; 0x109
 8002ef6:	2078      	movs	r0, #120	; 0x78
 8002ef8:	f001 fec4 	bl	8004c84 <BSP_LCD_DrawLine>

    // set static elements
    BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8002efc:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8002f00:	f001 fd4a 	bl	8004998 <BSP_LCD_SetTextColor>
    BSP_LCD_DrawCircle(120,TITLE_HIGHT+220,4);                  // origin
 8002f04:	2204      	movs	r2, #4
 8002f06:	f240 1109 	movw	r1, #265	; 0x109
 8002f0a:	2078      	movs	r0, #120	; 0x78
 8002f0c:	f001 ff84 	bl	8004e18 <BSP_LCD_DrawCircle>
    BSP_LCD_DrawLine(120,TITLE_HIGHT+220,10,TITLE_HIGHT+110);   // -45°
 8002f10:	239b      	movs	r3, #155	; 0x9b
 8002f12:	220a      	movs	r2, #10
 8002f14:	f240 1109 	movw	r1, #265	; 0x109
 8002f18:	2078      	movs	r0, #120	; 0x78
 8002f1a:	f001 feb3 	bl	8004c84 <BSP_LCD_DrawLine>
    BSP_LCD_DrawLine(120,TITLE_HIGHT+220,120,TITLE_HIGHT+10);   // 0°
 8002f1e:	2337      	movs	r3, #55	; 0x37
 8002f20:	2278      	movs	r2, #120	; 0x78
 8002f22:	f240 1109 	movw	r1, #265	; 0x109
 8002f26:	2078      	movs	r0, #120	; 0x78
 8002f28:	f001 feac 	bl	8004c84 <BSP_LCD_DrawLine>
    BSP_LCD_DrawLine(120,TITLE_HIGHT+220,230,TITLE_HIGHT+110);  // +45°
 8002f2c:	239b      	movs	r3, #155	; 0x9b
 8002f2e:	22e6      	movs	r2, #230	; 0xe6
 8002f30:	f240 1109 	movw	r1, #265	; 0x109
 8002f34:	2078      	movs	r0, #120	; 0x78
 8002f36:	f001 fea5 	bl	8004c84 <BSP_LCD_DrawLine>

    BSP_LCD_SetTextColor(LCD_COLOR_LIGHTGRAY);                  // intermediate steps
 8002f3a:	485d      	ldr	r0, [pc, #372]	; (80030b0 <MENU_visual_act+0x208>)
 8002f3c:	f001 fd2c 	bl	8004998 <BSP_LCD_SetTextColor>
    BSP_LCD_DrawLine(120,TITLE_HIGHT+220,10,TITLE_HIGHT+156);   // -60°
 8002f40:	23c9      	movs	r3, #201	; 0xc9
 8002f42:	220a      	movs	r2, #10
 8002f44:	f240 1109 	movw	r1, #265	; 0x109
 8002f48:	2078      	movs	r0, #120	; 0x78
 8002f4a:	f001 fe9b 	bl	8004c84 <BSP_LCD_DrawLine>
    BSP_LCD_DrawLine(120,TITLE_HIGHT+220,10,TITLE_HIGHT+30);    // -30°
 8002f4e:	234b      	movs	r3, #75	; 0x4b
 8002f50:	220a      	movs	r2, #10
 8002f52:	f240 1109 	movw	r1, #265	; 0x109
 8002f56:	2078      	movs	r0, #120	; 0x78
 8002f58:	f001 fe94 	bl	8004c84 <BSP_LCD_DrawLine>
    BSP_LCD_DrawLine(120,TITLE_HIGHT+220,66,TITLE_HIGHT+10);    // -15°
 8002f5c:	2337      	movs	r3, #55	; 0x37
 8002f5e:	2242      	movs	r2, #66	; 0x42
 8002f60:	f240 1109 	movw	r1, #265	; 0x109
 8002f64:	2078      	movs	r0, #120	; 0x78
 8002f66:	f001 fe8d 	bl	8004c84 <BSP_LCD_DrawLine>
    BSP_LCD_DrawLine(120,TITLE_HIGHT+220,174,TITLE_HIGHT+10);   // +15°
 8002f6a:	2337      	movs	r3, #55	; 0x37
 8002f6c:	22ae      	movs	r2, #174	; 0xae
 8002f6e:	f240 1109 	movw	r1, #265	; 0x109
 8002f72:	2078      	movs	r0, #120	; 0x78
 8002f74:	f001 fe86 	bl	8004c84 <BSP_LCD_DrawLine>
    BSP_LCD_DrawLine(120,TITLE_HIGHT+220,230,TITLE_HIGHT+30);   // +30°
 8002f78:	234b      	movs	r3, #75	; 0x4b
 8002f7a:	22e6      	movs	r2, #230	; 0xe6
 8002f7c:	f240 1109 	movw	r1, #265	; 0x109
 8002f80:	2078      	movs	r0, #120	; 0x78
 8002f82:	f001 fe7f 	bl	8004c84 <BSP_LCD_DrawLine>
    BSP_LCD_DrawLine(120,TITLE_HIGHT+220,230,TITLE_HIGHT+156);  // +60°
 8002f86:	23c9      	movs	r3, #201	; 0xc9
 8002f88:	22e6      	movs	r2, #230	; 0xe6
 8002f8a:	f240 1109 	movw	r1, #265	; 0x109
 8002f8e:	2078      	movs	r0, #120	; 0x78
 8002f90:	f001 fe78 	bl	8004c84 <BSP_LCD_DrawLine>

    BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8002f94:	4847      	ldr	r0, [pc, #284]	; (80030b4 <MENU_visual_act+0x20c>)
 8002f96:	f001 fcff 	bl	8004998 <BSP_LCD_SetTextColor>

    // check if cable in range
    if ( x_distance != CALC_OUTOF_X_RANGE && y_distance != CALC_OUTOF_Y_RANGE ){
 8002f9a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002f9e:	f640 121d 	movw	r2, #2333	; 0x91d
 8002fa2:	4293      	cmp	r3, r2
 8002fa4:	d062      	beq.n	800306c <MENU_visual_act+0x1c4>
 8002fa6:	88bb      	ldrh	r3, [r7, #4]
 8002fa8:	f640 02ae 	movw	r2, #2222	; 0x8ae
 8002fac:	4293      	cmp	r3, r2
 8002fae:	d05d      	beq.n	800306c <MENU_visual_act+0x1c4>

        // conversion for display
        uint16_t x_circle = (uint16_t)(120+x_distance);
 8002fb0:	88fb      	ldrh	r3, [r7, #6]
 8002fb2:	3378      	adds	r3, #120	; 0x78
 8002fb4:	84fb      	strh	r3, [r7, #38]	; 0x26
        uint16_t y_circle = 220 - y_distance;
 8002fb6:	88bb      	ldrh	r3, [r7, #4]
 8002fb8:	f1c3 03dc 	rsb	r3, r3, #220	; 0xdc
 8002fbc:	84bb      	strh	r3, [r7, #36]	; 0x24

        // display position to device
        BSP_LCD_DrawCircle(x_circle,y_circle+TITLE_HIGHT,10);
 8002fbe:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002fc0:	332d      	adds	r3, #45	; 0x2d
 8002fc2:	b299      	uxth	r1, r3
 8002fc4:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8002fc6:	220a      	movs	r2, #10
 8002fc8:	4618      	mov	r0, r3
 8002fca:	f001 ff25 	bl	8004e18 <BSP_LCD_DrawCircle>
        BSP_LCD_DrawLine(120,TITLE_HIGHT+220,x_circle,y_circle+TITLE_HIGHT);
 8002fce:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002fd0:	332d      	adds	r3, #45	; 0x2d
 8002fd2:	b29b      	uxth	r3, r3
 8002fd4:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8002fd6:	f240 1109 	movw	r1, #265	; 0x109
 8002fda:	2078      	movs	r0, #120	; 0x78
 8002fdc:	f001 fe52 	bl	8004c84 <BSP_LCD_DrawLine>

        // calculate distance to device
        snprintf(text_position, 8, "%4d mm",(int)(hypot(x_distance, y_distance)));
 8002fe0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002fe4:	4618      	mov	r0, r3
 8002fe6:	f7fd fb0d 	bl	8000604 <__aeabi_i2d>
 8002fea:	4604      	mov	r4, r0
 8002fec:	460d      	mov	r5, r1
 8002fee:	88bb      	ldrh	r3, [r7, #4]
 8002ff0:	4618      	mov	r0, r3
 8002ff2:	f7fd faf7 	bl	80005e4 <__aeabi_ui2d>
 8002ff6:	4602      	mov	r2, r0
 8002ff8:	460b      	mov	r3, r1
 8002ffa:	ec43 2b11 	vmov	d1, r2, r3
 8002ffe:	ec45 4b10 	vmov	d0, r4, r5
 8003002:	f00a febd 	bl	800dd80 <hypot>
 8003006:	ec53 2b10 	vmov	r2, r3, d0
 800300a:	4610      	mov	r0, r2
 800300c:	4619      	mov	r1, r3
 800300e:	f7fd fe13 	bl	8000c38 <__aeabi_d2iz>
 8003012:	4603      	mov	r3, r0
 8003014:	f107 0018 	add.w	r0, r7, #24
 8003018:	4a27      	ldr	r2, [pc, #156]	; (80030b8 <MENU_visual_act+0x210>)
 800301a:	2108      	movs	r1, #8
 800301c:	f008 fb3e 	bl	800b69c <sniprintf>

        // check if current measurement possible
        if(current != CURR_OUTOF_Y_RANGE && current !=  CURR_OUTOF_Angle_RANGE){
 8003020:	edd7 7a00 	vldr	s15, [r7]
 8003024:	ed9f 7a25 	vldr	s14, [pc, #148]	; 80030bc <MENU_visual_act+0x214>
 8003028:	eef4 7a47 	vcmp.f32	s15, s14
 800302c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003030:	d015      	beq.n	800305e <MENU_visual_act+0x1b6>
 8003032:	edd7 7a00 	vldr	s15, [r7]
 8003036:	ed9f 7a22 	vldr	s14, [pc, #136]	; 80030c0 <MENU_visual_act+0x218>
 800303a:	eef4 7a47 	vcmp.f32	s15, s14
 800303e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003042:	d00c      	beq.n	800305e <MENU_visual_act+0x1b6>
            snprintf(text_current, 9, " %.1f A",(float)(current));
 8003044:	6838      	ldr	r0, [r7, #0]
 8003046:	f7fd faef 	bl	8000628 <__aeabi_f2d>
 800304a:	4602      	mov	r2, r0
 800304c:	460b      	mov	r3, r1
 800304e:	f107 000c 	add.w	r0, r7, #12
 8003052:	e9cd 2300 	strd	r2, r3, [sp]
 8003056:	4a1b      	ldr	r2, [pc, #108]	; (80030c4 <MENU_visual_act+0x21c>)
 8003058:	2109      	movs	r1, #9
 800305a:	f008 fb1f 	bl	800b69c <sniprintf>
        }

        // set new position for erase
        x_circle_old = x_circle;
 800305e:	4a12      	ldr	r2, [pc, #72]	; (80030a8 <MENU_visual_act+0x200>)
 8003060:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8003062:	8013      	strh	r3, [r2, #0]
        y_circle_old = y_circle;
 8003064:	4a11      	ldr	r2, [pc, #68]	; (80030ac <MENU_visual_act+0x204>)
 8003066:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003068:	8013      	strh	r3, [r2, #0]
    if ( x_distance != CALC_OUTOF_X_RANGE && y_distance != CALC_OUTOF_Y_RANGE ){
 800306a:	e006      	b.n	800307a <MENU_visual_act+0x1d2>
    }
    else{
        snprintf(text_position, 9, "NaNs mm"); // when no cable detected
 800306c:	f107 0318 	add.w	r3, r7, #24
 8003070:	4a15      	ldr	r2, [pc, #84]	; (80030c8 <MENU_visual_act+0x220>)
 8003072:	2109      	movs	r1, #9
 8003074:	4618      	mov	r0, r3
 8003076:	f008 fb11 	bl	800b69c <sniprintf>
    }

    // display distance to device
    BSP_LCD_DisplayStringAt(150, TITLE_HIGHT+215, (uint8_t *)text_position,LEFT_MODE);
 800307a:	f107 0218 	add.w	r2, r7, #24
 800307e:	2303      	movs	r3, #3
 8003080:	f44f 7182 	mov.w	r1, #260	; 0x104
 8003084:	2096      	movs	r0, #150	; 0x96
 8003086:	f001 fd3f 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_DisplayStringAt(20, TITLE_HIGHT+215, (uint8_t *)text_current,LEFT_MODE);
 800308a:	f107 020c 	add.w	r2, r7, #12
 800308e:	2303      	movs	r3, #3
 8003090:	f44f 7182 	mov.w	r1, #260	; 0x104
 8003094:	2014      	movs	r0, #20
 8003096:	f001 fd37 	bl	8004b08 <BSP_LCD_DisplayStringAt>
}
 800309a:	bf00      	nop
 800309c:	3728      	adds	r7, #40	; 0x28
 800309e:	46bd      	mov	sp, r7
 80030a0:	bdb0      	pop	{r4, r5, r7, pc}
 80030a2:	bf00      	nop
 80030a4:	0800fcd0 	.word	0x0800fcd0
 80030a8:	2000005c 	.word	0x2000005c
 80030ac:	2000005e 	.word	0x2000005e
 80030b0:	ffd3d3d3 	.word	0xffd3d3d3
 80030b4:	ffff0000 	.word	0xffff0000
 80030b8:	0800fcd8 	.word	0x0800fcd8
 80030bc:	458ae000 	.word	0x458ae000
 80030c0:	458e5800 	.word	0x458e5800
 80030c4:	0800fce0 	.word	0x0800fce0
 80030c8:	0800fce8 	.word	0x0800fce8

080030cc <MENU_draw>:
 * Each menu entry has two lines.
 * Text and background colors are applied.
 * @n These attributes are defined in the variable MENU_draw[].
 *****************************************************************************/
void MENU_draw(void)
{
 80030cc:	b590      	push	{r4, r7, lr}
 80030ce:	b087      	sub	sp, #28
 80030d0:	af00      	add	r7, sp, #0
    BSP_LCD_SetFont(MENU_FONT);
 80030d2:	4851      	ldr	r0, [pc, #324]	; (8003218 <MENU_draw+0x14c>)
 80030d4:	f001 fc92 	bl	80049fc <BSP_LCD_SetFont>
    uint32_t x, y, m, w, h;
    y = MENU_Y;
 80030d8:	f001 fbde 	bl	8004898 <BSP_LCD_GetYSize>
 80030dc:	4603      	mov	r3, r0
 80030de:	3b28      	subs	r3, #40	; 0x28
 80030e0:	613b      	str	r3, [r7, #16]
    m = MENU_MARGIN;
 80030e2:	2302      	movs	r3, #2
 80030e4:	60fb      	str	r3, [r7, #12]
    w = BSP_LCD_GetXSize()/MENU_ENTRY_COUNT;
 80030e6:	f001 fbcb 	bl	8004880 <BSP_LCD_GetXSize>
 80030ea:	4603      	mov	r3, r0
 80030ec:	085b      	lsrs	r3, r3, #1
 80030ee:	60bb      	str	r3, [r7, #8]
    h = MENU_HEIGHT;
 80030f0:	2328      	movs	r3, #40	; 0x28
 80030f2:	607b      	str	r3, [r7, #4]
    for (uint32_t i = 0; i < MENU_ENTRY_COUNT; i++) {
 80030f4:	2300      	movs	r3, #0
 80030f6:	617b      	str	r3, [r7, #20]
 80030f8:	e084      	b.n	8003204 <MENU_draw+0x138>
        x = i*w;
 80030fa:	697b      	ldr	r3, [r7, #20]
 80030fc:	68ba      	ldr	r2, [r7, #8]
 80030fe:	fb02 f303 	mul.w	r3, r2, r3
 8003102:	603b      	str	r3, [r7, #0]
        BSP_LCD_SetTextColor(MENU_entry[i].back_color);
 8003104:	4945      	ldr	r1, [pc, #276]	; (800321c <MENU_draw+0x150>)
 8003106:	697a      	ldr	r2, [r7, #20]
 8003108:	4613      	mov	r3, r2
 800310a:	009b      	lsls	r3, r3, #2
 800310c:	4413      	add	r3, r2
 800310e:	00db      	lsls	r3, r3, #3
 8003110:	440b      	add	r3, r1
 8003112:	3324      	adds	r3, #36	; 0x24
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	4618      	mov	r0, r3
 8003118:	f001 fc3e 	bl	8004998 <BSP_LCD_SetTextColor>
        BSP_LCD_FillRect(x+m, y+m, w-2*m, h-2*m);
 800311c:	683b      	ldr	r3, [r7, #0]
 800311e:	b29a      	uxth	r2, r3
 8003120:	68fb      	ldr	r3, [r7, #12]
 8003122:	b29b      	uxth	r3, r3
 8003124:	4413      	add	r3, r2
 8003126:	b298      	uxth	r0, r3
 8003128:	693b      	ldr	r3, [r7, #16]
 800312a:	b29a      	uxth	r2, r3
 800312c:	68fb      	ldr	r3, [r7, #12]
 800312e:	b29b      	uxth	r3, r3
 8003130:	4413      	add	r3, r2
 8003132:	b299      	uxth	r1, r3
 8003134:	68bb      	ldr	r3, [r7, #8]
 8003136:	b29a      	uxth	r2, r3
 8003138:	68fb      	ldr	r3, [r7, #12]
 800313a:	b29b      	uxth	r3, r3
 800313c:	005b      	lsls	r3, r3, #1
 800313e:	b29b      	uxth	r3, r3
 8003140:	1ad3      	subs	r3, r2, r3
 8003142:	b29c      	uxth	r4, r3
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	b29a      	uxth	r2, r3
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	b29b      	uxth	r3, r3
 800314c:	005b      	lsls	r3, r3, #1
 800314e:	b29b      	uxth	r3, r3
 8003150:	1ad3      	subs	r3, r2, r3
 8003152:	b29b      	uxth	r3, r3
 8003154:	4622      	mov	r2, r4
 8003156:	f001 ff49 	bl	8004fec <BSP_LCD_FillRect>
        BSP_LCD_SetBackColor(MENU_entry[i].back_color);
 800315a:	4930      	ldr	r1, [pc, #192]	; (800321c <MENU_draw+0x150>)
 800315c:	697a      	ldr	r2, [r7, #20]
 800315e:	4613      	mov	r3, r2
 8003160:	009b      	lsls	r3, r3, #2
 8003162:	4413      	add	r3, r2
 8003164:	00db      	lsls	r3, r3, #3
 8003166:	440b      	add	r3, r1
 8003168:	3324      	adds	r3, #36	; 0x24
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	4618      	mov	r0, r3
 800316e:	f001 fc2b 	bl	80049c8 <BSP_LCD_SetBackColor>
        BSP_LCD_SetTextColor(MENU_entry[i].text_color);
 8003172:	492a      	ldr	r1, [pc, #168]	; (800321c <MENU_draw+0x150>)
 8003174:	697a      	ldr	r2, [r7, #20]
 8003176:	4613      	mov	r3, r2
 8003178:	009b      	lsls	r3, r3, #2
 800317a:	4413      	add	r3, r2
 800317c:	00db      	lsls	r3, r3, #3
 800317e:	440b      	add	r3, r1
 8003180:	3320      	adds	r3, #32
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	4618      	mov	r0, r3
 8003186:	f001 fc07 	bl	8004998 <BSP_LCD_SetTextColor>
        BSP_LCD_DisplayStringAt(x+3*m, y+3*m, (uint8_t *)MENU_entry[i].line1, LEFT_MODE);
 800318a:	68fb      	ldr	r3, [r7, #12]
 800318c:	b29b      	uxth	r3, r3
 800318e:	461a      	mov	r2, r3
 8003190:	0052      	lsls	r2, r2, #1
 8003192:	4413      	add	r3, r2
 8003194:	b29a      	uxth	r2, r3
 8003196:	683b      	ldr	r3, [r7, #0]
 8003198:	b29b      	uxth	r3, r3
 800319a:	4413      	add	r3, r2
 800319c:	b298      	uxth	r0, r3
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	b29b      	uxth	r3, r3
 80031a2:	461a      	mov	r2, r3
 80031a4:	0052      	lsls	r2, r2, #1
 80031a6:	4413      	add	r3, r2
 80031a8:	b29a      	uxth	r2, r3
 80031aa:	693b      	ldr	r3, [r7, #16]
 80031ac:	b29b      	uxth	r3, r3
 80031ae:	4413      	add	r3, r2
 80031b0:	b299      	uxth	r1, r3
 80031b2:	697a      	ldr	r2, [r7, #20]
 80031b4:	4613      	mov	r3, r2
 80031b6:	009b      	lsls	r3, r3, #2
 80031b8:	4413      	add	r3, r2
 80031ba:	00db      	lsls	r3, r3, #3
 80031bc:	4a17      	ldr	r2, [pc, #92]	; (800321c <MENU_draw+0x150>)
 80031be:	441a      	add	r2, r3
 80031c0:	2303      	movs	r3, #3
 80031c2:	f001 fca1 	bl	8004b08 <BSP_LCD_DisplayStringAt>
        BSP_LCD_DisplayStringAt(x+3*m, y+h/2, (uint8_t *)MENU_entry[i].line2, LEFT_MODE);
 80031c6:	68fb      	ldr	r3, [r7, #12]
 80031c8:	b29b      	uxth	r3, r3
 80031ca:	461a      	mov	r2, r3
 80031cc:	0052      	lsls	r2, r2, #1
 80031ce:	4413      	add	r3, r2
 80031d0:	b29a      	uxth	r2, r3
 80031d2:	683b      	ldr	r3, [r7, #0]
 80031d4:	b29b      	uxth	r3, r3
 80031d6:	4413      	add	r3, r2
 80031d8:	b298      	uxth	r0, r3
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	085b      	lsrs	r3, r3, #1
 80031de:	b29a      	uxth	r2, r3
 80031e0:	693b      	ldr	r3, [r7, #16]
 80031e2:	b29b      	uxth	r3, r3
 80031e4:	4413      	add	r3, r2
 80031e6:	b299      	uxth	r1, r3
 80031e8:	697a      	ldr	r2, [r7, #20]
 80031ea:	4613      	mov	r3, r2
 80031ec:	009b      	lsls	r3, r3, #2
 80031ee:	4413      	add	r3, r2
 80031f0:	00db      	lsls	r3, r3, #3
 80031f2:	3310      	adds	r3, #16
 80031f4:	4a09      	ldr	r2, [pc, #36]	; (800321c <MENU_draw+0x150>)
 80031f6:	441a      	add	r2, r3
 80031f8:	2303      	movs	r3, #3
 80031fa:	f001 fc85 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    for (uint32_t i = 0; i < MENU_ENTRY_COUNT; i++) {
 80031fe:	697b      	ldr	r3, [r7, #20]
 8003200:	3301      	adds	r3, #1
 8003202:	617b      	str	r3, [r7, #20]
 8003204:	697b      	ldr	r3, [r7, #20]
 8003206:	2b01      	cmp	r3, #1
 8003208:	f67f af77 	bls.w	80030fa <MENU_draw+0x2e>
    }
}
 800320c:	bf00      	nop
 800320e:	bf00      	nop
 8003210:	371c      	adds	r7, #28
 8003212:	46bd      	mov	sp, r7
 8003214:	bd90      	pop	{r4, r7, pc}
 8003216:	bf00      	nop
 8003218:	200000e8 	.word	0x200000e8
 800321c:	2000000c 	.word	0x2000000c

08003220 <MENU_hint>:
/** ***************************************************************************
 * @brief Shows a hint at startup.
 *
 *****************************************************************************/
void MENU_hint(void)
{
 8003220:	b580      	push	{r7, lr}
 8003222:	af00      	add	r7, sp, #0
    BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 8003224:	f04f 30ff 	mov.w	r0, #4294967295
 8003228:	f001 fbce 	bl	80049c8 <BSP_LCD_SetBackColor>
    BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 800322c:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8003230:	f001 fbb2 	bl	8004998 <BSP_LCD_SetTextColor>

    BSP_LCD_SetFont(&Font24);
 8003234:	4824      	ldr	r0, [pc, #144]	; (80032c8 <MENU_hint+0xa8>)
 8003236:	f001 fbe1 	bl	80049fc <BSP_LCD_SetFont>
    BSP_LCD_DisplayStringAt(0,10, (uint8_t *)"Cable Monitor", CENTER_MODE);
 800323a:	2301      	movs	r3, #1
 800323c:	4a23      	ldr	r2, [pc, #140]	; (80032cc <MENU_hint+0xac>)
 800323e:	210a      	movs	r1, #10
 8003240:	2000      	movs	r0, #0
 8003242:	f001 fc61 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_SetFont(&Font12);
 8003246:	4822      	ldr	r0, [pc, #136]	; (80032d0 <MENU_hint+0xb0>)
 8003248:	f001 fbd8 	bl	80049fc <BSP_LCD_SetFont>
    BSP_LCD_DisplayStringAt(0,35, (uint8_t *)"by M. Rau & T. Roos", CENTER_MODE);
 800324c:	2301      	movs	r3, #1
 800324e:	4a21      	ldr	r2, [pc, #132]	; (80032d4 <MENU_hint+0xb4>)
 8003250:	2123      	movs	r1, #35	; 0x23
 8003252:	2000      	movs	r0, #0
 8003254:	f001 fc58 	bl	8004b08 <BSP_LCD_DisplayStringAt>

    BSP_LCD_DisplayStringAt(10, 70, (uint8_t *)"Press black pushbutton to", LEFT_MODE);
 8003258:	2303      	movs	r3, #3
 800325a:	4a1f      	ldr	r2, [pc, #124]	; (80032d8 <MENU_hint+0xb8>)
 800325c:	2146      	movs	r1, #70	; 0x46
 800325e:	200a      	movs	r0, #10
 8003260:	f001 fc52 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_DisplayStringAt(10, 85, (uint8_t *)"-> reset system",           LEFT_MODE);
 8003264:	2303      	movs	r3, #3
 8003266:	4a1d      	ldr	r2, [pc, #116]	; (80032dc <MENU_hint+0xbc>)
 8003268:	2155      	movs	r1, #85	; 0x55
 800326a:	200a      	movs	r0, #10
 800326c:	f001 fc4c 	bl	8004b08 <BSP_LCD_DisplayStringAt>

    BSP_LCD_DisplayStringAt(10, 120, (uint8_t *)"Press blue pushbutton to", LEFT_MODE);
 8003270:	2303      	movs	r3, #3
 8003272:	4a1b      	ldr	r2, [pc, #108]	; (80032e0 <MENU_hint+0xc0>)
 8003274:	2178      	movs	r1, #120	; 0x78
 8003276:	200a      	movs	r0, #10
 8003278:	f001 fc46 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_DisplayStringAt(10, 135, (uint8_t *)"-> Turn buzzer on/off",    LEFT_MODE);
 800327c:	2303      	movs	r3, #3
 800327e:	4a19      	ldr	r2, [pc, #100]	; (80032e4 <MENU_hint+0xc4>)
 8003280:	2187      	movs	r1, #135	; 0x87
 8003282:	200a      	movs	r0, #10
 8003284:	f001 fc40 	bl	8004b08 <BSP_LCD_DisplayStringAt>

    BSP_LCD_DisplayStringAt(10, 170, (uint8_t *)"Tap on the screen to",      LEFT_MODE);
 8003288:	2303      	movs	r3, #3
 800328a:	4a17      	ldr	r2, [pc, #92]	; (80032e8 <MENU_hint+0xc8>)
 800328c:	21aa      	movs	r1, #170	; 0xaa
 800328e:	200a      	movs	r0, #10
 8003290:	f001 fc3a 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_DisplayStringAt(10, 185, (uint8_t *)"-> change visual feedback", LEFT_MODE);
 8003294:	2303      	movs	r3, #3
 8003296:	4a15      	ldr	r2, [pc, #84]	; (80032ec <MENU_hint+0xcc>)
 8003298:	21b9      	movs	r1, #185	; 0xb9
 800329a:	200a      	movs	r0, #10
 800329c:	f001 fc34 	bl	8004b08 <BSP_LCD_DisplayStringAt>

    BSP_LCD_DisplayStringAt(10, 220, (uint8_t *)"To start measurement press on", LEFT_MODE);
 80032a0:	2303      	movs	r3, #3
 80032a2:	4a13      	ldr	r2, [pc, #76]	; (80032f0 <MENU_hint+0xd0>)
 80032a4:	21dc      	movs	r1, #220	; 0xdc
 80032a6:	200a      	movs	r0, #10
 80032a8:	f001 fc2e 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_DisplayStringAt(10, 235, (uint8_t *)"-> \"Average Measurement\" or", LEFT_MODE);
 80032ac:	2303      	movs	r3, #3
 80032ae:	4a11      	ldr	r2, [pc, #68]	; (80032f4 <MENU_hint+0xd4>)
 80032b0:	21eb      	movs	r1, #235	; 0xeb
 80032b2:	200a      	movs	r0, #10
 80032b4:	f001 fc28 	bl	8004b08 <BSP_LCD_DisplayStringAt>
    BSP_LCD_DisplayStringAt(10, 250, (uint8_t *)"-> \"Single Measurement\"",     LEFT_MODE);
 80032b8:	2303      	movs	r3, #3
 80032ba:	4a0f      	ldr	r2, [pc, #60]	; (80032f8 <MENU_hint+0xd8>)
 80032bc:	21fa      	movs	r1, #250	; 0xfa
 80032be:	200a      	movs	r0, #10
 80032c0:	f001 fc22 	bl	8004b08 <BSP_LCD_DisplayStringAt>
}
 80032c4:	bf00      	nop
 80032c6:	bd80      	pop	{r7, pc}
 80032c8:	200000d8 	.word	0x200000d8
 80032cc:	0800fcf0 	.word	0x0800fcf0
 80032d0:	200000e8 	.word	0x200000e8
 80032d4:	0800fd00 	.word	0x0800fd00
 80032d8:	0800fd14 	.word	0x0800fd14
 80032dc:	0800fd30 	.word	0x0800fd30
 80032e0:	0800fd40 	.word	0x0800fd40
 80032e4:	0800fd5c 	.word	0x0800fd5c
 80032e8:	0800fd74 	.word	0x0800fd74
 80032ec:	0800fd8c 	.word	0x0800fd8c
 80032f0:	0800fda8 	.word	0x0800fda8
 80032f4:	0800fdc8 	.word	0x0800fdc8
 80032f8:	0800fde4 	.word	0x0800fde4

080032fc <MENU_empty>:
/** ***************************************************************************
 * @brief Shows when no function is available
 *
 *****************************************************************************/
void MENU_empty(void)
{
 80032fc:	b580      	push	{r7, lr}
 80032fe:	af00      	add	r7, sp, #0
    BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 8003300:	f04f 30ff 	mov.w	r0, #4294967295
 8003304:	f001 fb60 	bl	80049c8 <BSP_LCD_SetBackColor>
    BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8003308:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 800330c:	f001 fb44 	bl	8004998 <BSP_LCD_SetTextColor>

    BSP_LCD_SetFont(&Font16);
 8003310:	4805      	ldr	r0, [pc, #20]	; (8003328 <MENU_empty+0x2c>)
 8003312:	f001 fb73 	bl	80049fc <BSP_LCD_SetFont>
    BSP_LCD_DisplayStringAt(0,120, (uint8_t *)"EMPTY", CENTER_MODE);
 8003316:	2301      	movs	r3, #1
 8003318:	4a04      	ldr	r2, [pc, #16]	; (800332c <MENU_empty+0x30>)
 800331a:	2178      	movs	r1, #120	; 0x78
 800331c:	2000      	movs	r0, #0
 800331e:	f001 fbf3 	bl	8004b08 <BSP_LCD_DisplayStringAt>
}
 8003322:	bf00      	nop
 8003324:	bd80      	pop	{r7, pc}
 8003326:	bf00      	nop
 8003328:	200000e0 	.word	0x200000e0
 800332c:	0800fdfc 	.word	0x0800fdfc

08003330 <MENU_clear>:
 * @brief Clear screen
 *
 * Clears data area. The menu bar and title will stay.
 *****************************************************************************/
void MENU_clear(void)
{
 8003330:	b598      	push	{r3, r4, r7, lr}
 8003332:	af00      	add	r7, sp, #0
    BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8003334:	f04f 30ff 	mov.w	r0, #4294967295
 8003338:	f001 fb2e 	bl	8004998 <BSP_LCD_SetTextColor>
    BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 800333c:	f04f 30ff 	mov.w	r0, #4294967295
 8003340:	f001 fb42 	bl	80049c8 <BSP_LCD_SetBackColor>
    BSP_LCD_FillRect(0,0, BSP_LCD_GetXSize(), BSP_LCD_GetYSize()-MENU_HEIGHT);
 8003344:	f001 fa9c 	bl	8004880 <BSP_LCD_GetXSize>
 8003348:	4603      	mov	r3, r0
 800334a:	b29c      	uxth	r4, r3
 800334c:	f001 faa4 	bl	8004898 <BSP_LCD_GetYSize>
 8003350:	4603      	mov	r3, r0
 8003352:	b29b      	uxth	r3, r3
 8003354:	3b28      	subs	r3, #40	; 0x28
 8003356:	b29b      	uxth	r3, r3
 8003358:	4622      	mov	r2, r4
 800335a:	2100      	movs	r1, #0
 800335c:	2000      	movs	r0, #0
 800335e:	f001 fe45 	bl	8004fec <BSP_LCD_FillRect>
}
 8003362:	bf00      	nop
 8003364:	bd98      	pop	{r3, r4, r7, pc}
	...

08003368 <MENU_get_transition>:
 * MENU_transition is used as a flag.
 * When the value is read by calling MENU_get_transition()
 * this flag is cleared, respectively set to MENU_NONE.
 *****************************************************************************/
MENU_item_t MENU_get_transition(void)
{
 8003368:	b480      	push	{r7}
 800336a:	b083      	sub	sp, #12
 800336c:	af00      	add	r7, sp, #0
    MENU_item_t item = MENU_transition;
 800336e:	4b06      	ldr	r3, [pc, #24]	; (8003388 <MENU_get_transition+0x20>)
 8003370:	781b      	ldrb	r3, [r3, #0]
 8003372:	71fb      	strb	r3, [r7, #7]
    MENU_transition = MENU_NONE;
 8003374:	4b04      	ldr	r3, [pc, #16]	; (8003388 <MENU_get_transition+0x20>)
 8003376:	2204      	movs	r2, #4
 8003378:	701a      	strb	r2, [r3, #0]
    return item;
 800337a:	79fb      	ldrb	r3, [r7, #7]
}
 800337c:	4618      	mov	r0, r3
 800337e:	370c      	adds	r7, #12
 8003380:	46bd      	mov	sp, r7
 8003382:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003386:	4770      	bx	lr
 8003388:	20000008 	.word	0x20000008

0800338c <MENU_check_transition>:
 * @note  Evalboard revision E (blue PCB) has an inverted y-axis
 * in the touch controller compared to the display.
 * Uncomment or comment the <b>\#define EVAL_REV_E</b> in main.h accordingly.
 *****************************************************************************/
void MENU_check_transition(void)
{
 800338c:	b598      	push	{r3, r4, r7, lr}
 800338e:	af00      	add	r7, sp, #0
    static MENU_item_t item_old = MENU_NONE;
    static MENU_item_t item_new = MENU_NONE;
    static TS_StateTypeDef  TS_State;    // State of the touch controller
    BSP_TS_GetState(&TS_State);            // Get the state
 8003390:	4835      	ldr	r0, [pc, #212]	; (8003468 <MENU_check_transition+0xdc>)
 8003392:	f002 fad5 	bl	8005940 <BSP_TS_GetState>
    TS_State.Y = BSP_LCD_GetYSize() - TS_State.Y;    // Invert the y-axis
#endif
#ifdef EVAL_REV_E
#endif
*/
    if (TS_State.TouchDetected) {        // If a touch was detected
 8003396:	4b34      	ldr	r3, [pc, #208]	; (8003468 <MENU_check_transition+0xdc>)
 8003398:	881b      	ldrh	r3, [r3, #0]
 800339a:	2b00      	cmp	r3, #0
 800339c:	d061      	beq.n	8003462 <MENU_check_transition+0xd6>
        /* Do only if last transition not pending anymore */
        if (MENU_NONE == MENU_transition) {
 800339e:	4b33      	ldr	r3, [pc, #204]	; (800346c <MENU_check_transition+0xe0>)
 80033a0:	781b      	ldrb	r3, [r3, #0]
 80033a2:	2b04      	cmp	r3, #4
 80033a4:	d15d      	bne.n	8003462 <MENU_check_transition+0xd6>
            item_old = item_new;        // Store old item
 80033a6:	4b32      	ldr	r3, [pc, #200]	; (8003470 <MENU_check_transition+0xe4>)
 80033a8:	781a      	ldrb	r2, [r3, #0]
 80033aa:	4b32      	ldr	r3, [pc, #200]	; (8003474 <MENU_check_transition+0xe8>)
 80033ac:	701a      	strb	r2, [r3, #0]
            /* If touched within the menu bar? */
            if ((MENU_Y < TS_State.Y) && (MENU_Y+MENU_HEIGHT > TS_State.Y)) {
 80033ae:	f001 fa73 	bl	8004898 <BSP_LCD_GetYSize>
 80033b2:	4603      	mov	r3, r0
 80033b4:	3b28      	subs	r3, #40	; 0x28
 80033b6:	4a2c      	ldr	r2, [pc, #176]	; (8003468 <MENU_check_transition+0xdc>)
 80033b8:	8892      	ldrh	r2, [r2, #4]
 80033ba:	4293      	cmp	r3, r2
 80033bc:	d227      	bcs.n	800340e <MENU_check_transition+0x82>
 80033be:	f001 fa6b 	bl	8004898 <BSP_LCD_GetYSize>
 80033c2:	4603      	mov	r3, r0
 80033c4:	4a28      	ldr	r2, [pc, #160]	; (8003468 <MENU_check_transition+0xdc>)
 80033c6:	8892      	ldrh	r2, [r2, #4]
 80033c8:	4293      	cmp	r3, r2
 80033ca:	d920      	bls.n	800340e <MENU_check_transition+0x82>
                item_new = TS_State.X    // Calculate new item
 80033cc:	4b26      	ldr	r3, [pc, #152]	; (8003468 <MENU_check_transition+0xdc>)
 80033ce:	885b      	ldrh	r3, [r3, #2]
 80033d0:	461c      	mov	r4, r3
                        / (BSP_LCD_GetXSize()/MENU_ENTRY_COUNT);
 80033d2:	f001 fa55 	bl	8004880 <BSP_LCD_GetXSize>
 80033d6:	4603      	mov	r3, r0
 80033d8:	085b      	lsrs	r3, r3, #1
 80033da:	fbb4 f3f3 	udiv	r3, r4, r3
 80033de:	b2da      	uxtb	r2, r3
                item_new = TS_State.X    // Calculate new item
 80033e0:	4b23      	ldr	r3, [pc, #140]	; (8003470 <MENU_check_transition+0xe4>)
 80033e2:	701a      	strb	r2, [r3, #0]
                if ((0 > item_new) || (MENU_ENTRY_COUNT <= item_new)) {
 80033e4:	4b22      	ldr	r3, [pc, #136]	; (8003470 <MENU_check_transition+0xe4>)
 80033e6:	781b      	ldrb	r3, [r3, #0]
 80033e8:	2b01      	cmp	r3, #1
 80033ea:	d902      	bls.n	80033f2 <MENU_check_transition+0x66>
                    item_new = MENU_NONE;    // Out of bounds
 80033ec:	4b20      	ldr	r3, [pc, #128]	; (8003470 <MENU_check_transition+0xe4>)
 80033ee:	2204      	movs	r2, #4
 80033f0:	701a      	strb	r2, [r3, #0]
                }
                if (item_new == item_old) {    // 2 times the same menu item
 80033f2:	4b1f      	ldr	r3, [pc, #124]	; (8003470 <MENU_check_transition+0xe4>)
 80033f4:	781a      	ldrb	r2, [r3, #0]
 80033f6:	4b1f      	ldr	r3, [pc, #124]	; (8003474 <MENU_check_transition+0xe8>)
 80033f8:	781b      	ldrb	r3, [r3, #0]
 80033fa:	429a      	cmp	r2, r3
 80033fc:	d131      	bne.n	8003462 <MENU_check_transition+0xd6>
                    item_new = MENU_NONE;
 80033fe:	4b1c      	ldr	r3, [pc, #112]	; (8003470 <MENU_check_transition+0xe4>)
 8003400:	2204      	movs	r2, #4
 8003402:	701a      	strb	r2, [r3, #0]
                    MENU_transition = item_old;
 8003404:	4b1b      	ldr	r3, [pc, #108]	; (8003474 <MENU_check_transition+0xe8>)
 8003406:	781a      	ldrb	r2, [r3, #0]
 8003408:	4b18      	ldr	r3, [pc, #96]	; (800346c <MENU_check_transition+0xe0>)
 800340a:	701a      	strb	r2, [r3, #0]
                if (item_new == item_old) {    // 2 times the same menu item
 800340c:	e029      	b.n	8003462 <MENU_check_transition+0xd6>
                }
            } else if((0 < TS_State.Y) && (TITLE_HIGHT > TS_State.Y)){
 800340e:	4b16      	ldr	r3, [pc, #88]	; (8003468 <MENU_check_transition+0xdc>)
 8003410:	889b      	ldrh	r3, [r3, #4]
 8003412:	2b00      	cmp	r3, #0
 8003414:	d014      	beq.n	8003440 <MENU_check_transition+0xb4>
 8003416:	4b14      	ldr	r3, [pc, #80]	; (8003468 <MENU_check_transition+0xdc>)
 8003418:	889b      	ldrh	r3, [r3, #4]
 800341a:	2b2c      	cmp	r3, #44	; 0x2c
 800341c:	d810      	bhi.n	8003440 <MENU_check_transition+0xb4>
                item_new = MENU_CABLE;
 800341e:	4b14      	ldr	r3, [pc, #80]	; (8003470 <MENU_check_transition+0xe4>)
 8003420:	2202      	movs	r2, #2
 8003422:	701a      	strb	r2, [r3, #0]
                if (item_new == item_old) {    // 2 times the same menu item
 8003424:	4b12      	ldr	r3, [pc, #72]	; (8003470 <MENU_check_transition+0xe4>)
 8003426:	781a      	ldrb	r2, [r3, #0]
 8003428:	4b12      	ldr	r3, [pc, #72]	; (8003474 <MENU_check_transition+0xe8>)
 800342a:	781b      	ldrb	r3, [r3, #0]
 800342c:	429a      	cmp	r2, r3
 800342e:	d118      	bne.n	8003462 <MENU_check_transition+0xd6>
                    item_new = MENU_NONE;
 8003430:	4b0f      	ldr	r3, [pc, #60]	; (8003470 <MENU_check_transition+0xe4>)
 8003432:	2204      	movs	r2, #4
 8003434:	701a      	strb	r2, [r3, #0]
                    MENU_transition = item_old;
 8003436:	4b0f      	ldr	r3, [pc, #60]	; (8003474 <MENU_check_transition+0xe8>)
 8003438:	781a      	ldrb	r2, [r3, #0]
 800343a:	4b0c      	ldr	r3, [pc, #48]	; (800346c <MENU_check_transition+0xe0>)
 800343c:	701a      	strb	r2, [r3, #0]
                if (item_new == item_old) {    // 2 times the same menu item
 800343e:	e010      	b.n	8003462 <MENU_check_transition+0xd6>
                }
            }
            else{
                item_new = MENU_SUBTASK;
 8003440:	4b0b      	ldr	r3, [pc, #44]	; (8003470 <MENU_check_transition+0xe4>)
 8003442:	2203      	movs	r2, #3
 8003444:	701a      	strb	r2, [r3, #0]
                if (item_new == item_old) {    // 2 times the same menu item
 8003446:	4b0a      	ldr	r3, [pc, #40]	; (8003470 <MENU_check_transition+0xe4>)
 8003448:	781a      	ldrb	r2, [r3, #0]
 800344a:	4b0a      	ldr	r3, [pc, #40]	; (8003474 <MENU_check_transition+0xe8>)
 800344c:	781b      	ldrb	r3, [r3, #0]
 800344e:	429a      	cmp	r2, r3
 8003450:	d107      	bne.n	8003462 <MENU_check_transition+0xd6>
                    item_new = MENU_NONE;
 8003452:	4b07      	ldr	r3, [pc, #28]	; (8003470 <MENU_check_transition+0xe4>)
 8003454:	2204      	movs	r2, #4
 8003456:	701a      	strb	r2, [r3, #0]
                    MENU_transition = item_old;
 8003458:	4b06      	ldr	r3, [pc, #24]	; (8003474 <MENU_check_transition+0xe8>)
 800345a:	781a      	ldrb	r2, [r3, #0]
 800345c:	4b03      	ldr	r3, [pc, #12]	; (800346c <MENU_check_transition+0xe0>)
 800345e:	701a      	strb	r2, [r3, #0]
                }
            }
        }
    }
}
 8003460:	e7ff      	b.n	8003462 <MENU_check_transition+0xd6>
 8003462:	bf00      	nop
 8003464:	bd98      	pop	{r3, r4, r7, pc}
 8003466:	bf00      	nop
 8003468:	20000f70 	.word	0x20000f70
 800346c:	20000008 	.word	0x20000008
 8003470:	20000060 	.word	0x20000060
 8003474:	20000061 	.word	0x20000061

08003478 <EXTI15_10_IRQHandler>:
 *
 * The touchscreen interrupt is connected to PA15.
 * @n The interrupt handler for external line 15 to 10 is called.
 *****************************************************************************/
void EXTI15_10_IRQHandler(void)
{
 8003478:	b580      	push	{r7, lr}
 800347a:	af00      	add	r7, sp, #0
    if (EXTI->PR & EXTI_PR_PR15) {        // Check if interrupt on touchscreen
 800347c:	4b0e      	ldr	r3, [pc, #56]	; (80034b8 <EXTI15_10_IRQHandler+0x40>)
 800347e:	695b      	ldr	r3, [r3, #20]
 8003480:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8003484:	2b00      	cmp	r3, #0
 8003486:	d014      	beq.n	80034b2 <EXTI15_10_IRQHandler+0x3a>
        EXTI->PR |= EXTI_PR_PR15;        // Clear pending interrupt on line 15
 8003488:	4b0b      	ldr	r3, [pc, #44]	; (80034b8 <EXTI15_10_IRQHandler+0x40>)
 800348a:	695b      	ldr	r3, [r3, #20]
 800348c:	4a0a      	ldr	r2, [pc, #40]	; (80034b8 <EXTI15_10_IRQHandler+0x40>)
 800348e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003492:	6153      	str	r3, [r2, #20]
        if (BSP_TS_ITGetStatus()) {        // Get interrupt status
 8003494:	f002 fa48 	bl	8005928 <BSP_TS_ITGetStatus>
 8003498:	4603      	mov	r3, r0
 800349a:	2b00      	cmp	r3, #0
 800349c:	d003      	beq.n	80034a6 <EXTI15_10_IRQHandler+0x2e>
            BSP_TS_ITClear();                // Clear touchscreen controller int.
 800349e:	f002 fb01 	bl	8005aa4 <BSP_TS_ITClear>
            MENU_check_transition();
 80034a2:	f7ff ff73 	bl	800338c <MENU_check_transition>
        }
        EXTI->PR |= EXTI_PR_PR15;        // Clear pending interrupt on line 15
 80034a6:	4b04      	ldr	r3, [pc, #16]	; (80034b8 <EXTI15_10_IRQHandler+0x40>)
 80034a8:	695b      	ldr	r3, [r3, #20]
 80034aa:	4a03      	ldr	r2, [pc, #12]	; (80034b8 <EXTI15_10_IRQHandler+0x40>)
 80034ac:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80034b0:	6153      	str	r3, [r2, #20]
    }
}
 80034b2:	bf00      	nop
 80034b4:	bd80      	pop	{r7, pc}
 80034b6:	bf00      	nop
 80034b8:	40013c00 	.word	0x40013c00

080034bc <__NVIC_EnableIRQ>:
{
 80034bc:	b480      	push	{r7}
 80034be:	b083      	sub	sp, #12
 80034c0:	af00      	add	r7, sp, #0
 80034c2:	4603      	mov	r3, r0
 80034c4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80034c6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034ca:	2b00      	cmp	r3, #0
 80034cc:	db0b      	blt.n	80034e6 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80034ce:	79fb      	ldrb	r3, [r7, #7]
 80034d0:	f003 021f 	and.w	r2, r3, #31
 80034d4:	4907      	ldr	r1, [pc, #28]	; (80034f4 <__NVIC_EnableIRQ+0x38>)
 80034d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034da:	095b      	lsrs	r3, r3, #5
 80034dc:	2001      	movs	r0, #1
 80034de:	fa00 f202 	lsl.w	r2, r0, r2
 80034e2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80034e6:	bf00      	nop
 80034e8:	370c      	adds	r7, #12
 80034ea:	46bd      	mov	sp, r7
 80034ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034f0:	4770      	bx	lr
 80034f2:	bf00      	nop
 80034f4:	e000e100 	.word	0xe000e100

080034f8 <__NVIC_ClearPendingIRQ>:
{
 80034f8:	b480      	push	{r7}
 80034fa:	b083      	sub	sp, #12
 80034fc:	af00      	add	r7, sp, #0
 80034fe:	4603      	mov	r3, r0
 8003500:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003502:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003506:	2b00      	cmp	r3, #0
 8003508:	db0c      	blt.n	8003524 <__NVIC_ClearPendingIRQ+0x2c>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800350a:	79fb      	ldrb	r3, [r7, #7]
 800350c:	f003 021f 	and.w	r2, r3, #31
 8003510:	4907      	ldr	r1, [pc, #28]	; (8003530 <__NVIC_ClearPendingIRQ+0x38>)
 8003512:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003516:	095b      	lsrs	r3, r3, #5
 8003518:	2001      	movs	r0, #1
 800351a:	fa00 f202 	lsl.w	r2, r0, r2
 800351e:	3360      	adds	r3, #96	; 0x60
 8003520:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8003524:	bf00      	nop
 8003526:	370c      	adds	r7, #12
 8003528:	46bd      	mov	sp, r7
 800352a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800352e:	4770      	bx	lr
 8003530:	e000e100 	.word	0xe000e100

08003534 <PB_init>:
 * @brief Configure the GPIO for the USER pushbutton
 *
 * The USER pushbutton is connected to PA0.
 *****************************************************************************/
void PB_init(void)
{
 8003534:	b480      	push	{r7}
 8003536:	b083      	sub	sp, #12
 8003538:	af00      	add	r7, sp, #0
	__HAL_RCC_GPIOA_CLK_ENABLE();		// Enable Clock for GPIO port A
 800353a:	2300      	movs	r3, #0
 800353c:	607b      	str	r3, [r7, #4]
 800353e:	4b0b      	ldr	r3, [pc, #44]	; (800356c <PB_init+0x38>)
 8003540:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003542:	4a0a      	ldr	r2, [pc, #40]	; (800356c <PB_init+0x38>)
 8003544:	f043 0301 	orr.w	r3, r3, #1
 8003548:	6313      	str	r3, [r2, #48]	; 0x30
 800354a:	4b08      	ldr	r3, [pc, #32]	; (800356c <PB_init+0x38>)
 800354c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800354e:	f003 0301 	and.w	r3, r3, #1
 8003552:	607b      	str	r3, [r7, #4]
 8003554:	687b      	ldr	r3, [r7, #4]
	GPIOA->MODER |= (0u << GPIO_MODER_MODER0_Pos);	// Pin 0 of port A = input
 8003556:	4b06      	ldr	r3, [pc, #24]	; (8003570 <PB_init+0x3c>)
 8003558:	4a05      	ldr	r2, [pc, #20]	; (8003570 <PB_init+0x3c>)
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	6013      	str	r3, [r2, #0]
}
 800355e:	bf00      	nop
 8003560:	370c      	adds	r7, #12
 8003562:	46bd      	mov	sp, r7
 8003564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003568:	4770      	bx	lr
 800356a:	bf00      	nop
 800356c:	40023800 	.word	0x40023800
 8003570:	40020000 	.word	0x40020000

08003574 <PB_enableIRQ>:
 * @brief Configure interrupt on rising edge for the USER pushbutton
 *
 * The USER pushbutton is connected to PA0.
 *****************************************************************************/
void PB_enableIRQ(void)
{
 8003574:	b580      	push	{r7, lr}
 8003576:	b082      	sub	sp, #8
 8003578:	af00      	add	r7, sp, #0
	__HAL_RCC_SYSCFG_CLK_ENABLE();		// Enable Clock for system config
 800357a:	2300      	movs	r3, #0
 800357c:	607b      	str	r3, [r7, #4]
 800357e:	4b13      	ldr	r3, [pc, #76]	; (80035cc <PB_enableIRQ+0x58>)
 8003580:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003582:	4a12      	ldr	r2, [pc, #72]	; (80035cc <PB_enableIRQ+0x58>)
 8003584:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003588:	6453      	str	r3, [r2, #68]	; 0x44
 800358a:	4b10      	ldr	r3, [pc, #64]	; (80035cc <PB_enableIRQ+0x58>)
 800358c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800358e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003592:	607b      	str	r3, [r7, #4]
 8003594:	687b      	ldr	r3, [r7, #4]
	SYSCFG->EXTICR[0] |= SYSCFG_EXTICR1_EXTI0_PA;	// EXTI multiplexer
 8003596:	4b0e      	ldr	r3, [pc, #56]	; (80035d0 <PB_enableIRQ+0x5c>)
 8003598:	4a0d      	ldr	r2, [pc, #52]	; (80035d0 <PB_enableIRQ+0x5c>)
 800359a:	689b      	ldr	r3, [r3, #8]
 800359c:	6093      	str	r3, [r2, #8]
	EXTI->RTSR |= EXTI_RTSR_TR0;		// Rising Trigger Select on int. line 0
 800359e:	4b0d      	ldr	r3, [pc, #52]	; (80035d4 <PB_enableIRQ+0x60>)
 80035a0:	689b      	ldr	r3, [r3, #8]
 80035a2:	4a0c      	ldr	r2, [pc, #48]	; (80035d4 <PB_enableIRQ+0x60>)
 80035a4:	f043 0301 	orr.w	r3, r3, #1
 80035a8:	6093      	str	r3, [r2, #8]
	EXTI->IMR |= EXTI_IMR_MR0;			// Interrupt Mask enable on int. line 0
 80035aa:	4b0a      	ldr	r3, [pc, #40]	; (80035d4 <PB_enableIRQ+0x60>)
 80035ac:	681b      	ldr	r3, [r3, #0]
 80035ae:	4a09      	ldr	r2, [pc, #36]	; (80035d4 <PB_enableIRQ+0x60>)
 80035b0:	f043 0301 	orr.w	r3, r3, #1
 80035b4:	6013      	str	r3, [r2, #0]
	NVIC_ClearPendingIRQ(EXTI0_IRQn);	// Clear pending interrupt on line 0
 80035b6:	2006      	movs	r0, #6
 80035b8:	f7ff ff9e 	bl	80034f8 <__NVIC_ClearPendingIRQ>
	NVIC_EnableIRQ(EXTI0_IRQn);			// Enable interrupt line 0 in the NVIC
 80035bc:	2006      	movs	r0, #6
 80035be:	f7ff ff7d 	bl	80034bc <__NVIC_EnableIRQ>
}
 80035c2:	bf00      	nop
 80035c4:	3708      	adds	r7, #8
 80035c6:	46bd      	mov	sp, r7
 80035c8:	bd80      	pop	{r7, pc}
 80035ca:	bf00      	nop
 80035cc:	40023800 	.word	0x40023800
 80035d0:	40013800 	.word	0x40013800
 80035d4:	40013c00 	.word	0x40013c00

080035d8 <PB_pressed>:
 * @brief Was the pushbutton pressed?
 *
 * @return true if pushbutton was pressed
 *****************************************************************************/
bool PB_pressed(void)
{
 80035d8:	b480      	push	{r7}
 80035da:	b083      	sub	sp, #12
 80035dc:	af00      	add	r7, sp, #0
	bool pressed = PB_pressed_flag;		// Read/store value of flag
 80035de:	4b06      	ldr	r3, [pc, #24]	; (80035f8 <PB_pressed+0x20>)
 80035e0:	781b      	ldrb	r3, [r3, #0]
 80035e2:	71fb      	strb	r3, [r7, #7]
	PB_pressed_flag = false;			// Reset flag
 80035e4:	4b04      	ldr	r3, [pc, #16]	; (80035f8 <PB_pressed+0x20>)
 80035e6:	2200      	movs	r2, #0
 80035e8:	701a      	strb	r2, [r3, #0]
	return pressed;
 80035ea:	79fb      	ldrb	r3, [r7, #7]
}
 80035ec:	4618      	mov	r0, r3
 80035ee:	370c      	adds	r7, #12
 80035f0:	46bd      	mov	sp, r7
 80035f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035f6:	4770      	bx	lr
 80035f8:	20000f78 	.word	0x20000f78

080035fc <EXTI0_IRQHandler>:
 *
 * The interrupt handler for external line 0 is called.
 * @n The USER pushbutton is connected to PA0.
 *****************************************************************************/
void EXTI0_IRQHandler(void)
{
 80035fc:	b480      	push	{r7}
 80035fe:	af00      	add	r7, sp, #0
	if (EXTI->PR & EXTI_PR_PR0) {		// Check if interrupt on line 0
 8003600:	4b09      	ldr	r3, [pc, #36]	; (8003628 <EXTI0_IRQHandler+0x2c>)
 8003602:	695b      	ldr	r3, [r3, #20]
 8003604:	f003 0301 	and.w	r3, r3, #1
 8003608:	2b00      	cmp	r3, #0
 800360a:	d008      	beq.n	800361e <EXTI0_IRQHandler+0x22>
		EXTI->PR |= EXTI_PR_PR0;		// Clear pending interrupt on line 0
 800360c:	4b06      	ldr	r3, [pc, #24]	; (8003628 <EXTI0_IRQHandler+0x2c>)
 800360e:	695b      	ldr	r3, [r3, #20]
 8003610:	4a05      	ldr	r2, [pc, #20]	; (8003628 <EXTI0_IRQHandler+0x2c>)
 8003612:	f043 0301 	orr.w	r3, r3, #1
 8003616:	6153      	str	r3, [r2, #20]
		PB_pressed_flag = true;			// Set flag
 8003618:	4b04      	ldr	r3, [pc, #16]	; (800362c <EXTI0_IRQHandler+0x30>)
 800361a:	2201      	movs	r2, #1
 800361c:	701a      	strb	r2, [r3, #0]
	}
}
 800361e:	bf00      	nop
 8003620:	46bd      	mov	sp, r7
 8003622:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003626:	4770      	bx	lr
 8003628:	40013c00 	.word	0x40013c00
 800362c:	20000f78 	.word	0x20000f78

08003630 <NMI_Handler>:
 * @brief  This function handles NMI exception.
 * @param  None
 * @retval None
 */
void NMI_Handler(void)
{
 8003630:	b480      	push	{r7}
 8003632:	af00      	add	r7, sp, #0
}
 8003634:	bf00      	nop
 8003636:	46bd      	mov	sp, r7
 8003638:	f85d 7b04 	ldr.w	r7, [sp], #4
 800363c:	4770      	bx	lr

0800363e <HardFault_Handler>:
 * @brief  This function handles Hard Fault exception.
 * @param  None
 * @retval None
 */
void HardFault_Handler(void)
{
 800363e:	b480      	push	{r7}
 8003640:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Hard Fault exception occurs */
	while (1)
 8003642:	e7fe      	b.n	8003642 <HardFault_Handler+0x4>

08003644 <MemManage_Handler>:
 * @brief  This function handles Memory Manage exception.
 * @param  None
 * @retval None
 */
void MemManage_Handler(void)
{
 8003644:	b480      	push	{r7}
 8003646:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Memory Manage exception occurs */
	while (1)
 8003648:	e7fe      	b.n	8003648 <MemManage_Handler+0x4>

0800364a <BusFault_Handler>:
 * @brief  This function handles Bus Fault exception.
 * @param  None
 * @retval None
 */
void BusFault_Handler(void)
{
 800364a:	b480      	push	{r7}
 800364c:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Bus Fault exception occurs */
	while (1)
 800364e:	e7fe      	b.n	800364e <BusFault_Handler+0x4>

08003650 <UsageFault_Handler>:
 * @brief  This function handles Usage Fault exception.
 * @param  None
 * @retval None
 */
void UsageFault_Handler(void)
{
 8003650:	b480      	push	{r7}
 8003652:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Usage Fault exception occurs */
	while (1)
 8003654:	e7fe      	b.n	8003654 <UsageFault_Handler+0x4>

08003656 <SVC_Handler>:
 * @brief  This function handles SVCall exception.
 * @param  None
 * @retval None
 */
void SVC_Handler(void)
{
 8003656:	b480      	push	{r7}
 8003658:	af00      	add	r7, sp, #0
}
 800365a:	bf00      	nop
 800365c:	46bd      	mov	sp, r7
 800365e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003662:	4770      	bx	lr

08003664 <DebugMon_Handler>:
 * @brief  This function handles Debug Monitor exception.
 * @param  None
 * @retval None
 */
void DebugMon_Handler(void)
{
 8003664:	b480      	push	{r7}
 8003666:	af00      	add	r7, sp, #0
}
 8003668:	bf00      	nop
 800366a:	46bd      	mov	sp, r7
 800366c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003670:	4770      	bx	lr

08003672 <PendSV_Handler>:
 * @brief  This function handles PendSVC exception.
 * @param  None
 * @retval None
 */
void PendSV_Handler(void)
{
 8003672:	b480      	push	{r7}
 8003674:	af00      	add	r7, sp, #0
}
 8003676:	bf00      	nop
 8003678:	46bd      	mov	sp, r7
 800367a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800367e:	4770      	bx	lr

08003680 <SysTick_Handler>:
 * @brief  This function handles SysTick Handler.
 * @param  None
 * @retval None
 */
void SysTick_Handler(void)
{
 8003680:	b580      	push	{r7, lr}
 8003682:	af00      	add	r7, sp, #0
	HAL_IncTick();
 8003684:	f002 fa74 	bl	8005b70 <HAL_IncTick>
}
 8003688:	bf00      	nop
 800368a:	bd80      	pop	{r7, pc}

0800368c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800368c:	b480      	push	{r7}
 800368e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003690:	4b16      	ldr	r3, [pc, #88]	; (80036ec <SystemInit+0x60>)
 8003692:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003696:	4a15      	ldr	r2, [pc, #84]	; (80036ec <SystemInit+0x60>)
 8003698:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800369c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 80036a0:	4b13      	ldr	r3, [pc, #76]	; (80036f0 <SystemInit+0x64>)
 80036a2:	681b      	ldr	r3, [r3, #0]
 80036a4:	4a12      	ldr	r2, [pc, #72]	; (80036f0 <SystemInit+0x64>)
 80036a6:	f043 0301 	orr.w	r3, r3, #1
 80036aa:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80036ac:	4b10      	ldr	r3, [pc, #64]	; (80036f0 <SystemInit+0x64>)
 80036ae:	2200      	movs	r2, #0
 80036b0:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 80036b2:	4b0f      	ldr	r3, [pc, #60]	; (80036f0 <SystemInit+0x64>)
 80036b4:	681b      	ldr	r3, [r3, #0]
 80036b6:	4a0e      	ldr	r2, [pc, #56]	; (80036f0 <SystemInit+0x64>)
 80036b8:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80036bc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80036c0:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 80036c2:	4b0b      	ldr	r3, [pc, #44]	; (80036f0 <SystemInit+0x64>)
 80036c4:	4a0b      	ldr	r2, [pc, #44]	; (80036f4 <SystemInit+0x68>)
 80036c6:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 80036c8:	4b09      	ldr	r3, [pc, #36]	; (80036f0 <SystemInit+0x64>)
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	4a08      	ldr	r2, [pc, #32]	; (80036f0 <SystemInit+0x64>)
 80036ce:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80036d2:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 80036d4:	4b06      	ldr	r3, [pc, #24]	; (80036f0 <SystemInit+0x64>)
 80036d6:	2200      	movs	r2, #0
 80036d8:	60da      	str	r2, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80036da:	4b04      	ldr	r3, [pc, #16]	; (80036ec <SystemInit+0x60>)
 80036dc:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80036e0:	609a      	str	r2, [r3, #8]
#endif
}
 80036e2:	bf00      	nop
 80036e4:	46bd      	mov	sp, r7
 80036e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036ea:	4770      	bx	lr
 80036ec:	e000ed00 	.word	0xe000ed00
 80036f0:	40023800 	.word	0x40023800
 80036f4:	24003010 	.word	0x24003010

080036f8 <Reset_Handler>:
 80036f8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8003730 <LoopFillZerobss+0x14>
 80036fc:	2100      	movs	r1, #0
 80036fe:	e003      	b.n	8003708 <LoopCopyDataInit>

08003700 <CopyDataInit>:
 8003700:	4b0c      	ldr	r3, [pc, #48]	; (8003734 <LoopFillZerobss+0x18>)
 8003702:	585b      	ldr	r3, [r3, r1]
 8003704:	5043      	str	r3, [r0, r1]
 8003706:	3104      	adds	r1, #4

08003708 <LoopCopyDataInit>:
 8003708:	480b      	ldr	r0, [pc, #44]	; (8003738 <LoopFillZerobss+0x1c>)
 800370a:	4b0c      	ldr	r3, [pc, #48]	; (800373c <LoopFillZerobss+0x20>)
 800370c:	1842      	adds	r2, r0, r1
 800370e:	429a      	cmp	r2, r3
 8003710:	d3f6      	bcc.n	8003700 <CopyDataInit>
 8003712:	4a0b      	ldr	r2, [pc, #44]	; (8003740 <LoopFillZerobss+0x24>)
 8003714:	e002      	b.n	800371c <LoopFillZerobss>

08003716 <FillZerobss>:
 8003716:	2300      	movs	r3, #0
 8003718:	f842 3b04 	str.w	r3, [r2], #4

0800371c <LoopFillZerobss>:
 800371c:	4b09      	ldr	r3, [pc, #36]	; (8003744 <LoopFillZerobss+0x28>)
 800371e:	429a      	cmp	r2, r3
 8003720:	d3f9      	bcc.n	8003716 <FillZerobss>
 8003722:	f7ff ffb3 	bl	800368c <SystemInit>
 8003726:	f007 fb23 	bl	800ad70 <__libc_init_array>
 800372a:	f7fe fcab 	bl	8002084 <main>
 800372e:	4770      	bx	lr
 8003730:	20030000 	.word	0x20030000
 8003734:	08028c98 	.word	0x08028c98
 8003738:	20000000 	.word	0x20000000
 800373c:	200002cc 	.word	0x200002cc
 8003740:	200002d0 	.word	0x200002d0
 8003744:	20001254 	.word	0x20001254

08003748 <CAN1_RX0_IRQHandler>:
 8003748:	e7fe      	b.n	8003748 <CAN1_RX0_IRQHandler>

0800374a <ili9341_Init>:
 800374a:	b580      	push	{r7, lr}
 800374c:	af00      	add	r7, sp, #0
 800374e:	f000 fed3 	bl	80044f8 <LCD_IO_Init>
 8003752:	20ca      	movs	r0, #202	; 0xca
 8003754:	f000 f95d 	bl	8003a12 <ili9341_WriteReg>
 8003758:	20c3      	movs	r0, #195	; 0xc3
 800375a:	f000 f967 	bl	8003a2c <ili9341_WriteData>
 800375e:	2008      	movs	r0, #8
 8003760:	f000 f964 	bl	8003a2c <ili9341_WriteData>
 8003764:	2050      	movs	r0, #80	; 0x50
 8003766:	f000 f961 	bl	8003a2c <ili9341_WriteData>
 800376a:	20cf      	movs	r0, #207	; 0xcf
 800376c:	f000 f951 	bl	8003a12 <ili9341_WriteReg>
 8003770:	2000      	movs	r0, #0
 8003772:	f000 f95b 	bl	8003a2c <ili9341_WriteData>
 8003776:	20c1      	movs	r0, #193	; 0xc1
 8003778:	f000 f958 	bl	8003a2c <ili9341_WriteData>
 800377c:	2030      	movs	r0, #48	; 0x30
 800377e:	f000 f955 	bl	8003a2c <ili9341_WriteData>
 8003782:	20ed      	movs	r0, #237	; 0xed
 8003784:	f000 f945 	bl	8003a12 <ili9341_WriteReg>
 8003788:	2064      	movs	r0, #100	; 0x64
 800378a:	f000 f94f 	bl	8003a2c <ili9341_WriteData>
 800378e:	2003      	movs	r0, #3
 8003790:	f000 f94c 	bl	8003a2c <ili9341_WriteData>
 8003794:	2012      	movs	r0, #18
 8003796:	f000 f949 	bl	8003a2c <ili9341_WriteData>
 800379a:	2081      	movs	r0, #129	; 0x81
 800379c:	f000 f946 	bl	8003a2c <ili9341_WriteData>
 80037a0:	20e8      	movs	r0, #232	; 0xe8
 80037a2:	f000 f936 	bl	8003a12 <ili9341_WriteReg>
 80037a6:	2085      	movs	r0, #133	; 0x85
 80037a8:	f000 f940 	bl	8003a2c <ili9341_WriteData>
 80037ac:	2000      	movs	r0, #0
 80037ae:	f000 f93d 	bl	8003a2c <ili9341_WriteData>
 80037b2:	2078      	movs	r0, #120	; 0x78
 80037b4:	f000 f93a 	bl	8003a2c <ili9341_WriteData>
 80037b8:	20cb      	movs	r0, #203	; 0xcb
 80037ba:	f000 f92a 	bl	8003a12 <ili9341_WriteReg>
 80037be:	2039      	movs	r0, #57	; 0x39
 80037c0:	f000 f934 	bl	8003a2c <ili9341_WriteData>
 80037c4:	202c      	movs	r0, #44	; 0x2c
 80037c6:	f000 f931 	bl	8003a2c <ili9341_WriteData>
 80037ca:	2000      	movs	r0, #0
 80037cc:	f000 f92e 	bl	8003a2c <ili9341_WriteData>
 80037d0:	2034      	movs	r0, #52	; 0x34
 80037d2:	f000 f92b 	bl	8003a2c <ili9341_WriteData>
 80037d6:	2002      	movs	r0, #2
 80037d8:	f000 f928 	bl	8003a2c <ili9341_WriteData>
 80037dc:	20f7      	movs	r0, #247	; 0xf7
 80037de:	f000 f918 	bl	8003a12 <ili9341_WriteReg>
 80037e2:	2020      	movs	r0, #32
 80037e4:	f000 f922 	bl	8003a2c <ili9341_WriteData>
 80037e8:	20ea      	movs	r0, #234	; 0xea
 80037ea:	f000 f912 	bl	8003a12 <ili9341_WriteReg>
 80037ee:	2000      	movs	r0, #0
 80037f0:	f000 f91c 	bl	8003a2c <ili9341_WriteData>
 80037f4:	2000      	movs	r0, #0
 80037f6:	f000 f919 	bl	8003a2c <ili9341_WriteData>
 80037fa:	20b1      	movs	r0, #177	; 0xb1
 80037fc:	f000 f909 	bl	8003a12 <ili9341_WriteReg>
 8003800:	2000      	movs	r0, #0
 8003802:	f000 f913 	bl	8003a2c <ili9341_WriteData>
 8003806:	201b      	movs	r0, #27
 8003808:	f000 f910 	bl	8003a2c <ili9341_WriteData>
 800380c:	20b6      	movs	r0, #182	; 0xb6
 800380e:	f000 f900 	bl	8003a12 <ili9341_WriteReg>
 8003812:	200a      	movs	r0, #10
 8003814:	f000 f90a 	bl	8003a2c <ili9341_WriteData>
 8003818:	20a2      	movs	r0, #162	; 0xa2
 800381a:	f000 f907 	bl	8003a2c <ili9341_WriteData>
 800381e:	20c0      	movs	r0, #192	; 0xc0
 8003820:	f000 f8f7 	bl	8003a12 <ili9341_WriteReg>
 8003824:	2010      	movs	r0, #16
 8003826:	f000 f901 	bl	8003a2c <ili9341_WriteData>
 800382a:	20c1      	movs	r0, #193	; 0xc1
 800382c:	f000 f8f1 	bl	8003a12 <ili9341_WriteReg>
 8003830:	2010      	movs	r0, #16
 8003832:	f000 f8fb 	bl	8003a2c <ili9341_WriteData>
 8003836:	20c5      	movs	r0, #197	; 0xc5
 8003838:	f000 f8eb 	bl	8003a12 <ili9341_WriteReg>
 800383c:	2045      	movs	r0, #69	; 0x45
 800383e:	f000 f8f5 	bl	8003a2c <ili9341_WriteData>
 8003842:	2015      	movs	r0, #21
 8003844:	f000 f8f2 	bl	8003a2c <ili9341_WriteData>
 8003848:	20c7      	movs	r0, #199	; 0xc7
 800384a:	f000 f8e2 	bl	8003a12 <ili9341_WriteReg>
 800384e:	2090      	movs	r0, #144	; 0x90
 8003850:	f000 f8ec 	bl	8003a2c <ili9341_WriteData>
 8003854:	2036      	movs	r0, #54	; 0x36
 8003856:	f000 f8dc 	bl	8003a12 <ili9341_WriteReg>
 800385a:	20c8      	movs	r0, #200	; 0xc8
 800385c:	f000 f8e6 	bl	8003a2c <ili9341_WriteData>
 8003860:	20f2      	movs	r0, #242	; 0xf2
 8003862:	f000 f8d6 	bl	8003a12 <ili9341_WriteReg>
 8003866:	2000      	movs	r0, #0
 8003868:	f000 f8e0 	bl	8003a2c <ili9341_WriteData>
 800386c:	20b0      	movs	r0, #176	; 0xb0
 800386e:	f000 f8d0 	bl	8003a12 <ili9341_WriteReg>
 8003872:	20c2      	movs	r0, #194	; 0xc2
 8003874:	f000 f8da 	bl	8003a2c <ili9341_WriteData>
 8003878:	20b6      	movs	r0, #182	; 0xb6
 800387a:	f000 f8ca 	bl	8003a12 <ili9341_WriteReg>
 800387e:	200a      	movs	r0, #10
 8003880:	f000 f8d4 	bl	8003a2c <ili9341_WriteData>
 8003884:	20a7      	movs	r0, #167	; 0xa7
 8003886:	f000 f8d1 	bl	8003a2c <ili9341_WriteData>
 800388a:	2027      	movs	r0, #39	; 0x27
 800388c:	f000 f8ce 	bl	8003a2c <ili9341_WriteData>
 8003890:	2004      	movs	r0, #4
 8003892:	f000 f8cb 	bl	8003a2c <ili9341_WriteData>
 8003896:	202a      	movs	r0, #42	; 0x2a
 8003898:	f000 f8bb 	bl	8003a12 <ili9341_WriteReg>
 800389c:	2000      	movs	r0, #0
 800389e:	f000 f8c5 	bl	8003a2c <ili9341_WriteData>
 80038a2:	2000      	movs	r0, #0
 80038a4:	f000 f8c2 	bl	8003a2c <ili9341_WriteData>
 80038a8:	2000      	movs	r0, #0
 80038aa:	f000 f8bf 	bl	8003a2c <ili9341_WriteData>
 80038ae:	20ef      	movs	r0, #239	; 0xef
 80038b0:	f000 f8bc 	bl	8003a2c <ili9341_WriteData>
 80038b4:	202b      	movs	r0, #43	; 0x2b
 80038b6:	f000 f8ac 	bl	8003a12 <ili9341_WriteReg>
 80038ba:	2000      	movs	r0, #0
 80038bc:	f000 f8b6 	bl	8003a2c <ili9341_WriteData>
 80038c0:	2000      	movs	r0, #0
 80038c2:	f000 f8b3 	bl	8003a2c <ili9341_WriteData>
 80038c6:	2001      	movs	r0, #1
 80038c8:	f000 f8b0 	bl	8003a2c <ili9341_WriteData>
 80038cc:	203f      	movs	r0, #63	; 0x3f
 80038ce:	f000 f8ad 	bl	8003a2c <ili9341_WriteData>
 80038d2:	20f6      	movs	r0, #246	; 0xf6
 80038d4:	f000 f89d 	bl	8003a12 <ili9341_WriteReg>
 80038d8:	2001      	movs	r0, #1
 80038da:	f000 f8a7 	bl	8003a2c <ili9341_WriteData>
 80038de:	2000      	movs	r0, #0
 80038e0:	f000 f8a4 	bl	8003a2c <ili9341_WriteData>
 80038e4:	2006      	movs	r0, #6
 80038e6:	f000 f8a1 	bl	8003a2c <ili9341_WriteData>
 80038ea:	202c      	movs	r0, #44	; 0x2c
 80038ec:	f000 f891 	bl	8003a12 <ili9341_WriteReg>
 80038f0:	20c8      	movs	r0, #200	; 0xc8
 80038f2:	f000 feef 	bl	80046d4 <LCD_Delay>
 80038f6:	2026      	movs	r0, #38	; 0x26
 80038f8:	f000 f88b 	bl	8003a12 <ili9341_WriteReg>
 80038fc:	2001      	movs	r0, #1
 80038fe:	f000 f895 	bl	8003a2c <ili9341_WriteData>
 8003902:	20e0      	movs	r0, #224	; 0xe0
 8003904:	f000 f885 	bl	8003a12 <ili9341_WriteReg>
 8003908:	200f      	movs	r0, #15
 800390a:	f000 f88f 	bl	8003a2c <ili9341_WriteData>
 800390e:	2029      	movs	r0, #41	; 0x29
 8003910:	f000 f88c 	bl	8003a2c <ili9341_WriteData>
 8003914:	2024      	movs	r0, #36	; 0x24
 8003916:	f000 f889 	bl	8003a2c <ili9341_WriteData>
 800391a:	200c      	movs	r0, #12
 800391c:	f000 f886 	bl	8003a2c <ili9341_WriteData>
 8003920:	200e      	movs	r0, #14
 8003922:	f000 f883 	bl	8003a2c <ili9341_WriteData>
 8003926:	2009      	movs	r0, #9
 8003928:	f000 f880 	bl	8003a2c <ili9341_WriteData>
 800392c:	204e      	movs	r0, #78	; 0x4e
 800392e:	f000 f87d 	bl	8003a2c <ili9341_WriteData>
 8003932:	2078      	movs	r0, #120	; 0x78
 8003934:	f000 f87a 	bl	8003a2c <ili9341_WriteData>
 8003938:	203c      	movs	r0, #60	; 0x3c
 800393a:	f000 f877 	bl	8003a2c <ili9341_WriteData>
 800393e:	2009      	movs	r0, #9
 8003940:	f000 f874 	bl	8003a2c <ili9341_WriteData>
 8003944:	2013      	movs	r0, #19
 8003946:	f000 f871 	bl	8003a2c <ili9341_WriteData>
 800394a:	2005      	movs	r0, #5
 800394c:	f000 f86e 	bl	8003a2c <ili9341_WriteData>
 8003950:	2017      	movs	r0, #23
 8003952:	f000 f86b 	bl	8003a2c <ili9341_WriteData>
 8003956:	2011      	movs	r0, #17
 8003958:	f000 f868 	bl	8003a2c <ili9341_WriteData>
 800395c:	2000      	movs	r0, #0
 800395e:	f000 f865 	bl	8003a2c <ili9341_WriteData>
 8003962:	20e1      	movs	r0, #225	; 0xe1
 8003964:	f000 f855 	bl	8003a12 <ili9341_WriteReg>
 8003968:	2000      	movs	r0, #0
 800396a:	f000 f85f 	bl	8003a2c <ili9341_WriteData>
 800396e:	2016      	movs	r0, #22
 8003970:	f000 f85c 	bl	8003a2c <ili9341_WriteData>
 8003974:	201b      	movs	r0, #27
 8003976:	f000 f859 	bl	8003a2c <ili9341_WriteData>
 800397a:	2004      	movs	r0, #4
 800397c:	f000 f856 	bl	8003a2c <ili9341_WriteData>
 8003980:	2011      	movs	r0, #17
 8003982:	f000 f853 	bl	8003a2c <ili9341_WriteData>
 8003986:	2007      	movs	r0, #7
 8003988:	f000 f850 	bl	8003a2c <ili9341_WriteData>
 800398c:	2031      	movs	r0, #49	; 0x31
 800398e:	f000 f84d 	bl	8003a2c <ili9341_WriteData>
 8003992:	2033      	movs	r0, #51	; 0x33
 8003994:	f000 f84a 	bl	8003a2c <ili9341_WriteData>
 8003998:	2042      	movs	r0, #66	; 0x42
 800399a:	f000 f847 	bl	8003a2c <ili9341_WriteData>
 800399e:	2005      	movs	r0, #5
 80039a0:	f000 f844 	bl	8003a2c <ili9341_WriteData>
 80039a4:	200c      	movs	r0, #12
 80039a6:	f000 f841 	bl	8003a2c <ili9341_WriteData>
 80039aa:	200a      	movs	r0, #10
 80039ac:	f000 f83e 	bl	8003a2c <ili9341_WriteData>
 80039b0:	2028      	movs	r0, #40	; 0x28
 80039b2:	f000 f83b 	bl	8003a2c <ili9341_WriteData>
 80039b6:	202f      	movs	r0, #47	; 0x2f
 80039b8:	f000 f838 	bl	8003a2c <ili9341_WriteData>
 80039bc:	200f      	movs	r0, #15
 80039be:	f000 f835 	bl	8003a2c <ili9341_WriteData>
 80039c2:	2011      	movs	r0, #17
 80039c4:	f000 f825 	bl	8003a12 <ili9341_WriteReg>
 80039c8:	20c8      	movs	r0, #200	; 0xc8
 80039ca:	f000 fe83 	bl	80046d4 <LCD_Delay>
 80039ce:	2029      	movs	r0, #41	; 0x29
 80039d0:	f000 f81f 	bl	8003a12 <ili9341_WriteReg>
 80039d4:	202c      	movs	r0, #44	; 0x2c
 80039d6:	f000 f81c 	bl	8003a12 <ili9341_WriteReg>
 80039da:	bf00      	nop
 80039dc:	bd80      	pop	{r7, pc}

080039de <ili9341_ReadID>:
 80039de:	b580      	push	{r7, lr}
 80039e0:	af00      	add	r7, sp, #0
 80039e2:	f000 fd89 	bl	80044f8 <LCD_IO_Init>
 80039e6:	2103      	movs	r1, #3
 80039e8:	20d3      	movs	r0, #211	; 0xd3
 80039ea:	f000 f82c 	bl	8003a46 <ili9341_ReadData>
 80039ee:	4603      	mov	r3, r0
 80039f0:	b29b      	uxth	r3, r3
 80039f2:	4618      	mov	r0, r3
 80039f4:	bd80      	pop	{r7, pc}

080039f6 <ili9341_DisplayOn>:
 80039f6:	b580      	push	{r7, lr}
 80039f8:	af00      	add	r7, sp, #0
 80039fa:	2029      	movs	r0, #41	; 0x29
 80039fc:	f000 f809 	bl	8003a12 <ili9341_WriteReg>
 8003a00:	bf00      	nop
 8003a02:	bd80      	pop	{r7, pc}

08003a04 <ili9341_DisplayOff>:
 8003a04:	b580      	push	{r7, lr}
 8003a06:	af00      	add	r7, sp, #0
 8003a08:	2028      	movs	r0, #40	; 0x28
 8003a0a:	f000 f802 	bl	8003a12 <ili9341_WriteReg>
 8003a0e:	bf00      	nop
 8003a10:	bd80      	pop	{r7, pc}

08003a12 <ili9341_WriteReg>:
 8003a12:	b580      	push	{r7, lr}
 8003a14:	b082      	sub	sp, #8
 8003a16:	af00      	add	r7, sp, #0
 8003a18:	4603      	mov	r3, r0
 8003a1a:	71fb      	strb	r3, [r7, #7]
 8003a1c:	79fb      	ldrb	r3, [r7, #7]
 8003a1e:	4618      	mov	r0, r3
 8003a20:	f000 fe04 	bl	800462c <LCD_IO_WriteReg>
 8003a24:	bf00      	nop
 8003a26:	3708      	adds	r7, #8
 8003a28:	46bd      	mov	sp, r7
 8003a2a:	bd80      	pop	{r7, pc}

08003a2c <ili9341_WriteData>:
 8003a2c:	b580      	push	{r7, lr}
 8003a2e:	b082      	sub	sp, #8
 8003a30:	af00      	add	r7, sp, #0
 8003a32:	4603      	mov	r3, r0
 8003a34:	80fb      	strh	r3, [r7, #6]
 8003a36:	88fb      	ldrh	r3, [r7, #6]
 8003a38:	4618      	mov	r0, r3
 8003a3a:	f000 fdd5 	bl	80045e8 <LCD_IO_WriteData>
 8003a3e:	bf00      	nop
 8003a40:	3708      	adds	r7, #8
 8003a42:	46bd      	mov	sp, r7
 8003a44:	bd80      	pop	{r7, pc}

08003a46 <ili9341_ReadData>:
 8003a46:	b580      	push	{r7, lr}
 8003a48:	b082      	sub	sp, #8
 8003a4a:	af00      	add	r7, sp, #0
 8003a4c:	4603      	mov	r3, r0
 8003a4e:	460a      	mov	r2, r1
 8003a50:	80fb      	strh	r3, [r7, #6]
 8003a52:	4613      	mov	r3, r2
 8003a54:	717b      	strb	r3, [r7, #5]
 8003a56:	797a      	ldrb	r2, [r7, #5]
 8003a58:	88fb      	ldrh	r3, [r7, #6]
 8003a5a:	4611      	mov	r1, r2
 8003a5c:	4618      	mov	r0, r3
 8003a5e:	f000 fe07 	bl	8004670 <LCD_IO_ReadData>
 8003a62:	4603      	mov	r3, r0
 8003a64:	4618      	mov	r0, r3
 8003a66:	3708      	adds	r7, #8
 8003a68:	46bd      	mov	sp, r7
 8003a6a:	bd80      	pop	{r7, pc}

08003a6c <ili9341_GetLcdPixelWidth>:
 8003a6c:	b480      	push	{r7}
 8003a6e:	af00      	add	r7, sp, #0
 8003a70:	23f0      	movs	r3, #240	; 0xf0
 8003a72:	4618      	mov	r0, r3
 8003a74:	46bd      	mov	sp, r7
 8003a76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a7a:	4770      	bx	lr

08003a7c <ili9341_GetLcdPixelHeight>:
 8003a7c:	b480      	push	{r7}
 8003a7e:	af00      	add	r7, sp, #0
 8003a80:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003a84:	4618      	mov	r0, r3
 8003a86:	46bd      	mov	sp, r7
 8003a88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a8c:	4770      	bx	lr
	...

08003a90 <stmpe811_Init>:
 8003a90:	b580      	push	{r7, lr}
 8003a92:	b084      	sub	sp, #16
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	4603      	mov	r3, r0
 8003a98:	80fb      	strh	r3, [r7, #6]
 8003a9a:	88fb      	ldrh	r3, [r7, #6]
 8003a9c:	4618      	mov	r0, r3
 8003a9e:	f000 fa59 	bl	8003f54 <stmpe811_GetInstance>
 8003aa2:	4603      	mov	r3, r0
 8003aa4:	73fb      	strb	r3, [r7, #15]
 8003aa6:	7bfb      	ldrb	r3, [r7, #15]
 8003aa8:	2bff      	cmp	r3, #255	; 0xff
 8003aaa:	d112      	bne.n	8003ad2 <stmpe811_Init+0x42>
 8003aac:	2000      	movs	r0, #0
 8003aae:	f000 fa51 	bl	8003f54 <stmpe811_GetInstance>
 8003ab2:	4603      	mov	r3, r0
 8003ab4:	73bb      	strb	r3, [r7, #14]
 8003ab6:	7bbb      	ldrb	r3, [r7, #14]
 8003ab8:	2b01      	cmp	r3, #1
 8003aba:	d80a      	bhi.n	8003ad2 <stmpe811_Init+0x42>
 8003abc:	7bbb      	ldrb	r3, [r7, #14]
 8003abe:	88fa      	ldrh	r2, [r7, #6]
 8003ac0:	b2d1      	uxtb	r1, r2
 8003ac2:	4a06      	ldr	r2, [pc, #24]	; (8003adc <stmpe811_Init+0x4c>)
 8003ac4:	54d1      	strb	r1, [r2, r3]
 8003ac6:	f000 fe10 	bl	80046ea <IOE_Init>
 8003aca:	88fb      	ldrh	r3, [r7, #6]
 8003acc:	4618      	mov	r0, r3
 8003ace:	f000 f807 	bl	8003ae0 <stmpe811_Reset>
 8003ad2:	bf00      	nop
 8003ad4:	3710      	adds	r7, #16
 8003ad6:	46bd      	mov	sp, r7
 8003ad8:	bd80      	pop	{r7, pc}
 8003ada:	bf00      	nop
 8003adc:	20000f7c 	.word	0x20000f7c

08003ae0 <stmpe811_Reset>:
 8003ae0:	b580      	push	{r7, lr}
 8003ae2:	b082      	sub	sp, #8
 8003ae4:	af00      	add	r7, sp, #0
 8003ae6:	4603      	mov	r3, r0
 8003ae8:	80fb      	strh	r3, [r7, #6]
 8003aea:	88fb      	ldrh	r3, [r7, #6]
 8003aec:	b2db      	uxtb	r3, r3
 8003aee:	2202      	movs	r2, #2
 8003af0:	2103      	movs	r1, #3
 8003af2:	4618      	mov	r0, r3
 8003af4:	f000 fe05 	bl	8004702 <IOE_Write>
 8003af8:	200a      	movs	r0, #10
 8003afa:	f000 fe3f 	bl	800477c <IOE_Delay>
 8003afe:	88fb      	ldrh	r3, [r7, #6]
 8003b00:	b2db      	uxtb	r3, r3
 8003b02:	2200      	movs	r2, #0
 8003b04:	2103      	movs	r1, #3
 8003b06:	4618      	mov	r0, r3
 8003b08:	f000 fdfb 	bl	8004702 <IOE_Write>
 8003b0c:	2002      	movs	r0, #2
 8003b0e:	f000 fe35 	bl	800477c <IOE_Delay>
 8003b12:	bf00      	nop
 8003b14:	3708      	adds	r7, #8
 8003b16:	46bd      	mov	sp, r7
 8003b18:	bd80      	pop	{r7, pc}

08003b1a <stmpe811_ReadID>:
 8003b1a:	b590      	push	{r4, r7, lr}
 8003b1c:	b083      	sub	sp, #12
 8003b1e:	af00      	add	r7, sp, #0
 8003b20:	4603      	mov	r3, r0
 8003b22:	80fb      	strh	r3, [r7, #6]
 8003b24:	f000 fde1 	bl	80046ea <IOE_Init>
 8003b28:	88fb      	ldrh	r3, [r7, #6]
 8003b2a:	b2db      	uxtb	r3, r3
 8003b2c:	2100      	movs	r1, #0
 8003b2e:	4618      	mov	r0, r3
 8003b30:	f000 fdfa 	bl	8004728 <IOE_Read>
 8003b34:	4603      	mov	r3, r0
 8003b36:	021b      	lsls	r3, r3, #8
 8003b38:	b21c      	sxth	r4, r3
 8003b3a:	88fb      	ldrh	r3, [r7, #6]
 8003b3c:	b2db      	uxtb	r3, r3
 8003b3e:	2101      	movs	r1, #1
 8003b40:	4618      	mov	r0, r3
 8003b42:	f000 fdf1 	bl	8004728 <IOE_Read>
 8003b46:	4603      	mov	r3, r0
 8003b48:	b21b      	sxth	r3, r3
 8003b4a:	4323      	orrs	r3, r4
 8003b4c:	b21b      	sxth	r3, r3
 8003b4e:	b29b      	uxth	r3, r3
 8003b50:	4618      	mov	r0, r3
 8003b52:	370c      	adds	r7, #12
 8003b54:	46bd      	mov	sp, r7
 8003b56:	bd90      	pop	{r4, r7, pc}

08003b58 <stmpe811_EnableGlobalIT>:
 8003b58:	b580      	push	{r7, lr}
 8003b5a:	b084      	sub	sp, #16
 8003b5c:	af00      	add	r7, sp, #0
 8003b5e:	4603      	mov	r3, r0
 8003b60:	80fb      	strh	r3, [r7, #6]
 8003b62:	2300      	movs	r3, #0
 8003b64:	73fb      	strb	r3, [r7, #15]
 8003b66:	88fb      	ldrh	r3, [r7, #6]
 8003b68:	b2db      	uxtb	r3, r3
 8003b6a:	2109      	movs	r1, #9
 8003b6c:	4618      	mov	r0, r3
 8003b6e:	f000 fddb 	bl	8004728 <IOE_Read>
 8003b72:	4603      	mov	r3, r0
 8003b74:	73fb      	strb	r3, [r7, #15]
 8003b76:	7bfb      	ldrb	r3, [r7, #15]
 8003b78:	f043 0301 	orr.w	r3, r3, #1
 8003b7c:	73fb      	strb	r3, [r7, #15]
 8003b7e:	88fb      	ldrh	r3, [r7, #6]
 8003b80:	b2db      	uxtb	r3, r3
 8003b82:	7bfa      	ldrb	r2, [r7, #15]
 8003b84:	2109      	movs	r1, #9
 8003b86:	4618      	mov	r0, r3
 8003b88:	f000 fdbb 	bl	8004702 <IOE_Write>
 8003b8c:	bf00      	nop
 8003b8e:	3710      	adds	r7, #16
 8003b90:	46bd      	mov	sp, r7
 8003b92:	bd80      	pop	{r7, pc}

08003b94 <stmpe811_DisableGlobalIT>:
 8003b94:	b580      	push	{r7, lr}
 8003b96:	b084      	sub	sp, #16
 8003b98:	af00      	add	r7, sp, #0
 8003b9a:	4603      	mov	r3, r0
 8003b9c:	80fb      	strh	r3, [r7, #6]
 8003b9e:	2300      	movs	r3, #0
 8003ba0:	73fb      	strb	r3, [r7, #15]
 8003ba2:	88fb      	ldrh	r3, [r7, #6]
 8003ba4:	b2db      	uxtb	r3, r3
 8003ba6:	2109      	movs	r1, #9
 8003ba8:	4618      	mov	r0, r3
 8003baa:	f000 fdbd 	bl	8004728 <IOE_Read>
 8003bae:	4603      	mov	r3, r0
 8003bb0:	73fb      	strb	r3, [r7, #15]
 8003bb2:	7bfb      	ldrb	r3, [r7, #15]
 8003bb4:	f023 0301 	bic.w	r3, r3, #1
 8003bb8:	73fb      	strb	r3, [r7, #15]
 8003bba:	88fb      	ldrh	r3, [r7, #6]
 8003bbc:	b2db      	uxtb	r3, r3
 8003bbe:	7bfa      	ldrb	r2, [r7, #15]
 8003bc0:	2109      	movs	r1, #9
 8003bc2:	4618      	mov	r0, r3
 8003bc4:	f000 fd9d 	bl	8004702 <IOE_Write>
 8003bc8:	bf00      	nop
 8003bca:	3710      	adds	r7, #16
 8003bcc:	46bd      	mov	sp, r7
 8003bce:	bd80      	pop	{r7, pc}

08003bd0 <stmpe811_EnableITSource>:
 8003bd0:	b580      	push	{r7, lr}
 8003bd2:	b084      	sub	sp, #16
 8003bd4:	af00      	add	r7, sp, #0
 8003bd6:	4603      	mov	r3, r0
 8003bd8:	460a      	mov	r2, r1
 8003bda:	80fb      	strh	r3, [r7, #6]
 8003bdc:	4613      	mov	r3, r2
 8003bde:	717b      	strb	r3, [r7, #5]
 8003be0:	2300      	movs	r3, #0
 8003be2:	73fb      	strb	r3, [r7, #15]
 8003be4:	88fb      	ldrh	r3, [r7, #6]
 8003be6:	b2db      	uxtb	r3, r3
 8003be8:	210a      	movs	r1, #10
 8003bea:	4618      	mov	r0, r3
 8003bec:	f000 fd9c 	bl	8004728 <IOE_Read>
 8003bf0:	4603      	mov	r3, r0
 8003bf2:	73fb      	strb	r3, [r7, #15]
 8003bf4:	7bfa      	ldrb	r2, [r7, #15]
 8003bf6:	797b      	ldrb	r3, [r7, #5]
 8003bf8:	4313      	orrs	r3, r2
 8003bfa:	73fb      	strb	r3, [r7, #15]
 8003bfc:	88fb      	ldrh	r3, [r7, #6]
 8003bfe:	b2db      	uxtb	r3, r3
 8003c00:	7bfa      	ldrb	r2, [r7, #15]
 8003c02:	210a      	movs	r1, #10
 8003c04:	4618      	mov	r0, r3
 8003c06:	f000 fd7c 	bl	8004702 <IOE_Write>
 8003c0a:	bf00      	nop
 8003c0c:	3710      	adds	r7, #16
 8003c0e:	46bd      	mov	sp, r7
 8003c10:	bd80      	pop	{r7, pc}

08003c12 <stmpe811_DisableITSource>:
 8003c12:	b580      	push	{r7, lr}
 8003c14:	b084      	sub	sp, #16
 8003c16:	af00      	add	r7, sp, #0
 8003c18:	4603      	mov	r3, r0
 8003c1a:	460a      	mov	r2, r1
 8003c1c:	80fb      	strh	r3, [r7, #6]
 8003c1e:	4613      	mov	r3, r2
 8003c20:	717b      	strb	r3, [r7, #5]
 8003c22:	2300      	movs	r3, #0
 8003c24:	73fb      	strb	r3, [r7, #15]
 8003c26:	88fb      	ldrh	r3, [r7, #6]
 8003c28:	b2db      	uxtb	r3, r3
 8003c2a:	210a      	movs	r1, #10
 8003c2c:	4618      	mov	r0, r3
 8003c2e:	f000 fd7b 	bl	8004728 <IOE_Read>
 8003c32:	4603      	mov	r3, r0
 8003c34:	73fb      	strb	r3, [r7, #15]
 8003c36:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003c3a:	43db      	mvns	r3, r3
 8003c3c:	b25a      	sxtb	r2, r3
 8003c3e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003c42:	4013      	ands	r3, r2
 8003c44:	b25b      	sxtb	r3, r3
 8003c46:	73fb      	strb	r3, [r7, #15]
 8003c48:	88fb      	ldrh	r3, [r7, #6]
 8003c4a:	b2db      	uxtb	r3, r3
 8003c4c:	7bfa      	ldrb	r2, [r7, #15]
 8003c4e:	210a      	movs	r1, #10
 8003c50:	4618      	mov	r0, r3
 8003c52:	f000 fd56 	bl	8004702 <IOE_Write>
 8003c56:	bf00      	nop
 8003c58:	3710      	adds	r7, #16
 8003c5a:	46bd      	mov	sp, r7
 8003c5c:	bd80      	pop	{r7, pc}

08003c5e <stmpe811_ReadGITStatus>:
 8003c5e:	b580      	push	{r7, lr}
 8003c60:	b082      	sub	sp, #8
 8003c62:	af00      	add	r7, sp, #0
 8003c64:	4603      	mov	r3, r0
 8003c66:	460a      	mov	r2, r1
 8003c68:	80fb      	strh	r3, [r7, #6]
 8003c6a:	4613      	mov	r3, r2
 8003c6c:	717b      	strb	r3, [r7, #5]
 8003c6e:	88fb      	ldrh	r3, [r7, #6]
 8003c70:	b2db      	uxtb	r3, r3
 8003c72:	210b      	movs	r1, #11
 8003c74:	4618      	mov	r0, r3
 8003c76:	f000 fd57 	bl	8004728 <IOE_Read>
 8003c7a:	4603      	mov	r3, r0
 8003c7c:	461a      	mov	r2, r3
 8003c7e:	797b      	ldrb	r3, [r7, #5]
 8003c80:	4013      	ands	r3, r2
 8003c82:	b2db      	uxtb	r3, r3
 8003c84:	4618      	mov	r0, r3
 8003c86:	3708      	adds	r7, #8
 8003c88:	46bd      	mov	sp, r7
 8003c8a:	bd80      	pop	{r7, pc}

08003c8c <stmpe811_ClearGlobalIT>:
 8003c8c:	b580      	push	{r7, lr}
 8003c8e:	b082      	sub	sp, #8
 8003c90:	af00      	add	r7, sp, #0
 8003c92:	4603      	mov	r3, r0
 8003c94:	460a      	mov	r2, r1
 8003c96:	80fb      	strh	r3, [r7, #6]
 8003c98:	4613      	mov	r3, r2
 8003c9a:	717b      	strb	r3, [r7, #5]
 8003c9c:	88fb      	ldrh	r3, [r7, #6]
 8003c9e:	b2db      	uxtb	r3, r3
 8003ca0:	797a      	ldrb	r2, [r7, #5]
 8003ca2:	210b      	movs	r1, #11
 8003ca4:	4618      	mov	r0, r3
 8003ca6:	f000 fd2c 	bl	8004702 <IOE_Write>
 8003caa:	bf00      	nop
 8003cac:	3708      	adds	r7, #8
 8003cae:	46bd      	mov	sp, r7
 8003cb0:	bd80      	pop	{r7, pc}

08003cb2 <stmpe811_IO_EnableAF>:
 8003cb2:	b580      	push	{r7, lr}
 8003cb4:	b084      	sub	sp, #16
 8003cb6:	af00      	add	r7, sp, #0
 8003cb8:	4603      	mov	r3, r0
 8003cba:	6039      	str	r1, [r7, #0]
 8003cbc:	80fb      	strh	r3, [r7, #6]
 8003cbe:	2300      	movs	r3, #0
 8003cc0:	73fb      	strb	r3, [r7, #15]
 8003cc2:	88fb      	ldrh	r3, [r7, #6]
 8003cc4:	b2db      	uxtb	r3, r3
 8003cc6:	2117      	movs	r1, #23
 8003cc8:	4618      	mov	r0, r3
 8003cca:	f000 fd2d 	bl	8004728 <IOE_Read>
 8003cce:	4603      	mov	r3, r0
 8003cd0:	73fb      	strb	r3, [r7, #15]
 8003cd2:	683b      	ldr	r3, [r7, #0]
 8003cd4:	b25b      	sxtb	r3, r3
 8003cd6:	43db      	mvns	r3, r3
 8003cd8:	b25a      	sxtb	r2, r3
 8003cda:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003cde:	4013      	ands	r3, r2
 8003ce0:	b25b      	sxtb	r3, r3
 8003ce2:	73fb      	strb	r3, [r7, #15]
 8003ce4:	88fb      	ldrh	r3, [r7, #6]
 8003ce6:	b2db      	uxtb	r3, r3
 8003ce8:	7bfa      	ldrb	r2, [r7, #15]
 8003cea:	2117      	movs	r1, #23
 8003cec:	4618      	mov	r0, r3
 8003cee:	f000 fd08 	bl	8004702 <IOE_Write>
 8003cf2:	bf00      	nop
 8003cf4:	3710      	adds	r7, #16
 8003cf6:	46bd      	mov	sp, r7
 8003cf8:	bd80      	pop	{r7, pc}

08003cfa <stmpe811_TS_Start>:
 8003cfa:	b580      	push	{r7, lr}
 8003cfc:	b084      	sub	sp, #16
 8003cfe:	af00      	add	r7, sp, #0
 8003d00:	4603      	mov	r3, r0
 8003d02:	80fb      	strh	r3, [r7, #6]
 8003d04:	88fb      	ldrh	r3, [r7, #6]
 8003d06:	b2db      	uxtb	r3, r3
 8003d08:	2104      	movs	r1, #4
 8003d0a:	4618      	mov	r0, r3
 8003d0c:	f000 fd0c 	bl	8004728 <IOE_Read>
 8003d10:	4603      	mov	r3, r0
 8003d12:	73fb      	strb	r3, [r7, #15]
 8003d14:	7bfb      	ldrb	r3, [r7, #15]
 8003d16:	f023 0304 	bic.w	r3, r3, #4
 8003d1a:	73fb      	strb	r3, [r7, #15]
 8003d1c:	88fb      	ldrh	r3, [r7, #6]
 8003d1e:	b2db      	uxtb	r3, r3
 8003d20:	7bfa      	ldrb	r2, [r7, #15]
 8003d22:	2104      	movs	r1, #4
 8003d24:	4618      	mov	r0, r3
 8003d26:	f000 fcec 	bl	8004702 <IOE_Write>
 8003d2a:	88fb      	ldrh	r3, [r7, #6]
 8003d2c:	21f0      	movs	r1, #240	; 0xf0
 8003d2e:	4618      	mov	r0, r3
 8003d30:	f7ff ffbf 	bl	8003cb2 <stmpe811_IO_EnableAF>
 8003d34:	7bfb      	ldrb	r3, [r7, #15]
 8003d36:	f023 0303 	bic.w	r3, r3, #3
 8003d3a:	73fb      	strb	r3, [r7, #15]
 8003d3c:	88fb      	ldrh	r3, [r7, #6]
 8003d3e:	b2db      	uxtb	r3, r3
 8003d40:	7bfa      	ldrb	r2, [r7, #15]
 8003d42:	2104      	movs	r1, #4
 8003d44:	4618      	mov	r0, r3
 8003d46:	f000 fcdc 	bl	8004702 <IOE_Write>
 8003d4a:	88fb      	ldrh	r3, [r7, #6]
 8003d4c:	b2db      	uxtb	r3, r3
 8003d4e:	2249      	movs	r2, #73	; 0x49
 8003d50:	2120      	movs	r1, #32
 8003d52:	4618      	mov	r0, r3
 8003d54:	f000 fcd5 	bl	8004702 <IOE_Write>
 8003d58:	2002      	movs	r0, #2
 8003d5a:	f000 fd0f 	bl	800477c <IOE_Delay>
 8003d5e:	88fb      	ldrh	r3, [r7, #6]
 8003d60:	b2db      	uxtb	r3, r3
 8003d62:	2201      	movs	r2, #1
 8003d64:	2121      	movs	r1, #33	; 0x21
 8003d66:	4618      	mov	r0, r3
 8003d68:	f000 fccb 	bl	8004702 <IOE_Write>
 8003d6c:	88fb      	ldrh	r3, [r7, #6]
 8003d6e:	b2db      	uxtb	r3, r3
 8003d70:	229a      	movs	r2, #154	; 0x9a
 8003d72:	2141      	movs	r1, #65	; 0x41
 8003d74:	4618      	mov	r0, r3
 8003d76:	f000 fcc4 	bl	8004702 <IOE_Write>
 8003d7a:	88fb      	ldrh	r3, [r7, #6]
 8003d7c:	b2db      	uxtb	r3, r3
 8003d7e:	2201      	movs	r2, #1
 8003d80:	214a      	movs	r1, #74	; 0x4a
 8003d82:	4618      	mov	r0, r3
 8003d84:	f000 fcbd 	bl	8004702 <IOE_Write>
 8003d88:	88fb      	ldrh	r3, [r7, #6]
 8003d8a:	b2db      	uxtb	r3, r3
 8003d8c:	2201      	movs	r2, #1
 8003d8e:	214b      	movs	r1, #75	; 0x4b
 8003d90:	4618      	mov	r0, r3
 8003d92:	f000 fcb6 	bl	8004702 <IOE_Write>
 8003d96:	88fb      	ldrh	r3, [r7, #6]
 8003d98:	b2db      	uxtb	r3, r3
 8003d9a:	2200      	movs	r2, #0
 8003d9c:	214b      	movs	r1, #75	; 0x4b
 8003d9e:	4618      	mov	r0, r3
 8003da0:	f000 fcaf 	bl	8004702 <IOE_Write>
 8003da4:	88fb      	ldrh	r3, [r7, #6]
 8003da6:	b2db      	uxtb	r3, r3
 8003da8:	2201      	movs	r2, #1
 8003daa:	2156      	movs	r1, #86	; 0x56
 8003dac:	4618      	mov	r0, r3
 8003dae:	f000 fca8 	bl	8004702 <IOE_Write>
 8003db2:	88fb      	ldrh	r3, [r7, #6]
 8003db4:	b2db      	uxtb	r3, r3
 8003db6:	2201      	movs	r2, #1
 8003db8:	2158      	movs	r1, #88	; 0x58
 8003dba:	4618      	mov	r0, r3
 8003dbc:	f000 fca1 	bl	8004702 <IOE_Write>
 8003dc0:	88fb      	ldrh	r3, [r7, #6]
 8003dc2:	b2db      	uxtb	r3, r3
 8003dc4:	2201      	movs	r2, #1
 8003dc6:	2140      	movs	r1, #64	; 0x40
 8003dc8:	4618      	mov	r0, r3
 8003dca:	f000 fc9a 	bl	8004702 <IOE_Write>
 8003dce:	88fb      	ldrh	r3, [r7, #6]
 8003dd0:	b2db      	uxtb	r3, r3
 8003dd2:	22ff      	movs	r2, #255	; 0xff
 8003dd4:	210b      	movs	r1, #11
 8003dd6:	4618      	mov	r0, r3
 8003dd8:	f000 fc93 	bl	8004702 <IOE_Write>
 8003ddc:	2002      	movs	r0, #2
 8003dde:	f000 fccd 	bl	800477c <IOE_Delay>
 8003de2:	bf00      	nop
 8003de4:	3710      	adds	r7, #16
 8003de6:	46bd      	mov	sp, r7
 8003de8:	bd80      	pop	{r7, pc}

08003dea <stmpe811_TS_DetectTouch>:
 8003dea:	b580      	push	{r7, lr}
 8003dec:	b084      	sub	sp, #16
 8003dee:	af00      	add	r7, sp, #0
 8003df0:	4603      	mov	r3, r0
 8003df2:	80fb      	strh	r3, [r7, #6]
 8003df4:	2300      	movs	r3, #0
 8003df6:	73fb      	strb	r3, [r7, #15]
 8003df8:	88fb      	ldrh	r3, [r7, #6]
 8003dfa:	b2db      	uxtb	r3, r3
 8003dfc:	2140      	movs	r1, #64	; 0x40
 8003dfe:	4618      	mov	r0, r3
 8003e00:	f000 fc92 	bl	8004728 <IOE_Read>
 8003e04:	4603      	mov	r3, r0
 8003e06:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003e0a:	2b80      	cmp	r3, #128	; 0x80
 8003e0c:	bf0c      	ite	eq
 8003e0e:	2301      	moveq	r3, #1
 8003e10:	2300      	movne	r3, #0
 8003e12:	b2db      	uxtb	r3, r3
 8003e14:	73bb      	strb	r3, [r7, #14]
 8003e16:	7bbb      	ldrb	r3, [r7, #14]
 8003e18:	2b00      	cmp	r3, #0
 8003e1a:	d00b      	beq.n	8003e34 <stmpe811_TS_DetectTouch+0x4a>
 8003e1c:	88fb      	ldrh	r3, [r7, #6]
 8003e1e:	b2db      	uxtb	r3, r3
 8003e20:	214c      	movs	r1, #76	; 0x4c
 8003e22:	4618      	mov	r0, r3
 8003e24:	f000 fc80 	bl	8004728 <IOE_Read>
 8003e28:	4603      	mov	r3, r0
 8003e2a:	2b00      	cmp	r3, #0
 8003e2c:	d010      	beq.n	8003e50 <stmpe811_TS_DetectTouch+0x66>
 8003e2e:	2301      	movs	r3, #1
 8003e30:	73fb      	strb	r3, [r7, #15]
 8003e32:	e00d      	b.n	8003e50 <stmpe811_TS_DetectTouch+0x66>
 8003e34:	88fb      	ldrh	r3, [r7, #6]
 8003e36:	b2db      	uxtb	r3, r3
 8003e38:	2201      	movs	r2, #1
 8003e3a:	214b      	movs	r1, #75	; 0x4b
 8003e3c:	4618      	mov	r0, r3
 8003e3e:	f000 fc60 	bl	8004702 <IOE_Write>
 8003e42:	88fb      	ldrh	r3, [r7, #6]
 8003e44:	b2db      	uxtb	r3, r3
 8003e46:	2200      	movs	r2, #0
 8003e48:	214b      	movs	r1, #75	; 0x4b
 8003e4a:	4618      	mov	r0, r3
 8003e4c:	f000 fc59 	bl	8004702 <IOE_Write>
 8003e50:	7bfb      	ldrb	r3, [r7, #15]
 8003e52:	4618      	mov	r0, r3
 8003e54:	3710      	adds	r7, #16
 8003e56:	46bd      	mov	sp, r7
 8003e58:	bd80      	pop	{r7, pc}

08003e5a <stmpe811_TS_GetXY>:
 8003e5a:	b580      	push	{r7, lr}
 8003e5c:	b086      	sub	sp, #24
 8003e5e:	af00      	add	r7, sp, #0
 8003e60:	4603      	mov	r3, r0
 8003e62:	60b9      	str	r1, [r7, #8]
 8003e64:	607a      	str	r2, [r7, #4]
 8003e66:	81fb      	strh	r3, [r7, #14]
 8003e68:	89fb      	ldrh	r3, [r7, #14]
 8003e6a:	b2d8      	uxtb	r0, r3
 8003e6c:	f107 0210 	add.w	r2, r7, #16
 8003e70:	2304      	movs	r3, #4
 8003e72:	21d7      	movs	r1, #215	; 0xd7
 8003e74:	f000 fc6b 	bl	800474e <IOE_ReadMultiple>
 8003e78:	7c3b      	ldrb	r3, [r7, #16]
 8003e7a:	061a      	lsls	r2, r3, #24
 8003e7c:	7c7b      	ldrb	r3, [r7, #17]
 8003e7e:	041b      	lsls	r3, r3, #16
 8003e80:	431a      	orrs	r2, r3
 8003e82:	7cbb      	ldrb	r3, [r7, #18]
 8003e84:	021b      	lsls	r3, r3, #8
 8003e86:	4313      	orrs	r3, r2
 8003e88:	7cfa      	ldrb	r2, [r7, #19]
 8003e8a:	4313      	orrs	r3, r2
 8003e8c:	617b      	str	r3, [r7, #20]
 8003e8e:	697b      	ldr	r3, [r7, #20]
 8003e90:	0d1b      	lsrs	r3, r3, #20
 8003e92:	b29a      	uxth	r2, r3
 8003e94:	68bb      	ldr	r3, [r7, #8]
 8003e96:	801a      	strh	r2, [r3, #0]
 8003e98:	697b      	ldr	r3, [r7, #20]
 8003e9a:	0a1b      	lsrs	r3, r3, #8
 8003e9c:	b29b      	uxth	r3, r3
 8003e9e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003ea2:	b29a      	uxth	r2, r3
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	801a      	strh	r2, [r3, #0]
 8003ea8:	89fb      	ldrh	r3, [r7, #14]
 8003eaa:	b2db      	uxtb	r3, r3
 8003eac:	2201      	movs	r2, #1
 8003eae:	214b      	movs	r1, #75	; 0x4b
 8003eb0:	4618      	mov	r0, r3
 8003eb2:	f000 fc26 	bl	8004702 <IOE_Write>
 8003eb6:	89fb      	ldrh	r3, [r7, #14]
 8003eb8:	b2db      	uxtb	r3, r3
 8003eba:	2200      	movs	r2, #0
 8003ebc:	214b      	movs	r1, #75	; 0x4b
 8003ebe:	4618      	mov	r0, r3
 8003ec0:	f000 fc1f 	bl	8004702 <IOE_Write>
 8003ec4:	bf00      	nop
 8003ec6:	3718      	adds	r7, #24
 8003ec8:	46bd      	mov	sp, r7
 8003eca:	bd80      	pop	{r7, pc}

08003ecc <stmpe811_TS_EnableIT>:
 8003ecc:	b580      	push	{r7, lr}
 8003ece:	b082      	sub	sp, #8
 8003ed0:	af00      	add	r7, sp, #0
 8003ed2:	4603      	mov	r3, r0
 8003ed4:	80fb      	strh	r3, [r7, #6]
 8003ed6:	f000 fc0e 	bl	80046f6 <IOE_ITConfig>
 8003eda:	88fb      	ldrh	r3, [r7, #6]
 8003edc:	211f      	movs	r1, #31
 8003ede:	4618      	mov	r0, r3
 8003ee0:	f7ff fe76 	bl	8003bd0 <stmpe811_EnableITSource>
 8003ee4:	88fb      	ldrh	r3, [r7, #6]
 8003ee6:	4618      	mov	r0, r3
 8003ee8:	f7ff fe36 	bl	8003b58 <stmpe811_EnableGlobalIT>
 8003eec:	bf00      	nop
 8003eee:	3708      	adds	r7, #8
 8003ef0:	46bd      	mov	sp, r7
 8003ef2:	bd80      	pop	{r7, pc}

08003ef4 <stmpe811_TS_DisableIT>:
 8003ef4:	b580      	push	{r7, lr}
 8003ef6:	b082      	sub	sp, #8
 8003ef8:	af00      	add	r7, sp, #0
 8003efa:	4603      	mov	r3, r0
 8003efc:	80fb      	strh	r3, [r7, #6]
 8003efe:	88fb      	ldrh	r3, [r7, #6]
 8003f00:	4618      	mov	r0, r3
 8003f02:	f7ff fe47 	bl	8003b94 <stmpe811_DisableGlobalIT>
 8003f06:	88fb      	ldrh	r3, [r7, #6]
 8003f08:	211f      	movs	r1, #31
 8003f0a:	4618      	mov	r0, r3
 8003f0c:	f7ff fe81 	bl	8003c12 <stmpe811_DisableITSource>
 8003f10:	bf00      	nop
 8003f12:	3708      	adds	r7, #8
 8003f14:	46bd      	mov	sp, r7
 8003f16:	bd80      	pop	{r7, pc}

08003f18 <stmpe811_TS_ITStatus>:
 8003f18:	b580      	push	{r7, lr}
 8003f1a:	b082      	sub	sp, #8
 8003f1c:	af00      	add	r7, sp, #0
 8003f1e:	4603      	mov	r3, r0
 8003f20:	80fb      	strh	r3, [r7, #6]
 8003f22:	88fb      	ldrh	r3, [r7, #6]
 8003f24:	211f      	movs	r1, #31
 8003f26:	4618      	mov	r0, r3
 8003f28:	f7ff fe99 	bl	8003c5e <stmpe811_ReadGITStatus>
 8003f2c:	4603      	mov	r3, r0
 8003f2e:	4618      	mov	r0, r3
 8003f30:	3708      	adds	r7, #8
 8003f32:	46bd      	mov	sp, r7
 8003f34:	bd80      	pop	{r7, pc}

08003f36 <stmpe811_TS_ClearIT>:
 8003f36:	b580      	push	{r7, lr}
 8003f38:	b082      	sub	sp, #8
 8003f3a:	af00      	add	r7, sp, #0
 8003f3c:	4603      	mov	r3, r0
 8003f3e:	80fb      	strh	r3, [r7, #6]
 8003f40:	88fb      	ldrh	r3, [r7, #6]
 8003f42:	211f      	movs	r1, #31
 8003f44:	4618      	mov	r0, r3
 8003f46:	f7ff fea1 	bl	8003c8c <stmpe811_ClearGlobalIT>
 8003f4a:	bf00      	nop
 8003f4c:	3708      	adds	r7, #8
 8003f4e:	46bd      	mov	sp, r7
 8003f50:	bd80      	pop	{r7, pc}
	...

08003f54 <stmpe811_GetInstance>:
 8003f54:	b480      	push	{r7}
 8003f56:	b085      	sub	sp, #20
 8003f58:	af00      	add	r7, sp, #0
 8003f5a:	4603      	mov	r3, r0
 8003f5c:	80fb      	strh	r3, [r7, #6]
 8003f5e:	2300      	movs	r3, #0
 8003f60:	73fb      	strb	r3, [r7, #15]
 8003f62:	2300      	movs	r3, #0
 8003f64:	73fb      	strb	r3, [r7, #15]
 8003f66:	e00b      	b.n	8003f80 <stmpe811_GetInstance+0x2c>
 8003f68:	7bfb      	ldrb	r3, [r7, #15]
 8003f6a:	4a0a      	ldr	r2, [pc, #40]	; (8003f94 <stmpe811_GetInstance+0x40>)
 8003f6c:	5cd3      	ldrb	r3, [r2, r3]
 8003f6e:	b29b      	uxth	r3, r3
 8003f70:	88fa      	ldrh	r2, [r7, #6]
 8003f72:	429a      	cmp	r2, r3
 8003f74:	d101      	bne.n	8003f7a <stmpe811_GetInstance+0x26>
 8003f76:	7bfb      	ldrb	r3, [r7, #15]
 8003f78:	e006      	b.n	8003f88 <stmpe811_GetInstance+0x34>
 8003f7a:	7bfb      	ldrb	r3, [r7, #15]
 8003f7c:	3301      	adds	r3, #1
 8003f7e:	73fb      	strb	r3, [r7, #15]
 8003f80:	7bfb      	ldrb	r3, [r7, #15]
 8003f82:	2b01      	cmp	r3, #1
 8003f84:	d9f0      	bls.n	8003f68 <stmpe811_GetInstance+0x14>
 8003f86:	23ff      	movs	r3, #255	; 0xff
 8003f88:	4618      	mov	r0, r3
 8003f8a:	3714      	adds	r7, #20
 8003f8c:	46bd      	mov	sp, r7
 8003f8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f92:	4770      	bx	lr
 8003f94:	20000f7c 	.word	0x20000f7c

08003f98 <BSP_LED_Init>:
 8003f98:	b580      	push	{r7, lr}
 8003f9a:	b08a      	sub	sp, #40	; 0x28
 8003f9c:	af00      	add	r7, sp, #0
 8003f9e:	4603      	mov	r3, r0
 8003fa0:	71fb      	strb	r3, [r7, #7]
 8003fa2:	79fb      	ldrb	r3, [r7, #7]
 8003fa4:	2b00      	cmp	r3, #0
 8003fa6:	d10e      	bne.n	8003fc6 <BSP_LED_Init+0x2e>
 8003fa8:	2300      	movs	r3, #0
 8003faa:	613b      	str	r3, [r7, #16]
 8003fac:	4b21      	ldr	r3, [pc, #132]	; (8004034 <BSP_LED_Init+0x9c>)
 8003fae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003fb0:	4a20      	ldr	r2, [pc, #128]	; (8004034 <BSP_LED_Init+0x9c>)
 8003fb2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003fb6:	6313      	str	r3, [r2, #48]	; 0x30
 8003fb8:	4b1e      	ldr	r3, [pc, #120]	; (8004034 <BSP_LED_Init+0x9c>)
 8003fba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003fbc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003fc0:	613b      	str	r3, [r7, #16]
 8003fc2:	693b      	ldr	r3, [r7, #16]
 8003fc4:	e010      	b.n	8003fe8 <BSP_LED_Init+0x50>
 8003fc6:	79fb      	ldrb	r3, [r7, #7]
 8003fc8:	2b01      	cmp	r3, #1
 8003fca:	d10d      	bne.n	8003fe8 <BSP_LED_Init+0x50>
 8003fcc:	2300      	movs	r3, #0
 8003fce:	60fb      	str	r3, [r7, #12]
 8003fd0:	4b18      	ldr	r3, [pc, #96]	; (8004034 <BSP_LED_Init+0x9c>)
 8003fd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003fd4:	4a17      	ldr	r2, [pc, #92]	; (8004034 <BSP_LED_Init+0x9c>)
 8003fd6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003fda:	6313      	str	r3, [r2, #48]	; 0x30
 8003fdc:	4b15      	ldr	r3, [pc, #84]	; (8004034 <BSP_LED_Init+0x9c>)
 8003fde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003fe0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003fe4:	60fb      	str	r3, [r7, #12]
 8003fe6:	68fb      	ldr	r3, [r7, #12]
 8003fe8:	79fb      	ldrb	r3, [r7, #7]
 8003fea:	4a13      	ldr	r2, [pc, #76]	; (8004038 <BSP_LED_Init+0xa0>)
 8003fec:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8003ff0:	617b      	str	r3, [r7, #20]
 8003ff2:	2301      	movs	r3, #1
 8003ff4:	61bb      	str	r3, [r7, #24]
 8003ff6:	2301      	movs	r3, #1
 8003ff8:	61fb      	str	r3, [r7, #28]
 8003ffa:	2302      	movs	r3, #2
 8003ffc:	623b      	str	r3, [r7, #32]
 8003ffe:	79fb      	ldrb	r3, [r7, #7]
 8004000:	4a0e      	ldr	r2, [pc, #56]	; (800403c <BSP_LED_Init+0xa4>)
 8004002:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004006:	f107 0214 	add.w	r2, r7, #20
 800400a:	4611      	mov	r1, r2
 800400c:	4618      	mov	r0, r3
 800400e:	f002 fb59 	bl	80066c4 <HAL_GPIO_Init>
 8004012:	79fb      	ldrb	r3, [r7, #7]
 8004014:	4a09      	ldr	r2, [pc, #36]	; (800403c <BSP_LED_Init+0xa4>)
 8004016:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800401a:	79fb      	ldrb	r3, [r7, #7]
 800401c:	4a06      	ldr	r2, [pc, #24]	; (8004038 <BSP_LED_Init+0xa0>)
 800401e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8004022:	2200      	movs	r2, #0
 8004024:	4619      	mov	r1, r3
 8004026:	f002 fcf9 	bl	8006a1c <HAL_GPIO_WritePin>
 800402a:	bf00      	nop
 800402c:	3728      	adds	r7, #40	; 0x28
 800402e:	46bd      	mov	sp, r7
 8004030:	bd80      	pop	{r7, pc}
 8004032:	bf00      	nop
 8004034:	40023800 	.word	0x40023800
 8004038:	080126f4 	.word	0x080126f4
 800403c:	200000c8 	.word	0x200000c8

08004040 <BSP_LED_On>:
 8004040:	b580      	push	{r7, lr}
 8004042:	b082      	sub	sp, #8
 8004044:	af00      	add	r7, sp, #0
 8004046:	4603      	mov	r3, r0
 8004048:	71fb      	strb	r3, [r7, #7]
 800404a:	79fb      	ldrb	r3, [r7, #7]
 800404c:	4a07      	ldr	r2, [pc, #28]	; (800406c <BSP_LED_On+0x2c>)
 800404e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8004052:	79fb      	ldrb	r3, [r7, #7]
 8004054:	4a06      	ldr	r2, [pc, #24]	; (8004070 <BSP_LED_On+0x30>)
 8004056:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800405a:	2201      	movs	r2, #1
 800405c:	4619      	mov	r1, r3
 800405e:	f002 fcdd 	bl	8006a1c <HAL_GPIO_WritePin>
 8004062:	bf00      	nop
 8004064:	3708      	adds	r7, #8
 8004066:	46bd      	mov	sp, r7
 8004068:	bd80      	pop	{r7, pc}
 800406a:	bf00      	nop
 800406c:	200000c8 	.word	0x200000c8
 8004070:	080126f4 	.word	0x080126f4

08004074 <BSP_LED_Toggle>:
 8004074:	b580      	push	{r7, lr}
 8004076:	b082      	sub	sp, #8
 8004078:	af00      	add	r7, sp, #0
 800407a:	4603      	mov	r3, r0
 800407c:	71fb      	strb	r3, [r7, #7]
 800407e:	79fb      	ldrb	r3, [r7, #7]
 8004080:	4a07      	ldr	r2, [pc, #28]	; (80040a0 <BSP_LED_Toggle+0x2c>)
 8004082:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8004086:	79fb      	ldrb	r3, [r7, #7]
 8004088:	4906      	ldr	r1, [pc, #24]	; (80040a4 <BSP_LED_Toggle+0x30>)
 800408a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 800408e:	4619      	mov	r1, r3
 8004090:	4610      	mov	r0, r2
 8004092:	f002 fcdc 	bl	8006a4e <HAL_GPIO_TogglePin>
 8004096:	bf00      	nop
 8004098:	3708      	adds	r7, #8
 800409a:	46bd      	mov	sp, r7
 800409c:	bd80      	pop	{r7, pc}
 800409e:	bf00      	nop
 80040a0:	200000c8 	.word	0x200000c8
 80040a4:	080126f4 	.word	0x080126f4

080040a8 <I2Cx_MspInit>:
 80040a8:	b580      	push	{r7, lr}
 80040aa:	b08a      	sub	sp, #40	; 0x28
 80040ac:	af00      	add	r7, sp, #0
 80040ae:	6078      	str	r0, [r7, #4]
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	681b      	ldr	r3, [r3, #0]
 80040b4:	4a33      	ldr	r2, [pc, #204]	; (8004184 <I2Cx_MspInit+0xdc>)
 80040b6:	4293      	cmp	r3, r2
 80040b8:	d15f      	bne.n	800417a <I2Cx_MspInit+0xd2>
 80040ba:	2300      	movs	r3, #0
 80040bc:	613b      	str	r3, [r7, #16]
 80040be:	4b32      	ldr	r3, [pc, #200]	; (8004188 <I2Cx_MspInit+0xe0>)
 80040c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040c2:	4a31      	ldr	r2, [pc, #196]	; (8004188 <I2Cx_MspInit+0xe0>)
 80040c4:	f043 0304 	orr.w	r3, r3, #4
 80040c8:	6313      	str	r3, [r2, #48]	; 0x30
 80040ca:	4b2f      	ldr	r3, [pc, #188]	; (8004188 <I2Cx_MspInit+0xe0>)
 80040cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040ce:	f003 0304 	and.w	r3, r3, #4
 80040d2:	613b      	str	r3, [r7, #16]
 80040d4:	693b      	ldr	r3, [r7, #16]
 80040d6:	2300      	movs	r3, #0
 80040d8:	60fb      	str	r3, [r7, #12]
 80040da:	4b2b      	ldr	r3, [pc, #172]	; (8004188 <I2Cx_MspInit+0xe0>)
 80040dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040de:	4a2a      	ldr	r2, [pc, #168]	; (8004188 <I2Cx_MspInit+0xe0>)
 80040e0:	f043 0301 	orr.w	r3, r3, #1
 80040e4:	6313      	str	r3, [r2, #48]	; 0x30
 80040e6:	4b28      	ldr	r3, [pc, #160]	; (8004188 <I2Cx_MspInit+0xe0>)
 80040e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040ea:	f003 0301 	and.w	r3, r3, #1
 80040ee:	60fb      	str	r3, [r7, #12]
 80040f0:	68fb      	ldr	r3, [r7, #12]
 80040f2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80040f6:	617b      	str	r3, [r7, #20]
 80040f8:	2312      	movs	r3, #18
 80040fa:	61bb      	str	r3, [r7, #24]
 80040fc:	2300      	movs	r3, #0
 80040fe:	61fb      	str	r3, [r7, #28]
 8004100:	2302      	movs	r3, #2
 8004102:	623b      	str	r3, [r7, #32]
 8004104:	2304      	movs	r3, #4
 8004106:	627b      	str	r3, [r7, #36]	; 0x24
 8004108:	f107 0314 	add.w	r3, r7, #20
 800410c:	4619      	mov	r1, r3
 800410e:	481f      	ldr	r0, [pc, #124]	; (800418c <I2Cx_MspInit+0xe4>)
 8004110:	f002 fad8 	bl	80066c4 <HAL_GPIO_Init>
 8004114:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004118:	617b      	str	r3, [r7, #20]
 800411a:	f107 0314 	add.w	r3, r7, #20
 800411e:	4619      	mov	r1, r3
 8004120:	481b      	ldr	r0, [pc, #108]	; (8004190 <I2Cx_MspInit+0xe8>)
 8004122:	f002 facf 	bl	80066c4 <HAL_GPIO_Init>
 8004126:	2300      	movs	r3, #0
 8004128:	60bb      	str	r3, [r7, #8]
 800412a:	4b17      	ldr	r3, [pc, #92]	; (8004188 <I2Cx_MspInit+0xe0>)
 800412c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800412e:	4a16      	ldr	r2, [pc, #88]	; (8004188 <I2Cx_MspInit+0xe0>)
 8004130:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8004134:	6413      	str	r3, [r2, #64]	; 0x40
 8004136:	4b14      	ldr	r3, [pc, #80]	; (8004188 <I2Cx_MspInit+0xe0>)
 8004138:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800413a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800413e:	60bb      	str	r3, [r7, #8]
 8004140:	68bb      	ldr	r3, [r7, #8]
 8004142:	4b11      	ldr	r3, [pc, #68]	; (8004188 <I2Cx_MspInit+0xe0>)
 8004144:	6a1b      	ldr	r3, [r3, #32]
 8004146:	4a10      	ldr	r2, [pc, #64]	; (8004188 <I2Cx_MspInit+0xe0>)
 8004148:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800414c:	6213      	str	r3, [r2, #32]
 800414e:	4b0e      	ldr	r3, [pc, #56]	; (8004188 <I2Cx_MspInit+0xe0>)
 8004150:	6a1b      	ldr	r3, [r3, #32]
 8004152:	4a0d      	ldr	r2, [pc, #52]	; (8004188 <I2Cx_MspInit+0xe0>)
 8004154:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8004158:	6213      	str	r3, [r2, #32]
 800415a:	2200      	movs	r2, #0
 800415c:	210f      	movs	r1, #15
 800415e:	2048      	movs	r0, #72	; 0x48
 8004160:	f001 fe25 	bl	8005dae <HAL_NVIC_SetPriority>
 8004164:	2048      	movs	r0, #72	; 0x48
 8004166:	f001 fe3e 	bl	8005de6 <HAL_NVIC_EnableIRQ>
 800416a:	2200      	movs	r2, #0
 800416c:	210f      	movs	r1, #15
 800416e:	2049      	movs	r0, #73	; 0x49
 8004170:	f001 fe1d 	bl	8005dae <HAL_NVIC_SetPriority>
 8004174:	2049      	movs	r0, #73	; 0x49
 8004176:	f001 fe36 	bl	8005de6 <HAL_NVIC_EnableIRQ>
 800417a:	bf00      	nop
 800417c:	3728      	adds	r7, #40	; 0x28
 800417e:	46bd      	mov	sp, r7
 8004180:	bd80      	pop	{r7, pc}
 8004182:	bf00      	nop
 8004184:	40005c00 	.word	0x40005c00
 8004188:	40023800 	.word	0x40023800
 800418c:	40020000 	.word	0x40020000
 8004190:	40020800 	.word	0x40020800

08004194 <I2Cx_Init>:
 8004194:	b580      	push	{r7, lr}
 8004196:	af00      	add	r7, sp, #0
 8004198:	4814      	ldr	r0, [pc, #80]	; (80041ec <I2Cx_Init+0x58>)
 800419a:	f003 f91b 	bl	80073d4 <HAL_I2C_GetState>
 800419e:	4603      	mov	r3, r0
 80041a0:	2b00      	cmp	r3, #0
 80041a2:	d121      	bne.n	80041e8 <I2Cx_Init+0x54>
 80041a4:	4b11      	ldr	r3, [pc, #68]	; (80041ec <I2Cx_Init+0x58>)
 80041a6:	4a12      	ldr	r2, [pc, #72]	; (80041f0 <I2Cx_Init+0x5c>)
 80041a8:	601a      	str	r2, [r3, #0]
 80041aa:	4b10      	ldr	r3, [pc, #64]	; (80041ec <I2Cx_Init+0x58>)
 80041ac:	4a11      	ldr	r2, [pc, #68]	; (80041f4 <I2Cx_Init+0x60>)
 80041ae:	605a      	str	r2, [r3, #4]
 80041b0:	4b0e      	ldr	r3, [pc, #56]	; (80041ec <I2Cx_Init+0x58>)
 80041b2:	2200      	movs	r2, #0
 80041b4:	609a      	str	r2, [r3, #8]
 80041b6:	4b0d      	ldr	r3, [pc, #52]	; (80041ec <I2Cx_Init+0x58>)
 80041b8:	2200      	movs	r2, #0
 80041ba:	60da      	str	r2, [r3, #12]
 80041bc:	4b0b      	ldr	r3, [pc, #44]	; (80041ec <I2Cx_Init+0x58>)
 80041be:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80041c2:	611a      	str	r2, [r3, #16]
 80041c4:	4b09      	ldr	r3, [pc, #36]	; (80041ec <I2Cx_Init+0x58>)
 80041c6:	2200      	movs	r2, #0
 80041c8:	615a      	str	r2, [r3, #20]
 80041ca:	4b08      	ldr	r3, [pc, #32]	; (80041ec <I2Cx_Init+0x58>)
 80041cc:	2200      	movs	r2, #0
 80041ce:	619a      	str	r2, [r3, #24]
 80041d0:	4b06      	ldr	r3, [pc, #24]	; (80041ec <I2Cx_Init+0x58>)
 80041d2:	2200      	movs	r2, #0
 80041d4:	61da      	str	r2, [r3, #28]
 80041d6:	4b05      	ldr	r3, [pc, #20]	; (80041ec <I2Cx_Init+0x58>)
 80041d8:	2200      	movs	r2, #0
 80041da:	621a      	str	r2, [r3, #32]
 80041dc:	4803      	ldr	r0, [pc, #12]	; (80041ec <I2Cx_Init+0x58>)
 80041de:	f7ff ff63 	bl	80040a8 <I2Cx_MspInit>
 80041e2:	4802      	ldr	r0, [pc, #8]	; (80041ec <I2Cx_Init+0x58>)
 80041e4:	f002 fc4e 	bl	8006a84 <HAL_I2C_Init>
 80041e8:	bf00      	nop
 80041ea:	bd80      	pop	{r7, pc}
 80041ec:	20000f80 	.word	0x20000f80
 80041f0:	40005c00 	.word	0x40005c00
 80041f4:	000186a0 	.word	0x000186a0

080041f8 <I2Cx_ITConfig>:
 80041f8:	b580      	push	{r7, lr}
 80041fa:	b086      	sub	sp, #24
 80041fc:	af00      	add	r7, sp, #0
 80041fe:	2300      	movs	r3, #0
 8004200:	603b      	str	r3, [r7, #0]
 8004202:	4b13      	ldr	r3, [pc, #76]	; (8004250 <I2Cx_ITConfig+0x58>)
 8004204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004206:	4a12      	ldr	r2, [pc, #72]	; (8004250 <I2Cx_ITConfig+0x58>)
 8004208:	f043 0301 	orr.w	r3, r3, #1
 800420c:	6313      	str	r3, [r2, #48]	; 0x30
 800420e:	4b10      	ldr	r3, [pc, #64]	; (8004250 <I2Cx_ITConfig+0x58>)
 8004210:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004212:	f003 0301 	and.w	r3, r3, #1
 8004216:	603b      	str	r3, [r7, #0]
 8004218:	683b      	ldr	r3, [r7, #0]
 800421a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800421e:	607b      	str	r3, [r7, #4]
 8004220:	2301      	movs	r3, #1
 8004222:	60fb      	str	r3, [r7, #12]
 8004224:	2300      	movs	r3, #0
 8004226:	613b      	str	r3, [r7, #16]
 8004228:	4b0a      	ldr	r3, [pc, #40]	; (8004254 <I2Cx_ITConfig+0x5c>)
 800422a:	60bb      	str	r3, [r7, #8]
 800422c:	1d3b      	adds	r3, r7, #4
 800422e:	4619      	mov	r1, r3
 8004230:	4809      	ldr	r0, [pc, #36]	; (8004258 <I2Cx_ITConfig+0x60>)
 8004232:	f002 fa47 	bl	80066c4 <HAL_GPIO_Init>
 8004236:	2200      	movs	r2, #0
 8004238:	210f      	movs	r1, #15
 800423a:	2028      	movs	r0, #40	; 0x28
 800423c:	f001 fdb7 	bl	8005dae <HAL_NVIC_SetPriority>
 8004240:	2028      	movs	r0, #40	; 0x28
 8004242:	f001 fdd0 	bl	8005de6 <HAL_NVIC_EnableIRQ>
 8004246:	bf00      	nop
 8004248:	3718      	adds	r7, #24
 800424a:	46bd      	mov	sp, r7
 800424c:	bd80      	pop	{r7, pc}
 800424e:	bf00      	nop
 8004250:	40023800 	.word	0x40023800
 8004254:	10210000 	.word	0x10210000
 8004258:	40020000 	.word	0x40020000

0800425c <I2Cx_WriteData>:
 800425c:	b580      	push	{r7, lr}
 800425e:	b088      	sub	sp, #32
 8004260:	af04      	add	r7, sp, #16
 8004262:	4603      	mov	r3, r0
 8004264:	71fb      	strb	r3, [r7, #7]
 8004266:	460b      	mov	r3, r1
 8004268:	71bb      	strb	r3, [r7, #6]
 800426a:	4613      	mov	r3, r2
 800426c:	717b      	strb	r3, [r7, #5]
 800426e:	2300      	movs	r3, #0
 8004270:	73fb      	strb	r3, [r7, #15]
 8004272:	79fb      	ldrb	r3, [r7, #7]
 8004274:	b299      	uxth	r1, r3
 8004276:	79bb      	ldrb	r3, [r7, #6]
 8004278:	b29a      	uxth	r2, r3
 800427a:	4b0b      	ldr	r3, [pc, #44]	; (80042a8 <I2Cx_WriteData+0x4c>)
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	9302      	str	r3, [sp, #8]
 8004280:	2301      	movs	r3, #1
 8004282:	9301      	str	r3, [sp, #4]
 8004284:	1d7b      	adds	r3, r7, #5
 8004286:	9300      	str	r3, [sp, #0]
 8004288:	2301      	movs	r3, #1
 800428a:	4808      	ldr	r0, [pc, #32]	; (80042ac <I2Cx_WriteData+0x50>)
 800428c:	f002 fd82 	bl	8006d94 <HAL_I2C_Mem_Write>
 8004290:	4603      	mov	r3, r0
 8004292:	73fb      	strb	r3, [r7, #15]
 8004294:	7bfb      	ldrb	r3, [r7, #15]
 8004296:	2b00      	cmp	r3, #0
 8004298:	d001      	beq.n	800429e <I2Cx_WriteData+0x42>
 800429a:	f000 f863 	bl	8004364 <I2Cx_Error>
 800429e:	bf00      	nop
 80042a0:	3710      	adds	r7, #16
 80042a2:	46bd      	mov	sp, r7
 80042a4:	bd80      	pop	{r7, pc}
 80042a6:	bf00      	nop
 80042a8:	200000d0 	.word	0x200000d0
 80042ac:	20000f80 	.word	0x20000f80

080042b0 <I2Cx_ReadData>:
 80042b0:	b580      	push	{r7, lr}
 80042b2:	b088      	sub	sp, #32
 80042b4:	af04      	add	r7, sp, #16
 80042b6:	4603      	mov	r3, r0
 80042b8:	460a      	mov	r2, r1
 80042ba:	71fb      	strb	r3, [r7, #7]
 80042bc:	4613      	mov	r3, r2
 80042be:	71bb      	strb	r3, [r7, #6]
 80042c0:	2300      	movs	r3, #0
 80042c2:	73fb      	strb	r3, [r7, #15]
 80042c4:	2300      	movs	r3, #0
 80042c6:	73bb      	strb	r3, [r7, #14]
 80042c8:	79fb      	ldrb	r3, [r7, #7]
 80042ca:	b299      	uxth	r1, r3
 80042cc:	79bb      	ldrb	r3, [r7, #6]
 80042ce:	b29a      	uxth	r2, r3
 80042d0:	4b0b      	ldr	r3, [pc, #44]	; (8004300 <I2Cx_ReadData+0x50>)
 80042d2:	681b      	ldr	r3, [r3, #0]
 80042d4:	9302      	str	r3, [sp, #8]
 80042d6:	2301      	movs	r3, #1
 80042d8:	9301      	str	r3, [sp, #4]
 80042da:	f107 030e 	add.w	r3, r7, #14
 80042de:	9300      	str	r3, [sp, #0]
 80042e0:	2301      	movs	r3, #1
 80042e2:	4808      	ldr	r0, [pc, #32]	; (8004304 <I2Cx_ReadData+0x54>)
 80042e4:	f002 fe50 	bl	8006f88 <HAL_I2C_Mem_Read>
 80042e8:	4603      	mov	r3, r0
 80042ea:	73fb      	strb	r3, [r7, #15]
 80042ec:	7bfb      	ldrb	r3, [r7, #15]
 80042ee:	2b00      	cmp	r3, #0
 80042f0:	d001      	beq.n	80042f6 <I2Cx_ReadData+0x46>
 80042f2:	f000 f837 	bl	8004364 <I2Cx_Error>
 80042f6:	7bbb      	ldrb	r3, [r7, #14]
 80042f8:	4618      	mov	r0, r3
 80042fa:	3710      	adds	r7, #16
 80042fc:	46bd      	mov	sp, r7
 80042fe:	bd80      	pop	{r7, pc}
 8004300:	200000d0 	.word	0x200000d0
 8004304:	20000f80 	.word	0x20000f80

08004308 <I2Cx_ReadBuffer>:
 8004308:	b580      	push	{r7, lr}
 800430a:	b088      	sub	sp, #32
 800430c:	af04      	add	r7, sp, #16
 800430e:	603a      	str	r2, [r7, #0]
 8004310:	461a      	mov	r2, r3
 8004312:	4603      	mov	r3, r0
 8004314:	71fb      	strb	r3, [r7, #7]
 8004316:	460b      	mov	r3, r1
 8004318:	71bb      	strb	r3, [r7, #6]
 800431a:	4613      	mov	r3, r2
 800431c:	80bb      	strh	r3, [r7, #4]
 800431e:	2300      	movs	r3, #0
 8004320:	73fb      	strb	r3, [r7, #15]
 8004322:	79fb      	ldrb	r3, [r7, #7]
 8004324:	b299      	uxth	r1, r3
 8004326:	79bb      	ldrb	r3, [r7, #6]
 8004328:	b29a      	uxth	r2, r3
 800432a:	4b0c      	ldr	r3, [pc, #48]	; (800435c <I2Cx_ReadBuffer+0x54>)
 800432c:	681b      	ldr	r3, [r3, #0]
 800432e:	9302      	str	r3, [sp, #8]
 8004330:	88bb      	ldrh	r3, [r7, #4]
 8004332:	9301      	str	r3, [sp, #4]
 8004334:	683b      	ldr	r3, [r7, #0]
 8004336:	9300      	str	r3, [sp, #0]
 8004338:	2301      	movs	r3, #1
 800433a:	4809      	ldr	r0, [pc, #36]	; (8004360 <I2Cx_ReadBuffer+0x58>)
 800433c:	f002 fe24 	bl	8006f88 <HAL_I2C_Mem_Read>
 8004340:	4603      	mov	r3, r0
 8004342:	73fb      	strb	r3, [r7, #15]
 8004344:	7bfb      	ldrb	r3, [r7, #15]
 8004346:	2b00      	cmp	r3, #0
 8004348:	d101      	bne.n	800434e <I2Cx_ReadBuffer+0x46>
 800434a:	2300      	movs	r3, #0
 800434c:	e002      	b.n	8004354 <I2Cx_ReadBuffer+0x4c>
 800434e:	f000 f809 	bl	8004364 <I2Cx_Error>
 8004352:	2301      	movs	r3, #1
 8004354:	4618      	mov	r0, r3
 8004356:	3710      	adds	r7, #16
 8004358:	46bd      	mov	sp, r7
 800435a:	bd80      	pop	{r7, pc}
 800435c:	200000d0 	.word	0x200000d0
 8004360:	20000f80 	.word	0x20000f80

08004364 <I2Cx_Error>:
 8004364:	b580      	push	{r7, lr}
 8004366:	af00      	add	r7, sp, #0
 8004368:	4803      	ldr	r0, [pc, #12]	; (8004378 <I2Cx_Error+0x14>)
 800436a:	f002 fccf 	bl	8006d0c <HAL_I2C_DeInit>
 800436e:	f7ff ff11 	bl	8004194 <I2Cx_Init>
 8004372:	bf00      	nop
 8004374:	bd80      	pop	{r7, pc}
 8004376:	bf00      	nop
 8004378:	20000f80 	.word	0x20000f80

0800437c <SPIx_Init>:
 800437c:	b580      	push	{r7, lr}
 800437e:	af00      	add	r7, sp, #0
 8004380:	4819      	ldr	r0, [pc, #100]	; (80043e8 <SPIx_Init+0x6c>)
 8004382:	f005 fab4 	bl	80098ee <HAL_SPI_GetState>
 8004386:	4603      	mov	r3, r0
 8004388:	2b00      	cmp	r3, #0
 800438a:	d12b      	bne.n	80043e4 <SPIx_Init+0x68>
 800438c:	4b16      	ldr	r3, [pc, #88]	; (80043e8 <SPIx_Init+0x6c>)
 800438e:	4a17      	ldr	r2, [pc, #92]	; (80043ec <SPIx_Init+0x70>)
 8004390:	601a      	str	r2, [r3, #0]
 8004392:	4b15      	ldr	r3, [pc, #84]	; (80043e8 <SPIx_Init+0x6c>)
 8004394:	2218      	movs	r2, #24
 8004396:	61da      	str	r2, [r3, #28]
 8004398:	4b13      	ldr	r3, [pc, #76]	; (80043e8 <SPIx_Init+0x6c>)
 800439a:	2200      	movs	r2, #0
 800439c:	609a      	str	r2, [r3, #8]
 800439e:	4b12      	ldr	r3, [pc, #72]	; (80043e8 <SPIx_Init+0x6c>)
 80043a0:	2200      	movs	r2, #0
 80043a2:	615a      	str	r2, [r3, #20]
 80043a4:	4b10      	ldr	r3, [pc, #64]	; (80043e8 <SPIx_Init+0x6c>)
 80043a6:	2200      	movs	r2, #0
 80043a8:	611a      	str	r2, [r3, #16]
 80043aa:	4b0f      	ldr	r3, [pc, #60]	; (80043e8 <SPIx_Init+0x6c>)
 80043ac:	2200      	movs	r2, #0
 80043ae:	629a      	str	r2, [r3, #40]	; 0x28
 80043b0:	4b0d      	ldr	r3, [pc, #52]	; (80043e8 <SPIx_Init+0x6c>)
 80043b2:	2207      	movs	r2, #7
 80043b4:	62da      	str	r2, [r3, #44]	; 0x2c
 80043b6:	4b0c      	ldr	r3, [pc, #48]	; (80043e8 <SPIx_Init+0x6c>)
 80043b8:	2200      	movs	r2, #0
 80043ba:	60da      	str	r2, [r3, #12]
 80043bc:	4b0a      	ldr	r3, [pc, #40]	; (80043e8 <SPIx_Init+0x6c>)
 80043be:	2200      	movs	r2, #0
 80043c0:	621a      	str	r2, [r3, #32]
 80043c2:	4b09      	ldr	r3, [pc, #36]	; (80043e8 <SPIx_Init+0x6c>)
 80043c4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80043c8:	619a      	str	r2, [r3, #24]
 80043ca:	4b07      	ldr	r3, [pc, #28]	; (80043e8 <SPIx_Init+0x6c>)
 80043cc:	2200      	movs	r2, #0
 80043ce:	625a      	str	r2, [r3, #36]	; 0x24
 80043d0:	4b05      	ldr	r3, [pc, #20]	; (80043e8 <SPIx_Init+0x6c>)
 80043d2:	f44f 7282 	mov.w	r2, #260	; 0x104
 80043d6:	605a      	str	r2, [r3, #4]
 80043d8:	4803      	ldr	r0, [pc, #12]	; (80043e8 <SPIx_Init+0x6c>)
 80043da:	f000 f853 	bl	8004484 <SPIx_MspInit>
 80043de:	4802      	ldr	r0, [pc, #8]	; (80043e8 <SPIx_Init+0x6c>)
 80043e0:	f004 fcfb 	bl	8008dda <HAL_SPI_Init>
 80043e4:	bf00      	nop
 80043e6:	bd80      	pop	{r7, pc}
 80043e8:	20000fd4 	.word	0x20000fd4
 80043ec:	40015000 	.word	0x40015000

080043f0 <SPIx_Read>:
 80043f0:	b580      	push	{r7, lr}
 80043f2:	b084      	sub	sp, #16
 80043f4:	af00      	add	r7, sp, #0
 80043f6:	4603      	mov	r3, r0
 80043f8:	71fb      	strb	r3, [r7, #7]
 80043fa:	2300      	movs	r3, #0
 80043fc:	73fb      	strb	r3, [r7, #15]
 80043fe:	79fb      	ldrb	r3, [r7, #7]
 8004400:	b29a      	uxth	r2, r3
 8004402:	4b09      	ldr	r3, [pc, #36]	; (8004428 <SPIx_Read+0x38>)
 8004404:	681b      	ldr	r3, [r3, #0]
 8004406:	f107 0108 	add.w	r1, r7, #8
 800440a:	4808      	ldr	r0, [pc, #32]	; (800442c <SPIx_Read+0x3c>)
 800440c:	f004 fee2 	bl	80091d4 <HAL_SPI_Receive>
 8004410:	4603      	mov	r3, r0
 8004412:	73fb      	strb	r3, [r7, #15]
 8004414:	7bfb      	ldrb	r3, [r7, #15]
 8004416:	2b00      	cmp	r3, #0
 8004418:	d001      	beq.n	800441e <SPIx_Read+0x2e>
 800441a:	f000 f827 	bl	800446c <SPIx_Error>
 800441e:	68bb      	ldr	r3, [r7, #8]
 8004420:	4618      	mov	r0, r3
 8004422:	3710      	adds	r7, #16
 8004424:	46bd      	mov	sp, r7
 8004426:	bd80      	pop	{r7, pc}
 8004428:	200000d4 	.word	0x200000d4
 800442c:	20000fd4 	.word	0x20000fd4

08004430 <SPIx_Write>:
 8004430:	b580      	push	{r7, lr}
 8004432:	b084      	sub	sp, #16
 8004434:	af00      	add	r7, sp, #0
 8004436:	4603      	mov	r3, r0
 8004438:	80fb      	strh	r3, [r7, #6]
 800443a:	2300      	movs	r3, #0
 800443c:	73fb      	strb	r3, [r7, #15]
 800443e:	4b09      	ldr	r3, [pc, #36]	; (8004464 <SPIx_Write+0x34>)
 8004440:	681b      	ldr	r3, [r3, #0]
 8004442:	1db9      	adds	r1, r7, #6
 8004444:	2201      	movs	r2, #1
 8004446:	4808      	ldr	r0, [pc, #32]	; (8004468 <SPIx_Write+0x38>)
 8004448:	f004 fd6e 	bl	8008f28 <HAL_SPI_Transmit>
 800444c:	4603      	mov	r3, r0
 800444e:	73fb      	strb	r3, [r7, #15]
 8004450:	7bfb      	ldrb	r3, [r7, #15]
 8004452:	2b00      	cmp	r3, #0
 8004454:	d001      	beq.n	800445a <SPIx_Write+0x2a>
 8004456:	f000 f809 	bl	800446c <SPIx_Error>
 800445a:	bf00      	nop
 800445c:	3710      	adds	r7, #16
 800445e:	46bd      	mov	sp, r7
 8004460:	bd80      	pop	{r7, pc}
 8004462:	bf00      	nop
 8004464:	200000d4 	.word	0x200000d4
 8004468:	20000fd4 	.word	0x20000fd4

0800446c <SPIx_Error>:
 800446c:	b580      	push	{r7, lr}
 800446e:	af00      	add	r7, sp, #0
 8004470:	4803      	ldr	r0, [pc, #12]	; (8004480 <SPIx_Error+0x14>)
 8004472:	f004 fd1d 	bl	8008eb0 <HAL_SPI_DeInit>
 8004476:	f7ff ff81 	bl	800437c <SPIx_Init>
 800447a:	bf00      	nop
 800447c:	bd80      	pop	{r7, pc}
 800447e:	bf00      	nop
 8004480:	20000fd4 	.word	0x20000fd4

08004484 <SPIx_MspInit>:
 8004484:	b580      	push	{r7, lr}
 8004486:	b08a      	sub	sp, #40	; 0x28
 8004488:	af00      	add	r7, sp, #0
 800448a:	6078      	str	r0, [r7, #4]
 800448c:	2300      	movs	r3, #0
 800448e:	613b      	str	r3, [r7, #16]
 8004490:	4b17      	ldr	r3, [pc, #92]	; (80044f0 <SPIx_MspInit+0x6c>)
 8004492:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004494:	4a16      	ldr	r2, [pc, #88]	; (80044f0 <SPIx_MspInit+0x6c>)
 8004496:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800449a:	6453      	str	r3, [r2, #68]	; 0x44
 800449c:	4b14      	ldr	r3, [pc, #80]	; (80044f0 <SPIx_MspInit+0x6c>)
 800449e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80044a0:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80044a4:	613b      	str	r3, [r7, #16]
 80044a6:	693b      	ldr	r3, [r7, #16]
 80044a8:	2300      	movs	r3, #0
 80044aa:	60fb      	str	r3, [r7, #12]
 80044ac:	4b10      	ldr	r3, [pc, #64]	; (80044f0 <SPIx_MspInit+0x6c>)
 80044ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044b0:	4a0f      	ldr	r2, [pc, #60]	; (80044f0 <SPIx_MspInit+0x6c>)
 80044b2:	f043 0320 	orr.w	r3, r3, #32
 80044b6:	6313      	str	r3, [r2, #48]	; 0x30
 80044b8:	4b0d      	ldr	r3, [pc, #52]	; (80044f0 <SPIx_MspInit+0x6c>)
 80044ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044bc:	f003 0320 	and.w	r3, r3, #32
 80044c0:	60fb      	str	r3, [r7, #12]
 80044c2:	68fb      	ldr	r3, [r7, #12]
 80044c4:	f44f 7360 	mov.w	r3, #896	; 0x380
 80044c8:	617b      	str	r3, [r7, #20]
 80044ca:	2302      	movs	r3, #2
 80044cc:	61bb      	str	r3, [r7, #24]
 80044ce:	2302      	movs	r3, #2
 80044d0:	61fb      	str	r3, [r7, #28]
 80044d2:	2301      	movs	r3, #1
 80044d4:	623b      	str	r3, [r7, #32]
 80044d6:	2305      	movs	r3, #5
 80044d8:	627b      	str	r3, [r7, #36]	; 0x24
 80044da:	f107 0314 	add.w	r3, r7, #20
 80044de:	4619      	mov	r1, r3
 80044e0:	4804      	ldr	r0, [pc, #16]	; (80044f4 <SPIx_MspInit+0x70>)
 80044e2:	f002 f8ef 	bl	80066c4 <HAL_GPIO_Init>
 80044e6:	bf00      	nop
 80044e8:	3728      	adds	r7, #40	; 0x28
 80044ea:	46bd      	mov	sp, r7
 80044ec:	bd80      	pop	{r7, pc}
 80044ee:	bf00      	nop
 80044f0:	40023800 	.word	0x40023800
 80044f4:	40021400 	.word	0x40021400

080044f8 <LCD_IO_Init>:
 80044f8:	b580      	push	{r7, lr}
 80044fa:	b088      	sub	sp, #32
 80044fc:	af00      	add	r7, sp, #0
 80044fe:	4b36      	ldr	r3, [pc, #216]	; (80045d8 <LCD_IO_Init+0xe0>)
 8004500:	781b      	ldrb	r3, [r3, #0]
 8004502:	2b00      	cmp	r3, #0
 8004504:	d164      	bne.n	80045d0 <LCD_IO_Init+0xd8>
 8004506:	4b34      	ldr	r3, [pc, #208]	; (80045d8 <LCD_IO_Init+0xe0>)
 8004508:	2201      	movs	r2, #1
 800450a:	701a      	strb	r2, [r3, #0]
 800450c:	2300      	movs	r3, #0
 800450e:	60bb      	str	r3, [r7, #8]
 8004510:	4b32      	ldr	r3, [pc, #200]	; (80045dc <LCD_IO_Init+0xe4>)
 8004512:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004514:	4a31      	ldr	r2, [pc, #196]	; (80045dc <LCD_IO_Init+0xe4>)
 8004516:	f043 0308 	orr.w	r3, r3, #8
 800451a:	6313      	str	r3, [r2, #48]	; 0x30
 800451c:	4b2f      	ldr	r3, [pc, #188]	; (80045dc <LCD_IO_Init+0xe4>)
 800451e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004520:	f003 0308 	and.w	r3, r3, #8
 8004524:	60bb      	str	r3, [r7, #8]
 8004526:	68bb      	ldr	r3, [r7, #8]
 8004528:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800452c:	60fb      	str	r3, [r7, #12]
 800452e:	2301      	movs	r3, #1
 8004530:	613b      	str	r3, [r7, #16]
 8004532:	2300      	movs	r3, #0
 8004534:	617b      	str	r3, [r7, #20]
 8004536:	2302      	movs	r3, #2
 8004538:	61bb      	str	r3, [r7, #24]
 800453a:	f107 030c 	add.w	r3, r7, #12
 800453e:	4619      	mov	r1, r3
 8004540:	4827      	ldr	r0, [pc, #156]	; (80045e0 <LCD_IO_Init+0xe8>)
 8004542:	f002 f8bf 	bl	80066c4 <HAL_GPIO_Init>
 8004546:	2300      	movs	r3, #0
 8004548:	607b      	str	r3, [r7, #4]
 800454a:	4b24      	ldr	r3, [pc, #144]	; (80045dc <LCD_IO_Init+0xe4>)
 800454c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800454e:	4a23      	ldr	r2, [pc, #140]	; (80045dc <LCD_IO_Init+0xe4>)
 8004550:	f043 0308 	orr.w	r3, r3, #8
 8004554:	6313      	str	r3, [r2, #48]	; 0x30
 8004556:	4b21      	ldr	r3, [pc, #132]	; (80045dc <LCD_IO_Init+0xe4>)
 8004558:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800455a:	f003 0308 	and.w	r3, r3, #8
 800455e:	607b      	str	r3, [r7, #4]
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004566:	60fb      	str	r3, [r7, #12]
 8004568:	2301      	movs	r3, #1
 800456a:	613b      	str	r3, [r7, #16]
 800456c:	2300      	movs	r3, #0
 800456e:	617b      	str	r3, [r7, #20]
 8004570:	2302      	movs	r3, #2
 8004572:	61bb      	str	r3, [r7, #24]
 8004574:	f107 030c 	add.w	r3, r7, #12
 8004578:	4619      	mov	r1, r3
 800457a:	4819      	ldr	r0, [pc, #100]	; (80045e0 <LCD_IO_Init+0xe8>)
 800457c:	f002 f8a2 	bl	80066c4 <HAL_GPIO_Init>
 8004580:	2300      	movs	r3, #0
 8004582:	603b      	str	r3, [r7, #0]
 8004584:	4b15      	ldr	r3, [pc, #84]	; (80045dc <LCD_IO_Init+0xe4>)
 8004586:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004588:	4a14      	ldr	r2, [pc, #80]	; (80045dc <LCD_IO_Init+0xe4>)
 800458a:	f043 0304 	orr.w	r3, r3, #4
 800458e:	6313      	str	r3, [r2, #48]	; 0x30
 8004590:	4b12      	ldr	r3, [pc, #72]	; (80045dc <LCD_IO_Init+0xe4>)
 8004592:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004594:	f003 0304 	and.w	r3, r3, #4
 8004598:	603b      	str	r3, [r7, #0]
 800459a:	683b      	ldr	r3, [r7, #0]
 800459c:	2304      	movs	r3, #4
 800459e:	60fb      	str	r3, [r7, #12]
 80045a0:	2301      	movs	r3, #1
 80045a2:	613b      	str	r3, [r7, #16]
 80045a4:	2300      	movs	r3, #0
 80045a6:	617b      	str	r3, [r7, #20]
 80045a8:	2302      	movs	r3, #2
 80045aa:	61bb      	str	r3, [r7, #24]
 80045ac:	f107 030c 	add.w	r3, r7, #12
 80045b0:	4619      	mov	r1, r3
 80045b2:	480c      	ldr	r0, [pc, #48]	; (80045e4 <LCD_IO_Init+0xec>)
 80045b4:	f002 f886 	bl	80066c4 <HAL_GPIO_Init>
 80045b8:	2200      	movs	r2, #0
 80045ba:	2104      	movs	r1, #4
 80045bc:	4809      	ldr	r0, [pc, #36]	; (80045e4 <LCD_IO_Init+0xec>)
 80045be:	f002 fa2d 	bl	8006a1c <HAL_GPIO_WritePin>
 80045c2:	2201      	movs	r2, #1
 80045c4:	2104      	movs	r1, #4
 80045c6:	4807      	ldr	r0, [pc, #28]	; (80045e4 <LCD_IO_Init+0xec>)
 80045c8:	f002 fa28 	bl	8006a1c <HAL_GPIO_WritePin>
 80045cc:	f7ff fed6 	bl	800437c <SPIx_Init>
 80045d0:	bf00      	nop
 80045d2:	3720      	adds	r7, #32
 80045d4:	46bd      	mov	sp, r7
 80045d6:	bd80      	pop	{r7, pc}
 80045d8:	2000102c 	.word	0x2000102c
 80045dc:	40023800 	.word	0x40023800
 80045e0:	40020c00 	.word	0x40020c00
 80045e4:	40020800 	.word	0x40020800

080045e8 <LCD_IO_WriteData>:
 80045e8:	b580      	push	{r7, lr}
 80045ea:	b082      	sub	sp, #8
 80045ec:	af00      	add	r7, sp, #0
 80045ee:	4603      	mov	r3, r0
 80045f0:	80fb      	strh	r3, [r7, #6]
 80045f2:	2201      	movs	r2, #1
 80045f4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80045f8:	480a      	ldr	r0, [pc, #40]	; (8004624 <LCD_IO_WriteData+0x3c>)
 80045fa:	f002 fa0f 	bl	8006a1c <HAL_GPIO_WritePin>
 80045fe:	2200      	movs	r2, #0
 8004600:	2104      	movs	r1, #4
 8004602:	4809      	ldr	r0, [pc, #36]	; (8004628 <LCD_IO_WriteData+0x40>)
 8004604:	f002 fa0a 	bl	8006a1c <HAL_GPIO_WritePin>
 8004608:	88fb      	ldrh	r3, [r7, #6]
 800460a:	4618      	mov	r0, r3
 800460c:	f7ff ff10 	bl	8004430 <SPIx_Write>
 8004610:	2201      	movs	r2, #1
 8004612:	2104      	movs	r1, #4
 8004614:	4804      	ldr	r0, [pc, #16]	; (8004628 <LCD_IO_WriteData+0x40>)
 8004616:	f002 fa01 	bl	8006a1c <HAL_GPIO_WritePin>
 800461a:	bf00      	nop
 800461c:	3708      	adds	r7, #8
 800461e:	46bd      	mov	sp, r7
 8004620:	bd80      	pop	{r7, pc}
 8004622:	bf00      	nop
 8004624:	40020c00 	.word	0x40020c00
 8004628:	40020800 	.word	0x40020800

0800462c <LCD_IO_WriteReg>:
 800462c:	b580      	push	{r7, lr}
 800462e:	b082      	sub	sp, #8
 8004630:	af00      	add	r7, sp, #0
 8004632:	4603      	mov	r3, r0
 8004634:	71fb      	strb	r3, [r7, #7]
 8004636:	2200      	movs	r2, #0
 8004638:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800463c:	480a      	ldr	r0, [pc, #40]	; (8004668 <LCD_IO_WriteReg+0x3c>)
 800463e:	f002 f9ed 	bl	8006a1c <HAL_GPIO_WritePin>
 8004642:	2200      	movs	r2, #0
 8004644:	2104      	movs	r1, #4
 8004646:	4809      	ldr	r0, [pc, #36]	; (800466c <LCD_IO_WriteReg+0x40>)
 8004648:	f002 f9e8 	bl	8006a1c <HAL_GPIO_WritePin>
 800464c:	79fb      	ldrb	r3, [r7, #7]
 800464e:	b29b      	uxth	r3, r3
 8004650:	4618      	mov	r0, r3
 8004652:	f7ff feed 	bl	8004430 <SPIx_Write>
 8004656:	2201      	movs	r2, #1
 8004658:	2104      	movs	r1, #4
 800465a:	4804      	ldr	r0, [pc, #16]	; (800466c <LCD_IO_WriteReg+0x40>)
 800465c:	f002 f9de 	bl	8006a1c <HAL_GPIO_WritePin>
 8004660:	bf00      	nop
 8004662:	3708      	adds	r7, #8
 8004664:	46bd      	mov	sp, r7
 8004666:	bd80      	pop	{r7, pc}
 8004668:	40020c00 	.word	0x40020c00
 800466c:	40020800 	.word	0x40020800

08004670 <LCD_IO_ReadData>:
 8004670:	b580      	push	{r7, lr}
 8004672:	b084      	sub	sp, #16
 8004674:	af00      	add	r7, sp, #0
 8004676:	4603      	mov	r3, r0
 8004678:	460a      	mov	r2, r1
 800467a:	80fb      	strh	r3, [r7, #6]
 800467c:	4613      	mov	r3, r2
 800467e:	717b      	strb	r3, [r7, #5]
 8004680:	2300      	movs	r3, #0
 8004682:	60fb      	str	r3, [r7, #12]
 8004684:	2200      	movs	r2, #0
 8004686:	2104      	movs	r1, #4
 8004688:	4810      	ldr	r0, [pc, #64]	; (80046cc <LCD_IO_ReadData+0x5c>)
 800468a:	f002 f9c7 	bl	8006a1c <HAL_GPIO_WritePin>
 800468e:	2200      	movs	r2, #0
 8004690:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8004694:	480e      	ldr	r0, [pc, #56]	; (80046d0 <LCD_IO_ReadData+0x60>)
 8004696:	f002 f9c1 	bl	8006a1c <HAL_GPIO_WritePin>
 800469a:	88fb      	ldrh	r3, [r7, #6]
 800469c:	4618      	mov	r0, r3
 800469e:	f7ff fec7 	bl	8004430 <SPIx_Write>
 80046a2:	797b      	ldrb	r3, [r7, #5]
 80046a4:	4618      	mov	r0, r3
 80046a6:	f7ff fea3 	bl	80043f0 <SPIx_Read>
 80046aa:	60f8      	str	r0, [r7, #12]
 80046ac:	2201      	movs	r2, #1
 80046ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80046b2:	4807      	ldr	r0, [pc, #28]	; (80046d0 <LCD_IO_ReadData+0x60>)
 80046b4:	f002 f9b2 	bl	8006a1c <HAL_GPIO_WritePin>
 80046b8:	2201      	movs	r2, #1
 80046ba:	2104      	movs	r1, #4
 80046bc:	4803      	ldr	r0, [pc, #12]	; (80046cc <LCD_IO_ReadData+0x5c>)
 80046be:	f002 f9ad 	bl	8006a1c <HAL_GPIO_WritePin>
 80046c2:	68fb      	ldr	r3, [r7, #12]
 80046c4:	4618      	mov	r0, r3
 80046c6:	3710      	adds	r7, #16
 80046c8:	46bd      	mov	sp, r7
 80046ca:	bd80      	pop	{r7, pc}
 80046cc:	40020800 	.word	0x40020800
 80046d0:	40020c00 	.word	0x40020c00

080046d4 <LCD_Delay>:
 80046d4:	b580      	push	{r7, lr}
 80046d6:	b082      	sub	sp, #8
 80046d8:	af00      	add	r7, sp, #0
 80046da:	6078      	str	r0, [r7, #4]
 80046dc:	6878      	ldr	r0, [r7, #4]
 80046de:	f001 fa67 	bl	8005bb0 <HAL_Delay>
 80046e2:	bf00      	nop
 80046e4:	3708      	adds	r7, #8
 80046e6:	46bd      	mov	sp, r7
 80046e8:	bd80      	pop	{r7, pc}

080046ea <IOE_Init>:
 80046ea:	b580      	push	{r7, lr}
 80046ec:	af00      	add	r7, sp, #0
 80046ee:	f7ff fd51 	bl	8004194 <I2Cx_Init>
 80046f2:	bf00      	nop
 80046f4:	bd80      	pop	{r7, pc}

080046f6 <IOE_ITConfig>:
 80046f6:	b580      	push	{r7, lr}
 80046f8:	af00      	add	r7, sp, #0
 80046fa:	f7ff fd7d 	bl	80041f8 <I2Cx_ITConfig>
 80046fe:	bf00      	nop
 8004700:	bd80      	pop	{r7, pc}

08004702 <IOE_Write>:
 8004702:	b580      	push	{r7, lr}
 8004704:	b082      	sub	sp, #8
 8004706:	af00      	add	r7, sp, #0
 8004708:	4603      	mov	r3, r0
 800470a:	71fb      	strb	r3, [r7, #7]
 800470c:	460b      	mov	r3, r1
 800470e:	71bb      	strb	r3, [r7, #6]
 8004710:	4613      	mov	r3, r2
 8004712:	717b      	strb	r3, [r7, #5]
 8004714:	797a      	ldrb	r2, [r7, #5]
 8004716:	79b9      	ldrb	r1, [r7, #6]
 8004718:	79fb      	ldrb	r3, [r7, #7]
 800471a:	4618      	mov	r0, r3
 800471c:	f7ff fd9e 	bl	800425c <I2Cx_WriteData>
 8004720:	bf00      	nop
 8004722:	3708      	adds	r7, #8
 8004724:	46bd      	mov	sp, r7
 8004726:	bd80      	pop	{r7, pc}

08004728 <IOE_Read>:
 8004728:	b580      	push	{r7, lr}
 800472a:	b082      	sub	sp, #8
 800472c:	af00      	add	r7, sp, #0
 800472e:	4603      	mov	r3, r0
 8004730:	460a      	mov	r2, r1
 8004732:	71fb      	strb	r3, [r7, #7]
 8004734:	4613      	mov	r3, r2
 8004736:	71bb      	strb	r3, [r7, #6]
 8004738:	79ba      	ldrb	r2, [r7, #6]
 800473a:	79fb      	ldrb	r3, [r7, #7]
 800473c:	4611      	mov	r1, r2
 800473e:	4618      	mov	r0, r3
 8004740:	f7ff fdb6 	bl	80042b0 <I2Cx_ReadData>
 8004744:	4603      	mov	r3, r0
 8004746:	4618      	mov	r0, r3
 8004748:	3708      	adds	r7, #8
 800474a:	46bd      	mov	sp, r7
 800474c:	bd80      	pop	{r7, pc}

0800474e <IOE_ReadMultiple>:
 800474e:	b580      	push	{r7, lr}
 8004750:	b082      	sub	sp, #8
 8004752:	af00      	add	r7, sp, #0
 8004754:	603a      	str	r2, [r7, #0]
 8004756:	461a      	mov	r2, r3
 8004758:	4603      	mov	r3, r0
 800475a:	71fb      	strb	r3, [r7, #7]
 800475c:	460b      	mov	r3, r1
 800475e:	71bb      	strb	r3, [r7, #6]
 8004760:	4613      	mov	r3, r2
 8004762:	80bb      	strh	r3, [r7, #4]
 8004764:	88bb      	ldrh	r3, [r7, #4]
 8004766:	79b9      	ldrb	r1, [r7, #6]
 8004768:	79f8      	ldrb	r0, [r7, #7]
 800476a:	683a      	ldr	r2, [r7, #0]
 800476c:	f7ff fdcc 	bl	8004308 <I2Cx_ReadBuffer>
 8004770:	4603      	mov	r3, r0
 8004772:	b29b      	uxth	r3, r3
 8004774:	4618      	mov	r0, r3
 8004776:	3708      	adds	r7, #8
 8004778:	46bd      	mov	sp, r7
 800477a:	bd80      	pop	{r7, pc}

0800477c <IOE_Delay>:
 800477c:	b580      	push	{r7, lr}
 800477e:	b082      	sub	sp, #8
 8004780:	af00      	add	r7, sp, #0
 8004782:	6078      	str	r0, [r7, #4]
 8004784:	6878      	ldr	r0, [r7, #4]
 8004786:	f001 fa13 	bl	8005bb0 <HAL_Delay>
 800478a:	bf00      	nop
 800478c:	3708      	adds	r7, #8
 800478e:	46bd      	mov	sp, r7
 8004790:	bd80      	pop	{r7, pc}
	...

08004794 <BSP_LCD_Init_Flipped>:
 8004794:	b580      	push	{r7, lr}
 8004796:	af00      	add	r7, sp, #0
 8004798:	4b03      	ldr	r3, [pc, #12]	; (80047a8 <BSP_LCD_Init_Flipped+0x14>)
 800479a:	2201      	movs	r2, #1
 800479c:	701a      	strb	r2, [r3, #0]
 800479e:	f000 f805 	bl	80047ac <BSP_LCD_Init>
 80047a2:	4603      	mov	r3, r0
 80047a4:	4618      	mov	r0, r3
 80047a6:	bd80      	pop	{r7, pc}
 80047a8:	20001168 	.word	0x20001168

080047ac <BSP_LCD_Init>:
 80047ac:	b580      	push	{r7, lr}
 80047ae:	af00      	add	r7, sp, #0
 80047b0:	4b2d      	ldr	r3, [pc, #180]	; (8004868 <BSP_LCD_Init+0xbc>)
 80047b2:	4a2e      	ldr	r2, [pc, #184]	; (800486c <BSP_LCD_Init+0xc0>)
 80047b4:	601a      	str	r2, [r3, #0]
 80047b6:	4b2c      	ldr	r3, [pc, #176]	; (8004868 <BSP_LCD_Init+0xbc>)
 80047b8:	2209      	movs	r2, #9
 80047ba:	615a      	str	r2, [r3, #20]
 80047bc:	4b2a      	ldr	r3, [pc, #168]	; (8004868 <BSP_LCD_Init+0xbc>)
 80047be:	2201      	movs	r2, #1
 80047c0:	619a      	str	r2, [r3, #24]
 80047c2:	4b29      	ldr	r3, [pc, #164]	; (8004868 <BSP_LCD_Init+0xbc>)
 80047c4:	221d      	movs	r2, #29
 80047c6:	61da      	str	r2, [r3, #28]
 80047c8:	4b27      	ldr	r3, [pc, #156]	; (8004868 <BSP_LCD_Init+0xbc>)
 80047ca:	2203      	movs	r2, #3
 80047cc:	621a      	str	r2, [r3, #32]
 80047ce:	4b26      	ldr	r3, [pc, #152]	; (8004868 <BSP_LCD_Init+0xbc>)
 80047d0:	f240 120d 	movw	r2, #269	; 0x10d
 80047d4:	625a      	str	r2, [r3, #36]	; 0x24
 80047d6:	4b24      	ldr	r3, [pc, #144]	; (8004868 <BSP_LCD_Init+0xbc>)
 80047d8:	f240 1243 	movw	r2, #323	; 0x143
 80047dc:	629a      	str	r2, [r3, #40]	; 0x28
 80047de:	4b22      	ldr	r3, [pc, #136]	; (8004868 <BSP_LCD_Init+0xbc>)
 80047e0:	f240 1217 	movw	r2, #279	; 0x117
 80047e4:	62da      	str	r2, [r3, #44]	; 0x2c
 80047e6:	4b20      	ldr	r3, [pc, #128]	; (8004868 <BSP_LCD_Init+0xbc>)
 80047e8:	f240 1247 	movw	r2, #327	; 0x147
 80047ec:	631a      	str	r2, [r3, #48]	; 0x30
 80047ee:	4b1e      	ldr	r3, [pc, #120]	; (8004868 <BSP_LCD_Init+0xbc>)
 80047f0:	2200      	movs	r2, #0
 80047f2:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 80047f6:	4b1c      	ldr	r3, [pc, #112]	; (8004868 <BSP_LCD_Init+0xbc>)
 80047f8:	2200      	movs	r2, #0
 80047fa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80047fe:	4b1a      	ldr	r3, [pc, #104]	; (8004868 <BSP_LCD_Init+0xbc>)
 8004800:	2200      	movs	r2, #0
 8004802:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004806:	4b1a      	ldr	r3, [pc, #104]	; (8004870 <BSP_LCD_Init+0xc4>)
 8004808:	2208      	movs	r2, #8
 800480a:	601a      	str	r2, [r3, #0]
 800480c:	4b18      	ldr	r3, [pc, #96]	; (8004870 <BSP_LCD_Init+0xc4>)
 800480e:	22c0      	movs	r2, #192	; 0xc0
 8004810:	611a      	str	r2, [r3, #16]
 8004812:	4b17      	ldr	r3, [pc, #92]	; (8004870 <BSP_LCD_Init+0xc4>)
 8004814:	2204      	movs	r2, #4
 8004816:	619a      	str	r2, [r3, #24]
 8004818:	4b15      	ldr	r3, [pc, #84]	; (8004870 <BSP_LCD_Init+0xc4>)
 800481a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800481e:	625a      	str	r2, [r3, #36]	; 0x24
 8004820:	4813      	ldr	r0, [pc, #76]	; (8004870 <BSP_LCD_Init+0xc4>)
 8004822:	f004 f891 	bl	8008948 <HAL_RCCEx_PeriphCLKConfig>
 8004826:	4b10      	ldr	r3, [pc, #64]	; (8004868 <BSP_LCD_Init+0xbc>)
 8004828:	2200      	movs	r2, #0
 800482a:	605a      	str	r2, [r3, #4]
 800482c:	4b0e      	ldr	r3, [pc, #56]	; (8004868 <BSP_LCD_Init+0xbc>)
 800482e:	2200      	movs	r2, #0
 8004830:	609a      	str	r2, [r3, #8]
 8004832:	4b0d      	ldr	r3, [pc, #52]	; (8004868 <BSP_LCD_Init+0xbc>)
 8004834:	2200      	movs	r2, #0
 8004836:	60da      	str	r2, [r3, #12]
 8004838:	4b0b      	ldr	r3, [pc, #44]	; (8004868 <BSP_LCD_Init+0xbc>)
 800483a:	2200      	movs	r2, #0
 800483c:	611a      	str	r2, [r3, #16]
 800483e:	f000 fc61 	bl	8005104 <BSP_LCD_MspInit>
 8004842:	4809      	ldr	r0, [pc, #36]	; (8004868 <BSP_LCD_Init+0xbc>)
 8004844:	f003 f92c 	bl	8007aa0 <HAL_LTDC_Init>
 8004848:	4b0a      	ldr	r3, [pc, #40]	; (8004874 <BSP_LCD_Init+0xc8>)
 800484a:	4a0b      	ldr	r2, [pc, #44]	; (8004878 <BSP_LCD_Init+0xcc>)
 800484c:	601a      	str	r2, [r3, #0]
 800484e:	4b09      	ldr	r3, [pc, #36]	; (8004874 <BSP_LCD_Init+0xc8>)
 8004850:	681b      	ldr	r3, [r3, #0]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	4798      	blx	r3
 8004856:	f000 fe63 	bl	8005520 <BSP_SDRAM_Init>
 800485a:	4808      	ldr	r0, [pc, #32]	; (800487c <BSP_LCD_Init+0xd0>)
 800485c:	f000 f8ce 	bl	80049fc <BSP_LCD_SetFont>
 8004860:	2300      	movs	r3, #0
 8004862:	4618      	mov	r0, r3
 8004864:	bd80      	pop	{r7, pc}
 8004866:	bf00      	nop
 8004868:	20001030 	.word	0x20001030
 800486c:	40016800 	.word	0x40016800
 8004870:	20001118 	.word	0x20001118
 8004874:	20001164 	.word	0x20001164
 8004878:	20000068 	.word	0x20000068
 800487c:	200000d8 	.word	0x200000d8

08004880 <BSP_LCD_GetXSize>:
 8004880:	b580      	push	{r7, lr}
 8004882:	af00      	add	r7, sp, #0
 8004884:	4b03      	ldr	r3, [pc, #12]	; (8004894 <BSP_LCD_GetXSize+0x14>)
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800488a:	4798      	blx	r3
 800488c:	4603      	mov	r3, r0
 800488e:	4618      	mov	r0, r3
 8004890:	bd80      	pop	{r7, pc}
 8004892:	bf00      	nop
 8004894:	20001164 	.word	0x20001164

08004898 <BSP_LCD_GetYSize>:
 8004898:	b580      	push	{r7, lr}
 800489a:	af00      	add	r7, sp, #0
 800489c:	4b03      	ldr	r3, [pc, #12]	; (80048ac <BSP_LCD_GetYSize+0x14>)
 800489e:	681b      	ldr	r3, [r3, #0]
 80048a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80048a2:	4798      	blx	r3
 80048a4:	4603      	mov	r3, r0
 80048a6:	4618      	mov	r0, r3
 80048a8:	bd80      	pop	{r7, pc}
 80048aa:	bf00      	nop
 80048ac:	20001164 	.word	0x20001164

080048b0 <BSP_LCD_LayerDefaultInit>:
 80048b0:	b580      	push	{r7, lr}
 80048b2:	b090      	sub	sp, #64	; 0x40
 80048b4:	af00      	add	r7, sp, #0
 80048b6:	4603      	mov	r3, r0
 80048b8:	6039      	str	r1, [r7, #0]
 80048ba:	80fb      	strh	r3, [r7, #6]
 80048bc:	2300      	movs	r3, #0
 80048be:	60fb      	str	r3, [r7, #12]
 80048c0:	f7ff ffde 	bl	8004880 <BSP_LCD_GetXSize>
 80048c4:	4603      	mov	r3, r0
 80048c6:	613b      	str	r3, [r7, #16]
 80048c8:	2300      	movs	r3, #0
 80048ca:	617b      	str	r3, [r7, #20]
 80048cc:	f7ff ffe4 	bl	8004898 <BSP_LCD_GetYSize>
 80048d0:	4603      	mov	r3, r0
 80048d2:	61bb      	str	r3, [r7, #24]
 80048d4:	2300      	movs	r3, #0
 80048d6:	61fb      	str	r3, [r7, #28]
 80048d8:	683b      	ldr	r3, [r7, #0]
 80048da:	633b      	str	r3, [r7, #48]	; 0x30
 80048dc:	23ff      	movs	r3, #255	; 0xff
 80048de:	623b      	str	r3, [r7, #32]
 80048e0:	2300      	movs	r3, #0
 80048e2:	627b      	str	r3, [r7, #36]	; 0x24
 80048e4:	2300      	movs	r3, #0
 80048e6:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
 80048ea:	2300      	movs	r3, #0
 80048ec:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 80048f0:	2300      	movs	r3, #0
 80048f2:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 80048f6:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80048fa:	62bb      	str	r3, [r7, #40]	; 0x28
 80048fc:	2307      	movs	r3, #7
 80048fe:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004900:	f7ff ffbe 	bl	8004880 <BSP_LCD_GetXSize>
 8004904:	4603      	mov	r3, r0
 8004906:	637b      	str	r3, [r7, #52]	; 0x34
 8004908:	f7ff ffc6 	bl	8004898 <BSP_LCD_GetYSize>
 800490c:	4603      	mov	r3, r0
 800490e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004910:	88fa      	ldrh	r2, [r7, #6]
 8004912:	f107 030c 	add.w	r3, r7, #12
 8004916:	4619      	mov	r1, r3
 8004918:	4814      	ldr	r0, [pc, #80]	; (800496c <BSP_LCD_LayerDefaultInit+0xbc>)
 800491a:	f003 f99b 	bl	8007c54 <HAL_LTDC_ConfigLayer>
 800491e:	88fa      	ldrh	r2, [r7, #6]
 8004920:	4913      	ldr	r1, [pc, #76]	; (8004970 <BSP_LCD_LayerDefaultInit+0xc0>)
 8004922:	4613      	mov	r3, r2
 8004924:	005b      	lsls	r3, r3, #1
 8004926:	4413      	add	r3, r2
 8004928:	009b      	lsls	r3, r3, #2
 800492a:	440b      	add	r3, r1
 800492c:	3304      	adds	r3, #4
 800492e:	f04f 32ff 	mov.w	r2, #4294967295
 8004932:	601a      	str	r2, [r3, #0]
 8004934:	88fa      	ldrh	r2, [r7, #6]
 8004936:	490e      	ldr	r1, [pc, #56]	; (8004970 <BSP_LCD_LayerDefaultInit+0xc0>)
 8004938:	4613      	mov	r3, r2
 800493a:	005b      	lsls	r3, r3, #1
 800493c:	4413      	add	r3, r2
 800493e:	009b      	lsls	r3, r3, #2
 8004940:	440b      	add	r3, r1
 8004942:	3308      	adds	r3, #8
 8004944:	4a0b      	ldr	r2, [pc, #44]	; (8004974 <BSP_LCD_LayerDefaultInit+0xc4>)
 8004946:	601a      	str	r2, [r3, #0]
 8004948:	88fa      	ldrh	r2, [r7, #6]
 800494a:	4909      	ldr	r1, [pc, #36]	; (8004970 <BSP_LCD_LayerDefaultInit+0xc0>)
 800494c:	4613      	mov	r3, r2
 800494e:	005b      	lsls	r3, r3, #1
 8004950:	4413      	add	r3, r2
 8004952:	009b      	lsls	r3, r3, #2
 8004954:	440b      	add	r3, r1
 8004956:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 800495a:	601a      	str	r2, [r3, #0]
 800495c:	4803      	ldr	r0, [pc, #12]	; (800496c <BSP_LCD_LayerDefaultInit+0xbc>)
 800495e:	f003 f9b7 	bl	8007cd0 <HAL_LTDC_EnableDither>
 8004962:	bf00      	nop
 8004964:	3740      	adds	r7, #64	; 0x40
 8004966:	46bd      	mov	sp, r7
 8004968:	bd80      	pop	{r7, pc}
 800496a:	bf00      	nop
 800496c:	20001030 	.word	0x20001030
 8004970:	2000114c 	.word	0x2000114c
 8004974:	200000d8 	.word	0x200000d8

08004978 <BSP_LCD_SelectLayer>:
 8004978:	b480      	push	{r7}
 800497a:	b083      	sub	sp, #12
 800497c:	af00      	add	r7, sp, #0
 800497e:	6078      	str	r0, [r7, #4]
 8004980:	4a04      	ldr	r2, [pc, #16]	; (8004994 <BSP_LCD_SelectLayer+0x1c>)
 8004982:	687b      	ldr	r3, [r7, #4]
 8004984:	6013      	str	r3, [r2, #0]
 8004986:	bf00      	nop
 8004988:	370c      	adds	r7, #12
 800498a:	46bd      	mov	sp, r7
 800498c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004990:	4770      	bx	lr
 8004992:	bf00      	nop
 8004994:	20001148 	.word	0x20001148

08004998 <BSP_LCD_SetTextColor>:
 8004998:	b480      	push	{r7}
 800499a:	b083      	sub	sp, #12
 800499c:	af00      	add	r7, sp, #0
 800499e:	6078      	str	r0, [r7, #4]
 80049a0:	4b07      	ldr	r3, [pc, #28]	; (80049c0 <BSP_LCD_SetTextColor+0x28>)
 80049a2:	681a      	ldr	r2, [r3, #0]
 80049a4:	4907      	ldr	r1, [pc, #28]	; (80049c4 <BSP_LCD_SetTextColor+0x2c>)
 80049a6:	4613      	mov	r3, r2
 80049a8:	005b      	lsls	r3, r3, #1
 80049aa:	4413      	add	r3, r2
 80049ac:	009b      	lsls	r3, r3, #2
 80049ae:	440b      	add	r3, r1
 80049b0:	687a      	ldr	r2, [r7, #4]
 80049b2:	601a      	str	r2, [r3, #0]
 80049b4:	bf00      	nop
 80049b6:	370c      	adds	r7, #12
 80049b8:	46bd      	mov	sp, r7
 80049ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049be:	4770      	bx	lr
 80049c0:	20001148 	.word	0x20001148
 80049c4:	2000114c 	.word	0x2000114c

080049c8 <BSP_LCD_SetBackColor>:
 80049c8:	b480      	push	{r7}
 80049ca:	b083      	sub	sp, #12
 80049cc:	af00      	add	r7, sp, #0
 80049ce:	6078      	str	r0, [r7, #4]
 80049d0:	4b08      	ldr	r3, [pc, #32]	; (80049f4 <BSP_LCD_SetBackColor+0x2c>)
 80049d2:	681a      	ldr	r2, [r3, #0]
 80049d4:	4908      	ldr	r1, [pc, #32]	; (80049f8 <BSP_LCD_SetBackColor+0x30>)
 80049d6:	4613      	mov	r3, r2
 80049d8:	005b      	lsls	r3, r3, #1
 80049da:	4413      	add	r3, r2
 80049dc:	009b      	lsls	r3, r3, #2
 80049de:	440b      	add	r3, r1
 80049e0:	3304      	adds	r3, #4
 80049e2:	687a      	ldr	r2, [r7, #4]
 80049e4:	601a      	str	r2, [r3, #0]
 80049e6:	bf00      	nop
 80049e8:	370c      	adds	r7, #12
 80049ea:	46bd      	mov	sp, r7
 80049ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049f0:	4770      	bx	lr
 80049f2:	bf00      	nop
 80049f4:	20001148 	.word	0x20001148
 80049f8:	2000114c 	.word	0x2000114c

080049fc <BSP_LCD_SetFont>:
 80049fc:	b480      	push	{r7}
 80049fe:	b083      	sub	sp, #12
 8004a00:	af00      	add	r7, sp, #0
 8004a02:	6078      	str	r0, [r7, #4]
 8004a04:	4b08      	ldr	r3, [pc, #32]	; (8004a28 <BSP_LCD_SetFont+0x2c>)
 8004a06:	681a      	ldr	r2, [r3, #0]
 8004a08:	4908      	ldr	r1, [pc, #32]	; (8004a2c <BSP_LCD_SetFont+0x30>)
 8004a0a:	4613      	mov	r3, r2
 8004a0c:	005b      	lsls	r3, r3, #1
 8004a0e:	4413      	add	r3, r2
 8004a10:	009b      	lsls	r3, r3, #2
 8004a12:	440b      	add	r3, r1
 8004a14:	3308      	adds	r3, #8
 8004a16:	687a      	ldr	r2, [r7, #4]
 8004a18:	601a      	str	r2, [r3, #0]
 8004a1a:	bf00      	nop
 8004a1c:	370c      	adds	r7, #12
 8004a1e:	46bd      	mov	sp, r7
 8004a20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a24:	4770      	bx	lr
 8004a26:	bf00      	nop
 8004a28:	20001148 	.word	0x20001148
 8004a2c:	2000114c 	.word	0x2000114c

08004a30 <BSP_LCD_Clear>:
 8004a30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a32:	b085      	sub	sp, #20
 8004a34:	af02      	add	r7, sp, #8
 8004a36:	6078      	str	r0, [r7, #4]
 8004a38:	4b0f      	ldr	r3, [pc, #60]	; (8004a78 <BSP_LCD_Clear+0x48>)
 8004a3a:	681c      	ldr	r4, [r3, #0]
 8004a3c:	4b0e      	ldr	r3, [pc, #56]	; (8004a78 <BSP_LCD_Clear+0x48>)
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	4a0e      	ldr	r2, [pc, #56]	; (8004a7c <BSP_LCD_Clear+0x4c>)
 8004a42:	2134      	movs	r1, #52	; 0x34
 8004a44:	fb01 f303 	mul.w	r3, r1, r3
 8004a48:	4413      	add	r3, r2
 8004a4a:	335c      	adds	r3, #92	; 0x5c
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	461e      	mov	r6, r3
 8004a50:	f7ff ff16 	bl	8004880 <BSP_LCD_GetXSize>
 8004a54:	4605      	mov	r5, r0
 8004a56:	f7ff ff1f 	bl	8004898 <BSP_LCD_GetYSize>
 8004a5a:	4602      	mov	r2, r0
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	9301      	str	r3, [sp, #4]
 8004a60:	2300      	movs	r3, #0
 8004a62:	9300      	str	r3, [sp, #0]
 8004a64:	4613      	mov	r3, r2
 8004a66:	462a      	mov	r2, r5
 8004a68:	4631      	mov	r1, r6
 8004a6a:	4620      	mov	r0, r4
 8004a6c:	f000 fd20 	bl	80054b0 <FillBuffer>
 8004a70:	bf00      	nop
 8004a72:	370c      	adds	r7, #12
 8004a74:	46bd      	mov	sp, r7
 8004a76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004a78:	20001148 	.word	0x20001148
 8004a7c:	20001030 	.word	0x20001030

08004a80 <BSP_LCD_DisplayChar>:
 8004a80:	b590      	push	{r4, r7, lr}
 8004a82:	b083      	sub	sp, #12
 8004a84:	af00      	add	r7, sp, #0
 8004a86:	4603      	mov	r3, r0
 8004a88:	80fb      	strh	r3, [r7, #6]
 8004a8a:	460b      	mov	r3, r1
 8004a8c:	80bb      	strh	r3, [r7, #4]
 8004a8e:	4613      	mov	r3, r2
 8004a90:	70fb      	strb	r3, [r7, #3]
 8004a92:	4b1b      	ldr	r3, [pc, #108]	; (8004b00 <BSP_LCD_DisplayChar+0x80>)
 8004a94:	681a      	ldr	r2, [r3, #0]
 8004a96:	491b      	ldr	r1, [pc, #108]	; (8004b04 <BSP_LCD_DisplayChar+0x84>)
 8004a98:	4613      	mov	r3, r2
 8004a9a:	005b      	lsls	r3, r3, #1
 8004a9c:	4413      	add	r3, r2
 8004a9e:	009b      	lsls	r3, r3, #2
 8004aa0:	440b      	add	r3, r1
 8004aa2:	3308      	adds	r3, #8
 8004aa4:	681b      	ldr	r3, [r3, #0]
 8004aa6:	6819      	ldr	r1, [r3, #0]
 8004aa8:	78fb      	ldrb	r3, [r7, #3]
 8004aaa:	f1a3 0020 	sub.w	r0, r3, #32
 8004aae:	4b14      	ldr	r3, [pc, #80]	; (8004b00 <BSP_LCD_DisplayChar+0x80>)
 8004ab0:	681a      	ldr	r2, [r3, #0]
 8004ab2:	4c14      	ldr	r4, [pc, #80]	; (8004b04 <BSP_LCD_DisplayChar+0x84>)
 8004ab4:	4613      	mov	r3, r2
 8004ab6:	005b      	lsls	r3, r3, #1
 8004ab8:	4413      	add	r3, r2
 8004aba:	009b      	lsls	r3, r3, #2
 8004abc:	4423      	add	r3, r4
 8004abe:	3308      	adds	r3, #8
 8004ac0:	681b      	ldr	r3, [r3, #0]
 8004ac2:	88db      	ldrh	r3, [r3, #6]
 8004ac4:	fb03 f000 	mul.w	r0, r3, r0
 8004ac8:	4b0d      	ldr	r3, [pc, #52]	; (8004b00 <BSP_LCD_DisplayChar+0x80>)
 8004aca:	681a      	ldr	r2, [r3, #0]
 8004acc:	4c0d      	ldr	r4, [pc, #52]	; (8004b04 <BSP_LCD_DisplayChar+0x84>)
 8004ace:	4613      	mov	r3, r2
 8004ad0:	005b      	lsls	r3, r3, #1
 8004ad2:	4413      	add	r3, r2
 8004ad4:	009b      	lsls	r3, r3, #2
 8004ad6:	4423      	add	r3, r4
 8004ad8:	3308      	adds	r3, #8
 8004ada:	681b      	ldr	r3, [r3, #0]
 8004adc:	889b      	ldrh	r3, [r3, #4]
 8004ade:	3307      	adds	r3, #7
 8004ae0:	2b00      	cmp	r3, #0
 8004ae2:	da00      	bge.n	8004ae6 <BSP_LCD_DisplayChar+0x66>
 8004ae4:	3307      	adds	r3, #7
 8004ae6:	10db      	asrs	r3, r3, #3
 8004ae8:	fb00 f303 	mul.w	r3, r0, r3
 8004aec:	18ca      	adds	r2, r1, r3
 8004aee:	88b9      	ldrh	r1, [r7, #4]
 8004af0:	88fb      	ldrh	r3, [r7, #6]
 8004af2:	4618      	mov	r0, r3
 8004af4:	f000 fc22 	bl	800533c <DrawChar>
 8004af8:	bf00      	nop
 8004afa:	370c      	adds	r7, #12
 8004afc:	46bd      	mov	sp, r7
 8004afe:	bd90      	pop	{r4, r7, pc}
 8004b00:	20001148 	.word	0x20001148
 8004b04:	2000114c 	.word	0x2000114c

08004b08 <BSP_LCD_DisplayStringAt>:
 8004b08:	b5b0      	push	{r4, r5, r7, lr}
 8004b0a:	b088      	sub	sp, #32
 8004b0c:	af00      	add	r7, sp, #0
 8004b0e:	60ba      	str	r2, [r7, #8]
 8004b10:	461a      	mov	r2, r3
 8004b12:	4603      	mov	r3, r0
 8004b14:	81fb      	strh	r3, [r7, #14]
 8004b16:	460b      	mov	r3, r1
 8004b18:	81bb      	strh	r3, [r7, #12]
 8004b1a:	4613      	mov	r3, r2
 8004b1c:	71fb      	strb	r3, [r7, #7]
 8004b1e:	2301      	movs	r3, #1
 8004b20:	83fb      	strh	r3, [r7, #30]
 8004b22:	2300      	movs	r3, #0
 8004b24:	83bb      	strh	r3, [r7, #28]
 8004b26:	2300      	movs	r3, #0
 8004b28:	61bb      	str	r3, [r7, #24]
 8004b2a:	2300      	movs	r3, #0
 8004b2c:	613b      	str	r3, [r7, #16]
 8004b2e:	68bb      	ldr	r3, [r7, #8]
 8004b30:	617b      	str	r3, [r7, #20]
 8004b32:	e002      	b.n	8004b3a <BSP_LCD_DisplayStringAt+0x32>
 8004b34:	69bb      	ldr	r3, [r7, #24]
 8004b36:	3301      	adds	r3, #1
 8004b38:	61bb      	str	r3, [r7, #24]
 8004b3a:	697b      	ldr	r3, [r7, #20]
 8004b3c:	1c5a      	adds	r2, r3, #1
 8004b3e:	617a      	str	r2, [r7, #20]
 8004b40:	781b      	ldrb	r3, [r3, #0]
 8004b42:	2b00      	cmp	r3, #0
 8004b44:	d1f6      	bne.n	8004b34 <BSP_LCD_DisplayStringAt+0x2c>
 8004b46:	f7ff fe9b 	bl	8004880 <BSP_LCD_GetXSize>
 8004b4a:	4601      	mov	r1, r0
 8004b4c:	4b4b      	ldr	r3, [pc, #300]	; (8004c7c <BSP_LCD_DisplayStringAt+0x174>)
 8004b4e:	681a      	ldr	r2, [r3, #0]
 8004b50:	484b      	ldr	r0, [pc, #300]	; (8004c80 <BSP_LCD_DisplayStringAt+0x178>)
 8004b52:	4613      	mov	r3, r2
 8004b54:	005b      	lsls	r3, r3, #1
 8004b56:	4413      	add	r3, r2
 8004b58:	009b      	lsls	r3, r3, #2
 8004b5a:	4403      	add	r3, r0
 8004b5c:	3308      	adds	r3, #8
 8004b5e:	681b      	ldr	r3, [r3, #0]
 8004b60:	889b      	ldrh	r3, [r3, #4]
 8004b62:	fbb1 f3f3 	udiv	r3, r1, r3
 8004b66:	613b      	str	r3, [r7, #16]
 8004b68:	79fb      	ldrb	r3, [r7, #7]
 8004b6a:	2b03      	cmp	r3, #3
 8004b6c:	d01c      	beq.n	8004ba8 <BSP_LCD_DisplayStringAt+0xa0>
 8004b6e:	2b03      	cmp	r3, #3
 8004b70:	dc33      	bgt.n	8004bda <BSP_LCD_DisplayStringAt+0xd2>
 8004b72:	2b01      	cmp	r3, #1
 8004b74:	d002      	beq.n	8004b7c <BSP_LCD_DisplayStringAt+0x74>
 8004b76:	2b02      	cmp	r3, #2
 8004b78:	d019      	beq.n	8004bae <BSP_LCD_DisplayStringAt+0xa6>
 8004b7a:	e02e      	b.n	8004bda <BSP_LCD_DisplayStringAt+0xd2>
 8004b7c:	693a      	ldr	r2, [r7, #16]
 8004b7e:	69bb      	ldr	r3, [r7, #24]
 8004b80:	1ad1      	subs	r1, r2, r3
 8004b82:	4b3e      	ldr	r3, [pc, #248]	; (8004c7c <BSP_LCD_DisplayStringAt+0x174>)
 8004b84:	681a      	ldr	r2, [r3, #0]
 8004b86:	483e      	ldr	r0, [pc, #248]	; (8004c80 <BSP_LCD_DisplayStringAt+0x178>)
 8004b88:	4613      	mov	r3, r2
 8004b8a:	005b      	lsls	r3, r3, #1
 8004b8c:	4413      	add	r3, r2
 8004b8e:	009b      	lsls	r3, r3, #2
 8004b90:	4403      	add	r3, r0
 8004b92:	3308      	adds	r3, #8
 8004b94:	681b      	ldr	r3, [r3, #0]
 8004b96:	889b      	ldrh	r3, [r3, #4]
 8004b98:	fb01 f303 	mul.w	r3, r1, r3
 8004b9c:	085b      	lsrs	r3, r3, #1
 8004b9e:	b29a      	uxth	r2, r3
 8004ba0:	89fb      	ldrh	r3, [r7, #14]
 8004ba2:	4413      	add	r3, r2
 8004ba4:	83fb      	strh	r3, [r7, #30]
 8004ba6:	e01b      	b.n	8004be0 <BSP_LCD_DisplayStringAt+0xd8>
 8004ba8:	89fb      	ldrh	r3, [r7, #14]
 8004baa:	83fb      	strh	r3, [r7, #30]
 8004bac:	e018      	b.n	8004be0 <BSP_LCD_DisplayStringAt+0xd8>
 8004bae:	693a      	ldr	r2, [r7, #16]
 8004bb0:	69bb      	ldr	r3, [r7, #24]
 8004bb2:	1ad3      	subs	r3, r2, r3
 8004bb4:	b299      	uxth	r1, r3
 8004bb6:	4b31      	ldr	r3, [pc, #196]	; (8004c7c <BSP_LCD_DisplayStringAt+0x174>)
 8004bb8:	681a      	ldr	r2, [r3, #0]
 8004bba:	4831      	ldr	r0, [pc, #196]	; (8004c80 <BSP_LCD_DisplayStringAt+0x178>)
 8004bbc:	4613      	mov	r3, r2
 8004bbe:	005b      	lsls	r3, r3, #1
 8004bc0:	4413      	add	r3, r2
 8004bc2:	009b      	lsls	r3, r3, #2
 8004bc4:	4403      	add	r3, r0
 8004bc6:	3308      	adds	r3, #8
 8004bc8:	681b      	ldr	r3, [r3, #0]
 8004bca:	889b      	ldrh	r3, [r3, #4]
 8004bcc:	fb11 f303 	smulbb	r3, r1, r3
 8004bd0:	b29a      	uxth	r2, r3
 8004bd2:	89fb      	ldrh	r3, [r7, #14]
 8004bd4:	4413      	add	r3, r2
 8004bd6:	83fb      	strh	r3, [r7, #30]
 8004bd8:	e002      	b.n	8004be0 <BSP_LCD_DisplayStringAt+0xd8>
 8004bda:	89fb      	ldrh	r3, [r7, #14]
 8004bdc:	83fb      	strh	r3, [r7, #30]
 8004bde:	bf00      	nop
 8004be0:	e01a      	b.n	8004c18 <BSP_LCD_DisplayStringAt+0x110>
 8004be2:	68bb      	ldr	r3, [r7, #8]
 8004be4:	781a      	ldrb	r2, [r3, #0]
 8004be6:	89b9      	ldrh	r1, [r7, #12]
 8004be8:	8bfb      	ldrh	r3, [r7, #30]
 8004bea:	4618      	mov	r0, r3
 8004bec:	f7ff ff48 	bl	8004a80 <BSP_LCD_DisplayChar>
 8004bf0:	4b22      	ldr	r3, [pc, #136]	; (8004c7c <BSP_LCD_DisplayStringAt+0x174>)
 8004bf2:	681a      	ldr	r2, [r3, #0]
 8004bf4:	4922      	ldr	r1, [pc, #136]	; (8004c80 <BSP_LCD_DisplayStringAt+0x178>)
 8004bf6:	4613      	mov	r3, r2
 8004bf8:	005b      	lsls	r3, r3, #1
 8004bfa:	4413      	add	r3, r2
 8004bfc:	009b      	lsls	r3, r3, #2
 8004bfe:	440b      	add	r3, r1
 8004c00:	3308      	adds	r3, #8
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	889a      	ldrh	r2, [r3, #4]
 8004c06:	8bfb      	ldrh	r3, [r7, #30]
 8004c08:	4413      	add	r3, r2
 8004c0a:	83fb      	strh	r3, [r7, #30]
 8004c0c:	68bb      	ldr	r3, [r7, #8]
 8004c0e:	3301      	adds	r3, #1
 8004c10:	60bb      	str	r3, [r7, #8]
 8004c12:	8bbb      	ldrh	r3, [r7, #28]
 8004c14:	3301      	adds	r3, #1
 8004c16:	83bb      	strh	r3, [r7, #28]
 8004c18:	68bb      	ldr	r3, [r7, #8]
 8004c1a:	781b      	ldrb	r3, [r3, #0]
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	bf14      	ite	ne
 8004c20:	2301      	movne	r3, #1
 8004c22:	2300      	moveq	r3, #0
 8004c24:	b2dc      	uxtb	r4, r3
 8004c26:	f7ff fe2b 	bl	8004880 <BSP_LCD_GetXSize>
 8004c2a:	8bb9      	ldrh	r1, [r7, #28]
 8004c2c:	4b13      	ldr	r3, [pc, #76]	; (8004c7c <BSP_LCD_DisplayStringAt+0x174>)
 8004c2e:	681a      	ldr	r2, [r3, #0]
 8004c30:	4d13      	ldr	r5, [pc, #76]	; (8004c80 <BSP_LCD_DisplayStringAt+0x178>)
 8004c32:	4613      	mov	r3, r2
 8004c34:	005b      	lsls	r3, r3, #1
 8004c36:	4413      	add	r3, r2
 8004c38:	009b      	lsls	r3, r3, #2
 8004c3a:	442b      	add	r3, r5
 8004c3c:	3308      	adds	r3, #8
 8004c3e:	681b      	ldr	r3, [r3, #0]
 8004c40:	889b      	ldrh	r3, [r3, #4]
 8004c42:	fb01 f303 	mul.w	r3, r1, r3
 8004c46:	1ac3      	subs	r3, r0, r3
 8004c48:	b299      	uxth	r1, r3
 8004c4a:	4b0c      	ldr	r3, [pc, #48]	; (8004c7c <BSP_LCD_DisplayStringAt+0x174>)
 8004c4c:	681a      	ldr	r2, [r3, #0]
 8004c4e:	480c      	ldr	r0, [pc, #48]	; (8004c80 <BSP_LCD_DisplayStringAt+0x178>)
 8004c50:	4613      	mov	r3, r2
 8004c52:	005b      	lsls	r3, r3, #1
 8004c54:	4413      	add	r3, r2
 8004c56:	009b      	lsls	r3, r3, #2
 8004c58:	4403      	add	r3, r0
 8004c5a:	3308      	adds	r3, #8
 8004c5c:	681b      	ldr	r3, [r3, #0]
 8004c5e:	889b      	ldrh	r3, [r3, #4]
 8004c60:	4299      	cmp	r1, r3
 8004c62:	bf2c      	ite	cs
 8004c64:	2301      	movcs	r3, #1
 8004c66:	2300      	movcc	r3, #0
 8004c68:	b2db      	uxtb	r3, r3
 8004c6a:	4023      	ands	r3, r4
 8004c6c:	b2db      	uxtb	r3, r3
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	d1b7      	bne.n	8004be2 <BSP_LCD_DisplayStringAt+0xda>
 8004c72:	bf00      	nop
 8004c74:	bf00      	nop
 8004c76:	3720      	adds	r7, #32
 8004c78:	46bd      	mov	sp, r7
 8004c7a:	bdb0      	pop	{r4, r5, r7, pc}
 8004c7c:	20001148 	.word	0x20001148
 8004c80:	2000114c 	.word	0x2000114c

08004c84 <BSP_LCD_DrawLine>:
 8004c84:	b590      	push	{r4, r7, lr}
 8004c86:	b08b      	sub	sp, #44	; 0x2c
 8004c88:	af00      	add	r7, sp, #0
 8004c8a:	4604      	mov	r4, r0
 8004c8c:	4608      	mov	r0, r1
 8004c8e:	4611      	mov	r1, r2
 8004c90:	461a      	mov	r2, r3
 8004c92:	4623      	mov	r3, r4
 8004c94:	80fb      	strh	r3, [r7, #6]
 8004c96:	4603      	mov	r3, r0
 8004c98:	80bb      	strh	r3, [r7, #4]
 8004c9a:	460b      	mov	r3, r1
 8004c9c:	807b      	strh	r3, [r7, #2]
 8004c9e:	4613      	mov	r3, r2
 8004ca0:	803b      	strh	r3, [r7, #0]
 8004ca2:	2300      	movs	r3, #0
 8004ca4:	823b      	strh	r3, [r7, #16]
 8004ca6:	2300      	movs	r3, #0
 8004ca8:	81fb      	strh	r3, [r7, #14]
 8004caa:	2300      	movs	r3, #0
 8004cac:	84fb      	strh	r3, [r7, #38]	; 0x26
 8004cae:	2300      	movs	r3, #0
 8004cb0:	84bb      	strh	r3, [r7, #36]	; 0x24
 8004cb2:	2300      	movs	r3, #0
 8004cb4:	847b      	strh	r3, [r7, #34]	; 0x22
 8004cb6:	2300      	movs	r3, #0
 8004cb8:	843b      	strh	r3, [r7, #32]
 8004cba:	2300      	movs	r3, #0
 8004cbc:	83fb      	strh	r3, [r7, #30]
 8004cbe:	2300      	movs	r3, #0
 8004cc0:	83bb      	strh	r3, [r7, #28]
 8004cc2:	2300      	movs	r3, #0
 8004cc4:	837b      	strh	r3, [r7, #26]
 8004cc6:	2300      	movs	r3, #0
 8004cc8:	833b      	strh	r3, [r7, #24]
 8004cca:	2300      	movs	r3, #0
 8004ccc:	82fb      	strh	r3, [r7, #22]
 8004cce:	2300      	movs	r3, #0
 8004cd0:	82bb      	strh	r3, [r7, #20]
 8004cd2:	2300      	movs	r3, #0
 8004cd4:	827b      	strh	r3, [r7, #18]
 8004cd6:	887a      	ldrh	r2, [r7, #2]
 8004cd8:	88fb      	ldrh	r3, [r7, #6]
 8004cda:	1ad3      	subs	r3, r2, r3
 8004cdc:	2b00      	cmp	r3, #0
 8004cde:	bfb8      	it	lt
 8004ce0:	425b      	neglt	r3, r3
 8004ce2:	823b      	strh	r3, [r7, #16]
 8004ce4:	883a      	ldrh	r2, [r7, #0]
 8004ce6:	88bb      	ldrh	r3, [r7, #4]
 8004ce8:	1ad3      	subs	r3, r2, r3
 8004cea:	2b00      	cmp	r3, #0
 8004cec:	bfb8      	it	lt
 8004cee:	425b      	neglt	r3, r3
 8004cf0:	81fb      	strh	r3, [r7, #14]
 8004cf2:	88fb      	ldrh	r3, [r7, #6]
 8004cf4:	84fb      	strh	r3, [r7, #38]	; 0x26
 8004cf6:	88bb      	ldrh	r3, [r7, #4]
 8004cf8:	84bb      	strh	r3, [r7, #36]	; 0x24
 8004cfa:	887a      	ldrh	r2, [r7, #2]
 8004cfc:	88fb      	ldrh	r3, [r7, #6]
 8004cfe:	429a      	cmp	r2, r3
 8004d00:	d304      	bcc.n	8004d0c <BSP_LCD_DrawLine+0x88>
 8004d02:	2301      	movs	r3, #1
 8004d04:	847b      	strh	r3, [r7, #34]	; 0x22
 8004d06:	2301      	movs	r3, #1
 8004d08:	843b      	strh	r3, [r7, #32]
 8004d0a:	e005      	b.n	8004d18 <BSP_LCD_DrawLine+0x94>
 8004d0c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004d10:	847b      	strh	r3, [r7, #34]	; 0x22
 8004d12:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004d16:	843b      	strh	r3, [r7, #32]
 8004d18:	883a      	ldrh	r2, [r7, #0]
 8004d1a:	88bb      	ldrh	r3, [r7, #4]
 8004d1c:	429a      	cmp	r2, r3
 8004d1e:	d304      	bcc.n	8004d2a <BSP_LCD_DrawLine+0xa6>
 8004d20:	2301      	movs	r3, #1
 8004d22:	83fb      	strh	r3, [r7, #30]
 8004d24:	2301      	movs	r3, #1
 8004d26:	83bb      	strh	r3, [r7, #28]
 8004d28:	e005      	b.n	8004d36 <BSP_LCD_DrawLine+0xb2>
 8004d2a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004d2e:	83fb      	strh	r3, [r7, #30]
 8004d30:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004d34:	83bb      	strh	r3, [r7, #28]
 8004d36:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 8004d3a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004d3e:	429a      	cmp	r2, r3
 8004d40:	db10      	blt.n	8004d64 <BSP_LCD_DrawLine+0xe0>
 8004d42:	2300      	movs	r3, #0
 8004d44:	847b      	strh	r3, [r7, #34]	; 0x22
 8004d46:	2300      	movs	r3, #0
 8004d48:	83bb      	strh	r3, [r7, #28]
 8004d4a:	8a3b      	ldrh	r3, [r7, #16]
 8004d4c:	837b      	strh	r3, [r7, #26]
 8004d4e:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8004d52:	0fda      	lsrs	r2, r3, #31
 8004d54:	4413      	add	r3, r2
 8004d56:	105b      	asrs	r3, r3, #1
 8004d58:	833b      	strh	r3, [r7, #24]
 8004d5a:	89fb      	ldrh	r3, [r7, #14]
 8004d5c:	82fb      	strh	r3, [r7, #22]
 8004d5e:	8a3b      	ldrh	r3, [r7, #16]
 8004d60:	82bb      	strh	r3, [r7, #20]
 8004d62:	e00f      	b.n	8004d84 <BSP_LCD_DrawLine+0x100>
 8004d64:	2300      	movs	r3, #0
 8004d66:	843b      	strh	r3, [r7, #32]
 8004d68:	2300      	movs	r3, #0
 8004d6a:	83fb      	strh	r3, [r7, #30]
 8004d6c:	89fb      	ldrh	r3, [r7, #14]
 8004d6e:	837b      	strh	r3, [r7, #26]
 8004d70:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004d74:	0fda      	lsrs	r2, r3, #31
 8004d76:	4413      	add	r3, r2
 8004d78:	105b      	asrs	r3, r3, #1
 8004d7a:	833b      	strh	r3, [r7, #24]
 8004d7c:	8a3b      	ldrh	r3, [r7, #16]
 8004d7e:	82fb      	strh	r3, [r7, #22]
 8004d80:	89fb      	ldrh	r3, [r7, #14]
 8004d82:	82bb      	strh	r3, [r7, #20]
 8004d84:	2300      	movs	r3, #0
 8004d86:	827b      	strh	r3, [r7, #18]
 8004d88:	e037      	b.n	8004dfa <BSP_LCD_DrawLine+0x176>
 8004d8a:	8cf8      	ldrh	r0, [r7, #38]	; 0x26
 8004d8c:	8cb9      	ldrh	r1, [r7, #36]	; 0x24
 8004d8e:	4b20      	ldr	r3, [pc, #128]	; (8004e10 <BSP_LCD_DrawLine+0x18c>)
 8004d90:	681a      	ldr	r2, [r3, #0]
 8004d92:	4c20      	ldr	r4, [pc, #128]	; (8004e14 <BSP_LCD_DrawLine+0x190>)
 8004d94:	4613      	mov	r3, r2
 8004d96:	005b      	lsls	r3, r3, #1
 8004d98:	4413      	add	r3, r2
 8004d9a:	009b      	lsls	r3, r3, #2
 8004d9c:	4423      	add	r3, r4
 8004d9e:	681b      	ldr	r3, [r3, #0]
 8004da0:	461a      	mov	r2, r3
 8004da2:	f000 fa85 	bl	80052b0 <BSP_LCD_DrawPixel>
 8004da6:	8b3a      	ldrh	r2, [r7, #24]
 8004da8:	8afb      	ldrh	r3, [r7, #22]
 8004daa:	4413      	add	r3, r2
 8004dac:	b29b      	uxth	r3, r3
 8004dae:	833b      	strh	r3, [r7, #24]
 8004db0:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8004db4:	f9b7 301a 	ldrsh.w	r3, [r7, #26]
 8004db8:	429a      	cmp	r2, r3
 8004dba:	db0e      	blt.n	8004dda <BSP_LCD_DrawLine+0x156>
 8004dbc:	8b3a      	ldrh	r2, [r7, #24]
 8004dbe:	8b7b      	ldrh	r3, [r7, #26]
 8004dc0:	1ad3      	subs	r3, r2, r3
 8004dc2:	b29b      	uxth	r3, r3
 8004dc4:	833b      	strh	r3, [r7, #24]
 8004dc6:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8004dc8:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8004dca:	4413      	add	r3, r2
 8004dcc:	b29b      	uxth	r3, r3
 8004dce:	84fb      	strh	r3, [r7, #38]	; 0x26
 8004dd0:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8004dd2:	8bfb      	ldrh	r3, [r7, #30]
 8004dd4:	4413      	add	r3, r2
 8004dd6:	b29b      	uxth	r3, r3
 8004dd8:	84bb      	strh	r3, [r7, #36]	; 0x24
 8004dda:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 8004ddc:	8c3b      	ldrh	r3, [r7, #32]
 8004dde:	4413      	add	r3, r2
 8004de0:	b29b      	uxth	r3, r3
 8004de2:	84fb      	strh	r3, [r7, #38]	; 0x26
 8004de4:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8004de6:	8bbb      	ldrh	r3, [r7, #28]
 8004de8:	4413      	add	r3, r2
 8004dea:	b29b      	uxth	r3, r3
 8004dec:	84bb      	strh	r3, [r7, #36]	; 0x24
 8004dee:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8004df2:	b29b      	uxth	r3, r3
 8004df4:	3301      	adds	r3, #1
 8004df6:	b29b      	uxth	r3, r3
 8004df8:	827b      	strh	r3, [r7, #18]
 8004dfa:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8004dfe:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8004e02:	429a      	cmp	r2, r3
 8004e04:	ddc1      	ble.n	8004d8a <BSP_LCD_DrawLine+0x106>
 8004e06:	bf00      	nop
 8004e08:	bf00      	nop
 8004e0a:	372c      	adds	r7, #44	; 0x2c
 8004e0c:	46bd      	mov	sp, r7
 8004e0e:	bd90      	pop	{r4, r7, pc}
 8004e10:	20001148 	.word	0x20001148
 8004e14:	2000114c 	.word	0x2000114c

08004e18 <BSP_LCD_DrawCircle>:
 8004e18:	b590      	push	{r4, r7, lr}
 8004e1a:	b087      	sub	sp, #28
 8004e1c:	af00      	add	r7, sp, #0
 8004e1e:	4603      	mov	r3, r0
 8004e20:	80fb      	strh	r3, [r7, #6]
 8004e22:	460b      	mov	r3, r1
 8004e24:	80bb      	strh	r3, [r7, #4]
 8004e26:	4613      	mov	r3, r2
 8004e28:	807b      	strh	r3, [r7, #2]
 8004e2a:	887b      	ldrh	r3, [r7, #2]
 8004e2c:	005b      	lsls	r3, r3, #1
 8004e2e:	f1c3 0303 	rsb	r3, r3, #3
 8004e32:	617b      	str	r3, [r7, #20]
 8004e34:	2300      	movs	r3, #0
 8004e36:	613b      	str	r3, [r7, #16]
 8004e38:	887b      	ldrh	r3, [r7, #2]
 8004e3a:	60fb      	str	r3, [r7, #12]
 8004e3c:	e0c7      	b.n	8004fce <BSP_LCD_DrawCircle+0x1b6>
 8004e3e:	693b      	ldr	r3, [r7, #16]
 8004e40:	b29a      	uxth	r2, r3
 8004e42:	88fb      	ldrh	r3, [r7, #6]
 8004e44:	4413      	add	r3, r2
 8004e46:	b298      	uxth	r0, r3
 8004e48:	68fb      	ldr	r3, [r7, #12]
 8004e4a:	b29b      	uxth	r3, r3
 8004e4c:	88ba      	ldrh	r2, [r7, #4]
 8004e4e:	1ad3      	subs	r3, r2, r3
 8004e50:	b299      	uxth	r1, r3
 8004e52:	4b64      	ldr	r3, [pc, #400]	; (8004fe4 <BSP_LCD_DrawCircle+0x1cc>)
 8004e54:	681a      	ldr	r2, [r3, #0]
 8004e56:	4c64      	ldr	r4, [pc, #400]	; (8004fe8 <BSP_LCD_DrawCircle+0x1d0>)
 8004e58:	4613      	mov	r3, r2
 8004e5a:	005b      	lsls	r3, r3, #1
 8004e5c:	4413      	add	r3, r2
 8004e5e:	009b      	lsls	r3, r3, #2
 8004e60:	4423      	add	r3, r4
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	461a      	mov	r2, r3
 8004e66:	f000 fa23 	bl	80052b0 <BSP_LCD_DrawPixel>
 8004e6a:	693b      	ldr	r3, [r7, #16]
 8004e6c:	b29b      	uxth	r3, r3
 8004e6e:	88fa      	ldrh	r2, [r7, #6]
 8004e70:	1ad3      	subs	r3, r2, r3
 8004e72:	b298      	uxth	r0, r3
 8004e74:	68fb      	ldr	r3, [r7, #12]
 8004e76:	b29b      	uxth	r3, r3
 8004e78:	88ba      	ldrh	r2, [r7, #4]
 8004e7a:	1ad3      	subs	r3, r2, r3
 8004e7c:	b299      	uxth	r1, r3
 8004e7e:	4b59      	ldr	r3, [pc, #356]	; (8004fe4 <BSP_LCD_DrawCircle+0x1cc>)
 8004e80:	681a      	ldr	r2, [r3, #0]
 8004e82:	4c59      	ldr	r4, [pc, #356]	; (8004fe8 <BSP_LCD_DrawCircle+0x1d0>)
 8004e84:	4613      	mov	r3, r2
 8004e86:	005b      	lsls	r3, r3, #1
 8004e88:	4413      	add	r3, r2
 8004e8a:	009b      	lsls	r3, r3, #2
 8004e8c:	4423      	add	r3, r4
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	461a      	mov	r2, r3
 8004e92:	f000 fa0d 	bl	80052b0 <BSP_LCD_DrawPixel>
 8004e96:	68fb      	ldr	r3, [r7, #12]
 8004e98:	b29a      	uxth	r2, r3
 8004e9a:	88fb      	ldrh	r3, [r7, #6]
 8004e9c:	4413      	add	r3, r2
 8004e9e:	b298      	uxth	r0, r3
 8004ea0:	693b      	ldr	r3, [r7, #16]
 8004ea2:	b29b      	uxth	r3, r3
 8004ea4:	88ba      	ldrh	r2, [r7, #4]
 8004ea6:	1ad3      	subs	r3, r2, r3
 8004ea8:	b299      	uxth	r1, r3
 8004eaa:	4b4e      	ldr	r3, [pc, #312]	; (8004fe4 <BSP_LCD_DrawCircle+0x1cc>)
 8004eac:	681a      	ldr	r2, [r3, #0]
 8004eae:	4c4e      	ldr	r4, [pc, #312]	; (8004fe8 <BSP_LCD_DrawCircle+0x1d0>)
 8004eb0:	4613      	mov	r3, r2
 8004eb2:	005b      	lsls	r3, r3, #1
 8004eb4:	4413      	add	r3, r2
 8004eb6:	009b      	lsls	r3, r3, #2
 8004eb8:	4423      	add	r3, r4
 8004eba:	681b      	ldr	r3, [r3, #0]
 8004ebc:	461a      	mov	r2, r3
 8004ebe:	f000 f9f7 	bl	80052b0 <BSP_LCD_DrawPixel>
 8004ec2:	68fb      	ldr	r3, [r7, #12]
 8004ec4:	b29b      	uxth	r3, r3
 8004ec6:	88fa      	ldrh	r2, [r7, #6]
 8004ec8:	1ad3      	subs	r3, r2, r3
 8004eca:	b298      	uxth	r0, r3
 8004ecc:	693b      	ldr	r3, [r7, #16]
 8004ece:	b29b      	uxth	r3, r3
 8004ed0:	88ba      	ldrh	r2, [r7, #4]
 8004ed2:	1ad3      	subs	r3, r2, r3
 8004ed4:	b299      	uxth	r1, r3
 8004ed6:	4b43      	ldr	r3, [pc, #268]	; (8004fe4 <BSP_LCD_DrawCircle+0x1cc>)
 8004ed8:	681a      	ldr	r2, [r3, #0]
 8004eda:	4c43      	ldr	r4, [pc, #268]	; (8004fe8 <BSP_LCD_DrawCircle+0x1d0>)
 8004edc:	4613      	mov	r3, r2
 8004ede:	005b      	lsls	r3, r3, #1
 8004ee0:	4413      	add	r3, r2
 8004ee2:	009b      	lsls	r3, r3, #2
 8004ee4:	4423      	add	r3, r4
 8004ee6:	681b      	ldr	r3, [r3, #0]
 8004ee8:	461a      	mov	r2, r3
 8004eea:	f000 f9e1 	bl	80052b0 <BSP_LCD_DrawPixel>
 8004eee:	693b      	ldr	r3, [r7, #16]
 8004ef0:	b29a      	uxth	r2, r3
 8004ef2:	88fb      	ldrh	r3, [r7, #6]
 8004ef4:	4413      	add	r3, r2
 8004ef6:	b298      	uxth	r0, r3
 8004ef8:	68fb      	ldr	r3, [r7, #12]
 8004efa:	b29a      	uxth	r2, r3
 8004efc:	88bb      	ldrh	r3, [r7, #4]
 8004efe:	4413      	add	r3, r2
 8004f00:	b299      	uxth	r1, r3
 8004f02:	4b38      	ldr	r3, [pc, #224]	; (8004fe4 <BSP_LCD_DrawCircle+0x1cc>)
 8004f04:	681a      	ldr	r2, [r3, #0]
 8004f06:	4c38      	ldr	r4, [pc, #224]	; (8004fe8 <BSP_LCD_DrawCircle+0x1d0>)
 8004f08:	4613      	mov	r3, r2
 8004f0a:	005b      	lsls	r3, r3, #1
 8004f0c:	4413      	add	r3, r2
 8004f0e:	009b      	lsls	r3, r3, #2
 8004f10:	4423      	add	r3, r4
 8004f12:	681b      	ldr	r3, [r3, #0]
 8004f14:	461a      	mov	r2, r3
 8004f16:	f000 f9cb 	bl	80052b0 <BSP_LCD_DrawPixel>
 8004f1a:	693b      	ldr	r3, [r7, #16]
 8004f1c:	b29b      	uxth	r3, r3
 8004f1e:	88fa      	ldrh	r2, [r7, #6]
 8004f20:	1ad3      	subs	r3, r2, r3
 8004f22:	b298      	uxth	r0, r3
 8004f24:	68fb      	ldr	r3, [r7, #12]
 8004f26:	b29a      	uxth	r2, r3
 8004f28:	88bb      	ldrh	r3, [r7, #4]
 8004f2a:	4413      	add	r3, r2
 8004f2c:	b299      	uxth	r1, r3
 8004f2e:	4b2d      	ldr	r3, [pc, #180]	; (8004fe4 <BSP_LCD_DrawCircle+0x1cc>)
 8004f30:	681a      	ldr	r2, [r3, #0]
 8004f32:	4c2d      	ldr	r4, [pc, #180]	; (8004fe8 <BSP_LCD_DrawCircle+0x1d0>)
 8004f34:	4613      	mov	r3, r2
 8004f36:	005b      	lsls	r3, r3, #1
 8004f38:	4413      	add	r3, r2
 8004f3a:	009b      	lsls	r3, r3, #2
 8004f3c:	4423      	add	r3, r4
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	461a      	mov	r2, r3
 8004f42:	f000 f9b5 	bl	80052b0 <BSP_LCD_DrawPixel>
 8004f46:	68fb      	ldr	r3, [r7, #12]
 8004f48:	b29a      	uxth	r2, r3
 8004f4a:	88fb      	ldrh	r3, [r7, #6]
 8004f4c:	4413      	add	r3, r2
 8004f4e:	b298      	uxth	r0, r3
 8004f50:	693b      	ldr	r3, [r7, #16]
 8004f52:	b29a      	uxth	r2, r3
 8004f54:	88bb      	ldrh	r3, [r7, #4]
 8004f56:	4413      	add	r3, r2
 8004f58:	b299      	uxth	r1, r3
 8004f5a:	4b22      	ldr	r3, [pc, #136]	; (8004fe4 <BSP_LCD_DrawCircle+0x1cc>)
 8004f5c:	681a      	ldr	r2, [r3, #0]
 8004f5e:	4c22      	ldr	r4, [pc, #136]	; (8004fe8 <BSP_LCD_DrawCircle+0x1d0>)
 8004f60:	4613      	mov	r3, r2
 8004f62:	005b      	lsls	r3, r3, #1
 8004f64:	4413      	add	r3, r2
 8004f66:	009b      	lsls	r3, r3, #2
 8004f68:	4423      	add	r3, r4
 8004f6a:	681b      	ldr	r3, [r3, #0]
 8004f6c:	461a      	mov	r2, r3
 8004f6e:	f000 f99f 	bl	80052b0 <BSP_LCD_DrawPixel>
 8004f72:	68fb      	ldr	r3, [r7, #12]
 8004f74:	b29b      	uxth	r3, r3
 8004f76:	88fa      	ldrh	r2, [r7, #6]
 8004f78:	1ad3      	subs	r3, r2, r3
 8004f7a:	b298      	uxth	r0, r3
 8004f7c:	693b      	ldr	r3, [r7, #16]
 8004f7e:	b29a      	uxth	r2, r3
 8004f80:	88bb      	ldrh	r3, [r7, #4]
 8004f82:	4413      	add	r3, r2
 8004f84:	b299      	uxth	r1, r3
 8004f86:	4b17      	ldr	r3, [pc, #92]	; (8004fe4 <BSP_LCD_DrawCircle+0x1cc>)
 8004f88:	681a      	ldr	r2, [r3, #0]
 8004f8a:	4c17      	ldr	r4, [pc, #92]	; (8004fe8 <BSP_LCD_DrawCircle+0x1d0>)
 8004f8c:	4613      	mov	r3, r2
 8004f8e:	005b      	lsls	r3, r3, #1
 8004f90:	4413      	add	r3, r2
 8004f92:	009b      	lsls	r3, r3, #2
 8004f94:	4423      	add	r3, r4
 8004f96:	681b      	ldr	r3, [r3, #0]
 8004f98:	461a      	mov	r2, r3
 8004f9a:	f000 f989 	bl	80052b0 <BSP_LCD_DrawPixel>
 8004f9e:	697b      	ldr	r3, [r7, #20]
 8004fa0:	2b00      	cmp	r3, #0
 8004fa2:	da06      	bge.n	8004fb2 <BSP_LCD_DrawCircle+0x19a>
 8004fa4:	693b      	ldr	r3, [r7, #16]
 8004fa6:	009a      	lsls	r2, r3, #2
 8004fa8:	697b      	ldr	r3, [r7, #20]
 8004faa:	4413      	add	r3, r2
 8004fac:	3306      	adds	r3, #6
 8004fae:	617b      	str	r3, [r7, #20]
 8004fb0:	e00a      	b.n	8004fc8 <BSP_LCD_DrawCircle+0x1b0>
 8004fb2:	693a      	ldr	r2, [r7, #16]
 8004fb4:	68fb      	ldr	r3, [r7, #12]
 8004fb6:	1ad3      	subs	r3, r2, r3
 8004fb8:	009a      	lsls	r2, r3, #2
 8004fba:	697b      	ldr	r3, [r7, #20]
 8004fbc:	4413      	add	r3, r2
 8004fbe:	330a      	adds	r3, #10
 8004fc0:	617b      	str	r3, [r7, #20]
 8004fc2:	68fb      	ldr	r3, [r7, #12]
 8004fc4:	3b01      	subs	r3, #1
 8004fc6:	60fb      	str	r3, [r7, #12]
 8004fc8:	693b      	ldr	r3, [r7, #16]
 8004fca:	3301      	adds	r3, #1
 8004fcc:	613b      	str	r3, [r7, #16]
 8004fce:	693a      	ldr	r2, [r7, #16]
 8004fd0:	68fb      	ldr	r3, [r7, #12]
 8004fd2:	429a      	cmp	r2, r3
 8004fd4:	f67f af33 	bls.w	8004e3e <BSP_LCD_DrawCircle+0x26>
 8004fd8:	bf00      	nop
 8004fda:	bf00      	nop
 8004fdc:	371c      	adds	r7, #28
 8004fde:	46bd      	mov	sp, r7
 8004fe0:	bd90      	pop	{r4, r7, pc}
 8004fe2:	bf00      	nop
 8004fe4:	20001148 	.word	0x20001148
 8004fe8:	2000114c 	.word	0x2000114c

08004fec <BSP_LCD_FillRect>:
 8004fec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ff0:	b086      	sub	sp, #24
 8004ff2:	af02      	add	r7, sp, #8
 8004ff4:	4604      	mov	r4, r0
 8004ff6:	4608      	mov	r0, r1
 8004ff8:	4611      	mov	r1, r2
 8004ffa:	461a      	mov	r2, r3
 8004ffc:	4623      	mov	r3, r4
 8004ffe:	80fb      	strh	r3, [r7, #6]
 8005000:	4603      	mov	r3, r0
 8005002:	80bb      	strh	r3, [r7, #4]
 8005004:	460b      	mov	r3, r1
 8005006:	807b      	strh	r3, [r7, #2]
 8005008:	4613      	mov	r3, r2
 800500a:	803b      	strh	r3, [r7, #0]
 800500c:	2300      	movs	r3, #0
 800500e:	60fb      	str	r3, [r7, #12]
 8005010:	4b30      	ldr	r3, [pc, #192]	; (80050d4 <BSP_LCD_FillRect+0xe8>)
 8005012:	681a      	ldr	r2, [r3, #0]
 8005014:	4930      	ldr	r1, [pc, #192]	; (80050d8 <BSP_LCD_FillRect+0xec>)
 8005016:	4613      	mov	r3, r2
 8005018:	005b      	lsls	r3, r3, #1
 800501a:	4413      	add	r3, r2
 800501c:	009b      	lsls	r3, r3, #2
 800501e:	440b      	add	r3, r1
 8005020:	681b      	ldr	r3, [r3, #0]
 8005022:	4618      	mov	r0, r3
 8005024:	f7ff fcb8 	bl	8004998 <BSP_LCD_SetTextColor>
 8005028:	4b2c      	ldr	r3, [pc, #176]	; (80050dc <BSP_LCD_FillRect+0xf0>)
 800502a:	781b      	ldrb	r3, [r3, #0]
 800502c:	2b00      	cmp	r3, #0
 800502e:	d01b      	beq.n	8005068 <BSP_LCD_FillRect+0x7c>
 8005030:	4b28      	ldr	r3, [pc, #160]	; (80050d4 <BSP_LCD_FillRect+0xe8>)
 8005032:	681b      	ldr	r3, [r3, #0]
 8005034:	4a2a      	ldr	r2, [pc, #168]	; (80050e0 <BSP_LCD_FillRect+0xf4>)
 8005036:	2134      	movs	r1, #52	; 0x34
 8005038:	fb01 f303 	mul.w	r3, r1, r3
 800503c:	4413      	add	r3, r2
 800503e:	335c      	adds	r3, #92	; 0x5c
 8005040:	681c      	ldr	r4, [r3, #0]
 8005042:	f7ff fc1d 	bl	8004880 <BSP_LCD_GetXSize>
 8005046:	4603      	mov	r3, r0
 8005048:	425b      	negs	r3, r3
 800504a:	88b9      	ldrh	r1, [r7, #4]
 800504c:	883a      	ldrh	r2, [r7, #0]
 800504e:	440a      	add	r2, r1
 8005050:	fb02 f303 	mul.w	r3, r2, r3
 8005054:	88f9      	ldrh	r1, [r7, #6]
 8005056:	887a      	ldrh	r2, [r7, #2]
 8005058:	440a      	add	r2, r1
 800505a:	1a9b      	subs	r3, r3, r2
 800505c:	f503 3396 	add.w	r3, r3, #76800	; 0x12c00
 8005060:	009b      	lsls	r3, r3, #2
 8005062:	4423      	add	r3, r4
 8005064:	60fb      	str	r3, [r7, #12]
 8005066:	e013      	b.n	8005090 <BSP_LCD_FillRect+0xa4>
 8005068:	4b1a      	ldr	r3, [pc, #104]	; (80050d4 <BSP_LCD_FillRect+0xe8>)
 800506a:	681b      	ldr	r3, [r3, #0]
 800506c:	4a1c      	ldr	r2, [pc, #112]	; (80050e0 <BSP_LCD_FillRect+0xf4>)
 800506e:	2134      	movs	r1, #52	; 0x34
 8005070:	fb01 f303 	mul.w	r3, r1, r3
 8005074:	4413      	add	r3, r2
 8005076:	335c      	adds	r3, #92	; 0x5c
 8005078:	681c      	ldr	r4, [r3, #0]
 800507a:	f7ff fc01 	bl	8004880 <BSP_LCD_GetXSize>
 800507e:	4602      	mov	r2, r0
 8005080:	88bb      	ldrh	r3, [r7, #4]
 8005082:	fb03 f202 	mul.w	r2, r3, r2
 8005086:	88fb      	ldrh	r3, [r7, #6]
 8005088:	4413      	add	r3, r2
 800508a:	009b      	lsls	r3, r3, #2
 800508c:	4423      	add	r3, r4
 800508e:	60fb      	str	r3, [r7, #12]
 8005090:	4b10      	ldr	r3, [pc, #64]	; (80050d4 <BSP_LCD_FillRect+0xe8>)
 8005092:	681c      	ldr	r4, [r3, #0]
 8005094:	68fd      	ldr	r5, [r7, #12]
 8005096:	887e      	ldrh	r6, [r7, #2]
 8005098:	f8b7 8000 	ldrh.w	r8, [r7]
 800509c:	f7ff fbf0 	bl	8004880 <BSP_LCD_GetXSize>
 80050a0:	4602      	mov	r2, r0
 80050a2:	887b      	ldrh	r3, [r7, #2]
 80050a4:	1ad1      	subs	r1, r2, r3
 80050a6:	4b0b      	ldr	r3, [pc, #44]	; (80050d4 <BSP_LCD_FillRect+0xe8>)
 80050a8:	681a      	ldr	r2, [r3, #0]
 80050aa:	480b      	ldr	r0, [pc, #44]	; (80050d8 <BSP_LCD_FillRect+0xec>)
 80050ac:	4613      	mov	r3, r2
 80050ae:	005b      	lsls	r3, r3, #1
 80050b0:	4413      	add	r3, r2
 80050b2:	009b      	lsls	r3, r3, #2
 80050b4:	4403      	add	r3, r0
 80050b6:	681b      	ldr	r3, [r3, #0]
 80050b8:	9301      	str	r3, [sp, #4]
 80050ba:	9100      	str	r1, [sp, #0]
 80050bc:	4643      	mov	r3, r8
 80050be:	4632      	mov	r2, r6
 80050c0:	4629      	mov	r1, r5
 80050c2:	4620      	mov	r0, r4
 80050c4:	f000 f9f4 	bl	80054b0 <FillBuffer>
 80050c8:	bf00      	nop
 80050ca:	3710      	adds	r7, #16
 80050cc:	46bd      	mov	sp, r7
 80050ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80050d2:	bf00      	nop
 80050d4:	20001148 	.word	0x20001148
 80050d8:	2000114c 	.word	0x2000114c
 80050dc:	20001168 	.word	0x20001168
 80050e0:	20001030 	.word	0x20001030

080050e4 <BSP_LCD_DisplayOn>:
 80050e4:	b580      	push	{r7, lr}
 80050e6:	af00      	add	r7, sp, #0
 80050e8:	4b05      	ldr	r3, [pc, #20]	; (8005100 <BSP_LCD_DisplayOn+0x1c>)
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	689b      	ldr	r3, [r3, #8]
 80050ee:	2b00      	cmp	r3, #0
 80050f0:	d003      	beq.n	80050fa <BSP_LCD_DisplayOn+0x16>
 80050f2:	4b03      	ldr	r3, [pc, #12]	; (8005100 <BSP_LCD_DisplayOn+0x1c>)
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	689b      	ldr	r3, [r3, #8]
 80050f8:	4798      	blx	r3
 80050fa:	bf00      	nop
 80050fc:	bd80      	pop	{r7, pc}
 80050fe:	bf00      	nop
 8005100:	20001164 	.word	0x20001164

08005104 <BSP_LCD_MspInit>:
 8005104:	b580      	push	{r7, lr}
 8005106:	b08e      	sub	sp, #56	; 0x38
 8005108:	af00      	add	r7, sp, #0
 800510a:	2300      	movs	r3, #0
 800510c:	623b      	str	r3, [r7, #32]
 800510e:	4b61      	ldr	r3, [pc, #388]	; (8005294 <BSP_LCD_MspInit+0x190>)
 8005110:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005112:	4a60      	ldr	r2, [pc, #384]	; (8005294 <BSP_LCD_MspInit+0x190>)
 8005114:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8005118:	6453      	str	r3, [r2, #68]	; 0x44
 800511a:	4b5e      	ldr	r3, [pc, #376]	; (8005294 <BSP_LCD_MspInit+0x190>)
 800511c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800511e:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8005122:	623b      	str	r3, [r7, #32]
 8005124:	6a3b      	ldr	r3, [r7, #32]
 8005126:	2300      	movs	r3, #0
 8005128:	61fb      	str	r3, [r7, #28]
 800512a:	4b5a      	ldr	r3, [pc, #360]	; (8005294 <BSP_LCD_MspInit+0x190>)
 800512c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800512e:	4a59      	ldr	r2, [pc, #356]	; (8005294 <BSP_LCD_MspInit+0x190>)
 8005130:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8005134:	6313      	str	r3, [r2, #48]	; 0x30
 8005136:	4b57      	ldr	r3, [pc, #348]	; (8005294 <BSP_LCD_MspInit+0x190>)
 8005138:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800513a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800513e:	61fb      	str	r3, [r7, #28]
 8005140:	69fb      	ldr	r3, [r7, #28]
 8005142:	2300      	movs	r3, #0
 8005144:	61bb      	str	r3, [r7, #24]
 8005146:	4b53      	ldr	r3, [pc, #332]	; (8005294 <BSP_LCD_MspInit+0x190>)
 8005148:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800514a:	4a52      	ldr	r2, [pc, #328]	; (8005294 <BSP_LCD_MspInit+0x190>)
 800514c:	f043 0301 	orr.w	r3, r3, #1
 8005150:	6313      	str	r3, [r2, #48]	; 0x30
 8005152:	4b50      	ldr	r3, [pc, #320]	; (8005294 <BSP_LCD_MspInit+0x190>)
 8005154:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005156:	f003 0301 	and.w	r3, r3, #1
 800515a:	61bb      	str	r3, [r7, #24]
 800515c:	69bb      	ldr	r3, [r7, #24]
 800515e:	2300      	movs	r3, #0
 8005160:	617b      	str	r3, [r7, #20]
 8005162:	4b4c      	ldr	r3, [pc, #304]	; (8005294 <BSP_LCD_MspInit+0x190>)
 8005164:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005166:	4a4b      	ldr	r2, [pc, #300]	; (8005294 <BSP_LCD_MspInit+0x190>)
 8005168:	f043 0302 	orr.w	r3, r3, #2
 800516c:	6313      	str	r3, [r2, #48]	; 0x30
 800516e:	4b49      	ldr	r3, [pc, #292]	; (8005294 <BSP_LCD_MspInit+0x190>)
 8005170:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005172:	f003 0302 	and.w	r3, r3, #2
 8005176:	617b      	str	r3, [r7, #20]
 8005178:	697b      	ldr	r3, [r7, #20]
 800517a:	2300      	movs	r3, #0
 800517c:	613b      	str	r3, [r7, #16]
 800517e:	4b45      	ldr	r3, [pc, #276]	; (8005294 <BSP_LCD_MspInit+0x190>)
 8005180:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005182:	4a44      	ldr	r2, [pc, #272]	; (8005294 <BSP_LCD_MspInit+0x190>)
 8005184:	f043 0304 	orr.w	r3, r3, #4
 8005188:	6313      	str	r3, [r2, #48]	; 0x30
 800518a:	4b42      	ldr	r3, [pc, #264]	; (8005294 <BSP_LCD_MspInit+0x190>)
 800518c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800518e:	f003 0304 	and.w	r3, r3, #4
 8005192:	613b      	str	r3, [r7, #16]
 8005194:	693b      	ldr	r3, [r7, #16]
 8005196:	2300      	movs	r3, #0
 8005198:	60fb      	str	r3, [r7, #12]
 800519a:	4b3e      	ldr	r3, [pc, #248]	; (8005294 <BSP_LCD_MspInit+0x190>)
 800519c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800519e:	4a3d      	ldr	r2, [pc, #244]	; (8005294 <BSP_LCD_MspInit+0x190>)
 80051a0:	f043 0308 	orr.w	r3, r3, #8
 80051a4:	6313      	str	r3, [r2, #48]	; 0x30
 80051a6:	4b3b      	ldr	r3, [pc, #236]	; (8005294 <BSP_LCD_MspInit+0x190>)
 80051a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80051aa:	f003 0308 	and.w	r3, r3, #8
 80051ae:	60fb      	str	r3, [r7, #12]
 80051b0:	68fb      	ldr	r3, [r7, #12]
 80051b2:	2300      	movs	r3, #0
 80051b4:	60bb      	str	r3, [r7, #8]
 80051b6:	4b37      	ldr	r3, [pc, #220]	; (8005294 <BSP_LCD_MspInit+0x190>)
 80051b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80051ba:	4a36      	ldr	r2, [pc, #216]	; (8005294 <BSP_LCD_MspInit+0x190>)
 80051bc:	f043 0320 	orr.w	r3, r3, #32
 80051c0:	6313      	str	r3, [r2, #48]	; 0x30
 80051c2:	4b34      	ldr	r3, [pc, #208]	; (8005294 <BSP_LCD_MspInit+0x190>)
 80051c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80051c6:	f003 0320 	and.w	r3, r3, #32
 80051ca:	60bb      	str	r3, [r7, #8]
 80051cc:	68bb      	ldr	r3, [r7, #8]
 80051ce:	2300      	movs	r3, #0
 80051d0:	607b      	str	r3, [r7, #4]
 80051d2:	4b30      	ldr	r3, [pc, #192]	; (8005294 <BSP_LCD_MspInit+0x190>)
 80051d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80051d6:	4a2f      	ldr	r2, [pc, #188]	; (8005294 <BSP_LCD_MspInit+0x190>)
 80051d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80051dc:	6313      	str	r3, [r2, #48]	; 0x30
 80051de:	4b2d      	ldr	r3, [pc, #180]	; (8005294 <BSP_LCD_MspInit+0x190>)
 80051e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80051e2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80051e6:	607b      	str	r3, [r7, #4]
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	f641 0358 	movw	r3, #6232	; 0x1858
 80051ee:	627b      	str	r3, [r7, #36]	; 0x24
 80051f0:	2302      	movs	r3, #2
 80051f2:	62bb      	str	r3, [r7, #40]	; 0x28
 80051f4:	2300      	movs	r3, #0
 80051f6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80051f8:	2302      	movs	r3, #2
 80051fa:	633b      	str	r3, [r7, #48]	; 0x30
 80051fc:	230e      	movs	r3, #14
 80051fe:	637b      	str	r3, [r7, #52]	; 0x34
 8005200:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005204:	4619      	mov	r1, r3
 8005206:	4824      	ldr	r0, [pc, #144]	; (8005298 <BSP_LCD_MspInit+0x194>)
 8005208:	f001 fa5c 	bl	80066c4 <HAL_GPIO_Init>
 800520c:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 8005210:	627b      	str	r3, [r7, #36]	; 0x24
 8005212:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005216:	4619      	mov	r1, r3
 8005218:	4820      	ldr	r0, [pc, #128]	; (800529c <BSP_LCD_MspInit+0x198>)
 800521a:	f001 fa53 	bl	80066c4 <HAL_GPIO_Init>
 800521e:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
 8005222:	627b      	str	r3, [r7, #36]	; 0x24
 8005224:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005228:	4619      	mov	r1, r3
 800522a:	481d      	ldr	r0, [pc, #116]	; (80052a0 <BSP_LCD_MspInit+0x19c>)
 800522c:	f001 fa4a 	bl	80066c4 <HAL_GPIO_Init>
 8005230:	2348      	movs	r3, #72	; 0x48
 8005232:	627b      	str	r3, [r7, #36]	; 0x24
 8005234:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005238:	4619      	mov	r1, r3
 800523a:	481a      	ldr	r0, [pc, #104]	; (80052a4 <BSP_LCD_MspInit+0x1a0>)
 800523c:	f001 fa42 	bl	80066c4 <HAL_GPIO_Init>
 8005240:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005244:	627b      	str	r3, [r7, #36]	; 0x24
 8005246:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800524a:	4619      	mov	r1, r3
 800524c:	4816      	ldr	r0, [pc, #88]	; (80052a8 <BSP_LCD_MspInit+0x1a4>)
 800524e:	f001 fa39 	bl	80066c4 <HAL_GPIO_Init>
 8005252:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
 8005256:	627b      	str	r3, [r7, #36]	; 0x24
 8005258:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800525c:	4619      	mov	r1, r3
 800525e:	4813      	ldr	r0, [pc, #76]	; (80052ac <BSP_LCD_MspInit+0x1a8>)
 8005260:	f001 fa30 	bl	80066c4 <HAL_GPIO_Init>
 8005264:	2303      	movs	r3, #3
 8005266:	627b      	str	r3, [r7, #36]	; 0x24
 8005268:	2309      	movs	r3, #9
 800526a:	637b      	str	r3, [r7, #52]	; 0x34
 800526c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005270:	4619      	mov	r1, r3
 8005272:	480a      	ldr	r0, [pc, #40]	; (800529c <BSP_LCD_MspInit+0x198>)
 8005274:	f001 fa26 	bl	80066c4 <HAL_GPIO_Init>
 8005278:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800527c:	627b      	str	r3, [r7, #36]	; 0x24
 800527e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005282:	4619      	mov	r1, r3
 8005284:	4809      	ldr	r0, [pc, #36]	; (80052ac <BSP_LCD_MspInit+0x1a8>)
 8005286:	f001 fa1d 	bl	80066c4 <HAL_GPIO_Init>
 800528a:	bf00      	nop
 800528c:	3738      	adds	r7, #56	; 0x38
 800528e:	46bd      	mov	sp, r7
 8005290:	bd80      	pop	{r7, pc}
 8005292:	bf00      	nop
 8005294:	40023800 	.word	0x40023800
 8005298:	40020000 	.word	0x40020000
 800529c:	40020400 	.word	0x40020400
 80052a0:	40020800 	.word	0x40020800
 80052a4:	40020c00 	.word	0x40020c00
 80052a8:	40021400 	.word	0x40021400
 80052ac:	40021800 	.word	0x40021800

080052b0 <BSP_LCD_DrawPixel>:
 80052b0:	b5b0      	push	{r4, r5, r7, lr}
 80052b2:	b082      	sub	sp, #8
 80052b4:	af00      	add	r7, sp, #0
 80052b6:	4603      	mov	r3, r0
 80052b8:	603a      	str	r2, [r7, #0]
 80052ba:	80fb      	strh	r3, [r7, #6]
 80052bc:	460b      	mov	r3, r1
 80052be:	80bb      	strh	r3, [r7, #4]
 80052c0:	4b1b      	ldr	r3, [pc, #108]	; (8005330 <BSP_LCD_DrawPixel+0x80>)
 80052c2:	781b      	ldrb	r3, [r3, #0]
 80052c4:	2b00      	cmp	r3, #0
 80052c6:	d018      	beq.n	80052fa <BSP_LCD_DrawPixel+0x4a>
 80052c8:	4b1a      	ldr	r3, [pc, #104]	; (8005334 <BSP_LCD_DrawPixel+0x84>)
 80052ca:	681b      	ldr	r3, [r3, #0]
 80052cc:	4a1a      	ldr	r2, [pc, #104]	; (8005338 <BSP_LCD_DrawPixel+0x88>)
 80052ce:	2134      	movs	r1, #52	; 0x34
 80052d0:	fb01 f303 	mul.w	r3, r1, r3
 80052d4:	4413      	add	r3, r2
 80052d6:	335c      	adds	r3, #92	; 0x5c
 80052d8:	681c      	ldr	r4, [r3, #0]
 80052da:	88fd      	ldrh	r5, [r7, #6]
 80052dc:	f7ff fad0 	bl	8004880 <BSP_LCD_GetXSize>
 80052e0:	4602      	mov	r2, r0
 80052e2:	88bb      	ldrh	r3, [r7, #4]
 80052e4:	fb02 f303 	mul.w	r3, r2, r3
 80052e8:	442b      	add	r3, r5
 80052ea:	f5c3 3396 	rsb	r3, r3, #76800	; 0x12c00
 80052ee:	009b      	lsls	r3, r3, #2
 80052f0:	4423      	add	r3, r4
 80052f2:	461a      	mov	r2, r3
 80052f4:	683b      	ldr	r3, [r7, #0]
 80052f6:	6013      	str	r3, [r2, #0]
 80052f8:	e015      	b.n	8005326 <BSP_LCD_DrawPixel+0x76>
 80052fa:	4b0e      	ldr	r3, [pc, #56]	; (8005334 <BSP_LCD_DrawPixel+0x84>)
 80052fc:	681b      	ldr	r3, [r3, #0]
 80052fe:	4a0e      	ldr	r2, [pc, #56]	; (8005338 <BSP_LCD_DrawPixel+0x88>)
 8005300:	2134      	movs	r1, #52	; 0x34
 8005302:	fb01 f303 	mul.w	r3, r1, r3
 8005306:	4413      	add	r3, r2
 8005308:	335c      	adds	r3, #92	; 0x5c
 800530a:	681c      	ldr	r4, [r3, #0]
 800530c:	88bd      	ldrh	r5, [r7, #4]
 800530e:	f7ff fab7 	bl	8004880 <BSP_LCD_GetXSize>
 8005312:	4603      	mov	r3, r0
 8005314:	fb03 f205 	mul.w	r2, r3, r5
 8005318:	88fb      	ldrh	r3, [r7, #6]
 800531a:	4413      	add	r3, r2
 800531c:	009b      	lsls	r3, r3, #2
 800531e:	4423      	add	r3, r4
 8005320:	461a      	mov	r2, r3
 8005322:	683b      	ldr	r3, [r7, #0]
 8005324:	6013      	str	r3, [r2, #0]
 8005326:	bf00      	nop
 8005328:	3708      	adds	r7, #8
 800532a:	46bd      	mov	sp, r7
 800532c:	bdb0      	pop	{r4, r5, r7, pc}
 800532e:	bf00      	nop
 8005330:	20001168 	.word	0x20001168
 8005334:	20001148 	.word	0x20001148
 8005338:	20001030 	.word	0x20001030

0800533c <DrawChar>:
 800533c:	b580      	push	{r7, lr}
 800533e:	b088      	sub	sp, #32
 8005340:	af00      	add	r7, sp, #0
 8005342:	4603      	mov	r3, r0
 8005344:	603a      	str	r2, [r7, #0]
 8005346:	80fb      	strh	r3, [r7, #6]
 8005348:	460b      	mov	r3, r1
 800534a:	80bb      	strh	r3, [r7, #4]
 800534c:	2300      	movs	r3, #0
 800534e:	61fb      	str	r3, [r7, #28]
 8005350:	2300      	movs	r3, #0
 8005352:	61bb      	str	r3, [r7, #24]
 8005354:	2300      	movs	r3, #0
 8005356:	617b      	str	r3, [r7, #20]
 8005358:	4b53      	ldr	r3, [pc, #332]	; (80054a8 <DrawChar+0x16c>)
 800535a:	681a      	ldr	r2, [r3, #0]
 800535c:	4953      	ldr	r1, [pc, #332]	; (80054ac <DrawChar+0x170>)
 800535e:	4613      	mov	r3, r2
 8005360:	005b      	lsls	r3, r3, #1
 8005362:	4413      	add	r3, r2
 8005364:	009b      	lsls	r3, r3, #2
 8005366:	440b      	add	r3, r1
 8005368:	3308      	adds	r3, #8
 800536a:	681b      	ldr	r3, [r3, #0]
 800536c:	88db      	ldrh	r3, [r3, #6]
 800536e:	827b      	strh	r3, [r7, #18]
 8005370:	4b4d      	ldr	r3, [pc, #308]	; (80054a8 <DrawChar+0x16c>)
 8005372:	681a      	ldr	r2, [r3, #0]
 8005374:	494d      	ldr	r1, [pc, #308]	; (80054ac <DrawChar+0x170>)
 8005376:	4613      	mov	r3, r2
 8005378:	005b      	lsls	r3, r3, #1
 800537a:	4413      	add	r3, r2
 800537c:	009b      	lsls	r3, r3, #2
 800537e:	440b      	add	r3, r1
 8005380:	3308      	adds	r3, #8
 8005382:	681b      	ldr	r3, [r3, #0]
 8005384:	889b      	ldrh	r3, [r3, #4]
 8005386:	823b      	strh	r3, [r7, #16]
 8005388:	8a3b      	ldrh	r3, [r7, #16]
 800538a:	3307      	adds	r3, #7
 800538c:	2b00      	cmp	r3, #0
 800538e:	da00      	bge.n	8005392 <DrawChar+0x56>
 8005390:	3307      	adds	r3, #7
 8005392:	10db      	asrs	r3, r3, #3
 8005394:	b2db      	uxtb	r3, r3
 8005396:	00db      	lsls	r3, r3, #3
 8005398:	b2da      	uxtb	r2, r3
 800539a:	8a3b      	ldrh	r3, [r7, #16]
 800539c:	b2db      	uxtb	r3, r3
 800539e:	1ad3      	subs	r3, r2, r3
 80053a0:	73fb      	strb	r3, [r7, #15]
 80053a2:	2300      	movs	r3, #0
 80053a4:	61fb      	str	r3, [r7, #28]
 80053a6:	e076      	b.n	8005496 <DrawChar+0x15a>
 80053a8:	8a3b      	ldrh	r3, [r7, #16]
 80053aa:	3307      	adds	r3, #7
 80053ac:	2b00      	cmp	r3, #0
 80053ae:	da00      	bge.n	80053b2 <DrawChar+0x76>
 80053b0:	3307      	adds	r3, #7
 80053b2:	10db      	asrs	r3, r3, #3
 80053b4:	461a      	mov	r2, r3
 80053b6:	69fb      	ldr	r3, [r7, #28]
 80053b8:	fb02 f303 	mul.w	r3, r2, r3
 80053bc:	683a      	ldr	r2, [r7, #0]
 80053be:	4413      	add	r3, r2
 80053c0:	60bb      	str	r3, [r7, #8]
 80053c2:	8a3b      	ldrh	r3, [r7, #16]
 80053c4:	3307      	adds	r3, #7
 80053c6:	2b00      	cmp	r3, #0
 80053c8:	da00      	bge.n	80053cc <DrawChar+0x90>
 80053ca:	3307      	adds	r3, #7
 80053cc:	10db      	asrs	r3, r3, #3
 80053ce:	2b01      	cmp	r3, #1
 80053d0:	d002      	beq.n	80053d8 <DrawChar+0x9c>
 80053d2:	2b02      	cmp	r3, #2
 80053d4:	d004      	beq.n	80053e0 <DrawChar+0xa4>
 80053d6:	e00c      	b.n	80053f2 <DrawChar+0xb6>
 80053d8:	68bb      	ldr	r3, [r7, #8]
 80053da:	781b      	ldrb	r3, [r3, #0]
 80053dc:	617b      	str	r3, [r7, #20]
 80053de:	e016      	b.n	800540e <DrawChar+0xd2>
 80053e0:	68bb      	ldr	r3, [r7, #8]
 80053e2:	781b      	ldrb	r3, [r3, #0]
 80053e4:	021b      	lsls	r3, r3, #8
 80053e6:	68ba      	ldr	r2, [r7, #8]
 80053e8:	3201      	adds	r2, #1
 80053ea:	7812      	ldrb	r2, [r2, #0]
 80053ec:	4313      	orrs	r3, r2
 80053ee:	617b      	str	r3, [r7, #20]
 80053f0:	e00d      	b.n	800540e <DrawChar+0xd2>
 80053f2:	68bb      	ldr	r3, [r7, #8]
 80053f4:	781b      	ldrb	r3, [r3, #0]
 80053f6:	041a      	lsls	r2, r3, #16
 80053f8:	68bb      	ldr	r3, [r7, #8]
 80053fa:	3301      	adds	r3, #1
 80053fc:	781b      	ldrb	r3, [r3, #0]
 80053fe:	021b      	lsls	r3, r3, #8
 8005400:	4313      	orrs	r3, r2
 8005402:	68ba      	ldr	r2, [r7, #8]
 8005404:	3202      	adds	r2, #2
 8005406:	7812      	ldrb	r2, [r2, #0]
 8005408:	4313      	orrs	r3, r2
 800540a:	617b      	str	r3, [r7, #20]
 800540c:	bf00      	nop
 800540e:	2300      	movs	r3, #0
 8005410:	61bb      	str	r3, [r7, #24]
 8005412:	e036      	b.n	8005482 <DrawChar+0x146>
 8005414:	8a3a      	ldrh	r2, [r7, #16]
 8005416:	69bb      	ldr	r3, [r7, #24]
 8005418:	1ad2      	subs	r2, r2, r3
 800541a:	7bfb      	ldrb	r3, [r7, #15]
 800541c:	4413      	add	r3, r2
 800541e:	3b01      	subs	r3, #1
 8005420:	2201      	movs	r2, #1
 8005422:	fa02 f303 	lsl.w	r3, r2, r3
 8005426:	461a      	mov	r2, r3
 8005428:	697b      	ldr	r3, [r7, #20]
 800542a:	4013      	ands	r3, r2
 800542c:	2b00      	cmp	r3, #0
 800542e:	d012      	beq.n	8005456 <DrawChar+0x11a>
 8005430:	69bb      	ldr	r3, [r7, #24]
 8005432:	b29a      	uxth	r2, r3
 8005434:	88fb      	ldrh	r3, [r7, #6]
 8005436:	4413      	add	r3, r2
 8005438:	b298      	uxth	r0, r3
 800543a:	4b1b      	ldr	r3, [pc, #108]	; (80054a8 <DrawChar+0x16c>)
 800543c:	681a      	ldr	r2, [r3, #0]
 800543e:	491b      	ldr	r1, [pc, #108]	; (80054ac <DrawChar+0x170>)
 8005440:	4613      	mov	r3, r2
 8005442:	005b      	lsls	r3, r3, #1
 8005444:	4413      	add	r3, r2
 8005446:	009b      	lsls	r3, r3, #2
 8005448:	440b      	add	r3, r1
 800544a:	681a      	ldr	r2, [r3, #0]
 800544c:	88bb      	ldrh	r3, [r7, #4]
 800544e:	4619      	mov	r1, r3
 8005450:	f7ff ff2e 	bl	80052b0 <BSP_LCD_DrawPixel>
 8005454:	e012      	b.n	800547c <DrawChar+0x140>
 8005456:	69bb      	ldr	r3, [r7, #24]
 8005458:	b29a      	uxth	r2, r3
 800545a:	88fb      	ldrh	r3, [r7, #6]
 800545c:	4413      	add	r3, r2
 800545e:	b298      	uxth	r0, r3
 8005460:	4b11      	ldr	r3, [pc, #68]	; (80054a8 <DrawChar+0x16c>)
 8005462:	681a      	ldr	r2, [r3, #0]
 8005464:	4911      	ldr	r1, [pc, #68]	; (80054ac <DrawChar+0x170>)
 8005466:	4613      	mov	r3, r2
 8005468:	005b      	lsls	r3, r3, #1
 800546a:	4413      	add	r3, r2
 800546c:	009b      	lsls	r3, r3, #2
 800546e:	440b      	add	r3, r1
 8005470:	3304      	adds	r3, #4
 8005472:	681a      	ldr	r2, [r3, #0]
 8005474:	88bb      	ldrh	r3, [r7, #4]
 8005476:	4619      	mov	r1, r3
 8005478:	f7ff ff1a 	bl	80052b0 <BSP_LCD_DrawPixel>
 800547c:	69bb      	ldr	r3, [r7, #24]
 800547e:	3301      	adds	r3, #1
 8005480:	61bb      	str	r3, [r7, #24]
 8005482:	8a3b      	ldrh	r3, [r7, #16]
 8005484:	69ba      	ldr	r2, [r7, #24]
 8005486:	429a      	cmp	r2, r3
 8005488:	d3c4      	bcc.n	8005414 <DrawChar+0xd8>
 800548a:	88bb      	ldrh	r3, [r7, #4]
 800548c:	3301      	adds	r3, #1
 800548e:	80bb      	strh	r3, [r7, #4]
 8005490:	69fb      	ldr	r3, [r7, #28]
 8005492:	3301      	adds	r3, #1
 8005494:	61fb      	str	r3, [r7, #28]
 8005496:	8a7b      	ldrh	r3, [r7, #18]
 8005498:	69fa      	ldr	r2, [r7, #28]
 800549a:	429a      	cmp	r2, r3
 800549c:	d384      	bcc.n	80053a8 <DrawChar+0x6c>
 800549e:	bf00      	nop
 80054a0:	bf00      	nop
 80054a2:	3720      	adds	r7, #32
 80054a4:	46bd      	mov	sp, r7
 80054a6:	bd80      	pop	{r7, pc}
 80054a8:	20001148 	.word	0x20001148
 80054ac:	2000114c 	.word	0x2000114c

080054b0 <FillBuffer>:
 80054b0:	b580      	push	{r7, lr}
 80054b2:	b086      	sub	sp, #24
 80054b4:	af02      	add	r7, sp, #8
 80054b6:	60f8      	str	r0, [r7, #12]
 80054b8:	60b9      	str	r1, [r7, #8]
 80054ba:	607a      	str	r2, [r7, #4]
 80054bc:	603b      	str	r3, [r7, #0]
 80054be:	4b16      	ldr	r3, [pc, #88]	; (8005518 <FillBuffer+0x68>)
 80054c0:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80054c4:	605a      	str	r2, [r3, #4]
 80054c6:	4b14      	ldr	r3, [pc, #80]	; (8005518 <FillBuffer+0x68>)
 80054c8:	2200      	movs	r2, #0
 80054ca:	609a      	str	r2, [r3, #8]
 80054cc:	4a12      	ldr	r2, [pc, #72]	; (8005518 <FillBuffer+0x68>)
 80054ce:	69bb      	ldr	r3, [r7, #24]
 80054d0:	60d3      	str	r3, [r2, #12]
 80054d2:	4b11      	ldr	r3, [pc, #68]	; (8005518 <FillBuffer+0x68>)
 80054d4:	4a11      	ldr	r2, [pc, #68]	; (800551c <FillBuffer+0x6c>)
 80054d6:	601a      	str	r2, [r3, #0]
 80054d8:	480f      	ldr	r0, [pc, #60]	; (8005518 <FillBuffer+0x68>)
 80054da:	f000 fe5d 	bl	8006198 <HAL_DMA2D_Init>
 80054de:	4603      	mov	r3, r0
 80054e0:	2b00      	cmp	r3, #0
 80054e2:	d115      	bne.n	8005510 <FillBuffer+0x60>
 80054e4:	68f9      	ldr	r1, [r7, #12]
 80054e6:	480c      	ldr	r0, [pc, #48]	; (8005518 <FillBuffer+0x68>)
 80054e8:	f000 ffbe 	bl	8006468 <HAL_DMA2D_ConfigLayer>
 80054ec:	4603      	mov	r3, r0
 80054ee:	2b00      	cmp	r3, #0
 80054f0:	d10e      	bne.n	8005510 <FillBuffer+0x60>
 80054f2:	68ba      	ldr	r2, [r7, #8]
 80054f4:	683b      	ldr	r3, [r7, #0]
 80054f6:	9300      	str	r3, [sp, #0]
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	69f9      	ldr	r1, [r7, #28]
 80054fc:	4806      	ldr	r0, [pc, #24]	; (8005518 <FillBuffer+0x68>)
 80054fe:	f000 fe9e 	bl	800623e <HAL_DMA2D_Start>
 8005502:	4603      	mov	r3, r0
 8005504:	2b00      	cmp	r3, #0
 8005506:	d103      	bne.n	8005510 <FillBuffer+0x60>
 8005508:	210a      	movs	r1, #10
 800550a:	4803      	ldr	r0, [pc, #12]	; (8005518 <FillBuffer+0x68>)
 800550c:	f000 fec2 	bl	8006294 <HAL_DMA2D_PollForTransfer>
 8005510:	bf00      	nop
 8005512:	3710      	adds	r7, #16
 8005514:	46bd      	mov	sp, r7
 8005516:	bd80      	pop	{r7, pc}
 8005518:	200010d8 	.word	0x200010d8
 800551c:	4002b000 	.word	0x4002b000

08005520 <BSP_SDRAM_Init>:
 8005520:	b580      	push	{r7, lr}
 8005522:	af00      	add	r7, sp, #0
 8005524:	4b29      	ldr	r3, [pc, #164]	; (80055cc <BSP_SDRAM_Init+0xac>)
 8005526:	4a2a      	ldr	r2, [pc, #168]	; (80055d0 <BSP_SDRAM_Init+0xb0>)
 8005528:	601a      	str	r2, [r3, #0]
 800552a:	4b2a      	ldr	r3, [pc, #168]	; (80055d4 <BSP_SDRAM_Init+0xb4>)
 800552c:	2202      	movs	r2, #2
 800552e:	601a      	str	r2, [r3, #0]
 8005530:	4b28      	ldr	r3, [pc, #160]	; (80055d4 <BSP_SDRAM_Init+0xb4>)
 8005532:	2207      	movs	r2, #7
 8005534:	605a      	str	r2, [r3, #4]
 8005536:	4b27      	ldr	r3, [pc, #156]	; (80055d4 <BSP_SDRAM_Init+0xb4>)
 8005538:	2204      	movs	r2, #4
 800553a:	609a      	str	r2, [r3, #8]
 800553c:	4b25      	ldr	r3, [pc, #148]	; (80055d4 <BSP_SDRAM_Init+0xb4>)
 800553e:	2207      	movs	r2, #7
 8005540:	60da      	str	r2, [r3, #12]
 8005542:	4b24      	ldr	r3, [pc, #144]	; (80055d4 <BSP_SDRAM_Init+0xb4>)
 8005544:	2202      	movs	r2, #2
 8005546:	611a      	str	r2, [r3, #16]
 8005548:	4b22      	ldr	r3, [pc, #136]	; (80055d4 <BSP_SDRAM_Init+0xb4>)
 800554a:	2202      	movs	r2, #2
 800554c:	615a      	str	r2, [r3, #20]
 800554e:	4b21      	ldr	r3, [pc, #132]	; (80055d4 <BSP_SDRAM_Init+0xb4>)
 8005550:	2202      	movs	r2, #2
 8005552:	619a      	str	r2, [r3, #24]
 8005554:	4b1d      	ldr	r3, [pc, #116]	; (80055cc <BSP_SDRAM_Init+0xac>)
 8005556:	2201      	movs	r2, #1
 8005558:	605a      	str	r2, [r3, #4]
 800555a:	4b1c      	ldr	r3, [pc, #112]	; (80055cc <BSP_SDRAM_Init+0xac>)
 800555c:	2200      	movs	r2, #0
 800555e:	609a      	str	r2, [r3, #8]
 8005560:	4b1a      	ldr	r3, [pc, #104]	; (80055cc <BSP_SDRAM_Init+0xac>)
 8005562:	2204      	movs	r2, #4
 8005564:	60da      	str	r2, [r3, #12]
 8005566:	4b19      	ldr	r3, [pc, #100]	; (80055cc <BSP_SDRAM_Init+0xac>)
 8005568:	2210      	movs	r2, #16
 800556a:	611a      	str	r2, [r3, #16]
 800556c:	4b17      	ldr	r3, [pc, #92]	; (80055cc <BSP_SDRAM_Init+0xac>)
 800556e:	2240      	movs	r2, #64	; 0x40
 8005570:	615a      	str	r2, [r3, #20]
 8005572:	4b16      	ldr	r3, [pc, #88]	; (80055cc <BSP_SDRAM_Init+0xac>)
 8005574:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8005578:	619a      	str	r2, [r3, #24]
 800557a:	4b14      	ldr	r3, [pc, #80]	; (80055cc <BSP_SDRAM_Init+0xac>)
 800557c:	2200      	movs	r2, #0
 800557e:	61da      	str	r2, [r3, #28]
 8005580:	4b12      	ldr	r3, [pc, #72]	; (80055cc <BSP_SDRAM_Init+0xac>)
 8005582:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8005586:	621a      	str	r2, [r3, #32]
 8005588:	4b10      	ldr	r3, [pc, #64]	; (80055cc <BSP_SDRAM_Init+0xac>)
 800558a:	2200      	movs	r2, #0
 800558c:	625a      	str	r2, [r3, #36]	; 0x24
 800558e:	4b0f      	ldr	r3, [pc, #60]	; (80055cc <BSP_SDRAM_Init+0xac>)
 8005590:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8005594:	629a      	str	r2, [r3, #40]	; 0x28
 8005596:	2100      	movs	r1, #0
 8005598:	480c      	ldr	r0, [pc, #48]	; (80055cc <BSP_SDRAM_Init+0xac>)
 800559a:	f000 f87f 	bl	800569c <BSP_SDRAM_MspInit>
 800559e:	490d      	ldr	r1, [pc, #52]	; (80055d4 <BSP_SDRAM_Init+0xb4>)
 80055a0:	480a      	ldr	r0, [pc, #40]	; (80055cc <BSP_SDRAM_Init+0xac>)
 80055a2:	f003 fb91 	bl	8008cc8 <HAL_SDRAM_Init>
 80055a6:	4603      	mov	r3, r0
 80055a8:	2b00      	cmp	r3, #0
 80055aa:	d003      	beq.n	80055b4 <BSP_SDRAM_Init+0x94>
 80055ac:	4b0a      	ldr	r3, [pc, #40]	; (80055d8 <BSP_SDRAM_Init+0xb8>)
 80055ae:	2201      	movs	r2, #1
 80055b0:	701a      	strb	r2, [r3, #0]
 80055b2:	e002      	b.n	80055ba <BSP_SDRAM_Init+0x9a>
 80055b4:	4b08      	ldr	r3, [pc, #32]	; (80055d8 <BSP_SDRAM_Init+0xb8>)
 80055b6:	2200      	movs	r2, #0
 80055b8:	701a      	strb	r2, [r3, #0]
 80055ba:	f240 506a 	movw	r0, #1386	; 0x56a
 80055be:	f000 f80d 	bl	80055dc <BSP_SDRAM_Initialization_sequence>
 80055c2:	4b05      	ldr	r3, [pc, #20]	; (80055d8 <BSP_SDRAM_Init+0xb8>)
 80055c4:	781b      	ldrb	r3, [r3, #0]
 80055c6:	4618      	mov	r0, r3
 80055c8:	bd80      	pop	{r7, pc}
 80055ca:	bf00      	nop
 80055cc:	2000116c 	.word	0x2000116c
 80055d0:	a0000140 	.word	0xa0000140
 80055d4:	200011a0 	.word	0x200011a0
 80055d8:	200000f0 	.word	0x200000f0

080055dc <BSP_SDRAM_Initialization_sequence>:
 80055dc:	b580      	push	{r7, lr}
 80055de:	b084      	sub	sp, #16
 80055e0:	af00      	add	r7, sp, #0
 80055e2:	6078      	str	r0, [r7, #4]
 80055e4:	2300      	movs	r3, #0
 80055e6:	60fb      	str	r3, [r7, #12]
 80055e8:	4b2a      	ldr	r3, [pc, #168]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 80055ea:	2201      	movs	r2, #1
 80055ec:	601a      	str	r2, [r3, #0]
 80055ee:	4b29      	ldr	r3, [pc, #164]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 80055f0:	2208      	movs	r2, #8
 80055f2:	605a      	str	r2, [r3, #4]
 80055f4:	4b27      	ldr	r3, [pc, #156]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 80055f6:	2201      	movs	r2, #1
 80055f8:	609a      	str	r2, [r3, #8]
 80055fa:	4b26      	ldr	r3, [pc, #152]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 80055fc:	2200      	movs	r2, #0
 80055fe:	60da      	str	r2, [r3, #12]
 8005600:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005604:	4923      	ldr	r1, [pc, #140]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005606:	4824      	ldr	r0, [pc, #144]	; (8005698 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8005608:	f003 fb9c 	bl	8008d44 <HAL_SDRAM_SendCommand>
 800560c:	2001      	movs	r0, #1
 800560e:	f000 facf 	bl	8005bb0 <HAL_Delay>
 8005612:	4b20      	ldr	r3, [pc, #128]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005614:	2202      	movs	r2, #2
 8005616:	601a      	str	r2, [r3, #0]
 8005618:	4b1e      	ldr	r3, [pc, #120]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800561a:	2208      	movs	r2, #8
 800561c:	605a      	str	r2, [r3, #4]
 800561e:	4b1d      	ldr	r3, [pc, #116]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005620:	2201      	movs	r2, #1
 8005622:	609a      	str	r2, [r3, #8]
 8005624:	4b1b      	ldr	r3, [pc, #108]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005626:	2200      	movs	r2, #0
 8005628:	60da      	str	r2, [r3, #12]
 800562a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800562e:	4919      	ldr	r1, [pc, #100]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005630:	4819      	ldr	r0, [pc, #100]	; (8005698 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8005632:	f003 fb87 	bl	8008d44 <HAL_SDRAM_SendCommand>
 8005636:	4b17      	ldr	r3, [pc, #92]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005638:	2203      	movs	r2, #3
 800563a:	601a      	str	r2, [r3, #0]
 800563c:	4b15      	ldr	r3, [pc, #84]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800563e:	2208      	movs	r2, #8
 8005640:	605a      	str	r2, [r3, #4]
 8005642:	4b14      	ldr	r3, [pc, #80]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005644:	2204      	movs	r2, #4
 8005646:	609a      	str	r2, [r3, #8]
 8005648:	4b12      	ldr	r3, [pc, #72]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800564a:	2200      	movs	r2, #0
 800564c:	60da      	str	r2, [r3, #12]
 800564e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005652:	4910      	ldr	r1, [pc, #64]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005654:	4810      	ldr	r0, [pc, #64]	; (8005698 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8005656:	f003 fb75 	bl	8008d44 <HAL_SDRAM_SendCommand>
 800565a:	f44f 730c 	mov.w	r3, #560	; 0x230
 800565e:	60fb      	str	r3, [r7, #12]
 8005660:	4b0c      	ldr	r3, [pc, #48]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005662:	2204      	movs	r2, #4
 8005664:	601a      	str	r2, [r3, #0]
 8005666:	4b0b      	ldr	r3, [pc, #44]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005668:	2208      	movs	r2, #8
 800566a:	605a      	str	r2, [r3, #4]
 800566c:	4b09      	ldr	r3, [pc, #36]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800566e:	2201      	movs	r2, #1
 8005670:	609a      	str	r2, [r3, #8]
 8005672:	68fb      	ldr	r3, [r7, #12]
 8005674:	4a07      	ldr	r2, [pc, #28]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005676:	60d3      	str	r3, [r2, #12]
 8005678:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800567c:	4905      	ldr	r1, [pc, #20]	; (8005694 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800567e:	4806      	ldr	r0, [pc, #24]	; (8005698 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8005680:	f003 fb60 	bl	8008d44 <HAL_SDRAM_SendCommand>
 8005684:	6879      	ldr	r1, [r7, #4]
 8005686:	4804      	ldr	r0, [pc, #16]	; (8005698 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8005688:	f003 fb87 	bl	8008d9a <HAL_SDRAM_ProgramRefreshRate>
 800568c:	bf00      	nop
 800568e:	3710      	adds	r7, #16
 8005690:	46bd      	mov	sp, r7
 8005692:	bd80      	pop	{r7, pc}
 8005694:	200011bc 	.word	0x200011bc
 8005698:	2000116c 	.word	0x2000116c

0800569c <BSP_SDRAM_MspInit>:
 800569c:	b580      	push	{r7, lr}
 800569e:	b090      	sub	sp, #64	; 0x40
 80056a0:	af00      	add	r7, sp, #0
 80056a2:	6078      	str	r0, [r7, #4]
 80056a4:	6039      	str	r1, [r7, #0]
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	2b00      	cmp	r3, #0
 80056aa:	f000 80ec 	beq.w	8005886 <BSP_SDRAM_MspInit+0x1ea>
 80056ae:	2300      	movs	r3, #0
 80056b0:	62bb      	str	r3, [r7, #40]	; 0x28
 80056b2:	4b77      	ldr	r3, [pc, #476]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 80056b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80056b6:	4a76      	ldr	r2, [pc, #472]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 80056b8:	f043 0301 	orr.w	r3, r3, #1
 80056bc:	6393      	str	r3, [r2, #56]	; 0x38
 80056be:	4b74      	ldr	r3, [pc, #464]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 80056c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80056c2:	f003 0301 	and.w	r3, r3, #1
 80056c6:	62bb      	str	r3, [r7, #40]	; 0x28
 80056c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80056ca:	2300      	movs	r3, #0
 80056cc:	627b      	str	r3, [r7, #36]	; 0x24
 80056ce:	4b70      	ldr	r3, [pc, #448]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 80056d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80056d2:	4a6f      	ldr	r2, [pc, #444]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 80056d4:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80056d8:	6313      	str	r3, [r2, #48]	; 0x30
 80056da:	4b6d      	ldr	r3, [pc, #436]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 80056dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80056de:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80056e2:	627b      	str	r3, [r7, #36]	; 0x24
 80056e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80056e6:	2300      	movs	r3, #0
 80056e8:	623b      	str	r3, [r7, #32]
 80056ea:	4b69      	ldr	r3, [pc, #420]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 80056ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80056ee:	4a68      	ldr	r2, [pc, #416]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 80056f0:	f043 0302 	orr.w	r3, r3, #2
 80056f4:	6313      	str	r3, [r2, #48]	; 0x30
 80056f6:	4b66      	ldr	r3, [pc, #408]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 80056f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80056fa:	f003 0302 	and.w	r3, r3, #2
 80056fe:	623b      	str	r3, [r7, #32]
 8005700:	6a3b      	ldr	r3, [r7, #32]
 8005702:	2300      	movs	r3, #0
 8005704:	61fb      	str	r3, [r7, #28]
 8005706:	4b62      	ldr	r3, [pc, #392]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 8005708:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800570a:	4a61      	ldr	r2, [pc, #388]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 800570c:	f043 0304 	orr.w	r3, r3, #4
 8005710:	6313      	str	r3, [r2, #48]	; 0x30
 8005712:	4b5f      	ldr	r3, [pc, #380]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 8005714:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005716:	f003 0304 	and.w	r3, r3, #4
 800571a:	61fb      	str	r3, [r7, #28]
 800571c:	69fb      	ldr	r3, [r7, #28]
 800571e:	2300      	movs	r3, #0
 8005720:	61bb      	str	r3, [r7, #24]
 8005722:	4b5b      	ldr	r3, [pc, #364]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 8005724:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005726:	4a5a      	ldr	r2, [pc, #360]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 8005728:	f043 0308 	orr.w	r3, r3, #8
 800572c:	6313      	str	r3, [r2, #48]	; 0x30
 800572e:	4b58      	ldr	r3, [pc, #352]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 8005730:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005732:	f003 0308 	and.w	r3, r3, #8
 8005736:	61bb      	str	r3, [r7, #24]
 8005738:	69bb      	ldr	r3, [r7, #24]
 800573a:	2300      	movs	r3, #0
 800573c:	617b      	str	r3, [r7, #20]
 800573e:	4b54      	ldr	r3, [pc, #336]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 8005740:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005742:	4a53      	ldr	r2, [pc, #332]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 8005744:	f043 0310 	orr.w	r3, r3, #16
 8005748:	6313      	str	r3, [r2, #48]	; 0x30
 800574a:	4b51      	ldr	r3, [pc, #324]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 800574c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800574e:	f003 0310 	and.w	r3, r3, #16
 8005752:	617b      	str	r3, [r7, #20]
 8005754:	697b      	ldr	r3, [r7, #20]
 8005756:	2300      	movs	r3, #0
 8005758:	613b      	str	r3, [r7, #16]
 800575a:	4b4d      	ldr	r3, [pc, #308]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 800575c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800575e:	4a4c      	ldr	r2, [pc, #304]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 8005760:	f043 0320 	orr.w	r3, r3, #32
 8005764:	6313      	str	r3, [r2, #48]	; 0x30
 8005766:	4b4a      	ldr	r3, [pc, #296]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 8005768:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800576a:	f003 0320 	and.w	r3, r3, #32
 800576e:	613b      	str	r3, [r7, #16]
 8005770:	693b      	ldr	r3, [r7, #16]
 8005772:	2300      	movs	r3, #0
 8005774:	60fb      	str	r3, [r7, #12]
 8005776:	4b46      	ldr	r3, [pc, #280]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 8005778:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800577a:	4a45      	ldr	r2, [pc, #276]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 800577c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005780:	6313      	str	r3, [r2, #48]	; 0x30
 8005782:	4b43      	ldr	r3, [pc, #268]	; (8005890 <BSP_SDRAM_MspInit+0x1f4>)
 8005784:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005786:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800578a:	60fb      	str	r3, [r7, #12]
 800578c:	68fb      	ldr	r3, [r7, #12]
 800578e:	2302      	movs	r3, #2
 8005790:	633b      	str	r3, [r7, #48]	; 0x30
 8005792:	2302      	movs	r3, #2
 8005794:	63bb      	str	r3, [r7, #56]	; 0x38
 8005796:	2300      	movs	r3, #0
 8005798:	637b      	str	r3, [r7, #52]	; 0x34
 800579a:	230c      	movs	r3, #12
 800579c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800579e:	2360      	movs	r3, #96	; 0x60
 80057a0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80057a2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80057a6:	4619      	mov	r1, r3
 80057a8:	483a      	ldr	r0, [pc, #232]	; (8005894 <BSP_SDRAM_MspInit+0x1f8>)
 80057aa:	f000 ff8b 	bl	80066c4 <HAL_GPIO_Init>
 80057ae:	2301      	movs	r3, #1
 80057b0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80057b2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80057b6:	4619      	mov	r1, r3
 80057b8:	4837      	ldr	r0, [pc, #220]	; (8005898 <BSP_SDRAM_MspInit+0x1fc>)
 80057ba:	f000 ff83 	bl	80066c4 <HAL_GPIO_Init>
 80057be:	f24c 7303 	movw	r3, #50947	; 0xc703
 80057c2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80057c4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80057c8:	4619      	mov	r1, r3
 80057ca:	4834      	ldr	r0, [pc, #208]	; (800589c <BSP_SDRAM_MspInit+0x200>)
 80057cc:	f000 ff7a 	bl	80066c4 <HAL_GPIO_Init>
 80057d0:	f64f 7383 	movw	r3, #65411	; 0xff83
 80057d4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80057d6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80057da:	4619      	mov	r1, r3
 80057dc:	4830      	ldr	r0, [pc, #192]	; (80058a0 <BSP_SDRAM_MspInit+0x204>)
 80057de:	f000 ff71 	bl	80066c4 <HAL_GPIO_Init>
 80057e2:	f64f 033f 	movw	r3, #63551	; 0xf83f
 80057e6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80057e8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80057ec:	4619      	mov	r1, r3
 80057ee:	482d      	ldr	r0, [pc, #180]	; (80058a4 <BSP_SDRAM_MspInit+0x208>)
 80057f0:	f000 ff68 	bl	80066c4 <HAL_GPIO_Init>
 80057f4:	f248 1333 	movw	r3, #33075	; 0x8133
 80057f8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80057fa:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80057fe:	4619      	mov	r1, r3
 8005800:	4829      	ldr	r0, [pc, #164]	; (80058a8 <BSP_SDRAM_MspInit+0x20c>)
 8005802:	f000 ff5f 	bl	80066c4 <HAL_GPIO_Init>
 8005806:	4b29      	ldr	r3, [pc, #164]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 8005808:	2200      	movs	r2, #0
 800580a:	605a      	str	r2, [r3, #4]
 800580c:	4b27      	ldr	r3, [pc, #156]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 800580e:	2280      	movs	r2, #128	; 0x80
 8005810:	609a      	str	r2, [r3, #8]
 8005812:	4b26      	ldr	r3, [pc, #152]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 8005814:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005818:	60da      	str	r2, [r3, #12]
 800581a:	4b24      	ldr	r3, [pc, #144]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 800581c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8005820:	611a      	str	r2, [r3, #16]
 8005822:	4b22      	ldr	r3, [pc, #136]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 8005824:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8005828:	615a      	str	r2, [r3, #20]
 800582a:	4b20      	ldr	r3, [pc, #128]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 800582c:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8005830:	619a      	str	r2, [r3, #24]
 8005832:	4b1e      	ldr	r3, [pc, #120]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 8005834:	2200      	movs	r2, #0
 8005836:	61da      	str	r2, [r3, #28]
 8005838:	4b1c      	ldr	r3, [pc, #112]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 800583a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800583e:	621a      	str	r2, [r3, #32]
 8005840:	4b1a      	ldr	r3, [pc, #104]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 8005842:	2200      	movs	r2, #0
 8005844:	625a      	str	r2, [r3, #36]	; 0x24
 8005846:	4b19      	ldr	r3, [pc, #100]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 8005848:	2203      	movs	r2, #3
 800584a:	629a      	str	r2, [r3, #40]	; 0x28
 800584c:	4b17      	ldr	r3, [pc, #92]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 800584e:	2200      	movs	r2, #0
 8005850:	62da      	str	r2, [r3, #44]	; 0x2c
 8005852:	4b16      	ldr	r3, [pc, #88]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 8005854:	2200      	movs	r2, #0
 8005856:	631a      	str	r2, [r3, #48]	; 0x30
 8005858:	4b14      	ldr	r3, [pc, #80]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 800585a:	4a15      	ldr	r2, [pc, #84]	; (80058b0 <BSP_SDRAM_MspInit+0x214>)
 800585c:	601a      	str	r2, [r3, #0]
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	4a12      	ldr	r2, [pc, #72]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 8005862:	631a      	str	r2, [r3, #48]	; 0x30
 8005864:	4a11      	ldr	r2, [pc, #68]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 8005866:	687b      	ldr	r3, [r7, #4]
 8005868:	6393      	str	r3, [r2, #56]	; 0x38
 800586a:	4810      	ldr	r0, [pc, #64]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 800586c:	f000 fb84 	bl	8005f78 <HAL_DMA_DeInit>
 8005870:	480e      	ldr	r0, [pc, #56]	; (80058ac <BSP_SDRAM_MspInit+0x210>)
 8005872:	f000 fad3 	bl	8005e1c <HAL_DMA_Init>
 8005876:	2200      	movs	r2, #0
 8005878:	210f      	movs	r1, #15
 800587a:	2038      	movs	r0, #56	; 0x38
 800587c:	f000 fa97 	bl	8005dae <HAL_NVIC_SetPriority>
 8005880:	2038      	movs	r0, #56	; 0x38
 8005882:	f000 fab0 	bl	8005de6 <HAL_NVIC_EnableIRQ>
 8005886:	bf00      	nop
 8005888:	3740      	adds	r7, #64	; 0x40
 800588a:	46bd      	mov	sp, r7
 800588c:	bd80      	pop	{r7, pc}
 800588e:	bf00      	nop
 8005890:	40023800 	.word	0x40023800
 8005894:	40020400 	.word	0x40020400
 8005898:	40020800 	.word	0x40020800
 800589c:	40020c00 	.word	0x40020c00
 80058a0:	40021000 	.word	0x40021000
 80058a4:	40021400 	.word	0x40021400
 80058a8:	40021800 	.word	0x40021800
 80058ac:	200011cc 	.word	0x200011cc
 80058b0:	40026410 	.word	0x40026410

080058b4 <BSP_TS_Init>:
 80058b4:	b580      	push	{r7, lr}
 80058b6:	b084      	sub	sp, #16
 80058b8:	af00      	add	r7, sp, #0
 80058ba:	4603      	mov	r3, r0
 80058bc:	460a      	mov	r2, r1
 80058be:	80fb      	strh	r3, [r7, #6]
 80058c0:	4613      	mov	r3, r2
 80058c2:	80bb      	strh	r3, [r7, #4]
 80058c4:	2301      	movs	r3, #1
 80058c6:	73fb      	strb	r3, [r7, #15]
 80058c8:	4a13      	ldr	r2, [pc, #76]	; (8005918 <BSP_TS_Init+0x64>)
 80058ca:	88fb      	ldrh	r3, [r7, #6]
 80058cc:	8013      	strh	r3, [r2, #0]
 80058ce:	4a13      	ldr	r2, [pc, #76]	; (800591c <BSP_TS_Init+0x68>)
 80058d0:	88bb      	ldrh	r3, [r7, #4]
 80058d2:	8013      	strh	r3, [r2, #0]
 80058d4:	4b12      	ldr	r3, [pc, #72]	; (8005920 <BSP_TS_Init+0x6c>)
 80058d6:	685b      	ldr	r3, [r3, #4]
 80058d8:	2082      	movs	r0, #130	; 0x82
 80058da:	4798      	blx	r3
 80058dc:	4603      	mov	r3, r0
 80058de:	461a      	mov	r2, r3
 80058e0:	f640 0311 	movw	r3, #2065	; 0x811
 80058e4:	429a      	cmp	r2, r3
 80058e6:	d104      	bne.n	80058f2 <BSP_TS_Init+0x3e>
 80058e8:	4b0e      	ldr	r3, [pc, #56]	; (8005924 <BSP_TS_Init+0x70>)
 80058ea:	4a0d      	ldr	r2, [pc, #52]	; (8005920 <BSP_TS_Init+0x6c>)
 80058ec:	601a      	str	r2, [r3, #0]
 80058ee:	2300      	movs	r3, #0
 80058f0:	73fb      	strb	r3, [r7, #15]
 80058f2:	7bfb      	ldrb	r3, [r7, #15]
 80058f4:	2b00      	cmp	r3, #0
 80058f6:	d109      	bne.n	800590c <BSP_TS_Init+0x58>
 80058f8:	4b0a      	ldr	r3, [pc, #40]	; (8005924 <BSP_TS_Init+0x70>)
 80058fa:	681b      	ldr	r3, [r3, #0]
 80058fc:	681b      	ldr	r3, [r3, #0]
 80058fe:	2082      	movs	r0, #130	; 0x82
 8005900:	4798      	blx	r3
 8005902:	4b08      	ldr	r3, [pc, #32]	; (8005924 <BSP_TS_Init+0x70>)
 8005904:	681b      	ldr	r3, [r3, #0]
 8005906:	68db      	ldr	r3, [r3, #12]
 8005908:	2082      	movs	r0, #130	; 0x82
 800590a:	4798      	blx	r3
 800590c:	7bfb      	ldrb	r3, [r7, #15]
 800590e:	4618      	mov	r0, r3
 8005910:	3710      	adds	r7, #16
 8005912:	46bd      	mov	sp, r7
 8005914:	bd80      	pop	{r7, pc}
 8005916:	bf00      	nop
 8005918:	20001230 	.word	0x20001230
 800591c:	20001232 	.word	0x20001232
 8005920:	200000a0 	.word	0x200000a0
 8005924:	2000122c 	.word	0x2000122c

08005928 <BSP_TS_ITGetStatus>:
 8005928:	b580      	push	{r7, lr}
 800592a:	af00      	add	r7, sp, #0
 800592c:	4b03      	ldr	r3, [pc, #12]	; (800593c <BSP_TS_ITGetStatus+0x14>)
 800592e:	681b      	ldr	r3, [r3, #0]
 8005930:	6a1b      	ldr	r3, [r3, #32]
 8005932:	2082      	movs	r0, #130	; 0x82
 8005934:	4798      	blx	r3
 8005936:	4603      	mov	r3, r0
 8005938:	4618      	mov	r0, r3
 800593a:	bd80      	pop	{r7, pc}
 800593c:	2000122c 	.word	0x2000122c

08005940 <BSP_TS_GetState>:
 8005940:	b580      	push	{r7, lr}
 8005942:	b086      	sub	sp, #24
 8005944:	af00      	add	r7, sp, #0
 8005946:	6078      	str	r0, [r7, #4]
 8005948:	4b4f      	ldr	r3, [pc, #316]	; (8005a88 <BSP_TS_GetState+0x148>)
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	691b      	ldr	r3, [r3, #16]
 800594e:	2082      	movs	r0, #130	; 0x82
 8005950:	4798      	blx	r3
 8005952:	4603      	mov	r3, r0
 8005954:	b29a      	uxth	r2, r3
 8005956:	687b      	ldr	r3, [r7, #4]
 8005958:	801a      	strh	r2, [r3, #0]
 800595a:	687b      	ldr	r3, [r7, #4]
 800595c:	881b      	ldrh	r3, [r3, #0]
 800595e:	2b00      	cmp	r3, #0
 8005960:	f000 808d 	beq.w	8005a7e <BSP_TS_GetState+0x13e>
 8005964:	4b48      	ldr	r3, [pc, #288]	; (8005a88 <BSP_TS_GetState+0x148>)
 8005966:	681b      	ldr	r3, [r3, #0]
 8005968:	695b      	ldr	r3, [r3, #20]
 800596a:	f107 020c 	add.w	r2, r7, #12
 800596e:	f107 010e 	add.w	r1, r7, #14
 8005972:	2082      	movs	r0, #130	; 0x82
 8005974:	4798      	blx	r3
 8005976:	89bb      	ldrh	r3, [r7, #12]
 8005978:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 800597c:	b29b      	uxth	r3, r3
 800597e:	81bb      	strh	r3, [r7, #12]
 8005980:	89bb      	ldrh	r3, [r7, #12]
 8005982:	4a42      	ldr	r2, [pc, #264]	; (8005a8c <BSP_TS_GetState+0x14c>)
 8005984:	fba2 2303 	umull	r2, r3, r2, r3
 8005988:	08db      	lsrs	r3, r3, #3
 800598a:	82bb      	strh	r3, [r7, #20]
 800598c:	8abb      	ldrh	r3, [r7, #20]
 800598e:	2b00      	cmp	r3, #0
 8005990:	d102      	bne.n	8005998 <BSP_TS_GetState+0x58>
 8005992:	2300      	movs	r3, #0
 8005994:	82bb      	strh	r3, [r7, #20]
 8005996:	e008      	b.n	80059aa <BSP_TS_GetState+0x6a>
 8005998:	4b3d      	ldr	r3, [pc, #244]	; (8005a90 <BSP_TS_GetState+0x150>)
 800599a:	881b      	ldrh	r3, [r3, #0]
 800599c:	8aba      	ldrh	r2, [r7, #20]
 800599e:	429a      	cmp	r2, r3
 80059a0:	d903      	bls.n	80059aa <BSP_TS_GetState+0x6a>
 80059a2:	4b3b      	ldr	r3, [pc, #236]	; (8005a90 <BSP_TS_GetState+0x150>)
 80059a4:	881b      	ldrh	r3, [r3, #0]
 80059a6:	3b01      	subs	r3, #1
 80059a8:	82bb      	strh	r3, [r7, #20]
 80059aa:	8abb      	ldrh	r3, [r7, #20]
 80059ac:	81bb      	strh	r3, [r7, #12]
 80059ae:	89fb      	ldrh	r3, [r7, #14]
 80059b0:	f640 32b8 	movw	r2, #3000	; 0xbb8
 80059b4:	4293      	cmp	r3, r2
 80059b6:	d806      	bhi.n	80059c6 <BSP_TS_GetState+0x86>
 80059b8:	89fb      	ldrh	r3, [r7, #14]
 80059ba:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80059be:	330e      	adds	r3, #14
 80059c0:	b29b      	uxth	r3, r3
 80059c2:	81fb      	strh	r3, [r7, #14]
 80059c4:	e005      	b.n	80059d2 <BSP_TS_GetState+0x92>
 80059c6:	89fb      	ldrh	r3, [r7, #14]
 80059c8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80059cc:	3308      	adds	r3, #8
 80059ce:	b29b      	uxth	r3, r3
 80059d0:	81fb      	strh	r3, [r7, #14]
 80059d2:	89fb      	ldrh	r3, [r7, #14]
 80059d4:	4a2f      	ldr	r2, [pc, #188]	; (8005a94 <BSP_TS_GetState+0x154>)
 80059d6:	fba2 2303 	umull	r2, r3, r2, r3
 80059da:	08db      	lsrs	r3, r3, #3
 80059dc:	82fb      	strh	r3, [r7, #22]
 80059de:	8afb      	ldrh	r3, [r7, #22]
 80059e0:	2b00      	cmp	r3, #0
 80059e2:	d102      	bne.n	80059ea <BSP_TS_GetState+0xaa>
 80059e4:	2300      	movs	r3, #0
 80059e6:	82fb      	strh	r3, [r7, #22]
 80059e8:	e008      	b.n	80059fc <BSP_TS_GetState+0xbc>
 80059ea:	4b2b      	ldr	r3, [pc, #172]	; (8005a98 <BSP_TS_GetState+0x158>)
 80059ec:	881b      	ldrh	r3, [r3, #0]
 80059ee:	8afa      	ldrh	r2, [r7, #22]
 80059f0:	429a      	cmp	r2, r3
 80059f2:	d903      	bls.n	80059fc <BSP_TS_GetState+0xbc>
 80059f4:	4b28      	ldr	r3, [pc, #160]	; (8005a98 <BSP_TS_GetState+0x158>)
 80059f6:	881b      	ldrh	r3, [r3, #0]
 80059f8:	3b01      	subs	r3, #1
 80059fa:	82fb      	strh	r3, [r7, #22]
 80059fc:	8afb      	ldrh	r3, [r7, #22]
 80059fe:	81fb      	strh	r3, [r7, #14]
 8005a00:	89fb      	ldrh	r3, [r7, #14]
 8005a02:	461a      	mov	r2, r3
 8005a04:	4b25      	ldr	r3, [pc, #148]	; (8005a9c <BSP_TS_GetState+0x15c>)
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	429a      	cmp	r2, r3
 8005a0a:	d906      	bls.n	8005a1a <BSP_TS_GetState+0xda>
 8005a0c:	89fa      	ldrh	r2, [r7, #14]
 8005a0e:	4b23      	ldr	r3, [pc, #140]	; (8005a9c <BSP_TS_GetState+0x15c>)
 8005a10:	681b      	ldr	r3, [r3, #0]
 8005a12:	b29b      	uxth	r3, r3
 8005a14:	1ad3      	subs	r3, r2, r3
 8005a16:	b29b      	uxth	r3, r3
 8005a18:	e005      	b.n	8005a26 <BSP_TS_GetState+0xe6>
 8005a1a:	4b20      	ldr	r3, [pc, #128]	; (8005a9c <BSP_TS_GetState+0x15c>)
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	b29a      	uxth	r2, r3
 8005a20:	89fb      	ldrh	r3, [r7, #14]
 8005a22:	1ad3      	subs	r3, r2, r3
 8005a24:	b29b      	uxth	r3, r3
 8005a26:	827b      	strh	r3, [r7, #18]
 8005a28:	89bb      	ldrh	r3, [r7, #12]
 8005a2a:	461a      	mov	r2, r3
 8005a2c:	4b1c      	ldr	r3, [pc, #112]	; (8005aa0 <BSP_TS_GetState+0x160>)
 8005a2e:	681b      	ldr	r3, [r3, #0]
 8005a30:	429a      	cmp	r2, r3
 8005a32:	d906      	bls.n	8005a42 <BSP_TS_GetState+0x102>
 8005a34:	89ba      	ldrh	r2, [r7, #12]
 8005a36:	4b1a      	ldr	r3, [pc, #104]	; (8005aa0 <BSP_TS_GetState+0x160>)
 8005a38:	681b      	ldr	r3, [r3, #0]
 8005a3a:	b29b      	uxth	r3, r3
 8005a3c:	1ad3      	subs	r3, r2, r3
 8005a3e:	b29b      	uxth	r3, r3
 8005a40:	e005      	b.n	8005a4e <BSP_TS_GetState+0x10e>
 8005a42:	4b17      	ldr	r3, [pc, #92]	; (8005aa0 <BSP_TS_GetState+0x160>)
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	b29a      	uxth	r2, r3
 8005a48:	89bb      	ldrh	r3, [r7, #12]
 8005a4a:	1ad3      	subs	r3, r2, r3
 8005a4c:	b29b      	uxth	r3, r3
 8005a4e:	823b      	strh	r3, [r7, #16]
 8005a50:	8a7a      	ldrh	r2, [r7, #18]
 8005a52:	8a3b      	ldrh	r3, [r7, #16]
 8005a54:	4413      	add	r3, r2
 8005a56:	2b05      	cmp	r3, #5
 8005a58:	dd07      	ble.n	8005a6a <BSP_TS_GetState+0x12a>
 8005a5a:	89fb      	ldrh	r3, [r7, #14]
 8005a5c:	461a      	mov	r2, r3
 8005a5e:	4b0f      	ldr	r3, [pc, #60]	; (8005a9c <BSP_TS_GetState+0x15c>)
 8005a60:	601a      	str	r2, [r3, #0]
 8005a62:	89bb      	ldrh	r3, [r7, #12]
 8005a64:	461a      	mov	r2, r3
 8005a66:	4b0e      	ldr	r3, [pc, #56]	; (8005aa0 <BSP_TS_GetState+0x160>)
 8005a68:	601a      	str	r2, [r3, #0]
 8005a6a:	4b0c      	ldr	r3, [pc, #48]	; (8005a9c <BSP_TS_GetState+0x15c>)
 8005a6c:	681b      	ldr	r3, [r3, #0]
 8005a6e:	b29a      	uxth	r2, r3
 8005a70:	687b      	ldr	r3, [r7, #4]
 8005a72:	805a      	strh	r2, [r3, #2]
 8005a74:	4b0a      	ldr	r3, [pc, #40]	; (8005aa0 <BSP_TS_GetState+0x160>)
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	b29a      	uxth	r2, r3
 8005a7a:	687b      	ldr	r3, [r7, #4]
 8005a7c:	809a      	strh	r2, [r3, #4]
 8005a7e:	bf00      	nop
 8005a80:	3718      	adds	r7, #24
 8005a82:	46bd      	mov	sp, r7
 8005a84:	bd80      	pop	{r7, pc}
 8005a86:	bf00      	nop
 8005a88:	2000122c 	.word	0x2000122c
 8005a8c:	ba2e8ba3 	.word	0xba2e8ba3
 8005a90:	20001232 	.word	0x20001232
 8005a94:	88888889 	.word	0x88888889
 8005a98:	20001230 	.word	0x20001230
 8005a9c:	20001234 	.word	0x20001234
 8005aa0:	20001238 	.word	0x20001238

08005aa4 <BSP_TS_ITClear>:
 8005aa4:	b580      	push	{r7, lr}
 8005aa6:	af00      	add	r7, sp, #0
 8005aa8:	4b03      	ldr	r3, [pc, #12]	; (8005ab8 <BSP_TS_ITClear+0x14>)
 8005aaa:	681b      	ldr	r3, [r3, #0]
 8005aac:	69db      	ldr	r3, [r3, #28]
 8005aae:	2082      	movs	r0, #130	; 0x82
 8005ab0:	4798      	blx	r3
 8005ab2:	bf00      	nop
 8005ab4:	bd80      	pop	{r7, pc}
 8005ab6:	bf00      	nop
 8005ab8:	2000122c 	.word	0x2000122c

08005abc <HAL_Init>:
 8005abc:	b580      	push	{r7, lr}
 8005abe:	af00      	add	r7, sp, #0
 8005ac0:	4b0e      	ldr	r3, [pc, #56]	; (8005afc <HAL_Init+0x40>)
 8005ac2:	681b      	ldr	r3, [r3, #0]
 8005ac4:	4a0d      	ldr	r2, [pc, #52]	; (8005afc <HAL_Init+0x40>)
 8005ac6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005aca:	6013      	str	r3, [r2, #0]
 8005acc:	4b0b      	ldr	r3, [pc, #44]	; (8005afc <HAL_Init+0x40>)
 8005ace:	681b      	ldr	r3, [r3, #0]
 8005ad0:	4a0a      	ldr	r2, [pc, #40]	; (8005afc <HAL_Init+0x40>)
 8005ad2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8005ad6:	6013      	str	r3, [r2, #0]
 8005ad8:	4b08      	ldr	r3, [pc, #32]	; (8005afc <HAL_Init+0x40>)
 8005ada:	681b      	ldr	r3, [r3, #0]
 8005adc:	4a07      	ldr	r2, [pc, #28]	; (8005afc <HAL_Init+0x40>)
 8005ade:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005ae2:	6013      	str	r3, [r2, #0]
 8005ae4:	2003      	movs	r0, #3
 8005ae6:	f000 f957 	bl	8005d98 <HAL_NVIC_SetPriorityGrouping>
 8005aea:	200f      	movs	r0, #15
 8005aec:	f000 f810 	bl	8005b10 <HAL_InitTick>
 8005af0:	f000 f806 	bl	8005b00 <HAL_MspInit>
 8005af4:	2300      	movs	r3, #0
 8005af6:	4618      	mov	r0, r3
 8005af8:	bd80      	pop	{r7, pc}
 8005afa:	bf00      	nop
 8005afc:	40023c00 	.word	0x40023c00

08005b00 <HAL_MspInit>:
 8005b00:	b480      	push	{r7}
 8005b02:	af00      	add	r7, sp, #0
 8005b04:	bf00      	nop
 8005b06:	46bd      	mov	sp, r7
 8005b08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b0c:	4770      	bx	lr
	...

08005b10 <HAL_InitTick>:
 8005b10:	b580      	push	{r7, lr}
 8005b12:	b082      	sub	sp, #8
 8005b14:	af00      	add	r7, sp, #0
 8005b16:	6078      	str	r0, [r7, #4]
 8005b18:	4b12      	ldr	r3, [pc, #72]	; (8005b64 <HAL_InitTick+0x54>)
 8005b1a:	681a      	ldr	r2, [r3, #0]
 8005b1c:	4b12      	ldr	r3, [pc, #72]	; (8005b68 <HAL_InitTick+0x58>)
 8005b1e:	781b      	ldrb	r3, [r3, #0]
 8005b20:	4619      	mov	r1, r3
 8005b22:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005b26:	fbb3 f3f1 	udiv	r3, r3, r1
 8005b2a:	fbb2 f3f3 	udiv	r3, r2, r3
 8005b2e:	4618      	mov	r0, r3
 8005b30:	f000 f967 	bl	8005e02 <HAL_SYSTICK_Config>
 8005b34:	4603      	mov	r3, r0
 8005b36:	2b00      	cmp	r3, #0
 8005b38:	d001      	beq.n	8005b3e <HAL_InitTick+0x2e>
 8005b3a:	2301      	movs	r3, #1
 8005b3c:	e00e      	b.n	8005b5c <HAL_InitTick+0x4c>
 8005b3e:	687b      	ldr	r3, [r7, #4]
 8005b40:	2b0f      	cmp	r3, #15
 8005b42:	d80a      	bhi.n	8005b5a <HAL_InitTick+0x4a>
 8005b44:	2200      	movs	r2, #0
 8005b46:	6879      	ldr	r1, [r7, #4]
 8005b48:	f04f 30ff 	mov.w	r0, #4294967295
 8005b4c:	f000 f92f 	bl	8005dae <HAL_NVIC_SetPriority>
 8005b50:	4a06      	ldr	r2, [pc, #24]	; (8005b6c <HAL_InitTick+0x5c>)
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	6013      	str	r3, [r2, #0]
 8005b56:	2300      	movs	r3, #0
 8005b58:	e000      	b.n	8005b5c <HAL_InitTick+0x4c>
 8005b5a:	2301      	movs	r3, #1
 8005b5c:	4618      	mov	r0, r3
 8005b5e:	3708      	adds	r7, #8
 8005b60:	46bd      	mov	sp, r7
 8005b62:	bd80      	pop	{r7, pc}
 8005b64:	20000064 	.word	0x20000064
 8005b68:	200000f8 	.word	0x200000f8
 8005b6c:	200000f4 	.word	0x200000f4

08005b70 <HAL_IncTick>:
 8005b70:	b480      	push	{r7}
 8005b72:	af00      	add	r7, sp, #0
 8005b74:	4b06      	ldr	r3, [pc, #24]	; (8005b90 <HAL_IncTick+0x20>)
 8005b76:	781b      	ldrb	r3, [r3, #0]
 8005b78:	461a      	mov	r2, r3
 8005b7a:	4b06      	ldr	r3, [pc, #24]	; (8005b94 <HAL_IncTick+0x24>)
 8005b7c:	681b      	ldr	r3, [r3, #0]
 8005b7e:	4413      	add	r3, r2
 8005b80:	4a04      	ldr	r2, [pc, #16]	; (8005b94 <HAL_IncTick+0x24>)
 8005b82:	6013      	str	r3, [r2, #0]
 8005b84:	bf00      	nop
 8005b86:	46bd      	mov	sp, r7
 8005b88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b8c:	4770      	bx	lr
 8005b8e:	bf00      	nop
 8005b90:	200000f8 	.word	0x200000f8
 8005b94:	2000123c 	.word	0x2000123c

08005b98 <HAL_GetTick>:
 8005b98:	b480      	push	{r7}
 8005b9a:	af00      	add	r7, sp, #0
 8005b9c:	4b03      	ldr	r3, [pc, #12]	; (8005bac <HAL_GetTick+0x14>)
 8005b9e:	681b      	ldr	r3, [r3, #0]
 8005ba0:	4618      	mov	r0, r3
 8005ba2:	46bd      	mov	sp, r7
 8005ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ba8:	4770      	bx	lr
 8005baa:	bf00      	nop
 8005bac:	2000123c 	.word	0x2000123c

08005bb0 <HAL_Delay>:
 8005bb0:	b580      	push	{r7, lr}
 8005bb2:	b084      	sub	sp, #16
 8005bb4:	af00      	add	r7, sp, #0
 8005bb6:	6078      	str	r0, [r7, #4]
 8005bb8:	f7ff ffee 	bl	8005b98 <HAL_GetTick>
 8005bbc:	60b8      	str	r0, [r7, #8]
 8005bbe:	687b      	ldr	r3, [r7, #4]
 8005bc0:	60fb      	str	r3, [r7, #12]
 8005bc2:	68fb      	ldr	r3, [r7, #12]
 8005bc4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005bc8:	d005      	beq.n	8005bd6 <HAL_Delay+0x26>
 8005bca:	4b0a      	ldr	r3, [pc, #40]	; (8005bf4 <HAL_Delay+0x44>)
 8005bcc:	781b      	ldrb	r3, [r3, #0]
 8005bce:	461a      	mov	r2, r3
 8005bd0:	68fb      	ldr	r3, [r7, #12]
 8005bd2:	4413      	add	r3, r2
 8005bd4:	60fb      	str	r3, [r7, #12]
 8005bd6:	bf00      	nop
 8005bd8:	f7ff ffde 	bl	8005b98 <HAL_GetTick>
 8005bdc:	4602      	mov	r2, r0
 8005bde:	68bb      	ldr	r3, [r7, #8]
 8005be0:	1ad3      	subs	r3, r2, r3
 8005be2:	68fa      	ldr	r2, [r7, #12]
 8005be4:	429a      	cmp	r2, r3
 8005be6:	d8f7      	bhi.n	8005bd8 <HAL_Delay+0x28>
 8005be8:	bf00      	nop
 8005bea:	bf00      	nop
 8005bec:	3710      	adds	r7, #16
 8005bee:	46bd      	mov	sp, r7
 8005bf0:	bd80      	pop	{r7, pc}
 8005bf2:	bf00      	nop
 8005bf4:	200000f8 	.word	0x200000f8

08005bf8 <__NVIC_SetPriorityGrouping>:
 8005bf8:	b480      	push	{r7}
 8005bfa:	b085      	sub	sp, #20
 8005bfc:	af00      	add	r7, sp, #0
 8005bfe:	6078      	str	r0, [r7, #4]
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	f003 0307 	and.w	r3, r3, #7
 8005c06:	60fb      	str	r3, [r7, #12]
 8005c08:	4b0c      	ldr	r3, [pc, #48]	; (8005c3c <__NVIC_SetPriorityGrouping+0x44>)
 8005c0a:	68db      	ldr	r3, [r3, #12]
 8005c0c:	60bb      	str	r3, [r7, #8]
 8005c0e:	68ba      	ldr	r2, [r7, #8]
 8005c10:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8005c14:	4013      	ands	r3, r2
 8005c16:	60bb      	str	r3, [r7, #8]
 8005c18:	68fb      	ldr	r3, [r7, #12]
 8005c1a:	021a      	lsls	r2, r3, #8
 8005c1c:	68bb      	ldr	r3, [r7, #8]
 8005c1e:	4313      	orrs	r3, r2
 8005c20:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005c24:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8005c28:	60bb      	str	r3, [r7, #8]
 8005c2a:	4a04      	ldr	r2, [pc, #16]	; (8005c3c <__NVIC_SetPriorityGrouping+0x44>)
 8005c2c:	68bb      	ldr	r3, [r7, #8]
 8005c2e:	60d3      	str	r3, [r2, #12]
 8005c30:	bf00      	nop
 8005c32:	3714      	adds	r7, #20
 8005c34:	46bd      	mov	sp, r7
 8005c36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c3a:	4770      	bx	lr
 8005c3c:	e000ed00 	.word	0xe000ed00

08005c40 <__NVIC_GetPriorityGrouping>:
 8005c40:	b480      	push	{r7}
 8005c42:	af00      	add	r7, sp, #0
 8005c44:	4b04      	ldr	r3, [pc, #16]	; (8005c58 <__NVIC_GetPriorityGrouping+0x18>)
 8005c46:	68db      	ldr	r3, [r3, #12]
 8005c48:	0a1b      	lsrs	r3, r3, #8
 8005c4a:	f003 0307 	and.w	r3, r3, #7
 8005c4e:	4618      	mov	r0, r3
 8005c50:	46bd      	mov	sp, r7
 8005c52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c56:	4770      	bx	lr
 8005c58:	e000ed00 	.word	0xe000ed00

08005c5c <__NVIC_EnableIRQ>:
 8005c5c:	b480      	push	{r7}
 8005c5e:	b083      	sub	sp, #12
 8005c60:	af00      	add	r7, sp, #0
 8005c62:	4603      	mov	r3, r0
 8005c64:	71fb      	strb	r3, [r7, #7]
 8005c66:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005c6a:	2b00      	cmp	r3, #0
 8005c6c:	db0b      	blt.n	8005c86 <__NVIC_EnableIRQ+0x2a>
 8005c6e:	79fb      	ldrb	r3, [r7, #7]
 8005c70:	f003 021f 	and.w	r2, r3, #31
 8005c74:	4907      	ldr	r1, [pc, #28]	; (8005c94 <__NVIC_EnableIRQ+0x38>)
 8005c76:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005c7a:	095b      	lsrs	r3, r3, #5
 8005c7c:	2001      	movs	r0, #1
 8005c7e:	fa00 f202 	lsl.w	r2, r0, r2
 8005c82:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8005c86:	bf00      	nop
 8005c88:	370c      	adds	r7, #12
 8005c8a:	46bd      	mov	sp, r7
 8005c8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c90:	4770      	bx	lr
 8005c92:	bf00      	nop
 8005c94:	e000e100 	.word	0xe000e100

08005c98 <__NVIC_SetPriority>:
 8005c98:	b480      	push	{r7}
 8005c9a:	b083      	sub	sp, #12
 8005c9c:	af00      	add	r7, sp, #0
 8005c9e:	4603      	mov	r3, r0
 8005ca0:	6039      	str	r1, [r7, #0]
 8005ca2:	71fb      	strb	r3, [r7, #7]
 8005ca4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005ca8:	2b00      	cmp	r3, #0
 8005caa:	db0a      	blt.n	8005cc2 <__NVIC_SetPriority+0x2a>
 8005cac:	683b      	ldr	r3, [r7, #0]
 8005cae:	b2da      	uxtb	r2, r3
 8005cb0:	490c      	ldr	r1, [pc, #48]	; (8005ce4 <__NVIC_SetPriority+0x4c>)
 8005cb2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005cb6:	0112      	lsls	r2, r2, #4
 8005cb8:	b2d2      	uxtb	r2, r2
 8005cba:	440b      	add	r3, r1
 8005cbc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8005cc0:	e00a      	b.n	8005cd8 <__NVIC_SetPriority+0x40>
 8005cc2:	683b      	ldr	r3, [r7, #0]
 8005cc4:	b2da      	uxtb	r2, r3
 8005cc6:	4908      	ldr	r1, [pc, #32]	; (8005ce8 <__NVIC_SetPriority+0x50>)
 8005cc8:	79fb      	ldrb	r3, [r7, #7]
 8005cca:	f003 030f 	and.w	r3, r3, #15
 8005cce:	3b04      	subs	r3, #4
 8005cd0:	0112      	lsls	r2, r2, #4
 8005cd2:	b2d2      	uxtb	r2, r2
 8005cd4:	440b      	add	r3, r1
 8005cd6:	761a      	strb	r2, [r3, #24]
 8005cd8:	bf00      	nop
 8005cda:	370c      	adds	r7, #12
 8005cdc:	46bd      	mov	sp, r7
 8005cde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ce2:	4770      	bx	lr
 8005ce4:	e000e100 	.word	0xe000e100
 8005ce8:	e000ed00 	.word	0xe000ed00

08005cec <NVIC_EncodePriority>:
 8005cec:	b480      	push	{r7}
 8005cee:	b089      	sub	sp, #36	; 0x24
 8005cf0:	af00      	add	r7, sp, #0
 8005cf2:	60f8      	str	r0, [r7, #12]
 8005cf4:	60b9      	str	r1, [r7, #8]
 8005cf6:	607a      	str	r2, [r7, #4]
 8005cf8:	68fb      	ldr	r3, [r7, #12]
 8005cfa:	f003 0307 	and.w	r3, r3, #7
 8005cfe:	61fb      	str	r3, [r7, #28]
 8005d00:	69fb      	ldr	r3, [r7, #28]
 8005d02:	f1c3 0307 	rsb	r3, r3, #7
 8005d06:	2b04      	cmp	r3, #4
 8005d08:	bf28      	it	cs
 8005d0a:	2304      	movcs	r3, #4
 8005d0c:	61bb      	str	r3, [r7, #24]
 8005d0e:	69fb      	ldr	r3, [r7, #28]
 8005d10:	3304      	adds	r3, #4
 8005d12:	2b06      	cmp	r3, #6
 8005d14:	d902      	bls.n	8005d1c <NVIC_EncodePriority+0x30>
 8005d16:	69fb      	ldr	r3, [r7, #28]
 8005d18:	3b03      	subs	r3, #3
 8005d1a:	e000      	b.n	8005d1e <NVIC_EncodePriority+0x32>
 8005d1c:	2300      	movs	r3, #0
 8005d1e:	617b      	str	r3, [r7, #20]
 8005d20:	f04f 32ff 	mov.w	r2, #4294967295
 8005d24:	69bb      	ldr	r3, [r7, #24]
 8005d26:	fa02 f303 	lsl.w	r3, r2, r3
 8005d2a:	43da      	mvns	r2, r3
 8005d2c:	68bb      	ldr	r3, [r7, #8]
 8005d2e:	401a      	ands	r2, r3
 8005d30:	697b      	ldr	r3, [r7, #20]
 8005d32:	409a      	lsls	r2, r3
 8005d34:	f04f 31ff 	mov.w	r1, #4294967295
 8005d38:	697b      	ldr	r3, [r7, #20]
 8005d3a:	fa01 f303 	lsl.w	r3, r1, r3
 8005d3e:	43d9      	mvns	r1, r3
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	400b      	ands	r3, r1
 8005d44:	4313      	orrs	r3, r2
 8005d46:	4618      	mov	r0, r3
 8005d48:	3724      	adds	r7, #36	; 0x24
 8005d4a:	46bd      	mov	sp, r7
 8005d4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d50:	4770      	bx	lr
	...

08005d54 <SysTick_Config>:
 8005d54:	b580      	push	{r7, lr}
 8005d56:	b082      	sub	sp, #8
 8005d58:	af00      	add	r7, sp, #0
 8005d5a:	6078      	str	r0, [r7, #4]
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	3b01      	subs	r3, #1
 8005d60:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8005d64:	d301      	bcc.n	8005d6a <SysTick_Config+0x16>
 8005d66:	2301      	movs	r3, #1
 8005d68:	e00f      	b.n	8005d8a <SysTick_Config+0x36>
 8005d6a:	4a0a      	ldr	r2, [pc, #40]	; (8005d94 <SysTick_Config+0x40>)
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	3b01      	subs	r3, #1
 8005d70:	6053      	str	r3, [r2, #4]
 8005d72:	210f      	movs	r1, #15
 8005d74:	f04f 30ff 	mov.w	r0, #4294967295
 8005d78:	f7ff ff8e 	bl	8005c98 <__NVIC_SetPriority>
 8005d7c:	4b05      	ldr	r3, [pc, #20]	; (8005d94 <SysTick_Config+0x40>)
 8005d7e:	2200      	movs	r2, #0
 8005d80:	609a      	str	r2, [r3, #8]
 8005d82:	4b04      	ldr	r3, [pc, #16]	; (8005d94 <SysTick_Config+0x40>)
 8005d84:	2207      	movs	r2, #7
 8005d86:	601a      	str	r2, [r3, #0]
 8005d88:	2300      	movs	r3, #0
 8005d8a:	4618      	mov	r0, r3
 8005d8c:	3708      	adds	r7, #8
 8005d8e:	46bd      	mov	sp, r7
 8005d90:	bd80      	pop	{r7, pc}
 8005d92:	bf00      	nop
 8005d94:	e000e010 	.word	0xe000e010

08005d98 <HAL_NVIC_SetPriorityGrouping>:
 8005d98:	b580      	push	{r7, lr}
 8005d9a:	b082      	sub	sp, #8
 8005d9c:	af00      	add	r7, sp, #0
 8005d9e:	6078      	str	r0, [r7, #4]
 8005da0:	6878      	ldr	r0, [r7, #4]
 8005da2:	f7ff ff29 	bl	8005bf8 <__NVIC_SetPriorityGrouping>
 8005da6:	bf00      	nop
 8005da8:	3708      	adds	r7, #8
 8005daa:	46bd      	mov	sp, r7
 8005dac:	bd80      	pop	{r7, pc}

08005dae <HAL_NVIC_SetPriority>:
 8005dae:	b580      	push	{r7, lr}
 8005db0:	b086      	sub	sp, #24
 8005db2:	af00      	add	r7, sp, #0
 8005db4:	4603      	mov	r3, r0
 8005db6:	60b9      	str	r1, [r7, #8]
 8005db8:	607a      	str	r2, [r7, #4]
 8005dba:	73fb      	strb	r3, [r7, #15]
 8005dbc:	2300      	movs	r3, #0
 8005dbe:	617b      	str	r3, [r7, #20]
 8005dc0:	f7ff ff3e 	bl	8005c40 <__NVIC_GetPriorityGrouping>
 8005dc4:	6178      	str	r0, [r7, #20]
 8005dc6:	687a      	ldr	r2, [r7, #4]
 8005dc8:	68b9      	ldr	r1, [r7, #8]
 8005dca:	6978      	ldr	r0, [r7, #20]
 8005dcc:	f7ff ff8e 	bl	8005cec <NVIC_EncodePriority>
 8005dd0:	4602      	mov	r2, r0
 8005dd2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8005dd6:	4611      	mov	r1, r2
 8005dd8:	4618      	mov	r0, r3
 8005dda:	f7ff ff5d 	bl	8005c98 <__NVIC_SetPriority>
 8005dde:	bf00      	nop
 8005de0:	3718      	adds	r7, #24
 8005de2:	46bd      	mov	sp, r7
 8005de4:	bd80      	pop	{r7, pc}

08005de6 <HAL_NVIC_EnableIRQ>:
 8005de6:	b580      	push	{r7, lr}
 8005de8:	b082      	sub	sp, #8
 8005dea:	af00      	add	r7, sp, #0
 8005dec:	4603      	mov	r3, r0
 8005dee:	71fb      	strb	r3, [r7, #7]
 8005df0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005df4:	4618      	mov	r0, r3
 8005df6:	f7ff ff31 	bl	8005c5c <__NVIC_EnableIRQ>
 8005dfa:	bf00      	nop
 8005dfc:	3708      	adds	r7, #8
 8005dfe:	46bd      	mov	sp, r7
 8005e00:	bd80      	pop	{r7, pc}

08005e02 <HAL_SYSTICK_Config>:
 8005e02:	b580      	push	{r7, lr}
 8005e04:	b082      	sub	sp, #8
 8005e06:	af00      	add	r7, sp, #0
 8005e08:	6078      	str	r0, [r7, #4]
 8005e0a:	6878      	ldr	r0, [r7, #4]
 8005e0c:	f7ff ffa2 	bl	8005d54 <SysTick_Config>
 8005e10:	4603      	mov	r3, r0
 8005e12:	4618      	mov	r0, r3
 8005e14:	3708      	adds	r7, #8
 8005e16:	46bd      	mov	sp, r7
 8005e18:	bd80      	pop	{r7, pc}
	...

08005e1c <HAL_DMA_Init>:
 8005e1c:	b580      	push	{r7, lr}
 8005e1e:	b086      	sub	sp, #24
 8005e20:	af00      	add	r7, sp, #0
 8005e22:	6078      	str	r0, [r7, #4]
 8005e24:	2300      	movs	r3, #0
 8005e26:	617b      	str	r3, [r7, #20]
 8005e28:	f7ff feb6 	bl	8005b98 <HAL_GetTick>
 8005e2c:	6138      	str	r0, [r7, #16]
 8005e2e:	687b      	ldr	r3, [r7, #4]
 8005e30:	2b00      	cmp	r3, #0
 8005e32:	d101      	bne.n	8005e38 <HAL_DMA_Init+0x1c>
 8005e34:	2301      	movs	r3, #1
 8005e36:	e099      	b.n	8005f6c <HAL_DMA_Init+0x150>
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	2200      	movs	r2, #0
 8005e3c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	2202      	movs	r2, #2
 8005e44:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	681b      	ldr	r3, [r3, #0]
 8005e4c:	681a      	ldr	r2, [r3, #0]
 8005e4e:	687b      	ldr	r3, [r7, #4]
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	f022 0201 	bic.w	r2, r2, #1
 8005e56:	601a      	str	r2, [r3, #0]
 8005e58:	e00f      	b.n	8005e7a <HAL_DMA_Init+0x5e>
 8005e5a:	f7ff fe9d 	bl	8005b98 <HAL_GetTick>
 8005e5e:	4602      	mov	r2, r0
 8005e60:	693b      	ldr	r3, [r7, #16]
 8005e62:	1ad3      	subs	r3, r2, r3
 8005e64:	2b05      	cmp	r3, #5
 8005e66:	d908      	bls.n	8005e7a <HAL_DMA_Init+0x5e>
 8005e68:	687b      	ldr	r3, [r7, #4]
 8005e6a:	2220      	movs	r2, #32
 8005e6c:	655a      	str	r2, [r3, #84]	; 0x54
 8005e6e:	687b      	ldr	r3, [r7, #4]
 8005e70:	2203      	movs	r2, #3
 8005e72:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005e76:	2303      	movs	r3, #3
 8005e78:	e078      	b.n	8005f6c <HAL_DMA_Init+0x150>
 8005e7a:	687b      	ldr	r3, [r7, #4]
 8005e7c:	681b      	ldr	r3, [r3, #0]
 8005e7e:	681b      	ldr	r3, [r3, #0]
 8005e80:	f003 0301 	and.w	r3, r3, #1
 8005e84:	2b00      	cmp	r3, #0
 8005e86:	d1e8      	bne.n	8005e5a <HAL_DMA_Init+0x3e>
 8005e88:	687b      	ldr	r3, [r7, #4]
 8005e8a:	681b      	ldr	r3, [r3, #0]
 8005e8c:	681b      	ldr	r3, [r3, #0]
 8005e8e:	617b      	str	r3, [r7, #20]
 8005e90:	697a      	ldr	r2, [r7, #20]
 8005e92:	4b38      	ldr	r3, [pc, #224]	; (8005f74 <HAL_DMA_Init+0x158>)
 8005e94:	4013      	ands	r3, r2
 8005e96:	617b      	str	r3, [r7, #20]
 8005e98:	687b      	ldr	r3, [r7, #4]
 8005e9a:	685a      	ldr	r2, [r3, #4]
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	689b      	ldr	r3, [r3, #8]
 8005ea0:	431a      	orrs	r2, r3
 8005ea2:	687b      	ldr	r3, [r7, #4]
 8005ea4:	68db      	ldr	r3, [r3, #12]
 8005ea6:	431a      	orrs	r2, r3
 8005ea8:	687b      	ldr	r3, [r7, #4]
 8005eaa:	691b      	ldr	r3, [r3, #16]
 8005eac:	431a      	orrs	r2, r3
 8005eae:	687b      	ldr	r3, [r7, #4]
 8005eb0:	695b      	ldr	r3, [r3, #20]
 8005eb2:	431a      	orrs	r2, r3
 8005eb4:	687b      	ldr	r3, [r7, #4]
 8005eb6:	699b      	ldr	r3, [r3, #24]
 8005eb8:	431a      	orrs	r2, r3
 8005eba:	687b      	ldr	r3, [r7, #4]
 8005ebc:	69db      	ldr	r3, [r3, #28]
 8005ebe:	431a      	orrs	r2, r3
 8005ec0:	687b      	ldr	r3, [r7, #4]
 8005ec2:	6a1b      	ldr	r3, [r3, #32]
 8005ec4:	4313      	orrs	r3, r2
 8005ec6:	697a      	ldr	r2, [r7, #20]
 8005ec8:	4313      	orrs	r3, r2
 8005eca:	617b      	str	r3, [r7, #20]
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ed0:	2b04      	cmp	r3, #4
 8005ed2:	d107      	bne.n	8005ee4 <HAL_DMA_Init+0xc8>
 8005ed4:	687b      	ldr	r3, [r7, #4]
 8005ed6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005ed8:	687b      	ldr	r3, [r7, #4]
 8005eda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005edc:	4313      	orrs	r3, r2
 8005ede:	697a      	ldr	r2, [r7, #20]
 8005ee0:	4313      	orrs	r3, r2
 8005ee2:	617b      	str	r3, [r7, #20]
 8005ee4:	687b      	ldr	r3, [r7, #4]
 8005ee6:	681b      	ldr	r3, [r3, #0]
 8005ee8:	697a      	ldr	r2, [r7, #20]
 8005eea:	601a      	str	r2, [r3, #0]
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	681b      	ldr	r3, [r3, #0]
 8005ef0:	695b      	ldr	r3, [r3, #20]
 8005ef2:	617b      	str	r3, [r7, #20]
 8005ef4:	697b      	ldr	r3, [r7, #20]
 8005ef6:	f023 0307 	bic.w	r3, r3, #7
 8005efa:	617b      	str	r3, [r7, #20]
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f00:	697a      	ldr	r2, [r7, #20]
 8005f02:	4313      	orrs	r3, r2
 8005f04:	617b      	str	r3, [r7, #20]
 8005f06:	687b      	ldr	r3, [r7, #4]
 8005f08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f0a:	2b04      	cmp	r3, #4
 8005f0c:	d117      	bne.n	8005f3e <HAL_DMA_Init+0x122>
 8005f0e:	687b      	ldr	r3, [r7, #4]
 8005f10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005f12:	697a      	ldr	r2, [r7, #20]
 8005f14:	4313      	orrs	r3, r2
 8005f16:	617b      	str	r3, [r7, #20]
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005f1c:	2b00      	cmp	r3, #0
 8005f1e:	d00e      	beq.n	8005f3e <HAL_DMA_Init+0x122>
 8005f20:	6878      	ldr	r0, [r7, #4]
 8005f22:	f000 f8bd 	bl	80060a0 <DMA_CheckFifoParam>
 8005f26:	4603      	mov	r3, r0
 8005f28:	2b00      	cmp	r3, #0
 8005f2a:	d008      	beq.n	8005f3e <HAL_DMA_Init+0x122>
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	2240      	movs	r2, #64	; 0x40
 8005f30:	655a      	str	r2, [r3, #84]	; 0x54
 8005f32:	687b      	ldr	r3, [r7, #4]
 8005f34:	2201      	movs	r2, #1
 8005f36:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005f3a:	2301      	movs	r3, #1
 8005f3c:	e016      	b.n	8005f6c <HAL_DMA_Init+0x150>
 8005f3e:	687b      	ldr	r3, [r7, #4]
 8005f40:	681b      	ldr	r3, [r3, #0]
 8005f42:	697a      	ldr	r2, [r7, #20]
 8005f44:	615a      	str	r2, [r3, #20]
 8005f46:	6878      	ldr	r0, [r7, #4]
 8005f48:	f000 f874 	bl	8006034 <DMA_CalcBaseAndBitshift>
 8005f4c:	4603      	mov	r3, r0
 8005f4e:	60fb      	str	r3, [r7, #12]
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005f54:	223f      	movs	r2, #63	; 0x3f
 8005f56:	409a      	lsls	r2, r3
 8005f58:	68fb      	ldr	r3, [r7, #12]
 8005f5a:	609a      	str	r2, [r3, #8]
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	2200      	movs	r2, #0
 8005f60:	655a      	str	r2, [r3, #84]	; 0x54
 8005f62:	687b      	ldr	r3, [r7, #4]
 8005f64:	2201      	movs	r2, #1
 8005f66:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005f6a:	2300      	movs	r3, #0
 8005f6c:	4618      	mov	r0, r3
 8005f6e:	3718      	adds	r7, #24
 8005f70:	46bd      	mov	sp, r7
 8005f72:	bd80      	pop	{r7, pc}
 8005f74:	f010803f 	.word	0xf010803f

08005f78 <HAL_DMA_DeInit>:
 8005f78:	b580      	push	{r7, lr}
 8005f7a:	b084      	sub	sp, #16
 8005f7c:	af00      	add	r7, sp, #0
 8005f7e:	6078      	str	r0, [r7, #4]
 8005f80:	687b      	ldr	r3, [r7, #4]
 8005f82:	2b00      	cmp	r3, #0
 8005f84:	d101      	bne.n	8005f8a <HAL_DMA_DeInit+0x12>
 8005f86:	2301      	movs	r3, #1
 8005f88:	e050      	b.n	800602c <HAL_DMA_DeInit+0xb4>
 8005f8a:	687b      	ldr	r3, [r7, #4]
 8005f8c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005f90:	b2db      	uxtb	r3, r3
 8005f92:	2b02      	cmp	r3, #2
 8005f94:	d101      	bne.n	8005f9a <HAL_DMA_DeInit+0x22>
 8005f96:	2302      	movs	r3, #2
 8005f98:	e048      	b.n	800602c <HAL_DMA_DeInit+0xb4>
 8005f9a:	687b      	ldr	r3, [r7, #4]
 8005f9c:	681b      	ldr	r3, [r3, #0]
 8005f9e:	681a      	ldr	r2, [r3, #0]
 8005fa0:	687b      	ldr	r3, [r7, #4]
 8005fa2:	681b      	ldr	r3, [r3, #0]
 8005fa4:	f022 0201 	bic.w	r2, r2, #1
 8005fa8:	601a      	str	r2, [r3, #0]
 8005faa:	687b      	ldr	r3, [r7, #4]
 8005fac:	681b      	ldr	r3, [r3, #0]
 8005fae:	2200      	movs	r2, #0
 8005fb0:	601a      	str	r2, [r3, #0]
 8005fb2:	687b      	ldr	r3, [r7, #4]
 8005fb4:	681b      	ldr	r3, [r3, #0]
 8005fb6:	2200      	movs	r2, #0
 8005fb8:	605a      	str	r2, [r3, #4]
 8005fba:	687b      	ldr	r3, [r7, #4]
 8005fbc:	681b      	ldr	r3, [r3, #0]
 8005fbe:	2200      	movs	r2, #0
 8005fc0:	609a      	str	r2, [r3, #8]
 8005fc2:	687b      	ldr	r3, [r7, #4]
 8005fc4:	681b      	ldr	r3, [r3, #0]
 8005fc6:	2200      	movs	r2, #0
 8005fc8:	60da      	str	r2, [r3, #12]
 8005fca:	687b      	ldr	r3, [r7, #4]
 8005fcc:	681b      	ldr	r3, [r3, #0]
 8005fce:	2200      	movs	r2, #0
 8005fd0:	611a      	str	r2, [r3, #16]
 8005fd2:	687b      	ldr	r3, [r7, #4]
 8005fd4:	681b      	ldr	r3, [r3, #0]
 8005fd6:	2221      	movs	r2, #33	; 0x21
 8005fd8:	615a      	str	r2, [r3, #20]
 8005fda:	6878      	ldr	r0, [r7, #4]
 8005fdc:	f000 f82a 	bl	8006034 <DMA_CalcBaseAndBitshift>
 8005fe0:	4603      	mov	r3, r0
 8005fe2:	60fb      	str	r3, [r7, #12]
 8005fe4:	687b      	ldr	r3, [r7, #4]
 8005fe6:	2200      	movs	r2, #0
 8005fe8:	63da      	str	r2, [r3, #60]	; 0x3c
 8005fea:	687b      	ldr	r3, [r7, #4]
 8005fec:	2200      	movs	r2, #0
 8005fee:	641a      	str	r2, [r3, #64]	; 0x40
 8005ff0:	687b      	ldr	r3, [r7, #4]
 8005ff2:	2200      	movs	r2, #0
 8005ff4:	645a      	str	r2, [r3, #68]	; 0x44
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	2200      	movs	r2, #0
 8005ffa:	649a      	str	r2, [r3, #72]	; 0x48
 8005ffc:	687b      	ldr	r3, [r7, #4]
 8005ffe:	2200      	movs	r2, #0
 8006000:	64da      	str	r2, [r3, #76]	; 0x4c
 8006002:	687b      	ldr	r3, [r7, #4]
 8006004:	2200      	movs	r2, #0
 8006006:	651a      	str	r2, [r3, #80]	; 0x50
 8006008:	687b      	ldr	r3, [r7, #4]
 800600a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800600c:	223f      	movs	r2, #63	; 0x3f
 800600e:	409a      	lsls	r2, r3
 8006010:	68fb      	ldr	r3, [r7, #12]
 8006012:	609a      	str	r2, [r3, #8]
 8006014:	687b      	ldr	r3, [r7, #4]
 8006016:	2200      	movs	r2, #0
 8006018:	655a      	str	r2, [r3, #84]	; 0x54
 800601a:	687b      	ldr	r3, [r7, #4]
 800601c:	2200      	movs	r2, #0
 800601e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006022:	687b      	ldr	r3, [r7, #4]
 8006024:	2200      	movs	r2, #0
 8006026:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800602a:	2300      	movs	r3, #0
 800602c:	4618      	mov	r0, r3
 800602e:	3710      	adds	r7, #16
 8006030:	46bd      	mov	sp, r7
 8006032:	bd80      	pop	{r7, pc}

08006034 <DMA_CalcBaseAndBitshift>:
 8006034:	b480      	push	{r7}
 8006036:	b085      	sub	sp, #20
 8006038:	af00      	add	r7, sp, #0
 800603a:	6078      	str	r0, [r7, #4]
 800603c:	687b      	ldr	r3, [r7, #4]
 800603e:	681b      	ldr	r3, [r3, #0]
 8006040:	b2db      	uxtb	r3, r3
 8006042:	3b10      	subs	r3, #16
 8006044:	4a14      	ldr	r2, [pc, #80]	; (8006098 <DMA_CalcBaseAndBitshift+0x64>)
 8006046:	fba2 2303 	umull	r2, r3, r2, r3
 800604a:	091b      	lsrs	r3, r3, #4
 800604c:	60fb      	str	r3, [r7, #12]
 800604e:	4a13      	ldr	r2, [pc, #76]	; (800609c <DMA_CalcBaseAndBitshift+0x68>)
 8006050:	68fb      	ldr	r3, [r7, #12]
 8006052:	4413      	add	r3, r2
 8006054:	781b      	ldrb	r3, [r3, #0]
 8006056:	461a      	mov	r2, r3
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	65da      	str	r2, [r3, #92]	; 0x5c
 800605c:	68fb      	ldr	r3, [r7, #12]
 800605e:	2b03      	cmp	r3, #3
 8006060:	d909      	bls.n	8006076 <DMA_CalcBaseAndBitshift+0x42>
 8006062:	687b      	ldr	r3, [r7, #4]
 8006064:	681b      	ldr	r3, [r3, #0]
 8006066:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800606a:	f023 0303 	bic.w	r3, r3, #3
 800606e:	1d1a      	adds	r2, r3, #4
 8006070:	687b      	ldr	r3, [r7, #4]
 8006072:	659a      	str	r2, [r3, #88]	; 0x58
 8006074:	e007      	b.n	8006086 <DMA_CalcBaseAndBitshift+0x52>
 8006076:	687b      	ldr	r3, [r7, #4]
 8006078:	681b      	ldr	r3, [r3, #0]
 800607a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800607e:	f023 0303 	bic.w	r3, r3, #3
 8006082:	687a      	ldr	r2, [r7, #4]
 8006084:	6593      	str	r3, [r2, #88]	; 0x58
 8006086:	687b      	ldr	r3, [r7, #4]
 8006088:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800608a:	4618      	mov	r0, r3
 800608c:	3714      	adds	r7, #20
 800608e:	46bd      	mov	sp, r7
 8006090:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006094:	4770      	bx	lr
 8006096:	bf00      	nop
 8006098:	aaaaaaab 	.word	0xaaaaaaab
 800609c:	08015204 	.word	0x08015204

080060a0 <DMA_CheckFifoParam>:
 80060a0:	b480      	push	{r7}
 80060a2:	b085      	sub	sp, #20
 80060a4:	af00      	add	r7, sp, #0
 80060a6:	6078      	str	r0, [r7, #4]
 80060a8:	2300      	movs	r3, #0
 80060aa:	73fb      	strb	r3, [r7, #15]
 80060ac:	687b      	ldr	r3, [r7, #4]
 80060ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80060b0:	60bb      	str	r3, [r7, #8]
 80060b2:	687b      	ldr	r3, [r7, #4]
 80060b4:	699b      	ldr	r3, [r3, #24]
 80060b6:	2b00      	cmp	r3, #0
 80060b8:	d11f      	bne.n	80060fa <DMA_CheckFifoParam+0x5a>
 80060ba:	68bb      	ldr	r3, [r7, #8]
 80060bc:	2b03      	cmp	r3, #3
 80060be:	d856      	bhi.n	800616e <DMA_CheckFifoParam+0xce>
 80060c0:	a201      	add	r2, pc, #4	; (adr r2, 80060c8 <DMA_CheckFifoParam+0x28>)
 80060c2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80060c6:	bf00      	nop
 80060c8:	080060d9 	.word	0x080060d9
 80060cc:	080060eb 	.word	0x080060eb
 80060d0:	080060d9 	.word	0x080060d9
 80060d4:	0800616f 	.word	0x0800616f
 80060d8:	687b      	ldr	r3, [r7, #4]
 80060da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80060dc:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80060e0:	2b00      	cmp	r3, #0
 80060e2:	d046      	beq.n	8006172 <DMA_CheckFifoParam+0xd2>
 80060e4:	2301      	movs	r3, #1
 80060e6:	73fb      	strb	r3, [r7, #15]
 80060e8:	e043      	b.n	8006172 <DMA_CheckFifoParam+0xd2>
 80060ea:	687b      	ldr	r3, [r7, #4]
 80060ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80060ee:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80060f2:	d140      	bne.n	8006176 <DMA_CheckFifoParam+0xd6>
 80060f4:	2301      	movs	r3, #1
 80060f6:	73fb      	strb	r3, [r7, #15]
 80060f8:	e03d      	b.n	8006176 <DMA_CheckFifoParam+0xd6>
 80060fa:	687b      	ldr	r3, [r7, #4]
 80060fc:	699b      	ldr	r3, [r3, #24]
 80060fe:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006102:	d121      	bne.n	8006148 <DMA_CheckFifoParam+0xa8>
 8006104:	68bb      	ldr	r3, [r7, #8]
 8006106:	2b03      	cmp	r3, #3
 8006108:	d837      	bhi.n	800617a <DMA_CheckFifoParam+0xda>
 800610a:	a201      	add	r2, pc, #4	; (adr r2, 8006110 <DMA_CheckFifoParam+0x70>)
 800610c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006110:	08006121 	.word	0x08006121
 8006114:	08006127 	.word	0x08006127
 8006118:	08006121 	.word	0x08006121
 800611c:	08006139 	.word	0x08006139
 8006120:	2301      	movs	r3, #1
 8006122:	73fb      	strb	r3, [r7, #15]
 8006124:	e030      	b.n	8006188 <DMA_CheckFifoParam+0xe8>
 8006126:	687b      	ldr	r3, [r7, #4]
 8006128:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800612a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800612e:	2b00      	cmp	r3, #0
 8006130:	d025      	beq.n	800617e <DMA_CheckFifoParam+0xde>
 8006132:	2301      	movs	r3, #1
 8006134:	73fb      	strb	r3, [r7, #15]
 8006136:	e022      	b.n	800617e <DMA_CheckFifoParam+0xde>
 8006138:	687b      	ldr	r3, [r7, #4]
 800613a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800613c:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8006140:	d11f      	bne.n	8006182 <DMA_CheckFifoParam+0xe2>
 8006142:	2301      	movs	r3, #1
 8006144:	73fb      	strb	r3, [r7, #15]
 8006146:	e01c      	b.n	8006182 <DMA_CheckFifoParam+0xe2>
 8006148:	68bb      	ldr	r3, [r7, #8]
 800614a:	2b02      	cmp	r3, #2
 800614c:	d903      	bls.n	8006156 <DMA_CheckFifoParam+0xb6>
 800614e:	68bb      	ldr	r3, [r7, #8]
 8006150:	2b03      	cmp	r3, #3
 8006152:	d003      	beq.n	800615c <DMA_CheckFifoParam+0xbc>
 8006154:	e018      	b.n	8006188 <DMA_CheckFifoParam+0xe8>
 8006156:	2301      	movs	r3, #1
 8006158:	73fb      	strb	r3, [r7, #15]
 800615a:	e015      	b.n	8006188 <DMA_CheckFifoParam+0xe8>
 800615c:	687b      	ldr	r3, [r7, #4]
 800615e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006160:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8006164:	2b00      	cmp	r3, #0
 8006166:	d00e      	beq.n	8006186 <DMA_CheckFifoParam+0xe6>
 8006168:	2301      	movs	r3, #1
 800616a:	73fb      	strb	r3, [r7, #15]
 800616c:	e00b      	b.n	8006186 <DMA_CheckFifoParam+0xe6>
 800616e:	bf00      	nop
 8006170:	e00a      	b.n	8006188 <DMA_CheckFifoParam+0xe8>
 8006172:	bf00      	nop
 8006174:	e008      	b.n	8006188 <DMA_CheckFifoParam+0xe8>
 8006176:	bf00      	nop
 8006178:	e006      	b.n	8006188 <DMA_CheckFifoParam+0xe8>
 800617a:	bf00      	nop
 800617c:	e004      	b.n	8006188 <DMA_CheckFifoParam+0xe8>
 800617e:	bf00      	nop
 8006180:	e002      	b.n	8006188 <DMA_CheckFifoParam+0xe8>
 8006182:	bf00      	nop
 8006184:	e000      	b.n	8006188 <DMA_CheckFifoParam+0xe8>
 8006186:	bf00      	nop
 8006188:	7bfb      	ldrb	r3, [r7, #15]
 800618a:	4618      	mov	r0, r3
 800618c:	3714      	adds	r7, #20
 800618e:	46bd      	mov	sp, r7
 8006190:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006194:	4770      	bx	lr
 8006196:	bf00      	nop

08006198 <HAL_DMA2D_Init>:
 8006198:	b580      	push	{r7, lr}
 800619a:	b082      	sub	sp, #8
 800619c:	af00      	add	r7, sp, #0
 800619e:	6078      	str	r0, [r7, #4]
 80061a0:	687b      	ldr	r3, [r7, #4]
 80061a2:	2b00      	cmp	r3, #0
 80061a4:	d101      	bne.n	80061aa <HAL_DMA2D_Init+0x12>
 80061a6:	2301      	movs	r3, #1
 80061a8:	e03b      	b.n	8006222 <HAL_DMA2D_Init+0x8a>
 80061aa:	687b      	ldr	r3, [r7, #4]
 80061ac:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80061b0:	b2db      	uxtb	r3, r3
 80061b2:	2b00      	cmp	r3, #0
 80061b4:	d106      	bne.n	80061c4 <HAL_DMA2D_Init+0x2c>
 80061b6:	687b      	ldr	r3, [r7, #4]
 80061b8:	2200      	movs	r2, #0
 80061ba:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80061be:	6878      	ldr	r0, [r7, #4]
 80061c0:	f000 f833 	bl	800622a <HAL_DMA2D_MspInit>
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	2202      	movs	r2, #2
 80061c8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	681b      	ldr	r3, [r3, #0]
 80061d2:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 80061d6:	687b      	ldr	r3, [r7, #4]
 80061d8:	685a      	ldr	r2, [r3, #4]
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	681b      	ldr	r3, [r3, #0]
 80061de:	430a      	orrs	r2, r1
 80061e0:	601a      	str	r2, [r3, #0]
 80061e2:	687b      	ldr	r3, [r7, #4]
 80061e4:	681b      	ldr	r3, [r3, #0]
 80061e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80061e8:	f023 0107 	bic.w	r1, r3, #7
 80061ec:	687b      	ldr	r3, [r7, #4]
 80061ee:	689a      	ldr	r2, [r3, #8]
 80061f0:	687b      	ldr	r3, [r7, #4]
 80061f2:	681b      	ldr	r3, [r3, #0]
 80061f4:	430a      	orrs	r2, r1
 80061f6:	635a      	str	r2, [r3, #52]	; 0x34
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061fe:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8006202:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006206:	687a      	ldr	r2, [r7, #4]
 8006208:	68d1      	ldr	r1, [r2, #12]
 800620a:	687a      	ldr	r2, [r7, #4]
 800620c:	6812      	ldr	r2, [r2, #0]
 800620e:	430b      	orrs	r3, r1
 8006210:	6413      	str	r3, [r2, #64]	; 0x40
 8006212:	687b      	ldr	r3, [r7, #4]
 8006214:	2200      	movs	r2, #0
 8006216:	63da      	str	r2, [r3, #60]	; 0x3c
 8006218:	687b      	ldr	r3, [r7, #4]
 800621a:	2201      	movs	r2, #1
 800621c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8006220:	2300      	movs	r3, #0
 8006222:	4618      	mov	r0, r3
 8006224:	3708      	adds	r7, #8
 8006226:	46bd      	mov	sp, r7
 8006228:	bd80      	pop	{r7, pc}

0800622a <HAL_DMA2D_MspInit>:
 800622a:	b480      	push	{r7}
 800622c:	b083      	sub	sp, #12
 800622e:	af00      	add	r7, sp, #0
 8006230:	6078      	str	r0, [r7, #4]
 8006232:	bf00      	nop
 8006234:	370c      	adds	r7, #12
 8006236:	46bd      	mov	sp, r7
 8006238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800623c:	4770      	bx	lr

0800623e <HAL_DMA2D_Start>:
 800623e:	b580      	push	{r7, lr}
 8006240:	b086      	sub	sp, #24
 8006242:	af02      	add	r7, sp, #8
 8006244:	60f8      	str	r0, [r7, #12]
 8006246:	60b9      	str	r1, [r7, #8]
 8006248:	607a      	str	r2, [r7, #4]
 800624a:	603b      	str	r3, [r7, #0]
 800624c:	68fb      	ldr	r3, [r7, #12]
 800624e:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8006252:	2b01      	cmp	r3, #1
 8006254:	d101      	bne.n	800625a <HAL_DMA2D_Start+0x1c>
 8006256:	2302      	movs	r3, #2
 8006258:	e018      	b.n	800628c <HAL_DMA2D_Start+0x4e>
 800625a:	68fb      	ldr	r3, [r7, #12]
 800625c:	2201      	movs	r2, #1
 800625e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8006262:	68fb      	ldr	r3, [r7, #12]
 8006264:	2202      	movs	r2, #2
 8006266:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800626a:	69bb      	ldr	r3, [r7, #24]
 800626c:	9300      	str	r3, [sp, #0]
 800626e:	683b      	ldr	r3, [r7, #0]
 8006270:	687a      	ldr	r2, [r7, #4]
 8006272:	68b9      	ldr	r1, [r7, #8]
 8006274:	68f8      	ldr	r0, [r7, #12]
 8006276:	f000 f989 	bl	800658c <DMA2D_SetConfig>
 800627a:	68fb      	ldr	r3, [r7, #12]
 800627c:	681b      	ldr	r3, [r3, #0]
 800627e:	681a      	ldr	r2, [r3, #0]
 8006280:	68fb      	ldr	r3, [r7, #12]
 8006282:	681b      	ldr	r3, [r3, #0]
 8006284:	f042 0201 	orr.w	r2, r2, #1
 8006288:	601a      	str	r2, [r3, #0]
 800628a:	2300      	movs	r3, #0
 800628c:	4618      	mov	r0, r3
 800628e:	3710      	adds	r7, #16
 8006290:	46bd      	mov	sp, r7
 8006292:	bd80      	pop	{r7, pc}

08006294 <HAL_DMA2D_PollForTransfer>:
 8006294:	b580      	push	{r7, lr}
 8006296:	b086      	sub	sp, #24
 8006298:	af00      	add	r7, sp, #0
 800629a:	6078      	str	r0, [r7, #4]
 800629c:	6039      	str	r1, [r7, #0]
 800629e:	2300      	movs	r3, #0
 80062a0:	60fb      	str	r3, [r7, #12]
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	681b      	ldr	r3, [r3, #0]
 80062a6:	681b      	ldr	r3, [r3, #0]
 80062a8:	f003 0301 	and.w	r3, r3, #1
 80062ac:	2b00      	cmp	r3, #0
 80062ae:	d056      	beq.n	800635e <HAL_DMA2D_PollForTransfer+0xca>
 80062b0:	f7ff fc72 	bl	8005b98 <HAL_GetTick>
 80062b4:	6178      	str	r0, [r7, #20]
 80062b6:	e04b      	b.n	8006350 <HAL_DMA2D_PollForTransfer+0xbc>
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	681b      	ldr	r3, [r3, #0]
 80062bc:	685b      	ldr	r3, [r3, #4]
 80062be:	60fb      	str	r3, [r7, #12]
 80062c0:	68fb      	ldr	r3, [r7, #12]
 80062c2:	f003 0321 	and.w	r3, r3, #33	; 0x21
 80062c6:	2b00      	cmp	r3, #0
 80062c8:	d023      	beq.n	8006312 <HAL_DMA2D_PollForTransfer+0x7e>
 80062ca:	68fb      	ldr	r3, [r7, #12]
 80062cc:	f003 0320 	and.w	r3, r3, #32
 80062d0:	2b00      	cmp	r3, #0
 80062d2:	d005      	beq.n	80062e0 <HAL_DMA2D_PollForTransfer+0x4c>
 80062d4:	687b      	ldr	r3, [r7, #4]
 80062d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80062d8:	f043 0202 	orr.w	r2, r3, #2
 80062dc:	687b      	ldr	r3, [r7, #4]
 80062de:	63da      	str	r2, [r3, #60]	; 0x3c
 80062e0:	68fb      	ldr	r3, [r7, #12]
 80062e2:	f003 0301 	and.w	r3, r3, #1
 80062e6:	2b00      	cmp	r3, #0
 80062e8:	d005      	beq.n	80062f6 <HAL_DMA2D_PollForTransfer+0x62>
 80062ea:	687b      	ldr	r3, [r7, #4]
 80062ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80062ee:	f043 0201 	orr.w	r2, r3, #1
 80062f2:	687b      	ldr	r3, [r7, #4]
 80062f4:	63da      	str	r2, [r3, #60]	; 0x3c
 80062f6:	687b      	ldr	r3, [r7, #4]
 80062f8:	681b      	ldr	r3, [r3, #0]
 80062fa:	2221      	movs	r2, #33	; 0x21
 80062fc:	609a      	str	r2, [r3, #8]
 80062fe:	687b      	ldr	r3, [r7, #4]
 8006300:	2204      	movs	r2, #4
 8006302:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8006306:	687b      	ldr	r3, [r7, #4]
 8006308:	2200      	movs	r2, #0
 800630a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800630e:	2301      	movs	r3, #1
 8006310:	e0a5      	b.n	800645e <HAL_DMA2D_PollForTransfer+0x1ca>
 8006312:	683b      	ldr	r3, [r7, #0]
 8006314:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006318:	d01a      	beq.n	8006350 <HAL_DMA2D_PollForTransfer+0xbc>
 800631a:	f7ff fc3d 	bl	8005b98 <HAL_GetTick>
 800631e:	4602      	mov	r2, r0
 8006320:	697b      	ldr	r3, [r7, #20]
 8006322:	1ad3      	subs	r3, r2, r3
 8006324:	683a      	ldr	r2, [r7, #0]
 8006326:	429a      	cmp	r2, r3
 8006328:	d302      	bcc.n	8006330 <HAL_DMA2D_PollForTransfer+0x9c>
 800632a:	683b      	ldr	r3, [r7, #0]
 800632c:	2b00      	cmp	r3, #0
 800632e:	d10f      	bne.n	8006350 <HAL_DMA2D_PollForTransfer+0xbc>
 8006330:	687b      	ldr	r3, [r7, #4]
 8006332:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006334:	f043 0220 	orr.w	r2, r3, #32
 8006338:	687b      	ldr	r3, [r7, #4]
 800633a:	63da      	str	r2, [r3, #60]	; 0x3c
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	2203      	movs	r2, #3
 8006340:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	2200      	movs	r2, #0
 8006348:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800634c:	2303      	movs	r3, #3
 800634e:	e086      	b.n	800645e <HAL_DMA2D_PollForTransfer+0x1ca>
 8006350:	687b      	ldr	r3, [r7, #4]
 8006352:	681b      	ldr	r3, [r3, #0]
 8006354:	685b      	ldr	r3, [r3, #4]
 8006356:	f003 0302 	and.w	r3, r3, #2
 800635a:	2b00      	cmp	r3, #0
 800635c:	d0ac      	beq.n	80062b8 <HAL_DMA2D_PollForTransfer+0x24>
 800635e:	687b      	ldr	r3, [r7, #4]
 8006360:	681b      	ldr	r3, [r3, #0]
 8006362:	69db      	ldr	r3, [r3, #28]
 8006364:	f003 0320 	and.w	r3, r3, #32
 8006368:	613b      	str	r3, [r7, #16]
 800636a:	687b      	ldr	r3, [r7, #4]
 800636c:	681b      	ldr	r3, [r3, #0]
 800636e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006370:	f003 0320 	and.w	r3, r3, #32
 8006374:	693a      	ldr	r2, [r7, #16]
 8006376:	4313      	orrs	r3, r2
 8006378:	613b      	str	r3, [r7, #16]
 800637a:	693b      	ldr	r3, [r7, #16]
 800637c:	2b00      	cmp	r3, #0
 800637e:	d061      	beq.n	8006444 <HAL_DMA2D_PollForTransfer+0x1b0>
 8006380:	f7ff fc0a 	bl	8005b98 <HAL_GetTick>
 8006384:	6178      	str	r0, [r7, #20]
 8006386:	e056      	b.n	8006436 <HAL_DMA2D_PollForTransfer+0x1a2>
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	681b      	ldr	r3, [r3, #0]
 800638c:	685b      	ldr	r3, [r3, #4]
 800638e:	60fb      	str	r3, [r7, #12]
 8006390:	68fb      	ldr	r3, [r7, #12]
 8006392:	f003 0329 	and.w	r3, r3, #41	; 0x29
 8006396:	2b00      	cmp	r3, #0
 8006398:	d02e      	beq.n	80063f8 <HAL_DMA2D_PollForTransfer+0x164>
 800639a:	68fb      	ldr	r3, [r7, #12]
 800639c:	f003 0308 	and.w	r3, r3, #8
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	d005      	beq.n	80063b0 <HAL_DMA2D_PollForTransfer+0x11c>
 80063a4:	687b      	ldr	r3, [r7, #4]
 80063a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80063a8:	f043 0204 	orr.w	r2, r3, #4
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	63da      	str	r2, [r3, #60]	; 0x3c
 80063b0:	68fb      	ldr	r3, [r7, #12]
 80063b2:	f003 0320 	and.w	r3, r3, #32
 80063b6:	2b00      	cmp	r3, #0
 80063b8:	d005      	beq.n	80063c6 <HAL_DMA2D_PollForTransfer+0x132>
 80063ba:	687b      	ldr	r3, [r7, #4]
 80063bc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80063be:	f043 0202 	orr.w	r2, r3, #2
 80063c2:	687b      	ldr	r3, [r7, #4]
 80063c4:	63da      	str	r2, [r3, #60]	; 0x3c
 80063c6:	68fb      	ldr	r3, [r7, #12]
 80063c8:	f003 0301 	and.w	r3, r3, #1
 80063cc:	2b00      	cmp	r3, #0
 80063ce:	d005      	beq.n	80063dc <HAL_DMA2D_PollForTransfer+0x148>
 80063d0:	687b      	ldr	r3, [r7, #4]
 80063d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80063d4:	f043 0201 	orr.w	r2, r3, #1
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	63da      	str	r2, [r3, #60]	; 0x3c
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	681b      	ldr	r3, [r3, #0]
 80063e0:	2229      	movs	r2, #41	; 0x29
 80063e2:	609a      	str	r2, [r3, #8]
 80063e4:	687b      	ldr	r3, [r7, #4]
 80063e6:	2204      	movs	r2, #4
 80063e8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80063ec:	687b      	ldr	r3, [r7, #4]
 80063ee:	2200      	movs	r2, #0
 80063f0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80063f4:	2301      	movs	r3, #1
 80063f6:	e032      	b.n	800645e <HAL_DMA2D_PollForTransfer+0x1ca>
 80063f8:	683b      	ldr	r3, [r7, #0]
 80063fa:	f1b3 3fff 	cmp.w	r3, #4294967295
 80063fe:	d01a      	beq.n	8006436 <HAL_DMA2D_PollForTransfer+0x1a2>
 8006400:	f7ff fbca 	bl	8005b98 <HAL_GetTick>
 8006404:	4602      	mov	r2, r0
 8006406:	697b      	ldr	r3, [r7, #20]
 8006408:	1ad3      	subs	r3, r2, r3
 800640a:	683a      	ldr	r2, [r7, #0]
 800640c:	429a      	cmp	r2, r3
 800640e:	d302      	bcc.n	8006416 <HAL_DMA2D_PollForTransfer+0x182>
 8006410:	683b      	ldr	r3, [r7, #0]
 8006412:	2b00      	cmp	r3, #0
 8006414:	d10f      	bne.n	8006436 <HAL_DMA2D_PollForTransfer+0x1a2>
 8006416:	687b      	ldr	r3, [r7, #4]
 8006418:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800641a:	f043 0220 	orr.w	r2, r3, #32
 800641e:	687b      	ldr	r3, [r7, #4]
 8006420:	63da      	str	r2, [r3, #60]	; 0x3c
 8006422:	687b      	ldr	r3, [r7, #4]
 8006424:	2203      	movs	r2, #3
 8006426:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800642a:	687b      	ldr	r3, [r7, #4]
 800642c:	2200      	movs	r2, #0
 800642e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8006432:	2303      	movs	r3, #3
 8006434:	e013      	b.n	800645e <HAL_DMA2D_PollForTransfer+0x1ca>
 8006436:	687b      	ldr	r3, [r7, #4]
 8006438:	681b      	ldr	r3, [r3, #0]
 800643a:	685b      	ldr	r3, [r3, #4]
 800643c:	f003 0310 	and.w	r3, r3, #16
 8006440:	2b00      	cmp	r3, #0
 8006442:	d0a1      	beq.n	8006388 <HAL_DMA2D_PollForTransfer+0xf4>
 8006444:	687b      	ldr	r3, [r7, #4]
 8006446:	681b      	ldr	r3, [r3, #0]
 8006448:	2212      	movs	r2, #18
 800644a:	609a      	str	r2, [r3, #8]
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	2201      	movs	r2, #1
 8006450:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	2200      	movs	r2, #0
 8006458:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800645c:	2300      	movs	r3, #0
 800645e:	4618      	mov	r0, r3
 8006460:	3718      	adds	r7, #24
 8006462:	46bd      	mov	sp, r7
 8006464:	bd80      	pop	{r7, pc}
	...

08006468 <HAL_DMA2D_ConfigLayer>:
 8006468:	b480      	push	{r7}
 800646a:	b087      	sub	sp, #28
 800646c:	af00      	add	r7, sp, #0
 800646e:	6078      	str	r0, [r7, #4]
 8006470:	6039      	str	r1, [r7, #0]
 8006472:	687b      	ldr	r3, [r7, #4]
 8006474:	685b      	ldr	r3, [r3, #4]
 8006476:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800647a:	687b      	ldr	r3, [r7, #4]
 800647c:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8006480:	2b01      	cmp	r3, #1
 8006482:	d101      	bne.n	8006488 <HAL_DMA2D_ConfigLayer+0x20>
 8006484:	2302      	movs	r3, #2
 8006486:	e079      	b.n	800657c <HAL_DMA2D_ConfigLayer+0x114>
 8006488:	687b      	ldr	r3, [r7, #4]
 800648a:	2201      	movs	r2, #1
 800648c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	2202      	movs	r2, #2
 8006494:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8006498:	683b      	ldr	r3, [r7, #0]
 800649a:	011b      	lsls	r3, r3, #4
 800649c:	3318      	adds	r3, #24
 800649e:	687a      	ldr	r2, [r7, #4]
 80064a0:	4413      	add	r3, r2
 80064a2:	613b      	str	r3, [r7, #16]
 80064a4:	693b      	ldr	r3, [r7, #16]
 80064a6:	685a      	ldr	r2, [r3, #4]
 80064a8:	693b      	ldr	r3, [r7, #16]
 80064aa:	689b      	ldr	r3, [r3, #8]
 80064ac:	041b      	lsls	r3, r3, #16
 80064ae:	4313      	orrs	r3, r2
 80064b0:	617b      	str	r3, [r7, #20]
 80064b2:	4b35      	ldr	r3, [pc, #212]	; (8006588 <HAL_DMA2D_ConfigLayer+0x120>)
 80064b4:	60fb      	str	r3, [r7, #12]
 80064b6:	693b      	ldr	r3, [r7, #16]
 80064b8:	685b      	ldr	r3, [r3, #4]
 80064ba:	2b0a      	cmp	r3, #10
 80064bc:	d003      	beq.n	80064c6 <HAL_DMA2D_ConfigLayer+0x5e>
 80064be:	693b      	ldr	r3, [r7, #16]
 80064c0:	685b      	ldr	r3, [r3, #4]
 80064c2:	2b09      	cmp	r3, #9
 80064c4:	d107      	bne.n	80064d6 <HAL_DMA2D_ConfigLayer+0x6e>
 80064c6:	693b      	ldr	r3, [r7, #16]
 80064c8:	68db      	ldr	r3, [r3, #12]
 80064ca:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80064ce:	697a      	ldr	r2, [r7, #20]
 80064d0:	4313      	orrs	r3, r2
 80064d2:	617b      	str	r3, [r7, #20]
 80064d4:	e005      	b.n	80064e2 <HAL_DMA2D_ConfigLayer+0x7a>
 80064d6:	693b      	ldr	r3, [r7, #16]
 80064d8:	68db      	ldr	r3, [r3, #12]
 80064da:	061b      	lsls	r3, r3, #24
 80064dc:	697a      	ldr	r2, [r7, #20]
 80064de:	4313      	orrs	r3, r2
 80064e0:	617b      	str	r3, [r7, #20]
 80064e2:	683b      	ldr	r3, [r7, #0]
 80064e4:	2b00      	cmp	r3, #0
 80064e6:	d120      	bne.n	800652a <HAL_DMA2D_ConfigLayer+0xc2>
 80064e8:	687b      	ldr	r3, [r7, #4]
 80064ea:	681b      	ldr	r3, [r3, #0]
 80064ec:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80064ee:	68fb      	ldr	r3, [r7, #12]
 80064f0:	43db      	mvns	r3, r3
 80064f2:	ea02 0103 	and.w	r1, r2, r3
 80064f6:	687b      	ldr	r3, [r7, #4]
 80064f8:	681b      	ldr	r3, [r3, #0]
 80064fa:	697a      	ldr	r2, [r7, #20]
 80064fc:	430a      	orrs	r2, r1
 80064fe:	625a      	str	r2, [r3, #36]	; 0x24
 8006500:	687b      	ldr	r3, [r7, #4]
 8006502:	681b      	ldr	r3, [r3, #0]
 8006504:	693a      	ldr	r2, [r7, #16]
 8006506:	6812      	ldr	r2, [r2, #0]
 8006508:	619a      	str	r2, [r3, #24]
 800650a:	693b      	ldr	r3, [r7, #16]
 800650c:	685b      	ldr	r3, [r3, #4]
 800650e:	2b0a      	cmp	r3, #10
 8006510:	d003      	beq.n	800651a <HAL_DMA2D_ConfigLayer+0xb2>
 8006512:	693b      	ldr	r3, [r7, #16]
 8006514:	685b      	ldr	r3, [r3, #4]
 8006516:	2b09      	cmp	r3, #9
 8006518:	d127      	bne.n	800656a <HAL_DMA2D_ConfigLayer+0x102>
 800651a:	693b      	ldr	r3, [r7, #16]
 800651c:	68da      	ldr	r2, [r3, #12]
 800651e:	687b      	ldr	r3, [r7, #4]
 8006520:	681b      	ldr	r3, [r3, #0]
 8006522:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006526:	629a      	str	r2, [r3, #40]	; 0x28
 8006528:	e01f      	b.n	800656a <HAL_DMA2D_ConfigLayer+0x102>
 800652a:	687b      	ldr	r3, [r7, #4]
 800652c:	681b      	ldr	r3, [r3, #0]
 800652e:	69da      	ldr	r2, [r3, #28]
 8006530:	68fb      	ldr	r3, [r7, #12]
 8006532:	43db      	mvns	r3, r3
 8006534:	ea02 0103 	and.w	r1, r2, r3
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	681b      	ldr	r3, [r3, #0]
 800653c:	697a      	ldr	r2, [r7, #20]
 800653e:	430a      	orrs	r2, r1
 8006540:	61da      	str	r2, [r3, #28]
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	681b      	ldr	r3, [r3, #0]
 8006546:	693a      	ldr	r2, [r7, #16]
 8006548:	6812      	ldr	r2, [r2, #0]
 800654a:	611a      	str	r2, [r3, #16]
 800654c:	693b      	ldr	r3, [r7, #16]
 800654e:	685b      	ldr	r3, [r3, #4]
 8006550:	2b0a      	cmp	r3, #10
 8006552:	d003      	beq.n	800655c <HAL_DMA2D_ConfigLayer+0xf4>
 8006554:	693b      	ldr	r3, [r7, #16]
 8006556:	685b      	ldr	r3, [r3, #4]
 8006558:	2b09      	cmp	r3, #9
 800655a:	d106      	bne.n	800656a <HAL_DMA2D_ConfigLayer+0x102>
 800655c:	693b      	ldr	r3, [r7, #16]
 800655e:	68da      	ldr	r2, [r3, #12]
 8006560:	687b      	ldr	r3, [r7, #4]
 8006562:	681b      	ldr	r3, [r3, #0]
 8006564:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006568:	621a      	str	r2, [r3, #32]
 800656a:	687b      	ldr	r3, [r7, #4]
 800656c:	2201      	movs	r2, #1
 800656e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	2200      	movs	r2, #0
 8006576:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800657a:	2300      	movs	r3, #0
 800657c:	4618      	mov	r0, r3
 800657e:	371c      	adds	r7, #28
 8006580:	46bd      	mov	sp, r7
 8006582:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006586:	4770      	bx	lr
 8006588:	ff03000f 	.word	0xff03000f

0800658c <DMA2D_SetConfig>:
 800658c:	b480      	push	{r7}
 800658e:	b08b      	sub	sp, #44	; 0x2c
 8006590:	af00      	add	r7, sp, #0
 8006592:	60f8      	str	r0, [r7, #12]
 8006594:	60b9      	str	r1, [r7, #8]
 8006596:	607a      	str	r2, [r7, #4]
 8006598:	603b      	str	r3, [r7, #0]
 800659a:	68fb      	ldr	r3, [r7, #12]
 800659c:	681b      	ldr	r3, [r3, #0]
 800659e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80065a0:	f003 4140 	and.w	r1, r3, #3221225472	; 0xc0000000
 80065a4:	683b      	ldr	r3, [r7, #0]
 80065a6:	041a      	lsls	r2, r3, #16
 80065a8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80065aa:	431a      	orrs	r2, r3
 80065ac:	68fb      	ldr	r3, [r7, #12]
 80065ae:	681b      	ldr	r3, [r3, #0]
 80065b0:	430a      	orrs	r2, r1
 80065b2:	645a      	str	r2, [r3, #68]	; 0x44
 80065b4:	68fb      	ldr	r3, [r7, #12]
 80065b6:	681b      	ldr	r3, [r3, #0]
 80065b8:	687a      	ldr	r2, [r7, #4]
 80065ba:	63da      	str	r2, [r3, #60]	; 0x3c
 80065bc:	68fb      	ldr	r3, [r7, #12]
 80065be:	685b      	ldr	r3, [r3, #4]
 80065c0:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80065c4:	d174      	bne.n	80066b0 <DMA2D_SetConfig+0x124>
 80065c6:	68bb      	ldr	r3, [r7, #8]
 80065c8:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80065cc:	623b      	str	r3, [r7, #32]
 80065ce:	68bb      	ldr	r3, [r7, #8]
 80065d0:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80065d4:	61fb      	str	r3, [r7, #28]
 80065d6:	68bb      	ldr	r3, [r7, #8]
 80065d8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80065dc:	61bb      	str	r3, [r7, #24]
 80065de:	68bb      	ldr	r3, [r7, #8]
 80065e0:	b2db      	uxtb	r3, r3
 80065e2:	617b      	str	r3, [r7, #20]
 80065e4:	68fb      	ldr	r3, [r7, #12]
 80065e6:	689b      	ldr	r3, [r3, #8]
 80065e8:	2b00      	cmp	r3, #0
 80065ea:	d108      	bne.n	80065fe <DMA2D_SetConfig+0x72>
 80065ec:	69ba      	ldr	r2, [r7, #24]
 80065ee:	69fb      	ldr	r3, [r7, #28]
 80065f0:	431a      	orrs	r2, r3
 80065f2:	6a3b      	ldr	r3, [r7, #32]
 80065f4:	4313      	orrs	r3, r2
 80065f6:	697a      	ldr	r2, [r7, #20]
 80065f8:	4313      	orrs	r3, r2
 80065fa:	627b      	str	r3, [r7, #36]	; 0x24
 80065fc:	e053      	b.n	80066a6 <DMA2D_SetConfig+0x11a>
 80065fe:	68fb      	ldr	r3, [r7, #12]
 8006600:	689b      	ldr	r3, [r3, #8]
 8006602:	2b01      	cmp	r3, #1
 8006604:	d106      	bne.n	8006614 <DMA2D_SetConfig+0x88>
 8006606:	69ba      	ldr	r2, [r7, #24]
 8006608:	69fb      	ldr	r3, [r7, #28]
 800660a:	4313      	orrs	r3, r2
 800660c:	697a      	ldr	r2, [r7, #20]
 800660e:	4313      	orrs	r3, r2
 8006610:	627b      	str	r3, [r7, #36]	; 0x24
 8006612:	e048      	b.n	80066a6 <DMA2D_SetConfig+0x11a>
 8006614:	68fb      	ldr	r3, [r7, #12]
 8006616:	689b      	ldr	r3, [r3, #8]
 8006618:	2b02      	cmp	r3, #2
 800661a:	d111      	bne.n	8006640 <DMA2D_SetConfig+0xb4>
 800661c:	69fb      	ldr	r3, [r7, #28]
 800661e:	0cdb      	lsrs	r3, r3, #19
 8006620:	61fb      	str	r3, [r7, #28]
 8006622:	69bb      	ldr	r3, [r7, #24]
 8006624:	0a9b      	lsrs	r3, r3, #10
 8006626:	61bb      	str	r3, [r7, #24]
 8006628:	697b      	ldr	r3, [r7, #20]
 800662a:	08db      	lsrs	r3, r3, #3
 800662c:	617b      	str	r3, [r7, #20]
 800662e:	69bb      	ldr	r3, [r7, #24]
 8006630:	015a      	lsls	r2, r3, #5
 8006632:	69fb      	ldr	r3, [r7, #28]
 8006634:	02db      	lsls	r3, r3, #11
 8006636:	4313      	orrs	r3, r2
 8006638:	697a      	ldr	r2, [r7, #20]
 800663a:	4313      	orrs	r3, r2
 800663c:	627b      	str	r3, [r7, #36]	; 0x24
 800663e:	e032      	b.n	80066a6 <DMA2D_SetConfig+0x11a>
 8006640:	68fb      	ldr	r3, [r7, #12]
 8006642:	689b      	ldr	r3, [r3, #8]
 8006644:	2b03      	cmp	r3, #3
 8006646:	d117      	bne.n	8006678 <DMA2D_SetConfig+0xec>
 8006648:	6a3b      	ldr	r3, [r7, #32]
 800664a:	0fdb      	lsrs	r3, r3, #31
 800664c:	623b      	str	r3, [r7, #32]
 800664e:	69fb      	ldr	r3, [r7, #28]
 8006650:	0cdb      	lsrs	r3, r3, #19
 8006652:	61fb      	str	r3, [r7, #28]
 8006654:	69bb      	ldr	r3, [r7, #24]
 8006656:	0adb      	lsrs	r3, r3, #11
 8006658:	61bb      	str	r3, [r7, #24]
 800665a:	697b      	ldr	r3, [r7, #20]
 800665c:	08db      	lsrs	r3, r3, #3
 800665e:	617b      	str	r3, [r7, #20]
 8006660:	69bb      	ldr	r3, [r7, #24]
 8006662:	015a      	lsls	r2, r3, #5
 8006664:	69fb      	ldr	r3, [r7, #28]
 8006666:	029b      	lsls	r3, r3, #10
 8006668:	431a      	orrs	r2, r3
 800666a:	6a3b      	ldr	r3, [r7, #32]
 800666c:	03db      	lsls	r3, r3, #15
 800666e:	4313      	orrs	r3, r2
 8006670:	697a      	ldr	r2, [r7, #20]
 8006672:	4313      	orrs	r3, r2
 8006674:	627b      	str	r3, [r7, #36]	; 0x24
 8006676:	e016      	b.n	80066a6 <DMA2D_SetConfig+0x11a>
 8006678:	6a3b      	ldr	r3, [r7, #32]
 800667a:	0f1b      	lsrs	r3, r3, #28
 800667c:	623b      	str	r3, [r7, #32]
 800667e:	69fb      	ldr	r3, [r7, #28]
 8006680:	0d1b      	lsrs	r3, r3, #20
 8006682:	61fb      	str	r3, [r7, #28]
 8006684:	69bb      	ldr	r3, [r7, #24]
 8006686:	0b1b      	lsrs	r3, r3, #12
 8006688:	61bb      	str	r3, [r7, #24]
 800668a:	697b      	ldr	r3, [r7, #20]
 800668c:	091b      	lsrs	r3, r3, #4
 800668e:	617b      	str	r3, [r7, #20]
 8006690:	69bb      	ldr	r3, [r7, #24]
 8006692:	011a      	lsls	r2, r3, #4
 8006694:	69fb      	ldr	r3, [r7, #28]
 8006696:	021b      	lsls	r3, r3, #8
 8006698:	431a      	orrs	r2, r3
 800669a:	6a3b      	ldr	r3, [r7, #32]
 800669c:	031b      	lsls	r3, r3, #12
 800669e:	4313      	orrs	r3, r2
 80066a0:	697a      	ldr	r2, [r7, #20]
 80066a2:	4313      	orrs	r3, r2
 80066a4:	627b      	str	r3, [r7, #36]	; 0x24
 80066a6:	68fb      	ldr	r3, [r7, #12]
 80066a8:	681b      	ldr	r3, [r3, #0]
 80066aa:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80066ac:	639a      	str	r2, [r3, #56]	; 0x38
 80066ae:	e003      	b.n	80066b8 <DMA2D_SetConfig+0x12c>
 80066b0:	68fb      	ldr	r3, [r7, #12]
 80066b2:	681b      	ldr	r3, [r3, #0]
 80066b4:	68ba      	ldr	r2, [r7, #8]
 80066b6:	60da      	str	r2, [r3, #12]
 80066b8:	bf00      	nop
 80066ba:	372c      	adds	r7, #44	; 0x2c
 80066bc:	46bd      	mov	sp, r7
 80066be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066c2:	4770      	bx	lr

080066c4 <HAL_GPIO_Init>:
 80066c4:	b480      	push	{r7}
 80066c6:	b089      	sub	sp, #36	; 0x24
 80066c8:	af00      	add	r7, sp, #0
 80066ca:	6078      	str	r0, [r7, #4]
 80066cc:	6039      	str	r1, [r7, #0]
 80066ce:	2300      	movs	r3, #0
 80066d0:	617b      	str	r3, [r7, #20]
 80066d2:	2300      	movs	r3, #0
 80066d4:	613b      	str	r3, [r7, #16]
 80066d6:	2300      	movs	r3, #0
 80066d8:	61bb      	str	r3, [r7, #24]
 80066da:	2300      	movs	r3, #0
 80066dc:	61fb      	str	r3, [r7, #28]
 80066de:	e177      	b.n	80069d0 <HAL_GPIO_Init+0x30c>
 80066e0:	2201      	movs	r2, #1
 80066e2:	69fb      	ldr	r3, [r7, #28]
 80066e4:	fa02 f303 	lsl.w	r3, r2, r3
 80066e8:	617b      	str	r3, [r7, #20]
 80066ea:	683b      	ldr	r3, [r7, #0]
 80066ec:	681b      	ldr	r3, [r3, #0]
 80066ee:	697a      	ldr	r2, [r7, #20]
 80066f0:	4013      	ands	r3, r2
 80066f2:	613b      	str	r3, [r7, #16]
 80066f4:	693a      	ldr	r2, [r7, #16]
 80066f6:	697b      	ldr	r3, [r7, #20]
 80066f8:	429a      	cmp	r2, r3
 80066fa:	f040 8166 	bne.w	80069ca <HAL_GPIO_Init+0x306>
 80066fe:	683b      	ldr	r3, [r7, #0]
 8006700:	685b      	ldr	r3, [r3, #4]
 8006702:	2b01      	cmp	r3, #1
 8006704:	d00b      	beq.n	800671e <HAL_GPIO_Init+0x5a>
 8006706:	683b      	ldr	r3, [r7, #0]
 8006708:	685b      	ldr	r3, [r3, #4]
 800670a:	2b02      	cmp	r3, #2
 800670c:	d007      	beq.n	800671e <HAL_GPIO_Init+0x5a>
 800670e:	683b      	ldr	r3, [r7, #0]
 8006710:	685b      	ldr	r3, [r3, #4]
 8006712:	2b11      	cmp	r3, #17
 8006714:	d003      	beq.n	800671e <HAL_GPIO_Init+0x5a>
 8006716:	683b      	ldr	r3, [r7, #0]
 8006718:	685b      	ldr	r3, [r3, #4]
 800671a:	2b12      	cmp	r3, #18
 800671c:	d130      	bne.n	8006780 <HAL_GPIO_Init+0xbc>
 800671e:	687b      	ldr	r3, [r7, #4]
 8006720:	689b      	ldr	r3, [r3, #8]
 8006722:	61bb      	str	r3, [r7, #24]
 8006724:	69fb      	ldr	r3, [r7, #28]
 8006726:	005b      	lsls	r3, r3, #1
 8006728:	2203      	movs	r2, #3
 800672a:	fa02 f303 	lsl.w	r3, r2, r3
 800672e:	43db      	mvns	r3, r3
 8006730:	69ba      	ldr	r2, [r7, #24]
 8006732:	4013      	ands	r3, r2
 8006734:	61bb      	str	r3, [r7, #24]
 8006736:	683b      	ldr	r3, [r7, #0]
 8006738:	68da      	ldr	r2, [r3, #12]
 800673a:	69fb      	ldr	r3, [r7, #28]
 800673c:	005b      	lsls	r3, r3, #1
 800673e:	fa02 f303 	lsl.w	r3, r2, r3
 8006742:	69ba      	ldr	r2, [r7, #24]
 8006744:	4313      	orrs	r3, r2
 8006746:	61bb      	str	r3, [r7, #24]
 8006748:	687b      	ldr	r3, [r7, #4]
 800674a:	69ba      	ldr	r2, [r7, #24]
 800674c:	609a      	str	r2, [r3, #8]
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	685b      	ldr	r3, [r3, #4]
 8006752:	61bb      	str	r3, [r7, #24]
 8006754:	2201      	movs	r2, #1
 8006756:	69fb      	ldr	r3, [r7, #28]
 8006758:	fa02 f303 	lsl.w	r3, r2, r3
 800675c:	43db      	mvns	r3, r3
 800675e:	69ba      	ldr	r2, [r7, #24]
 8006760:	4013      	ands	r3, r2
 8006762:	61bb      	str	r3, [r7, #24]
 8006764:	683b      	ldr	r3, [r7, #0]
 8006766:	685b      	ldr	r3, [r3, #4]
 8006768:	091b      	lsrs	r3, r3, #4
 800676a:	f003 0201 	and.w	r2, r3, #1
 800676e:	69fb      	ldr	r3, [r7, #28]
 8006770:	fa02 f303 	lsl.w	r3, r2, r3
 8006774:	69ba      	ldr	r2, [r7, #24]
 8006776:	4313      	orrs	r3, r2
 8006778:	61bb      	str	r3, [r7, #24]
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	69ba      	ldr	r2, [r7, #24]
 800677e:	605a      	str	r2, [r3, #4]
 8006780:	687b      	ldr	r3, [r7, #4]
 8006782:	68db      	ldr	r3, [r3, #12]
 8006784:	61bb      	str	r3, [r7, #24]
 8006786:	69fb      	ldr	r3, [r7, #28]
 8006788:	005b      	lsls	r3, r3, #1
 800678a:	2203      	movs	r2, #3
 800678c:	fa02 f303 	lsl.w	r3, r2, r3
 8006790:	43db      	mvns	r3, r3
 8006792:	69ba      	ldr	r2, [r7, #24]
 8006794:	4013      	ands	r3, r2
 8006796:	61bb      	str	r3, [r7, #24]
 8006798:	683b      	ldr	r3, [r7, #0]
 800679a:	689a      	ldr	r2, [r3, #8]
 800679c:	69fb      	ldr	r3, [r7, #28]
 800679e:	005b      	lsls	r3, r3, #1
 80067a0:	fa02 f303 	lsl.w	r3, r2, r3
 80067a4:	69ba      	ldr	r2, [r7, #24]
 80067a6:	4313      	orrs	r3, r2
 80067a8:	61bb      	str	r3, [r7, #24]
 80067aa:	687b      	ldr	r3, [r7, #4]
 80067ac:	69ba      	ldr	r2, [r7, #24]
 80067ae:	60da      	str	r2, [r3, #12]
 80067b0:	683b      	ldr	r3, [r7, #0]
 80067b2:	685b      	ldr	r3, [r3, #4]
 80067b4:	2b02      	cmp	r3, #2
 80067b6:	d003      	beq.n	80067c0 <HAL_GPIO_Init+0xfc>
 80067b8:	683b      	ldr	r3, [r7, #0]
 80067ba:	685b      	ldr	r3, [r3, #4]
 80067bc:	2b12      	cmp	r3, #18
 80067be:	d123      	bne.n	8006808 <HAL_GPIO_Init+0x144>
 80067c0:	69fb      	ldr	r3, [r7, #28]
 80067c2:	08da      	lsrs	r2, r3, #3
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	3208      	adds	r2, #8
 80067c8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80067cc:	61bb      	str	r3, [r7, #24]
 80067ce:	69fb      	ldr	r3, [r7, #28]
 80067d0:	f003 0307 	and.w	r3, r3, #7
 80067d4:	009b      	lsls	r3, r3, #2
 80067d6:	220f      	movs	r2, #15
 80067d8:	fa02 f303 	lsl.w	r3, r2, r3
 80067dc:	43db      	mvns	r3, r3
 80067de:	69ba      	ldr	r2, [r7, #24]
 80067e0:	4013      	ands	r3, r2
 80067e2:	61bb      	str	r3, [r7, #24]
 80067e4:	683b      	ldr	r3, [r7, #0]
 80067e6:	691a      	ldr	r2, [r3, #16]
 80067e8:	69fb      	ldr	r3, [r7, #28]
 80067ea:	f003 0307 	and.w	r3, r3, #7
 80067ee:	009b      	lsls	r3, r3, #2
 80067f0:	fa02 f303 	lsl.w	r3, r2, r3
 80067f4:	69ba      	ldr	r2, [r7, #24]
 80067f6:	4313      	orrs	r3, r2
 80067f8:	61bb      	str	r3, [r7, #24]
 80067fa:	69fb      	ldr	r3, [r7, #28]
 80067fc:	08da      	lsrs	r2, r3, #3
 80067fe:	687b      	ldr	r3, [r7, #4]
 8006800:	3208      	adds	r2, #8
 8006802:	69b9      	ldr	r1, [r7, #24]
 8006804:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8006808:	687b      	ldr	r3, [r7, #4]
 800680a:	681b      	ldr	r3, [r3, #0]
 800680c:	61bb      	str	r3, [r7, #24]
 800680e:	69fb      	ldr	r3, [r7, #28]
 8006810:	005b      	lsls	r3, r3, #1
 8006812:	2203      	movs	r2, #3
 8006814:	fa02 f303 	lsl.w	r3, r2, r3
 8006818:	43db      	mvns	r3, r3
 800681a:	69ba      	ldr	r2, [r7, #24]
 800681c:	4013      	ands	r3, r2
 800681e:	61bb      	str	r3, [r7, #24]
 8006820:	683b      	ldr	r3, [r7, #0]
 8006822:	685b      	ldr	r3, [r3, #4]
 8006824:	f003 0203 	and.w	r2, r3, #3
 8006828:	69fb      	ldr	r3, [r7, #28]
 800682a:	005b      	lsls	r3, r3, #1
 800682c:	fa02 f303 	lsl.w	r3, r2, r3
 8006830:	69ba      	ldr	r2, [r7, #24]
 8006832:	4313      	orrs	r3, r2
 8006834:	61bb      	str	r3, [r7, #24]
 8006836:	687b      	ldr	r3, [r7, #4]
 8006838:	69ba      	ldr	r2, [r7, #24]
 800683a:	601a      	str	r2, [r3, #0]
 800683c:	683b      	ldr	r3, [r7, #0]
 800683e:	685b      	ldr	r3, [r3, #4]
 8006840:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006844:	2b00      	cmp	r3, #0
 8006846:	f000 80c0 	beq.w	80069ca <HAL_GPIO_Init+0x306>
 800684a:	2300      	movs	r3, #0
 800684c:	60fb      	str	r3, [r7, #12]
 800684e:	4b66      	ldr	r3, [pc, #408]	; (80069e8 <HAL_GPIO_Init+0x324>)
 8006850:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006852:	4a65      	ldr	r2, [pc, #404]	; (80069e8 <HAL_GPIO_Init+0x324>)
 8006854:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006858:	6453      	str	r3, [r2, #68]	; 0x44
 800685a:	4b63      	ldr	r3, [pc, #396]	; (80069e8 <HAL_GPIO_Init+0x324>)
 800685c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800685e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006862:	60fb      	str	r3, [r7, #12]
 8006864:	68fb      	ldr	r3, [r7, #12]
 8006866:	4a61      	ldr	r2, [pc, #388]	; (80069ec <HAL_GPIO_Init+0x328>)
 8006868:	69fb      	ldr	r3, [r7, #28]
 800686a:	089b      	lsrs	r3, r3, #2
 800686c:	3302      	adds	r3, #2
 800686e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006872:	61bb      	str	r3, [r7, #24]
 8006874:	69fb      	ldr	r3, [r7, #28]
 8006876:	f003 0303 	and.w	r3, r3, #3
 800687a:	009b      	lsls	r3, r3, #2
 800687c:	220f      	movs	r2, #15
 800687e:	fa02 f303 	lsl.w	r3, r2, r3
 8006882:	43db      	mvns	r3, r3
 8006884:	69ba      	ldr	r2, [r7, #24]
 8006886:	4013      	ands	r3, r2
 8006888:	61bb      	str	r3, [r7, #24]
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	4a58      	ldr	r2, [pc, #352]	; (80069f0 <HAL_GPIO_Init+0x32c>)
 800688e:	4293      	cmp	r3, r2
 8006890:	d037      	beq.n	8006902 <HAL_GPIO_Init+0x23e>
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	4a57      	ldr	r2, [pc, #348]	; (80069f4 <HAL_GPIO_Init+0x330>)
 8006896:	4293      	cmp	r3, r2
 8006898:	d031      	beq.n	80068fe <HAL_GPIO_Init+0x23a>
 800689a:	687b      	ldr	r3, [r7, #4]
 800689c:	4a56      	ldr	r2, [pc, #344]	; (80069f8 <HAL_GPIO_Init+0x334>)
 800689e:	4293      	cmp	r3, r2
 80068a0:	d02b      	beq.n	80068fa <HAL_GPIO_Init+0x236>
 80068a2:	687b      	ldr	r3, [r7, #4]
 80068a4:	4a55      	ldr	r2, [pc, #340]	; (80069fc <HAL_GPIO_Init+0x338>)
 80068a6:	4293      	cmp	r3, r2
 80068a8:	d025      	beq.n	80068f6 <HAL_GPIO_Init+0x232>
 80068aa:	687b      	ldr	r3, [r7, #4]
 80068ac:	4a54      	ldr	r2, [pc, #336]	; (8006a00 <HAL_GPIO_Init+0x33c>)
 80068ae:	4293      	cmp	r3, r2
 80068b0:	d01f      	beq.n	80068f2 <HAL_GPIO_Init+0x22e>
 80068b2:	687b      	ldr	r3, [r7, #4]
 80068b4:	4a53      	ldr	r2, [pc, #332]	; (8006a04 <HAL_GPIO_Init+0x340>)
 80068b6:	4293      	cmp	r3, r2
 80068b8:	d019      	beq.n	80068ee <HAL_GPIO_Init+0x22a>
 80068ba:	687b      	ldr	r3, [r7, #4]
 80068bc:	4a52      	ldr	r2, [pc, #328]	; (8006a08 <HAL_GPIO_Init+0x344>)
 80068be:	4293      	cmp	r3, r2
 80068c0:	d013      	beq.n	80068ea <HAL_GPIO_Init+0x226>
 80068c2:	687b      	ldr	r3, [r7, #4]
 80068c4:	4a51      	ldr	r2, [pc, #324]	; (8006a0c <HAL_GPIO_Init+0x348>)
 80068c6:	4293      	cmp	r3, r2
 80068c8:	d00d      	beq.n	80068e6 <HAL_GPIO_Init+0x222>
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	4a50      	ldr	r2, [pc, #320]	; (8006a10 <HAL_GPIO_Init+0x34c>)
 80068ce:	4293      	cmp	r3, r2
 80068d0:	d007      	beq.n	80068e2 <HAL_GPIO_Init+0x21e>
 80068d2:	687b      	ldr	r3, [r7, #4]
 80068d4:	4a4f      	ldr	r2, [pc, #316]	; (8006a14 <HAL_GPIO_Init+0x350>)
 80068d6:	4293      	cmp	r3, r2
 80068d8:	d101      	bne.n	80068de <HAL_GPIO_Init+0x21a>
 80068da:	2309      	movs	r3, #9
 80068dc:	e012      	b.n	8006904 <HAL_GPIO_Init+0x240>
 80068de:	230a      	movs	r3, #10
 80068e0:	e010      	b.n	8006904 <HAL_GPIO_Init+0x240>
 80068e2:	2308      	movs	r3, #8
 80068e4:	e00e      	b.n	8006904 <HAL_GPIO_Init+0x240>
 80068e6:	2307      	movs	r3, #7
 80068e8:	e00c      	b.n	8006904 <HAL_GPIO_Init+0x240>
 80068ea:	2306      	movs	r3, #6
 80068ec:	e00a      	b.n	8006904 <HAL_GPIO_Init+0x240>
 80068ee:	2305      	movs	r3, #5
 80068f0:	e008      	b.n	8006904 <HAL_GPIO_Init+0x240>
 80068f2:	2304      	movs	r3, #4
 80068f4:	e006      	b.n	8006904 <HAL_GPIO_Init+0x240>
 80068f6:	2303      	movs	r3, #3
 80068f8:	e004      	b.n	8006904 <HAL_GPIO_Init+0x240>
 80068fa:	2302      	movs	r3, #2
 80068fc:	e002      	b.n	8006904 <HAL_GPIO_Init+0x240>
 80068fe:	2301      	movs	r3, #1
 8006900:	e000      	b.n	8006904 <HAL_GPIO_Init+0x240>
 8006902:	2300      	movs	r3, #0
 8006904:	69fa      	ldr	r2, [r7, #28]
 8006906:	f002 0203 	and.w	r2, r2, #3
 800690a:	0092      	lsls	r2, r2, #2
 800690c:	4093      	lsls	r3, r2
 800690e:	69ba      	ldr	r2, [r7, #24]
 8006910:	4313      	orrs	r3, r2
 8006912:	61bb      	str	r3, [r7, #24]
 8006914:	4935      	ldr	r1, [pc, #212]	; (80069ec <HAL_GPIO_Init+0x328>)
 8006916:	69fb      	ldr	r3, [r7, #28]
 8006918:	089b      	lsrs	r3, r3, #2
 800691a:	3302      	adds	r3, #2
 800691c:	69ba      	ldr	r2, [r7, #24]
 800691e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006922:	4b3d      	ldr	r3, [pc, #244]	; (8006a18 <HAL_GPIO_Init+0x354>)
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	61bb      	str	r3, [r7, #24]
 8006928:	693b      	ldr	r3, [r7, #16]
 800692a:	43db      	mvns	r3, r3
 800692c:	69ba      	ldr	r2, [r7, #24]
 800692e:	4013      	ands	r3, r2
 8006930:	61bb      	str	r3, [r7, #24]
 8006932:	683b      	ldr	r3, [r7, #0]
 8006934:	685b      	ldr	r3, [r3, #4]
 8006936:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800693a:	2b00      	cmp	r3, #0
 800693c:	d003      	beq.n	8006946 <HAL_GPIO_Init+0x282>
 800693e:	69ba      	ldr	r2, [r7, #24]
 8006940:	693b      	ldr	r3, [r7, #16]
 8006942:	4313      	orrs	r3, r2
 8006944:	61bb      	str	r3, [r7, #24]
 8006946:	4a34      	ldr	r2, [pc, #208]	; (8006a18 <HAL_GPIO_Init+0x354>)
 8006948:	69bb      	ldr	r3, [r7, #24]
 800694a:	6013      	str	r3, [r2, #0]
 800694c:	4b32      	ldr	r3, [pc, #200]	; (8006a18 <HAL_GPIO_Init+0x354>)
 800694e:	685b      	ldr	r3, [r3, #4]
 8006950:	61bb      	str	r3, [r7, #24]
 8006952:	693b      	ldr	r3, [r7, #16]
 8006954:	43db      	mvns	r3, r3
 8006956:	69ba      	ldr	r2, [r7, #24]
 8006958:	4013      	ands	r3, r2
 800695a:	61bb      	str	r3, [r7, #24]
 800695c:	683b      	ldr	r3, [r7, #0]
 800695e:	685b      	ldr	r3, [r3, #4]
 8006960:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006964:	2b00      	cmp	r3, #0
 8006966:	d003      	beq.n	8006970 <HAL_GPIO_Init+0x2ac>
 8006968:	69ba      	ldr	r2, [r7, #24]
 800696a:	693b      	ldr	r3, [r7, #16]
 800696c:	4313      	orrs	r3, r2
 800696e:	61bb      	str	r3, [r7, #24]
 8006970:	4a29      	ldr	r2, [pc, #164]	; (8006a18 <HAL_GPIO_Init+0x354>)
 8006972:	69bb      	ldr	r3, [r7, #24]
 8006974:	6053      	str	r3, [r2, #4]
 8006976:	4b28      	ldr	r3, [pc, #160]	; (8006a18 <HAL_GPIO_Init+0x354>)
 8006978:	689b      	ldr	r3, [r3, #8]
 800697a:	61bb      	str	r3, [r7, #24]
 800697c:	693b      	ldr	r3, [r7, #16]
 800697e:	43db      	mvns	r3, r3
 8006980:	69ba      	ldr	r2, [r7, #24]
 8006982:	4013      	ands	r3, r2
 8006984:	61bb      	str	r3, [r7, #24]
 8006986:	683b      	ldr	r3, [r7, #0]
 8006988:	685b      	ldr	r3, [r3, #4]
 800698a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800698e:	2b00      	cmp	r3, #0
 8006990:	d003      	beq.n	800699a <HAL_GPIO_Init+0x2d6>
 8006992:	69ba      	ldr	r2, [r7, #24]
 8006994:	693b      	ldr	r3, [r7, #16]
 8006996:	4313      	orrs	r3, r2
 8006998:	61bb      	str	r3, [r7, #24]
 800699a:	4a1f      	ldr	r2, [pc, #124]	; (8006a18 <HAL_GPIO_Init+0x354>)
 800699c:	69bb      	ldr	r3, [r7, #24]
 800699e:	6093      	str	r3, [r2, #8]
 80069a0:	4b1d      	ldr	r3, [pc, #116]	; (8006a18 <HAL_GPIO_Init+0x354>)
 80069a2:	68db      	ldr	r3, [r3, #12]
 80069a4:	61bb      	str	r3, [r7, #24]
 80069a6:	693b      	ldr	r3, [r7, #16]
 80069a8:	43db      	mvns	r3, r3
 80069aa:	69ba      	ldr	r2, [r7, #24]
 80069ac:	4013      	ands	r3, r2
 80069ae:	61bb      	str	r3, [r7, #24]
 80069b0:	683b      	ldr	r3, [r7, #0]
 80069b2:	685b      	ldr	r3, [r3, #4]
 80069b4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80069b8:	2b00      	cmp	r3, #0
 80069ba:	d003      	beq.n	80069c4 <HAL_GPIO_Init+0x300>
 80069bc:	69ba      	ldr	r2, [r7, #24]
 80069be:	693b      	ldr	r3, [r7, #16]
 80069c0:	4313      	orrs	r3, r2
 80069c2:	61bb      	str	r3, [r7, #24]
 80069c4:	4a14      	ldr	r2, [pc, #80]	; (8006a18 <HAL_GPIO_Init+0x354>)
 80069c6:	69bb      	ldr	r3, [r7, #24]
 80069c8:	60d3      	str	r3, [r2, #12]
 80069ca:	69fb      	ldr	r3, [r7, #28]
 80069cc:	3301      	adds	r3, #1
 80069ce:	61fb      	str	r3, [r7, #28]
 80069d0:	69fb      	ldr	r3, [r7, #28]
 80069d2:	2b0f      	cmp	r3, #15
 80069d4:	f67f ae84 	bls.w	80066e0 <HAL_GPIO_Init+0x1c>
 80069d8:	bf00      	nop
 80069da:	bf00      	nop
 80069dc:	3724      	adds	r7, #36	; 0x24
 80069de:	46bd      	mov	sp, r7
 80069e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069e4:	4770      	bx	lr
 80069e6:	bf00      	nop
 80069e8:	40023800 	.word	0x40023800
 80069ec:	40013800 	.word	0x40013800
 80069f0:	40020000 	.word	0x40020000
 80069f4:	40020400 	.word	0x40020400
 80069f8:	40020800 	.word	0x40020800
 80069fc:	40020c00 	.word	0x40020c00
 8006a00:	40021000 	.word	0x40021000
 8006a04:	40021400 	.word	0x40021400
 8006a08:	40021800 	.word	0x40021800
 8006a0c:	40021c00 	.word	0x40021c00
 8006a10:	40022000 	.word	0x40022000
 8006a14:	40022400 	.word	0x40022400
 8006a18:	40013c00 	.word	0x40013c00

08006a1c <HAL_GPIO_WritePin>:
 8006a1c:	b480      	push	{r7}
 8006a1e:	b083      	sub	sp, #12
 8006a20:	af00      	add	r7, sp, #0
 8006a22:	6078      	str	r0, [r7, #4]
 8006a24:	460b      	mov	r3, r1
 8006a26:	807b      	strh	r3, [r7, #2]
 8006a28:	4613      	mov	r3, r2
 8006a2a:	707b      	strb	r3, [r7, #1]
 8006a2c:	787b      	ldrb	r3, [r7, #1]
 8006a2e:	2b00      	cmp	r3, #0
 8006a30:	d003      	beq.n	8006a3a <HAL_GPIO_WritePin+0x1e>
 8006a32:	887a      	ldrh	r2, [r7, #2]
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	619a      	str	r2, [r3, #24]
 8006a38:	e003      	b.n	8006a42 <HAL_GPIO_WritePin+0x26>
 8006a3a:	887b      	ldrh	r3, [r7, #2]
 8006a3c:	041a      	lsls	r2, r3, #16
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	619a      	str	r2, [r3, #24]
 8006a42:	bf00      	nop
 8006a44:	370c      	adds	r7, #12
 8006a46:	46bd      	mov	sp, r7
 8006a48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a4c:	4770      	bx	lr

08006a4e <HAL_GPIO_TogglePin>:
 8006a4e:	b480      	push	{r7}
 8006a50:	b083      	sub	sp, #12
 8006a52:	af00      	add	r7, sp, #0
 8006a54:	6078      	str	r0, [r7, #4]
 8006a56:	460b      	mov	r3, r1
 8006a58:	807b      	strh	r3, [r7, #2]
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	695a      	ldr	r2, [r3, #20]
 8006a5e:	887b      	ldrh	r3, [r7, #2]
 8006a60:	401a      	ands	r2, r3
 8006a62:	887b      	ldrh	r3, [r7, #2]
 8006a64:	429a      	cmp	r2, r3
 8006a66:	d104      	bne.n	8006a72 <HAL_GPIO_TogglePin+0x24>
 8006a68:	887b      	ldrh	r3, [r7, #2]
 8006a6a:	041a      	lsls	r2, r3, #16
 8006a6c:	687b      	ldr	r3, [r7, #4]
 8006a6e:	619a      	str	r2, [r3, #24]
 8006a70:	e002      	b.n	8006a78 <HAL_GPIO_TogglePin+0x2a>
 8006a72:	887a      	ldrh	r2, [r7, #2]
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	619a      	str	r2, [r3, #24]
 8006a78:	bf00      	nop
 8006a7a:	370c      	adds	r7, #12
 8006a7c:	46bd      	mov	sp, r7
 8006a7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a82:	4770      	bx	lr

08006a84 <HAL_I2C_Init>:
 8006a84:	b580      	push	{r7, lr}
 8006a86:	b084      	sub	sp, #16
 8006a88:	af00      	add	r7, sp, #0
 8006a8a:	6078      	str	r0, [r7, #4]
 8006a8c:	687b      	ldr	r3, [r7, #4]
 8006a8e:	2b00      	cmp	r3, #0
 8006a90:	d101      	bne.n	8006a96 <HAL_I2C_Init+0x12>
 8006a92:	2301      	movs	r3, #1
 8006a94:	e12b      	b.n	8006cee <HAL_I2C_Init+0x26a>
 8006a96:	687b      	ldr	r3, [r7, #4]
 8006a98:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006a9c:	b2db      	uxtb	r3, r3
 8006a9e:	2b00      	cmp	r3, #0
 8006aa0:	d106      	bne.n	8006ab0 <HAL_I2C_Init+0x2c>
 8006aa2:	687b      	ldr	r3, [r7, #4]
 8006aa4:	2200      	movs	r2, #0
 8006aa6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006aaa:	6878      	ldr	r0, [r7, #4]
 8006aac:	f000 f95d 	bl	8006d6a <HAL_I2C_MspInit>
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	2224      	movs	r2, #36	; 0x24
 8006ab4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006ab8:	687b      	ldr	r3, [r7, #4]
 8006aba:	681b      	ldr	r3, [r3, #0]
 8006abc:	681a      	ldr	r2, [r3, #0]
 8006abe:	687b      	ldr	r3, [r7, #4]
 8006ac0:	681b      	ldr	r3, [r3, #0]
 8006ac2:	f022 0201 	bic.w	r2, r2, #1
 8006ac6:	601a      	str	r2, [r3, #0]
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	681b      	ldr	r3, [r3, #0]
 8006acc:	681a      	ldr	r2, [r3, #0]
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	681b      	ldr	r3, [r3, #0]
 8006ad2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006ad6:	601a      	str	r2, [r3, #0]
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	681a      	ldr	r2, [r3, #0]
 8006ade:	687b      	ldr	r3, [r7, #4]
 8006ae0:	681b      	ldr	r3, [r3, #0]
 8006ae2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006ae6:	601a      	str	r2, [r3, #0]
 8006ae8:	f001 ff1a 	bl	8008920 <HAL_RCC_GetPCLK1Freq>
 8006aec:	60f8      	str	r0, [r7, #12]
 8006aee:	687b      	ldr	r3, [r7, #4]
 8006af0:	685b      	ldr	r3, [r3, #4]
 8006af2:	4a81      	ldr	r2, [pc, #516]	; (8006cf8 <HAL_I2C_Init+0x274>)
 8006af4:	4293      	cmp	r3, r2
 8006af6:	d807      	bhi.n	8006b08 <HAL_I2C_Init+0x84>
 8006af8:	68fb      	ldr	r3, [r7, #12]
 8006afa:	4a80      	ldr	r2, [pc, #512]	; (8006cfc <HAL_I2C_Init+0x278>)
 8006afc:	4293      	cmp	r3, r2
 8006afe:	bf94      	ite	ls
 8006b00:	2301      	movls	r3, #1
 8006b02:	2300      	movhi	r3, #0
 8006b04:	b2db      	uxtb	r3, r3
 8006b06:	e006      	b.n	8006b16 <HAL_I2C_Init+0x92>
 8006b08:	68fb      	ldr	r3, [r7, #12]
 8006b0a:	4a7d      	ldr	r2, [pc, #500]	; (8006d00 <HAL_I2C_Init+0x27c>)
 8006b0c:	4293      	cmp	r3, r2
 8006b0e:	bf94      	ite	ls
 8006b10:	2301      	movls	r3, #1
 8006b12:	2300      	movhi	r3, #0
 8006b14:	b2db      	uxtb	r3, r3
 8006b16:	2b00      	cmp	r3, #0
 8006b18:	d001      	beq.n	8006b1e <HAL_I2C_Init+0x9a>
 8006b1a:	2301      	movs	r3, #1
 8006b1c:	e0e7      	b.n	8006cee <HAL_I2C_Init+0x26a>
 8006b1e:	68fb      	ldr	r3, [r7, #12]
 8006b20:	4a78      	ldr	r2, [pc, #480]	; (8006d04 <HAL_I2C_Init+0x280>)
 8006b22:	fba2 2303 	umull	r2, r3, r2, r3
 8006b26:	0c9b      	lsrs	r3, r3, #18
 8006b28:	60bb      	str	r3, [r7, #8]
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	681b      	ldr	r3, [r3, #0]
 8006b2e:	685b      	ldr	r3, [r3, #4]
 8006b30:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8006b34:	687b      	ldr	r3, [r7, #4]
 8006b36:	681b      	ldr	r3, [r3, #0]
 8006b38:	68ba      	ldr	r2, [r7, #8]
 8006b3a:	430a      	orrs	r2, r1
 8006b3c:	605a      	str	r2, [r3, #4]
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	681b      	ldr	r3, [r3, #0]
 8006b42:	6a1b      	ldr	r3, [r3, #32]
 8006b44:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	685b      	ldr	r3, [r3, #4]
 8006b4c:	4a6a      	ldr	r2, [pc, #424]	; (8006cf8 <HAL_I2C_Init+0x274>)
 8006b4e:	4293      	cmp	r3, r2
 8006b50:	d802      	bhi.n	8006b58 <HAL_I2C_Init+0xd4>
 8006b52:	68bb      	ldr	r3, [r7, #8]
 8006b54:	3301      	adds	r3, #1
 8006b56:	e009      	b.n	8006b6c <HAL_I2C_Init+0xe8>
 8006b58:	68bb      	ldr	r3, [r7, #8]
 8006b5a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8006b5e:	fb02 f303 	mul.w	r3, r2, r3
 8006b62:	4a69      	ldr	r2, [pc, #420]	; (8006d08 <HAL_I2C_Init+0x284>)
 8006b64:	fba2 2303 	umull	r2, r3, r2, r3
 8006b68:	099b      	lsrs	r3, r3, #6
 8006b6a:	3301      	adds	r3, #1
 8006b6c:	687a      	ldr	r2, [r7, #4]
 8006b6e:	6812      	ldr	r2, [r2, #0]
 8006b70:	430b      	orrs	r3, r1
 8006b72:	6213      	str	r3, [r2, #32]
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	681b      	ldr	r3, [r3, #0]
 8006b78:	69db      	ldr	r3, [r3, #28]
 8006b7a:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8006b7e:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	685b      	ldr	r3, [r3, #4]
 8006b86:	495c      	ldr	r1, [pc, #368]	; (8006cf8 <HAL_I2C_Init+0x274>)
 8006b88:	428b      	cmp	r3, r1
 8006b8a:	d819      	bhi.n	8006bc0 <HAL_I2C_Init+0x13c>
 8006b8c:	68fb      	ldr	r3, [r7, #12]
 8006b8e:	1e59      	subs	r1, r3, #1
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	685b      	ldr	r3, [r3, #4]
 8006b94:	005b      	lsls	r3, r3, #1
 8006b96:	fbb1 f3f3 	udiv	r3, r1, r3
 8006b9a:	1c59      	adds	r1, r3, #1
 8006b9c:	f640 73fc 	movw	r3, #4092	; 0xffc
 8006ba0:	400b      	ands	r3, r1
 8006ba2:	2b00      	cmp	r3, #0
 8006ba4:	d00a      	beq.n	8006bbc <HAL_I2C_Init+0x138>
 8006ba6:	68fb      	ldr	r3, [r7, #12]
 8006ba8:	1e59      	subs	r1, r3, #1
 8006baa:	687b      	ldr	r3, [r7, #4]
 8006bac:	685b      	ldr	r3, [r3, #4]
 8006bae:	005b      	lsls	r3, r3, #1
 8006bb0:	fbb1 f3f3 	udiv	r3, r1, r3
 8006bb4:	3301      	adds	r3, #1
 8006bb6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006bba:	e051      	b.n	8006c60 <HAL_I2C_Init+0x1dc>
 8006bbc:	2304      	movs	r3, #4
 8006bbe:	e04f      	b.n	8006c60 <HAL_I2C_Init+0x1dc>
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	689b      	ldr	r3, [r3, #8]
 8006bc4:	2b00      	cmp	r3, #0
 8006bc6:	d111      	bne.n	8006bec <HAL_I2C_Init+0x168>
 8006bc8:	68fb      	ldr	r3, [r7, #12]
 8006bca:	1e58      	subs	r0, r3, #1
 8006bcc:	687b      	ldr	r3, [r7, #4]
 8006bce:	6859      	ldr	r1, [r3, #4]
 8006bd0:	460b      	mov	r3, r1
 8006bd2:	005b      	lsls	r3, r3, #1
 8006bd4:	440b      	add	r3, r1
 8006bd6:	fbb0 f3f3 	udiv	r3, r0, r3
 8006bda:	3301      	adds	r3, #1
 8006bdc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006be0:	2b00      	cmp	r3, #0
 8006be2:	bf0c      	ite	eq
 8006be4:	2301      	moveq	r3, #1
 8006be6:	2300      	movne	r3, #0
 8006be8:	b2db      	uxtb	r3, r3
 8006bea:	e012      	b.n	8006c12 <HAL_I2C_Init+0x18e>
 8006bec:	68fb      	ldr	r3, [r7, #12]
 8006bee:	1e58      	subs	r0, r3, #1
 8006bf0:	687b      	ldr	r3, [r7, #4]
 8006bf2:	6859      	ldr	r1, [r3, #4]
 8006bf4:	460b      	mov	r3, r1
 8006bf6:	009b      	lsls	r3, r3, #2
 8006bf8:	440b      	add	r3, r1
 8006bfa:	0099      	lsls	r1, r3, #2
 8006bfc:	440b      	add	r3, r1
 8006bfe:	fbb0 f3f3 	udiv	r3, r0, r3
 8006c02:	3301      	adds	r3, #1
 8006c04:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006c08:	2b00      	cmp	r3, #0
 8006c0a:	bf0c      	ite	eq
 8006c0c:	2301      	moveq	r3, #1
 8006c0e:	2300      	movne	r3, #0
 8006c10:	b2db      	uxtb	r3, r3
 8006c12:	2b00      	cmp	r3, #0
 8006c14:	d001      	beq.n	8006c1a <HAL_I2C_Init+0x196>
 8006c16:	2301      	movs	r3, #1
 8006c18:	e022      	b.n	8006c60 <HAL_I2C_Init+0x1dc>
 8006c1a:	687b      	ldr	r3, [r7, #4]
 8006c1c:	689b      	ldr	r3, [r3, #8]
 8006c1e:	2b00      	cmp	r3, #0
 8006c20:	d10e      	bne.n	8006c40 <HAL_I2C_Init+0x1bc>
 8006c22:	68fb      	ldr	r3, [r7, #12]
 8006c24:	1e58      	subs	r0, r3, #1
 8006c26:	687b      	ldr	r3, [r7, #4]
 8006c28:	6859      	ldr	r1, [r3, #4]
 8006c2a:	460b      	mov	r3, r1
 8006c2c:	005b      	lsls	r3, r3, #1
 8006c2e:	440b      	add	r3, r1
 8006c30:	fbb0 f3f3 	udiv	r3, r0, r3
 8006c34:	3301      	adds	r3, #1
 8006c36:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006c3a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006c3e:	e00f      	b.n	8006c60 <HAL_I2C_Init+0x1dc>
 8006c40:	68fb      	ldr	r3, [r7, #12]
 8006c42:	1e58      	subs	r0, r3, #1
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	6859      	ldr	r1, [r3, #4]
 8006c48:	460b      	mov	r3, r1
 8006c4a:	009b      	lsls	r3, r3, #2
 8006c4c:	440b      	add	r3, r1
 8006c4e:	0099      	lsls	r1, r3, #2
 8006c50:	440b      	add	r3, r1
 8006c52:	fbb0 f3f3 	udiv	r3, r0, r3
 8006c56:	3301      	adds	r3, #1
 8006c58:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006c5c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006c60:	6879      	ldr	r1, [r7, #4]
 8006c62:	6809      	ldr	r1, [r1, #0]
 8006c64:	4313      	orrs	r3, r2
 8006c66:	61cb      	str	r3, [r1, #28]
 8006c68:	687b      	ldr	r3, [r7, #4]
 8006c6a:	681b      	ldr	r3, [r3, #0]
 8006c6c:	681b      	ldr	r3, [r3, #0]
 8006c6e:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	69da      	ldr	r2, [r3, #28]
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	6a1b      	ldr	r3, [r3, #32]
 8006c7a:	431a      	orrs	r2, r3
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	681b      	ldr	r3, [r3, #0]
 8006c80:	430a      	orrs	r2, r1
 8006c82:	601a      	str	r2, [r3, #0]
 8006c84:	687b      	ldr	r3, [r7, #4]
 8006c86:	681b      	ldr	r3, [r3, #0]
 8006c88:	689b      	ldr	r3, [r3, #8]
 8006c8a:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8006c8e:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8006c92:	687a      	ldr	r2, [r7, #4]
 8006c94:	6911      	ldr	r1, [r2, #16]
 8006c96:	687a      	ldr	r2, [r7, #4]
 8006c98:	68d2      	ldr	r2, [r2, #12]
 8006c9a:	4311      	orrs	r1, r2
 8006c9c:	687a      	ldr	r2, [r7, #4]
 8006c9e:	6812      	ldr	r2, [r2, #0]
 8006ca0:	430b      	orrs	r3, r1
 8006ca2:	6093      	str	r3, [r2, #8]
 8006ca4:	687b      	ldr	r3, [r7, #4]
 8006ca6:	681b      	ldr	r3, [r3, #0]
 8006ca8:	68db      	ldr	r3, [r3, #12]
 8006caa:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8006cae:	687b      	ldr	r3, [r7, #4]
 8006cb0:	695a      	ldr	r2, [r3, #20]
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	699b      	ldr	r3, [r3, #24]
 8006cb6:	431a      	orrs	r2, r3
 8006cb8:	687b      	ldr	r3, [r7, #4]
 8006cba:	681b      	ldr	r3, [r3, #0]
 8006cbc:	430a      	orrs	r2, r1
 8006cbe:	60da      	str	r2, [r3, #12]
 8006cc0:	687b      	ldr	r3, [r7, #4]
 8006cc2:	681b      	ldr	r3, [r3, #0]
 8006cc4:	681a      	ldr	r2, [r3, #0]
 8006cc6:	687b      	ldr	r3, [r7, #4]
 8006cc8:	681b      	ldr	r3, [r3, #0]
 8006cca:	f042 0201 	orr.w	r2, r2, #1
 8006cce:	601a      	str	r2, [r3, #0]
 8006cd0:	687b      	ldr	r3, [r7, #4]
 8006cd2:	2200      	movs	r2, #0
 8006cd4:	641a      	str	r2, [r3, #64]	; 0x40
 8006cd6:	687b      	ldr	r3, [r7, #4]
 8006cd8:	2220      	movs	r2, #32
 8006cda:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	2200      	movs	r2, #0
 8006ce2:	631a      	str	r2, [r3, #48]	; 0x30
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	2200      	movs	r2, #0
 8006ce8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006cec:	2300      	movs	r3, #0
 8006cee:	4618      	mov	r0, r3
 8006cf0:	3710      	adds	r7, #16
 8006cf2:	46bd      	mov	sp, r7
 8006cf4:	bd80      	pop	{r7, pc}
 8006cf6:	bf00      	nop
 8006cf8:	000186a0 	.word	0x000186a0
 8006cfc:	001e847f 	.word	0x001e847f
 8006d00:	003d08ff 	.word	0x003d08ff
 8006d04:	431bde83 	.word	0x431bde83
 8006d08:	10624dd3 	.word	0x10624dd3

08006d0c <HAL_I2C_DeInit>:
 8006d0c:	b580      	push	{r7, lr}
 8006d0e:	b082      	sub	sp, #8
 8006d10:	af00      	add	r7, sp, #0
 8006d12:	6078      	str	r0, [r7, #4]
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	2b00      	cmp	r3, #0
 8006d18:	d101      	bne.n	8006d1e <HAL_I2C_DeInit+0x12>
 8006d1a:	2301      	movs	r3, #1
 8006d1c:	e021      	b.n	8006d62 <HAL_I2C_DeInit+0x56>
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	2224      	movs	r2, #36	; 0x24
 8006d22:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006d26:	687b      	ldr	r3, [r7, #4]
 8006d28:	681b      	ldr	r3, [r3, #0]
 8006d2a:	681a      	ldr	r2, [r3, #0]
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	681b      	ldr	r3, [r3, #0]
 8006d30:	f022 0201 	bic.w	r2, r2, #1
 8006d34:	601a      	str	r2, [r3, #0]
 8006d36:	6878      	ldr	r0, [r7, #4]
 8006d38:	f000 f821 	bl	8006d7e <HAL_I2C_MspDeInit>
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	2200      	movs	r2, #0
 8006d40:	641a      	str	r2, [r3, #64]	; 0x40
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	2200      	movs	r2, #0
 8006d46:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006d4a:	687b      	ldr	r3, [r7, #4]
 8006d4c:	2200      	movs	r2, #0
 8006d4e:	631a      	str	r2, [r3, #48]	; 0x30
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	2200      	movs	r2, #0
 8006d54:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006d58:	687b      	ldr	r3, [r7, #4]
 8006d5a:	2200      	movs	r2, #0
 8006d5c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006d60:	2300      	movs	r3, #0
 8006d62:	4618      	mov	r0, r3
 8006d64:	3708      	adds	r7, #8
 8006d66:	46bd      	mov	sp, r7
 8006d68:	bd80      	pop	{r7, pc}

08006d6a <HAL_I2C_MspInit>:
 8006d6a:	b480      	push	{r7}
 8006d6c:	b083      	sub	sp, #12
 8006d6e:	af00      	add	r7, sp, #0
 8006d70:	6078      	str	r0, [r7, #4]
 8006d72:	bf00      	nop
 8006d74:	370c      	adds	r7, #12
 8006d76:	46bd      	mov	sp, r7
 8006d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d7c:	4770      	bx	lr

08006d7e <HAL_I2C_MspDeInit>:
 8006d7e:	b480      	push	{r7}
 8006d80:	b083      	sub	sp, #12
 8006d82:	af00      	add	r7, sp, #0
 8006d84:	6078      	str	r0, [r7, #4]
 8006d86:	bf00      	nop
 8006d88:	370c      	adds	r7, #12
 8006d8a:	46bd      	mov	sp, r7
 8006d8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d90:	4770      	bx	lr
	...

08006d94 <HAL_I2C_Mem_Write>:
 8006d94:	b580      	push	{r7, lr}
 8006d96:	b088      	sub	sp, #32
 8006d98:	af02      	add	r7, sp, #8
 8006d9a:	60f8      	str	r0, [r7, #12]
 8006d9c:	4608      	mov	r0, r1
 8006d9e:	4611      	mov	r1, r2
 8006da0:	461a      	mov	r2, r3
 8006da2:	4603      	mov	r3, r0
 8006da4:	817b      	strh	r3, [r7, #10]
 8006da6:	460b      	mov	r3, r1
 8006da8:	813b      	strh	r3, [r7, #8]
 8006daa:	4613      	mov	r3, r2
 8006dac:	80fb      	strh	r3, [r7, #6]
 8006dae:	f7fe fef3 	bl	8005b98 <HAL_GetTick>
 8006db2:	6178      	str	r0, [r7, #20]
 8006db4:	68fb      	ldr	r3, [r7, #12]
 8006db6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006dba:	b2db      	uxtb	r3, r3
 8006dbc:	2b20      	cmp	r3, #32
 8006dbe:	f040 80d9 	bne.w	8006f74 <HAL_I2C_Mem_Write+0x1e0>
 8006dc2:	697b      	ldr	r3, [r7, #20]
 8006dc4:	9300      	str	r3, [sp, #0]
 8006dc6:	2319      	movs	r3, #25
 8006dc8:	2201      	movs	r2, #1
 8006dca:	496d      	ldr	r1, [pc, #436]	; (8006f80 <HAL_I2C_Mem_Write+0x1ec>)
 8006dcc:	68f8      	ldr	r0, [r7, #12]
 8006dce:	f000 fc89 	bl	80076e4 <I2C_WaitOnFlagUntilTimeout>
 8006dd2:	4603      	mov	r3, r0
 8006dd4:	2b00      	cmp	r3, #0
 8006dd6:	d001      	beq.n	8006ddc <HAL_I2C_Mem_Write+0x48>
 8006dd8:	2302      	movs	r3, #2
 8006dda:	e0cc      	b.n	8006f76 <HAL_I2C_Mem_Write+0x1e2>
 8006ddc:	68fb      	ldr	r3, [r7, #12]
 8006dde:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006de2:	2b01      	cmp	r3, #1
 8006de4:	d101      	bne.n	8006dea <HAL_I2C_Mem_Write+0x56>
 8006de6:	2302      	movs	r3, #2
 8006de8:	e0c5      	b.n	8006f76 <HAL_I2C_Mem_Write+0x1e2>
 8006dea:	68fb      	ldr	r3, [r7, #12]
 8006dec:	2201      	movs	r2, #1
 8006dee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006df2:	68fb      	ldr	r3, [r7, #12]
 8006df4:	681b      	ldr	r3, [r3, #0]
 8006df6:	681b      	ldr	r3, [r3, #0]
 8006df8:	f003 0301 	and.w	r3, r3, #1
 8006dfc:	2b01      	cmp	r3, #1
 8006dfe:	d007      	beq.n	8006e10 <HAL_I2C_Mem_Write+0x7c>
 8006e00:	68fb      	ldr	r3, [r7, #12]
 8006e02:	681b      	ldr	r3, [r3, #0]
 8006e04:	681a      	ldr	r2, [r3, #0]
 8006e06:	68fb      	ldr	r3, [r7, #12]
 8006e08:	681b      	ldr	r3, [r3, #0]
 8006e0a:	f042 0201 	orr.w	r2, r2, #1
 8006e0e:	601a      	str	r2, [r3, #0]
 8006e10:	68fb      	ldr	r3, [r7, #12]
 8006e12:	681b      	ldr	r3, [r3, #0]
 8006e14:	681a      	ldr	r2, [r3, #0]
 8006e16:	68fb      	ldr	r3, [r7, #12]
 8006e18:	681b      	ldr	r3, [r3, #0]
 8006e1a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006e1e:	601a      	str	r2, [r3, #0]
 8006e20:	68fb      	ldr	r3, [r7, #12]
 8006e22:	2221      	movs	r2, #33	; 0x21
 8006e24:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006e28:	68fb      	ldr	r3, [r7, #12]
 8006e2a:	2240      	movs	r2, #64	; 0x40
 8006e2c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006e30:	68fb      	ldr	r3, [r7, #12]
 8006e32:	2200      	movs	r2, #0
 8006e34:	641a      	str	r2, [r3, #64]	; 0x40
 8006e36:	68fb      	ldr	r3, [r7, #12]
 8006e38:	6a3a      	ldr	r2, [r7, #32]
 8006e3a:	625a      	str	r2, [r3, #36]	; 0x24
 8006e3c:	68fb      	ldr	r3, [r7, #12]
 8006e3e:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8006e40:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006e42:	68fb      	ldr	r3, [r7, #12]
 8006e44:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006e46:	b29a      	uxth	r2, r3
 8006e48:	68fb      	ldr	r3, [r7, #12]
 8006e4a:	851a      	strh	r2, [r3, #40]	; 0x28
 8006e4c:	68fb      	ldr	r3, [r7, #12]
 8006e4e:	4a4d      	ldr	r2, [pc, #308]	; (8006f84 <HAL_I2C_Mem_Write+0x1f0>)
 8006e50:	62da      	str	r2, [r3, #44]	; 0x2c
 8006e52:	88f8      	ldrh	r0, [r7, #6]
 8006e54:	893a      	ldrh	r2, [r7, #8]
 8006e56:	8979      	ldrh	r1, [r7, #10]
 8006e58:	697b      	ldr	r3, [r7, #20]
 8006e5a:	9301      	str	r3, [sp, #4]
 8006e5c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006e5e:	9300      	str	r3, [sp, #0]
 8006e60:	4603      	mov	r3, r0
 8006e62:	68f8      	ldr	r0, [r7, #12]
 8006e64:	f000 fac4 	bl	80073f0 <I2C_RequestMemoryWrite>
 8006e68:	4603      	mov	r3, r0
 8006e6a:	2b00      	cmp	r3, #0
 8006e6c:	d052      	beq.n	8006f14 <HAL_I2C_Mem_Write+0x180>
 8006e6e:	2301      	movs	r3, #1
 8006e70:	e081      	b.n	8006f76 <HAL_I2C_Mem_Write+0x1e2>
 8006e72:	697a      	ldr	r2, [r7, #20]
 8006e74:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8006e76:	68f8      	ldr	r0, [r7, #12]
 8006e78:	f000 fd0a 	bl	8007890 <I2C_WaitOnTXEFlagUntilTimeout>
 8006e7c:	4603      	mov	r3, r0
 8006e7e:	2b00      	cmp	r3, #0
 8006e80:	d00d      	beq.n	8006e9e <HAL_I2C_Mem_Write+0x10a>
 8006e82:	68fb      	ldr	r3, [r7, #12]
 8006e84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e86:	2b04      	cmp	r3, #4
 8006e88:	d107      	bne.n	8006e9a <HAL_I2C_Mem_Write+0x106>
 8006e8a:	68fb      	ldr	r3, [r7, #12]
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	681a      	ldr	r2, [r3, #0]
 8006e90:	68fb      	ldr	r3, [r7, #12]
 8006e92:	681b      	ldr	r3, [r3, #0]
 8006e94:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006e98:	601a      	str	r2, [r3, #0]
 8006e9a:	2301      	movs	r3, #1
 8006e9c:	e06b      	b.n	8006f76 <HAL_I2C_Mem_Write+0x1e2>
 8006e9e:	68fb      	ldr	r3, [r7, #12]
 8006ea0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ea2:	781a      	ldrb	r2, [r3, #0]
 8006ea4:	68fb      	ldr	r3, [r7, #12]
 8006ea6:	681b      	ldr	r3, [r3, #0]
 8006ea8:	611a      	str	r2, [r3, #16]
 8006eaa:	68fb      	ldr	r3, [r7, #12]
 8006eac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006eae:	1c5a      	adds	r2, r3, #1
 8006eb0:	68fb      	ldr	r3, [r7, #12]
 8006eb2:	625a      	str	r2, [r3, #36]	; 0x24
 8006eb4:	68fb      	ldr	r3, [r7, #12]
 8006eb6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006eb8:	3b01      	subs	r3, #1
 8006eba:	b29a      	uxth	r2, r3
 8006ebc:	68fb      	ldr	r3, [r7, #12]
 8006ebe:	851a      	strh	r2, [r3, #40]	; 0x28
 8006ec0:	68fb      	ldr	r3, [r7, #12]
 8006ec2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006ec4:	b29b      	uxth	r3, r3
 8006ec6:	3b01      	subs	r3, #1
 8006ec8:	b29a      	uxth	r2, r3
 8006eca:	68fb      	ldr	r3, [r7, #12]
 8006ecc:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006ece:	68fb      	ldr	r3, [r7, #12]
 8006ed0:	681b      	ldr	r3, [r3, #0]
 8006ed2:	695b      	ldr	r3, [r3, #20]
 8006ed4:	f003 0304 	and.w	r3, r3, #4
 8006ed8:	2b04      	cmp	r3, #4
 8006eda:	d11b      	bne.n	8006f14 <HAL_I2C_Mem_Write+0x180>
 8006edc:	68fb      	ldr	r3, [r7, #12]
 8006ede:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006ee0:	2b00      	cmp	r3, #0
 8006ee2:	d017      	beq.n	8006f14 <HAL_I2C_Mem_Write+0x180>
 8006ee4:	68fb      	ldr	r3, [r7, #12]
 8006ee6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ee8:	781a      	ldrb	r2, [r3, #0]
 8006eea:	68fb      	ldr	r3, [r7, #12]
 8006eec:	681b      	ldr	r3, [r3, #0]
 8006eee:	611a      	str	r2, [r3, #16]
 8006ef0:	68fb      	ldr	r3, [r7, #12]
 8006ef2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ef4:	1c5a      	adds	r2, r3, #1
 8006ef6:	68fb      	ldr	r3, [r7, #12]
 8006ef8:	625a      	str	r2, [r3, #36]	; 0x24
 8006efa:	68fb      	ldr	r3, [r7, #12]
 8006efc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006efe:	3b01      	subs	r3, #1
 8006f00:	b29a      	uxth	r2, r3
 8006f02:	68fb      	ldr	r3, [r7, #12]
 8006f04:	851a      	strh	r2, [r3, #40]	; 0x28
 8006f06:	68fb      	ldr	r3, [r7, #12]
 8006f08:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006f0a:	b29b      	uxth	r3, r3
 8006f0c:	3b01      	subs	r3, #1
 8006f0e:	b29a      	uxth	r2, r3
 8006f10:	68fb      	ldr	r3, [r7, #12]
 8006f12:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006f14:	68fb      	ldr	r3, [r7, #12]
 8006f16:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006f18:	2b00      	cmp	r3, #0
 8006f1a:	d1aa      	bne.n	8006e72 <HAL_I2C_Mem_Write+0xde>
 8006f1c:	697a      	ldr	r2, [r7, #20]
 8006f1e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8006f20:	68f8      	ldr	r0, [r7, #12]
 8006f22:	f000 fcf6 	bl	8007912 <I2C_WaitOnBTFFlagUntilTimeout>
 8006f26:	4603      	mov	r3, r0
 8006f28:	2b00      	cmp	r3, #0
 8006f2a:	d00d      	beq.n	8006f48 <HAL_I2C_Mem_Write+0x1b4>
 8006f2c:	68fb      	ldr	r3, [r7, #12]
 8006f2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006f30:	2b04      	cmp	r3, #4
 8006f32:	d107      	bne.n	8006f44 <HAL_I2C_Mem_Write+0x1b0>
 8006f34:	68fb      	ldr	r3, [r7, #12]
 8006f36:	681b      	ldr	r3, [r3, #0]
 8006f38:	681a      	ldr	r2, [r3, #0]
 8006f3a:	68fb      	ldr	r3, [r7, #12]
 8006f3c:	681b      	ldr	r3, [r3, #0]
 8006f3e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006f42:	601a      	str	r2, [r3, #0]
 8006f44:	2301      	movs	r3, #1
 8006f46:	e016      	b.n	8006f76 <HAL_I2C_Mem_Write+0x1e2>
 8006f48:	68fb      	ldr	r3, [r7, #12]
 8006f4a:	681b      	ldr	r3, [r3, #0]
 8006f4c:	681a      	ldr	r2, [r3, #0]
 8006f4e:	68fb      	ldr	r3, [r7, #12]
 8006f50:	681b      	ldr	r3, [r3, #0]
 8006f52:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006f56:	601a      	str	r2, [r3, #0]
 8006f58:	68fb      	ldr	r3, [r7, #12]
 8006f5a:	2220      	movs	r2, #32
 8006f5c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006f60:	68fb      	ldr	r3, [r7, #12]
 8006f62:	2200      	movs	r2, #0
 8006f64:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006f68:	68fb      	ldr	r3, [r7, #12]
 8006f6a:	2200      	movs	r2, #0
 8006f6c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006f70:	2300      	movs	r3, #0
 8006f72:	e000      	b.n	8006f76 <HAL_I2C_Mem_Write+0x1e2>
 8006f74:	2302      	movs	r3, #2
 8006f76:	4618      	mov	r0, r3
 8006f78:	3718      	adds	r7, #24
 8006f7a:	46bd      	mov	sp, r7
 8006f7c:	bd80      	pop	{r7, pc}
 8006f7e:	bf00      	nop
 8006f80:	00100002 	.word	0x00100002
 8006f84:	ffff0000 	.word	0xffff0000

08006f88 <HAL_I2C_Mem_Read>:
 8006f88:	b580      	push	{r7, lr}
 8006f8a:	b08c      	sub	sp, #48	; 0x30
 8006f8c:	af02      	add	r7, sp, #8
 8006f8e:	60f8      	str	r0, [r7, #12]
 8006f90:	4608      	mov	r0, r1
 8006f92:	4611      	mov	r1, r2
 8006f94:	461a      	mov	r2, r3
 8006f96:	4603      	mov	r3, r0
 8006f98:	817b      	strh	r3, [r7, #10]
 8006f9a:	460b      	mov	r3, r1
 8006f9c:	813b      	strh	r3, [r7, #8]
 8006f9e:	4613      	mov	r3, r2
 8006fa0:	80fb      	strh	r3, [r7, #6]
 8006fa2:	f7fe fdf9 	bl	8005b98 <HAL_GetTick>
 8006fa6:	6278      	str	r0, [r7, #36]	; 0x24
 8006fa8:	68fb      	ldr	r3, [r7, #12]
 8006faa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006fae:	b2db      	uxtb	r3, r3
 8006fb0:	2b20      	cmp	r3, #32
 8006fb2:	f040 8208 	bne.w	80073c6 <HAL_I2C_Mem_Read+0x43e>
 8006fb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006fb8:	9300      	str	r3, [sp, #0]
 8006fba:	2319      	movs	r3, #25
 8006fbc:	2201      	movs	r2, #1
 8006fbe:	497b      	ldr	r1, [pc, #492]	; (80071ac <HAL_I2C_Mem_Read+0x224>)
 8006fc0:	68f8      	ldr	r0, [r7, #12]
 8006fc2:	f000 fb8f 	bl	80076e4 <I2C_WaitOnFlagUntilTimeout>
 8006fc6:	4603      	mov	r3, r0
 8006fc8:	2b00      	cmp	r3, #0
 8006fca:	d001      	beq.n	8006fd0 <HAL_I2C_Mem_Read+0x48>
 8006fcc:	2302      	movs	r3, #2
 8006fce:	e1fb      	b.n	80073c8 <HAL_I2C_Mem_Read+0x440>
 8006fd0:	68fb      	ldr	r3, [r7, #12]
 8006fd2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006fd6:	2b01      	cmp	r3, #1
 8006fd8:	d101      	bne.n	8006fde <HAL_I2C_Mem_Read+0x56>
 8006fda:	2302      	movs	r3, #2
 8006fdc:	e1f4      	b.n	80073c8 <HAL_I2C_Mem_Read+0x440>
 8006fde:	68fb      	ldr	r3, [r7, #12]
 8006fe0:	2201      	movs	r2, #1
 8006fe2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006fe6:	68fb      	ldr	r3, [r7, #12]
 8006fe8:	681b      	ldr	r3, [r3, #0]
 8006fea:	681b      	ldr	r3, [r3, #0]
 8006fec:	f003 0301 	and.w	r3, r3, #1
 8006ff0:	2b01      	cmp	r3, #1
 8006ff2:	d007      	beq.n	8007004 <HAL_I2C_Mem_Read+0x7c>
 8006ff4:	68fb      	ldr	r3, [r7, #12]
 8006ff6:	681b      	ldr	r3, [r3, #0]
 8006ff8:	681a      	ldr	r2, [r3, #0]
 8006ffa:	68fb      	ldr	r3, [r7, #12]
 8006ffc:	681b      	ldr	r3, [r3, #0]
 8006ffe:	f042 0201 	orr.w	r2, r2, #1
 8007002:	601a      	str	r2, [r3, #0]
 8007004:	68fb      	ldr	r3, [r7, #12]
 8007006:	681b      	ldr	r3, [r3, #0]
 8007008:	681a      	ldr	r2, [r3, #0]
 800700a:	68fb      	ldr	r3, [r7, #12]
 800700c:	681b      	ldr	r3, [r3, #0]
 800700e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007012:	601a      	str	r2, [r3, #0]
 8007014:	68fb      	ldr	r3, [r7, #12]
 8007016:	2222      	movs	r2, #34	; 0x22
 8007018:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800701c:	68fb      	ldr	r3, [r7, #12]
 800701e:	2240      	movs	r2, #64	; 0x40
 8007020:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007024:	68fb      	ldr	r3, [r7, #12]
 8007026:	2200      	movs	r2, #0
 8007028:	641a      	str	r2, [r3, #64]	; 0x40
 800702a:	68fb      	ldr	r3, [r7, #12]
 800702c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800702e:	625a      	str	r2, [r3, #36]	; 0x24
 8007030:	68fb      	ldr	r3, [r7, #12]
 8007032:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8007034:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007036:	68fb      	ldr	r3, [r7, #12]
 8007038:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800703a:	b29a      	uxth	r2, r3
 800703c:	68fb      	ldr	r3, [r7, #12]
 800703e:	851a      	strh	r2, [r3, #40]	; 0x28
 8007040:	68fb      	ldr	r3, [r7, #12]
 8007042:	4a5b      	ldr	r2, [pc, #364]	; (80071b0 <HAL_I2C_Mem_Read+0x228>)
 8007044:	62da      	str	r2, [r3, #44]	; 0x2c
 8007046:	88f8      	ldrh	r0, [r7, #6]
 8007048:	893a      	ldrh	r2, [r7, #8]
 800704a:	8979      	ldrh	r1, [r7, #10]
 800704c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800704e:	9301      	str	r3, [sp, #4]
 8007050:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007052:	9300      	str	r3, [sp, #0]
 8007054:	4603      	mov	r3, r0
 8007056:	68f8      	ldr	r0, [r7, #12]
 8007058:	f000 fa5e 	bl	8007518 <I2C_RequestMemoryRead>
 800705c:	4603      	mov	r3, r0
 800705e:	2b00      	cmp	r3, #0
 8007060:	d001      	beq.n	8007066 <HAL_I2C_Mem_Read+0xde>
 8007062:	2301      	movs	r3, #1
 8007064:	e1b0      	b.n	80073c8 <HAL_I2C_Mem_Read+0x440>
 8007066:	68fb      	ldr	r3, [r7, #12]
 8007068:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800706a:	2b00      	cmp	r3, #0
 800706c:	d113      	bne.n	8007096 <HAL_I2C_Mem_Read+0x10e>
 800706e:	2300      	movs	r3, #0
 8007070:	623b      	str	r3, [r7, #32]
 8007072:	68fb      	ldr	r3, [r7, #12]
 8007074:	681b      	ldr	r3, [r3, #0]
 8007076:	695b      	ldr	r3, [r3, #20]
 8007078:	623b      	str	r3, [r7, #32]
 800707a:	68fb      	ldr	r3, [r7, #12]
 800707c:	681b      	ldr	r3, [r3, #0]
 800707e:	699b      	ldr	r3, [r3, #24]
 8007080:	623b      	str	r3, [r7, #32]
 8007082:	6a3b      	ldr	r3, [r7, #32]
 8007084:	68fb      	ldr	r3, [r7, #12]
 8007086:	681b      	ldr	r3, [r3, #0]
 8007088:	681a      	ldr	r2, [r3, #0]
 800708a:	68fb      	ldr	r3, [r7, #12]
 800708c:	681b      	ldr	r3, [r3, #0]
 800708e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007092:	601a      	str	r2, [r3, #0]
 8007094:	e184      	b.n	80073a0 <HAL_I2C_Mem_Read+0x418>
 8007096:	68fb      	ldr	r3, [r7, #12]
 8007098:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800709a:	2b01      	cmp	r3, #1
 800709c:	d11b      	bne.n	80070d6 <HAL_I2C_Mem_Read+0x14e>
 800709e:	68fb      	ldr	r3, [r7, #12]
 80070a0:	681b      	ldr	r3, [r3, #0]
 80070a2:	681a      	ldr	r2, [r3, #0]
 80070a4:	68fb      	ldr	r3, [r7, #12]
 80070a6:	681b      	ldr	r3, [r3, #0]
 80070a8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80070ac:	601a      	str	r2, [r3, #0]
 80070ae:	2300      	movs	r3, #0
 80070b0:	61fb      	str	r3, [r7, #28]
 80070b2:	68fb      	ldr	r3, [r7, #12]
 80070b4:	681b      	ldr	r3, [r3, #0]
 80070b6:	695b      	ldr	r3, [r3, #20]
 80070b8:	61fb      	str	r3, [r7, #28]
 80070ba:	68fb      	ldr	r3, [r7, #12]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	699b      	ldr	r3, [r3, #24]
 80070c0:	61fb      	str	r3, [r7, #28]
 80070c2:	69fb      	ldr	r3, [r7, #28]
 80070c4:	68fb      	ldr	r3, [r7, #12]
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	681a      	ldr	r2, [r3, #0]
 80070ca:	68fb      	ldr	r3, [r7, #12]
 80070cc:	681b      	ldr	r3, [r3, #0]
 80070ce:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80070d2:	601a      	str	r2, [r3, #0]
 80070d4:	e164      	b.n	80073a0 <HAL_I2C_Mem_Read+0x418>
 80070d6:	68fb      	ldr	r3, [r7, #12]
 80070d8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80070da:	2b02      	cmp	r3, #2
 80070dc:	d11b      	bne.n	8007116 <HAL_I2C_Mem_Read+0x18e>
 80070de:	68fb      	ldr	r3, [r7, #12]
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	681a      	ldr	r2, [r3, #0]
 80070e4:	68fb      	ldr	r3, [r7, #12]
 80070e6:	681b      	ldr	r3, [r3, #0]
 80070e8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80070ec:	601a      	str	r2, [r3, #0]
 80070ee:	68fb      	ldr	r3, [r7, #12]
 80070f0:	681b      	ldr	r3, [r3, #0]
 80070f2:	681a      	ldr	r2, [r3, #0]
 80070f4:	68fb      	ldr	r3, [r7, #12]
 80070f6:	681b      	ldr	r3, [r3, #0]
 80070f8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80070fc:	601a      	str	r2, [r3, #0]
 80070fe:	2300      	movs	r3, #0
 8007100:	61bb      	str	r3, [r7, #24]
 8007102:	68fb      	ldr	r3, [r7, #12]
 8007104:	681b      	ldr	r3, [r3, #0]
 8007106:	695b      	ldr	r3, [r3, #20]
 8007108:	61bb      	str	r3, [r7, #24]
 800710a:	68fb      	ldr	r3, [r7, #12]
 800710c:	681b      	ldr	r3, [r3, #0]
 800710e:	699b      	ldr	r3, [r3, #24]
 8007110:	61bb      	str	r3, [r7, #24]
 8007112:	69bb      	ldr	r3, [r7, #24]
 8007114:	e144      	b.n	80073a0 <HAL_I2C_Mem_Read+0x418>
 8007116:	2300      	movs	r3, #0
 8007118:	617b      	str	r3, [r7, #20]
 800711a:	68fb      	ldr	r3, [r7, #12]
 800711c:	681b      	ldr	r3, [r3, #0]
 800711e:	695b      	ldr	r3, [r3, #20]
 8007120:	617b      	str	r3, [r7, #20]
 8007122:	68fb      	ldr	r3, [r7, #12]
 8007124:	681b      	ldr	r3, [r3, #0]
 8007126:	699b      	ldr	r3, [r3, #24]
 8007128:	617b      	str	r3, [r7, #20]
 800712a:	697b      	ldr	r3, [r7, #20]
 800712c:	e138      	b.n	80073a0 <HAL_I2C_Mem_Read+0x418>
 800712e:	68fb      	ldr	r3, [r7, #12]
 8007130:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007132:	2b03      	cmp	r3, #3
 8007134:	f200 80f1 	bhi.w	800731a <HAL_I2C_Mem_Read+0x392>
 8007138:	68fb      	ldr	r3, [r7, #12]
 800713a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800713c:	2b01      	cmp	r3, #1
 800713e:	d123      	bne.n	8007188 <HAL_I2C_Mem_Read+0x200>
 8007140:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007142:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8007144:	68f8      	ldr	r0, [r7, #12]
 8007146:	f000 fc25 	bl	8007994 <I2C_WaitOnRXNEFlagUntilTimeout>
 800714a:	4603      	mov	r3, r0
 800714c:	2b00      	cmp	r3, #0
 800714e:	d001      	beq.n	8007154 <HAL_I2C_Mem_Read+0x1cc>
 8007150:	2301      	movs	r3, #1
 8007152:	e139      	b.n	80073c8 <HAL_I2C_Mem_Read+0x440>
 8007154:	68fb      	ldr	r3, [r7, #12]
 8007156:	681b      	ldr	r3, [r3, #0]
 8007158:	691a      	ldr	r2, [r3, #16]
 800715a:	68fb      	ldr	r3, [r7, #12]
 800715c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800715e:	b2d2      	uxtb	r2, r2
 8007160:	701a      	strb	r2, [r3, #0]
 8007162:	68fb      	ldr	r3, [r7, #12]
 8007164:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007166:	1c5a      	adds	r2, r3, #1
 8007168:	68fb      	ldr	r3, [r7, #12]
 800716a:	625a      	str	r2, [r3, #36]	; 0x24
 800716c:	68fb      	ldr	r3, [r7, #12]
 800716e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007170:	3b01      	subs	r3, #1
 8007172:	b29a      	uxth	r2, r3
 8007174:	68fb      	ldr	r3, [r7, #12]
 8007176:	851a      	strh	r2, [r3, #40]	; 0x28
 8007178:	68fb      	ldr	r3, [r7, #12]
 800717a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800717c:	b29b      	uxth	r3, r3
 800717e:	3b01      	subs	r3, #1
 8007180:	b29a      	uxth	r2, r3
 8007182:	68fb      	ldr	r3, [r7, #12]
 8007184:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007186:	e10b      	b.n	80073a0 <HAL_I2C_Mem_Read+0x418>
 8007188:	68fb      	ldr	r3, [r7, #12]
 800718a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800718c:	2b02      	cmp	r3, #2
 800718e:	d14e      	bne.n	800722e <HAL_I2C_Mem_Read+0x2a6>
 8007190:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007192:	9300      	str	r3, [sp, #0]
 8007194:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007196:	2200      	movs	r2, #0
 8007198:	4906      	ldr	r1, [pc, #24]	; (80071b4 <HAL_I2C_Mem_Read+0x22c>)
 800719a:	68f8      	ldr	r0, [r7, #12]
 800719c:	f000 faa2 	bl	80076e4 <I2C_WaitOnFlagUntilTimeout>
 80071a0:	4603      	mov	r3, r0
 80071a2:	2b00      	cmp	r3, #0
 80071a4:	d008      	beq.n	80071b8 <HAL_I2C_Mem_Read+0x230>
 80071a6:	2301      	movs	r3, #1
 80071a8:	e10e      	b.n	80073c8 <HAL_I2C_Mem_Read+0x440>
 80071aa:	bf00      	nop
 80071ac:	00100002 	.word	0x00100002
 80071b0:	ffff0000 	.word	0xffff0000
 80071b4:	00010004 	.word	0x00010004
 80071b8:	68fb      	ldr	r3, [r7, #12]
 80071ba:	681b      	ldr	r3, [r3, #0]
 80071bc:	681a      	ldr	r2, [r3, #0]
 80071be:	68fb      	ldr	r3, [r7, #12]
 80071c0:	681b      	ldr	r3, [r3, #0]
 80071c2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80071c6:	601a      	str	r2, [r3, #0]
 80071c8:	68fb      	ldr	r3, [r7, #12]
 80071ca:	681b      	ldr	r3, [r3, #0]
 80071cc:	691a      	ldr	r2, [r3, #16]
 80071ce:	68fb      	ldr	r3, [r7, #12]
 80071d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80071d2:	b2d2      	uxtb	r2, r2
 80071d4:	701a      	strb	r2, [r3, #0]
 80071d6:	68fb      	ldr	r3, [r7, #12]
 80071d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80071da:	1c5a      	adds	r2, r3, #1
 80071dc:	68fb      	ldr	r3, [r7, #12]
 80071de:	625a      	str	r2, [r3, #36]	; 0x24
 80071e0:	68fb      	ldr	r3, [r7, #12]
 80071e2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80071e4:	3b01      	subs	r3, #1
 80071e6:	b29a      	uxth	r2, r3
 80071e8:	68fb      	ldr	r3, [r7, #12]
 80071ea:	851a      	strh	r2, [r3, #40]	; 0x28
 80071ec:	68fb      	ldr	r3, [r7, #12]
 80071ee:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80071f0:	b29b      	uxth	r3, r3
 80071f2:	3b01      	subs	r3, #1
 80071f4:	b29a      	uxth	r2, r3
 80071f6:	68fb      	ldr	r3, [r7, #12]
 80071f8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80071fa:	68fb      	ldr	r3, [r7, #12]
 80071fc:	681b      	ldr	r3, [r3, #0]
 80071fe:	691a      	ldr	r2, [r3, #16]
 8007200:	68fb      	ldr	r3, [r7, #12]
 8007202:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007204:	b2d2      	uxtb	r2, r2
 8007206:	701a      	strb	r2, [r3, #0]
 8007208:	68fb      	ldr	r3, [r7, #12]
 800720a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800720c:	1c5a      	adds	r2, r3, #1
 800720e:	68fb      	ldr	r3, [r7, #12]
 8007210:	625a      	str	r2, [r3, #36]	; 0x24
 8007212:	68fb      	ldr	r3, [r7, #12]
 8007214:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007216:	3b01      	subs	r3, #1
 8007218:	b29a      	uxth	r2, r3
 800721a:	68fb      	ldr	r3, [r7, #12]
 800721c:	851a      	strh	r2, [r3, #40]	; 0x28
 800721e:	68fb      	ldr	r3, [r7, #12]
 8007220:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007222:	b29b      	uxth	r3, r3
 8007224:	3b01      	subs	r3, #1
 8007226:	b29a      	uxth	r2, r3
 8007228:	68fb      	ldr	r3, [r7, #12]
 800722a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800722c:	e0b8      	b.n	80073a0 <HAL_I2C_Mem_Read+0x418>
 800722e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007230:	9300      	str	r3, [sp, #0]
 8007232:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007234:	2200      	movs	r2, #0
 8007236:	4966      	ldr	r1, [pc, #408]	; (80073d0 <HAL_I2C_Mem_Read+0x448>)
 8007238:	68f8      	ldr	r0, [r7, #12]
 800723a:	f000 fa53 	bl	80076e4 <I2C_WaitOnFlagUntilTimeout>
 800723e:	4603      	mov	r3, r0
 8007240:	2b00      	cmp	r3, #0
 8007242:	d001      	beq.n	8007248 <HAL_I2C_Mem_Read+0x2c0>
 8007244:	2301      	movs	r3, #1
 8007246:	e0bf      	b.n	80073c8 <HAL_I2C_Mem_Read+0x440>
 8007248:	68fb      	ldr	r3, [r7, #12]
 800724a:	681b      	ldr	r3, [r3, #0]
 800724c:	681a      	ldr	r2, [r3, #0]
 800724e:	68fb      	ldr	r3, [r7, #12]
 8007250:	681b      	ldr	r3, [r3, #0]
 8007252:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007256:	601a      	str	r2, [r3, #0]
 8007258:	68fb      	ldr	r3, [r7, #12]
 800725a:	681b      	ldr	r3, [r3, #0]
 800725c:	691a      	ldr	r2, [r3, #16]
 800725e:	68fb      	ldr	r3, [r7, #12]
 8007260:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007262:	b2d2      	uxtb	r2, r2
 8007264:	701a      	strb	r2, [r3, #0]
 8007266:	68fb      	ldr	r3, [r7, #12]
 8007268:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800726a:	1c5a      	adds	r2, r3, #1
 800726c:	68fb      	ldr	r3, [r7, #12]
 800726e:	625a      	str	r2, [r3, #36]	; 0x24
 8007270:	68fb      	ldr	r3, [r7, #12]
 8007272:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007274:	3b01      	subs	r3, #1
 8007276:	b29a      	uxth	r2, r3
 8007278:	68fb      	ldr	r3, [r7, #12]
 800727a:	851a      	strh	r2, [r3, #40]	; 0x28
 800727c:	68fb      	ldr	r3, [r7, #12]
 800727e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007280:	b29b      	uxth	r3, r3
 8007282:	3b01      	subs	r3, #1
 8007284:	b29a      	uxth	r2, r3
 8007286:	68fb      	ldr	r3, [r7, #12]
 8007288:	855a      	strh	r2, [r3, #42]	; 0x2a
 800728a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800728c:	9300      	str	r3, [sp, #0]
 800728e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007290:	2200      	movs	r2, #0
 8007292:	494f      	ldr	r1, [pc, #316]	; (80073d0 <HAL_I2C_Mem_Read+0x448>)
 8007294:	68f8      	ldr	r0, [r7, #12]
 8007296:	f000 fa25 	bl	80076e4 <I2C_WaitOnFlagUntilTimeout>
 800729a:	4603      	mov	r3, r0
 800729c:	2b00      	cmp	r3, #0
 800729e:	d001      	beq.n	80072a4 <HAL_I2C_Mem_Read+0x31c>
 80072a0:	2301      	movs	r3, #1
 80072a2:	e091      	b.n	80073c8 <HAL_I2C_Mem_Read+0x440>
 80072a4:	68fb      	ldr	r3, [r7, #12]
 80072a6:	681b      	ldr	r3, [r3, #0]
 80072a8:	681a      	ldr	r2, [r3, #0]
 80072aa:	68fb      	ldr	r3, [r7, #12]
 80072ac:	681b      	ldr	r3, [r3, #0]
 80072ae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80072b2:	601a      	str	r2, [r3, #0]
 80072b4:	68fb      	ldr	r3, [r7, #12]
 80072b6:	681b      	ldr	r3, [r3, #0]
 80072b8:	691a      	ldr	r2, [r3, #16]
 80072ba:	68fb      	ldr	r3, [r7, #12]
 80072bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072be:	b2d2      	uxtb	r2, r2
 80072c0:	701a      	strb	r2, [r3, #0]
 80072c2:	68fb      	ldr	r3, [r7, #12]
 80072c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072c6:	1c5a      	adds	r2, r3, #1
 80072c8:	68fb      	ldr	r3, [r7, #12]
 80072ca:	625a      	str	r2, [r3, #36]	; 0x24
 80072cc:	68fb      	ldr	r3, [r7, #12]
 80072ce:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80072d0:	3b01      	subs	r3, #1
 80072d2:	b29a      	uxth	r2, r3
 80072d4:	68fb      	ldr	r3, [r7, #12]
 80072d6:	851a      	strh	r2, [r3, #40]	; 0x28
 80072d8:	68fb      	ldr	r3, [r7, #12]
 80072da:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072dc:	b29b      	uxth	r3, r3
 80072de:	3b01      	subs	r3, #1
 80072e0:	b29a      	uxth	r2, r3
 80072e2:	68fb      	ldr	r3, [r7, #12]
 80072e4:	855a      	strh	r2, [r3, #42]	; 0x2a
 80072e6:	68fb      	ldr	r3, [r7, #12]
 80072e8:	681b      	ldr	r3, [r3, #0]
 80072ea:	691a      	ldr	r2, [r3, #16]
 80072ec:	68fb      	ldr	r3, [r7, #12]
 80072ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072f0:	b2d2      	uxtb	r2, r2
 80072f2:	701a      	strb	r2, [r3, #0]
 80072f4:	68fb      	ldr	r3, [r7, #12]
 80072f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072f8:	1c5a      	adds	r2, r3, #1
 80072fa:	68fb      	ldr	r3, [r7, #12]
 80072fc:	625a      	str	r2, [r3, #36]	; 0x24
 80072fe:	68fb      	ldr	r3, [r7, #12]
 8007300:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8007302:	3b01      	subs	r3, #1
 8007304:	b29a      	uxth	r2, r3
 8007306:	68fb      	ldr	r3, [r7, #12]
 8007308:	851a      	strh	r2, [r3, #40]	; 0x28
 800730a:	68fb      	ldr	r3, [r7, #12]
 800730c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800730e:	b29b      	uxth	r3, r3
 8007310:	3b01      	subs	r3, #1
 8007312:	b29a      	uxth	r2, r3
 8007314:	68fb      	ldr	r3, [r7, #12]
 8007316:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007318:	e042      	b.n	80073a0 <HAL_I2C_Mem_Read+0x418>
 800731a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800731c:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 800731e:	68f8      	ldr	r0, [r7, #12]
 8007320:	f000 fb38 	bl	8007994 <I2C_WaitOnRXNEFlagUntilTimeout>
 8007324:	4603      	mov	r3, r0
 8007326:	2b00      	cmp	r3, #0
 8007328:	d001      	beq.n	800732e <HAL_I2C_Mem_Read+0x3a6>
 800732a:	2301      	movs	r3, #1
 800732c:	e04c      	b.n	80073c8 <HAL_I2C_Mem_Read+0x440>
 800732e:	68fb      	ldr	r3, [r7, #12]
 8007330:	681b      	ldr	r3, [r3, #0]
 8007332:	691a      	ldr	r2, [r3, #16]
 8007334:	68fb      	ldr	r3, [r7, #12]
 8007336:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007338:	b2d2      	uxtb	r2, r2
 800733a:	701a      	strb	r2, [r3, #0]
 800733c:	68fb      	ldr	r3, [r7, #12]
 800733e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007340:	1c5a      	adds	r2, r3, #1
 8007342:	68fb      	ldr	r3, [r7, #12]
 8007344:	625a      	str	r2, [r3, #36]	; 0x24
 8007346:	68fb      	ldr	r3, [r7, #12]
 8007348:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800734a:	3b01      	subs	r3, #1
 800734c:	b29a      	uxth	r2, r3
 800734e:	68fb      	ldr	r3, [r7, #12]
 8007350:	851a      	strh	r2, [r3, #40]	; 0x28
 8007352:	68fb      	ldr	r3, [r7, #12]
 8007354:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007356:	b29b      	uxth	r3, r3
 8007358:	3b01      	subs	r3, #1
 800735a:	b29a      	uxth	r2, r3
 800735c:	68fb      	ldr	r3, [r7, #12]
 800735e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007360:	68fb      	ldr	r3, [r7, #12]
 8007362:	681b      	ldr	r3, [r3, #0]
 8007364:	695b      	ldr	r3, [r3, #20]
 8007366:	f003 0304 	and.w	r3, r3, #4
 800736a:	2b04      	cmp	r3, #4
 800736c:	d118      	bne.n	80073a0 <HAL_I2C_Mem_Read+0x418>
 800736e:	68fb      	ldr	r3, [r7, #12]
 8007370:	681b      	ldr	r3, [r3, #0]
 8007372:	691a      	ldr	r2, [r3, #16]
 8007374:	68fb      	ldr	r3, [r7, #12]
 8007376:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007378:	b2d2      	uxtb	r2, r2
 800737a:	701a      	strb	r2, [r3, #0]
 800737c:	68fb      	ldr	r3, [r7, #12]
 800737e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007380:	1c5a      	adds	r2, r3, #1
 8007382:	68fb      	ldr	r3, [r7, #12]
 8007384:	625a      	str	r2, [r3, #36]	; 0x24
 8007386:	68fb      	ldr	r3, [r7, #12]
 8007388:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800738a:	3b01      	subs	r3, #1
 800738c:	b29a      	uxth	r2, r3
 800738e:	68fb      	ldr	r3, [r7, #12]
 8007390:	851a      	strh	r2, [r3, #40]	; 0x28
 8007392:	68fb      	ldr	r3, [r7, #12]
 8007394:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007396:	b29b      	uxth	r3, r3
 8007398:	3b01      	subs	r3, #1
 800739a:	b29a      	uxth	r2, r3
 800739c:	68fb      	ldr	r3, [r7, #12]
 800739e:	855a      	strh	r2, [r3, #42]	; 0x2a
 80073a0:	68fb      	ldr	r3, [r7, #12]
 80073a2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80073a4:	2b00      	cmp	r3, #0
 80073a6:	f47f aec2 	bne.w	800712e <HAL_I2C_Mem_Read+0x1a6>
 80073aa:	68fb      	ldr	r3, [r7, #12]
 80073ac:	2220      	movs	r2, #32
 80073ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80073b2:	68fb      	ldr	r3, [r7, #12]
 80073b4:	2200      	movs	r2, #0
 80073b6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80073ba:	68fb      	ldr	r3, [r7, #12]
 80073bc:	2200      	movs	r2, #0
 80073be:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80073c2:	2300      	movs	r3, #0
 80073c4:	e000      	b.n	80073c8 <HAL_I2C_Mem_Read+0x440>
 80073c6:	2302      	movs	r3, #2
 80073c8:	4618      	mov	r0, r3
 80073ca:	3728      	adds	r7, #40	; 0x28
 80073cc:	46bd      	mov	sp, r7
 80073ce:	bd80      	pop	{r7, pc}
 80073d0:	00010004 	.word	0x00010004

080073d4 <HAL_I2C_GetState>:
 80073d4:	b480      	push	{r7}
 80073d6:	b083      	sub	sp, #12
 80073d8:	af00      	add	r7, sp, #0
 80073da:	6078      	str	r0, [r7, #4]
 80073dc:	687b      	ldr	r3, [r7, #4]
 80073de:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80073e2:	b2db      	uxtb	r3, r3
 80073e4:	4618      	mov	r0, r3
 80073e6:	370c      	adds	r7, #12
 80073e8:	46bd      	mov	sp, r7
 80073ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073ee:	4770      	bx	lr

080073f0 <I2C_RequestMemoryWrite>:
 80073f0:	b580      	push	{r7, lr}
 80073f2:	b088      	sub	sp, #32
 80073f4:	af02      	add	r7, sp, #8
 80073f6:	60f8      	str	r0, [r7, #12]
 80073f8:	4608      	mov	r0, r1
 80073fa:	4611      	mov	r1, r2
 80073fc:	461a      	mov	r2, r3
 80073fe:	4603      	mov	r3, r0
 8007400:	817b      	strh	r3, [r7, #10]
 8007402:	460b      	mov	r3, r1
 8007404:	813b      	strh	r3, [r7, #8]
 8007406:	4613      	mov	r3, r2
 8007408:	80fb      	strh	r3, [r7, #6]
 800740a:	68fb      	ldr	r3, [r7, #12]
 800740c:	681b      	ldr	r3, [r3, #0]
 800740e:	681a      	ldr	r2, [r3, #0]
 8007410:	68fb      	ldr	r3, [r7, #12]
 8007412:	681b      	ldr	r3, [r3, #0]
 8007414:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007418:	601a      	str	r2, [r3, #0]
 800741a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800741c:	9300      	str	r3, [sp, #0]
 800741e:	6a3b      	ldr	r3, [r7, #32]
 8007420:	2200      	movs	r2, #0
 8007422:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007426:	68f8      	ldr	r0, [r7, #12]
 8007428:	f000 f95c 	bl	80076e4 <I2C_WaitOnFlagUntilTimeout>
 800742c:	4603      	mov	r3, r0
 800742e:	2b00      	cmp	r3, #0
 8007430:	d00c      	beq.n	800744c <I2C_RequestMemoryWrite+0x5c>
 8007432:	68fb      	ldr	r3, [r7, #12]
 8007434:	681b      	ldr	r3, [r3, #0]
 8007436:	681b      	ldr	r3, [r3, #0]
 8007438:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800743c:	2b00      	cmp	r3, #0
 800743e:	d003      	beq.n	8007448 <I2C_RequestMemoryWrite+0x58>
 8007440:	68fb      	ldr	r3, [r7, #12]
 8007442:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007446:	641a      	str	r2, [r3, #64]	; 0x40
 8007448:	2303      	movs	r3, #3
 800744a:	e05f      	b.n	800750c <I2C_RequestMemoryWrite+0x11c>
 800744c:	897b      	ldrh	r3, [r7, #10]
 800744e:	b2db      	uxtb	r3, r3
 8007450:	461a      	mov	r2, r3
 8007452:	68fb      	ldr	r3, [r7, #12]
 8007454:	681b      	ldr	r3, [r3, #0]
 8007456:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800745a:	611a      	str	r2, [r3, #16]
 800745c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800745e:	6a3a      	ldr	r2, [r7, #32]
 8007460:	492c      	ldr	r1, [pc, #176]	; (8007514 <I2C_RequestMemoryWrite+0x124>)
 8007462:	68f8      	ldr	r0, [r7, #12]
 8007464:	f000 f995 	bl	8007792 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007468:	4603      	mov	r3, r0
 800746a:	2b00      	cmp	r3, #0
 800746c:	d001      	beq.n	8007472 <I2C_RequestMemoryWrite+0x82>
 800746e:	2301      	movs	r3, #1
 8007470:	e04c      	b.n	800750c <I2C_RequestMemoryWrite+0x11c>
 8007472:	2300      	movs	r3, #0
 8007474:	617b      	str	r3, [r7, #20]
 8007476:	68fb      	ldr	r3, [r7, #12]
 8007478:	681b      	ldr	r3, [r3, #0]
 800747a:	695b      	ldr	r3, [r3, #20]
 800747c:	617b      	str	r3, [r7, #20]
 800747e:	68fb      	ldr	r3, [r7, #12]
 8007480:	681b      	ldr	r3, [r3, #0]
 8007482:	699b      	ldr	r3, [r3, #24]
 8007484:	617b      	str	r3, [r7, #20]
 8007486:	697b      	ldr	r3, [r7, #20]
 8007488:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800748a:	6a39      	ldr	r1, [r7, #32]
 800748c:	68f8      	ldr	r0, [r7, #12]
 800748e:	f000 f9ff 	bl	8007890 <I2C_WaitOnTXEFlagUntilTimeout>
 8007492:	4603      	mov	r3, r0
 8007494:	2b00      	cmp	r3, #0
 8007496:	d00d      	beq.n	80074b4 <I2C_RequestMemoryWrite+0xc4>
 8007498:	68fb      	ldr	r3, [r7, #12]
 800749a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800749c:	2b04      	cmp	r3, #4
 800749e:	d107      	bne.n	80074b0 <I2C_RequestMemoryWrite+0xc0>
 80074a0:	68fb      	ldr	r3, [r7, #12]
 80074a2:	681b      	ldr	r3, [r3, #0]
 80074a4:	681a      	ldr	r2, [r3, #0]
 80074a6:	68fb      	ldr	r3, [r7, #12]
 80074a8:	681b      	ldr	r3, [r3, #0]
 80074aa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80074ae:	601a      	str	r2, [r3, #0]
 80074b0:	2301      	movs	r3, #1
 80074b2:	e02b      	b.n	800750c <I2C_RequestMemoryWrite+0x11c>
 80074b4:	88fb      	ldrh	r3, [r7, #6]
 80074b6:	2b01      	cmp	r3, #1
 80074b8:	d105      	bne.n	80074c6 <I2C_RequestMemoryWrite+0xd6>
 80074ba:	893b      	ldrh	r3, [r7, #8]
 80074bc:	b2da      	uxtb	r2, r3
 80074be:	68fb      	ldr	r3, [r7, #12]
 80074c0:	681b      	ldr	r3, [r3, #0]
 80074c2:	611a      	str	r2, [r3, #16]
 80074c4:	e021      	b.n	800750a <I2C_RequestMemoryWrite+0x11a>
 80074c6:	893b      	ldrh	r3, [r7, #8]
 80074c8:	0a1b      	lsrs	r3, r3, #8
 80074ca:	b29b      	uxth	r3, r3
 80074cc:	b2da      	uxtb	r2, r3
 80074ce:	68fb      	ldr	r3, [r7, #12]
 80074d0:	681b      	ldr	r3, [r3, #0]
 80074d2:	611a      	str	r2, [r3, #16]
 80074d4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80074d6:	6a39      	ldr	r1, [r7, #32]
 80074d8:	68f8      	ldr	r0, [r7, #12]
 80074da:	f000 f9d9 	bl	8007890 <I2C_WaitOnTXEFlagUntilTimeout>
 80074de:	4603      	mov	r3, r0
 80074e0:	2b00      	cmp	r3, #0
 80074e2:	d00d      	beq.n	8007500 <I2C_RequestMemoryWrite+0x110>
 80074e4:	68fb      	ldr	r3, [r7, #12]
 80074e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074e8:	2b04      	cmp	r3, #4
 80074ea:	d107      	bne.n	80074fc <I2C_RequestMemoryWrite+0x10c>
 80074ec:	68fb      	ldr	r3, [r7, #12]
 80074ee:	681b      	ldr	r3, [r3, #0]
 80074f0:	681a      	ldr	r2, [r3, #0]
 80074f2:	68fb      	ldr	r3, [r7, #12]
 80074f4:	681b      	ldr	r3, [r3, #0]
 80074f6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80074fa:	601a      	str	r2, [r3, #0]
 80074fc:	2301      	movs	r3, #1
 80074fe:	e005      	b.n	800750c <I2C_RequestMemoryWrite+0x11c>
 8007500:	893b      	ldrh	r3, [r7, #8]
 8007502:	b2da      	uxtb	r2, r3
 8007504:	68fb      	ldr	r3, [r7, #12]
 8007506:	681b      	ldr	r3, [r3, #0]
 8007508:	611a      	str	r2, [r3, #16]
 800750a:	2300      	movs	r3, #0
 800750c:	4618      	mov	r0, r3
 800750e:	3718      	adds	r7, #24
 8007510:	46bd      	mov	sp, r7
 8007512:	bd80      	pop	{r7, pc}
 8007514:	00010002 	.word	0x00010002

08007518 <I2C_RequestMemoryRead>:
 8007518:	b580      	push	{r7, lr}
 800751a:	b088      	sub	sp, #32
 800751c:	af02      	add	r7, sp, #8
 800751e:	60f8      	str	r0, [r7, #12]
 8007520:	4608      	mov	r0, r1
 8007522:	4611      	mov	r1, r2
 8007524:	461a      	mov	r2, r3
 8007526:	4603      	mov	r3, r0
 8007528:	817b      	strh	r3, [r7, #10]
 800752a:	460b      	mov	r3, r1
 800752c:	813b      	strh	r3, [r7, #8]
 800752e:	4613      	mov	r3, r2
 8007530:	80fb      	strh	r3, [r7, #6]
 8007532:	68fb      	ldr	r3, [r7, #12]
 8007534:	681b      	ldr	r3, [r3, #0]
 8007536:	681a      	ldr	r2, [r3, #0]
 8007538:	68fb      	ldr	r3, [r7, #12]
 800753a:	681b      	ldr	r3, [r3, #0]
 800753c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007540:	601a      	str	r2, [r3, #0]
 8007542:	68fb      	ldr	r3, [r7, #12]
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	681a      	ldr	r2, [r3, #0]
 8007548:	68fb      	ldr	r3, [r7, #12]
 800754a:	681b      	ldr	r3, [r3, #0]
 800754c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007550:	601a      	str	r2, [r3, #0]
 8007552:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007554:	9300      	str	r3, [sp, #0]
 8007556:	6a3b      	ldr	r3, [r7, #32]
 8007558:	2200      	movs	r2, #0
 800755a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800755e:	68f8      	ldr	r0, [r7, #12]
 8007560:	f000 f8c0 	bl	80076e4 <I2C_WaitOnFlagUntilTimeout>
 8007564:	4603      	mov	r3, r0
 8007566:	2b00      	cmp	r3, #0
 8007568:	d00c      	beq.n	8007584 <I2C_RequestMemoryRead+0x6c>
 800756a:	68fb      	ldr	r3, [r7, #12]
 800756c:	681b      	ldr	r3, [r3, #0]
 800756e:	681b      	ldr	r3, [r3, #0]
 8007570:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007574:	2b00      	cmp	r3, #0
 8007576:	d003      	beq.n	8007580 <I2C_RequestMemoryRead+0x68>
 8007578:	68fb      	ldr	r3, [r7, #12]
 800757a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800757e:	641a      	str	r2, [r3, #64]	; 0x40
 8007580:	2303      	movs	r3, #3
 8007582:	e0a9      	b.n	80076d8 <I2C_RequestMemoryRead+0x1c0>
 8007584:	897b      	ldrh	r3, [r7, #10]
 8007586:	b2db      	uxtb	r3, r3
 8007588:	461a      	mov	r2, r3
 800758a:	68fb      	ldr	r3, [r7, #12]
 800758c:	681b      	ldr	r3, [r3, #0]
 800758e:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8007592:	611a      	str	r2, [r3, #16]
 8007594:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007596:	6a3a      	ldr	r2, [r7, #32]
 8007598:	4951      	ldr	r1, [pc, #324]	; (80076e0 <I2C_RequestMemoryRead+0x1c8>)
 800759a:	68f8      	ldr	r0, [r7, #12]
 800759c:	f000 f8f9 	bl	8007792 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80075a0:	4603      	mov	r3, r0
 80075a2:	2b00      	cmp	r3, #0
 80075a4:	d001      	beq.n	80075aa <I2C_RequestMemoryRead+0x92>
 80075a6:	2301      	movs	r3, #1
 80075a8:	e096      	b.n	80076d8 <I2C_RequestMemoryRead+0x1c0>
 80075aa:	2300      	movs	r3, #0
 80075ac:	617b      	str	r3, [r7, #20]
 80075ae:	68fb      	ldr	r3, [r7, #12]
 80075b0:	681b      	ldr	r3, [r3, #0]
 80075b2:	695b      	ldr	r3, [r3, #20]
 80075b4:	617b      	str	r3, [r7, #20]
 80075b6:	68fb      	ldr	r3, [r7, #12]
 80075b8:	681b      	ldr	r3, [r3, #0]
 80075ba:	699b      	ldr	r3, [r3, #24]
 80075bc:	617b      	str	r3, [r7, #20]
 80075be:	697b      	ldr	r3, [r7, #20]
 80075c0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80075c2:	6a39      	ldr	r1, [r7, #32]
 80075c4:	68f8      	ldr	r0, [r7, #12]
 80075c6:	f000 f963 	bl	8007890 <I2C_WaitOnTXEFlagUntilTimeout>
 80075ca:	4603      	mov	r3, r0
 80075cc:	2b00      	cmp	r3, #0
 80075ce:	d00d      	beq.n	80075ec <I2C_RequestMemoryRead+0xd4>
 80075d0:	68fb      	ldr	r3, [r7, #12]
 80075d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075d4:	2b04      	cmp	r3, #4
 80075d6:	d107      	bne.n	80075e8 <I2C_RequestMemoryRead+0xd0>
 80075d8:	68fb      	ldr	r3, [r7, #12]
 80075da:	681b      	ldr	r3, [r3, #0]
 80075dc:	681a      	ldr	r2, [r3, #0]
 80075de:	68fb      	ldr	r3, [r7, #12]
 80075e0:	681b      	ldr	r3, [r3, #0]
 80075e2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80075e6:	601a      	str	r2, [r3, #0]
 80075e8:	2301      	movs	r3, #1
 80075ea:	e075      	b.n	80076d8 <I2C_RequestMemoryRead+0x1c0>
 80075ec:	88fb      	ldrh	r3, [r7, #6]
 80075ee:	2b01      	cmp	r3, #1
 80075f0:	d105      	bne.n	80075fe <I2C_RequestMemoryRead+0xe6>
 80075f2:	893b      	ldrh	r3, [r7, #8]
 80075f4:	b2da      	uxtb	r2, r3
 80075f6:	68fb      	ldr	r3, [r7, #12]
 80075f8:	681b      	ldr	r3, [r3, #0]
 80075fa:	611a      	str	r2, [r3, #16]
 80075fc:	e021      	b.n	8007642 <I2C_RequestMemoryRead+0x12a>
 80075fe:	893b      	ldrh	r3, [r7, #8]
 8007600:	0a1b      	lsrs	r3, r3, #8
 8007602:	b29b      	uxth	r3, r3
 8007604:	b2da      	uxtb	r2, r3
 8007606:	68fb      	ldr	r3, [r7, #12]
 8007608:	681b      	ldr	r3, [r3, #0]
 800760a:	611a      	str	r2, [r3, #16]
 800760c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800760e:	6a39      	ldr	r1, [r7, #32]
 8007610:	68f8      	ldr	r0, [r7, #12]
 8007612:	f000 f93d 	bl	8007890 <I2C_WaitOnTXEFlagUntilTimeout>
 8007616:	4603      	mov	r3, r0
 8007618:	2b00      	cmp	r3, #0
 800761a:	d00d      	beq.n	8007638 <I2C_RequestMemoryRead+0x120>
 800761c:	68fb      	ldr	r3, [r7, #12]
 800761e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007620:	2b04      	cmp	r3, #4
 8007622:	d107      	bne.n	8007634 <I2C_RequestMemoryRead+0x11c>
 8007624:	68fb      	ldr	r3, [r7, #12]
 8007626:	681b      	ldr	r3, [r3, #0]
 8007628:	681a      	ldr	r2, [r3, #0]
 800762a:	68fb      	ldr	r3, [r7, #12]
 800762c:	681b      	ldr	r3, [r3, #0]
 800762e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007632:	601a      	str	r2, [r3, #0]
 8007634:	2301      	movs	r3, #1
 8007636:	e04f      	b.n	80076d8 <I2C_RequestMemoryRead+0x1c0>
 8007638:	893b      	ldrh	r3, [r7, #8]
 800763a:	b2da      	uxtb	r2, r3
 800763c:	68fb      	ldr	r3, [r7, #12]
 800763e:	681b      	ldr	r3, [r3, #0]
 8007640:	611a      	str	r2, [r3, #16]
 8007642:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007644:	6a39      	ldr	r1, [r7, #32]
 8007646:	68f8      	ldr	r0, [r7, #12]
 8007648:	f000 f922 	bl	8007890 <I2C_WaitOnTXEFlagUntilTimeout>
 800764c:	4603      	mov	r3, r0
 800764e:	2b00      	cmp	r3, #0
 8007650:	d00d      	beq.n	800766e <I2C_RequestMemoryRead+0x156>
 8007652:	68fb      	ldr	r3, [r7, #12]
 8007654:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007656:	2b04      	cmp	r3, #4
 8007658:	d107      	bne.n	800766a <I2C_RequestMemoryRead+0x152>
 800765a:	68fb      	ldr	r3, [r7, #12]
 800765c:	681b      	ldr	r3, [r3, #0]
 800765e:	681a      	ldr	r2, [r3, #0]
 8007660:	68fb      	ldr	r3, [r7, #12]
 8007662:	681b      	ldr	r3, [r3, #0]
 8007664:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007668:	601a      	str	r2, [r3, #0]
 800766a:	2301      	movs	r3, #1
 800766c:	e034      	b.n	80076d8 <I2C_RequestMemoryRead+0x1c0>
 800766e:	68fb      	ldr	r3, [r7, #12]
 8007670:	681b      	ldr	r3, [r3, #0]
 8007672:	681a      	ldr	r2, [r3, #0]
 8007674:	68fb      	ldr	r3, [r7, #12]
 8007676:	681b      	ldr	r3, [r3, #0]
 8007678:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800767c:	601a      	str	r2, [r3, #0]
 800767e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007680:	9300      	str	r3, [sp, #0]
 8007682:	6a3b      	ldr	r3, [r7, #32]
 8007684:	2200      	movs	r2, #0
 8007686:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800768a:	68f8      	ldr	r0, [r7, #12]
 800768c:	f000 f82a 	bl	80076e4 <I2C_WaitOnFlagUntilTimeout>
 8007690:	4603      	mov	r3, r0
 8007692:	2b00      	cmp	r3, #0
 8007694:	d00c      	beq.n	80076b0 <I2C_RequestMemoryRead+0x198>
 8007696:	68fb      	ldr	r3, [r7, #12]
 8007698:	681b      	ldr	r3, [r3, #0]
 800769a:	681b      	ldr	r3, [r3, #0]
 800769c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80076a0:	2b00      	cmp	r3, #0
 80076a2:	d003      	beq.n	80076ac <I2C_RequestMemoryRead+0x194>
 80076a4:	68fb      	ldr	r3, [r7, #12]
 80076a6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80076aa:	641a      	str	r2, [r3, #64]	; 0x40
 80076ac:	2303      	movs	r3, #3
 80076ae:	e013      	b.n	80076d8 <I2C_RequestMemoryRead+0x1c0>
 80076b0:	897b      	ldrh	r3, [r7, #10]
 80076b2:	b2db      	uxtb	r3, r3
 80076b4:	f043 0301 	orr.w	r3, r3, #1
 80076b8:	b2da      	uxtb	r2, r3
 80076ba:	68fb      	ldr	r3, [r7, #12]
 80076bc:	681b      	ldr	r3, [r3, #0]
 80076be:	611a      	str	r2, [r3, #16]
 80076c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80076c2:	6a3a      	ldr	r2, [r7, #32]
 80076c4:	4906      	ldr	r1, [pc, #24]	; (80076e0 <I2C_RequestMemoryRead+0x1c8>)
 80076c6:	68f8      	ldr	r0, [r7, #12]
 80076c8:	f000 f863 	bl	8007792 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80076cc:	4603      	mov	r3, r0
 80076ce:	2b00      	cmp	r3, #0
 80076d0:	d001      	beq.n	80076d6 <I2C_RequestMemoryRead+0x1be>
 80076d2:	2301      	movs	r3, #1
 80076d4:	e000      	b.n	80076d8 <I2C_RequestMemoryRead+0x1c0>
 80076d6:	2300      	movs	r3, #0
 80076d8:	4618      	mov	r0, r3
 80076da:	3718      	adds	r7, #24
 80076dc:	46bd      	mov	sp, r7
 80076de:	bd80      	pop	{r7, pc}
 80076e0:	00010002 	.word	0x00010002

080076e4 <I2C_WaitOnFlagUntilTimeout>:
 80076e4:	b580      	push	{r7, lr}
 80076e6:	b084      	sub	sp, #16
 80076e8:	af00      	add	r7, sp, #0
 80076ea:	60f8      	str	r0, [r7, #12]
 80076ec:	60b9      	str	r1, [r7, #8]
 80076ee:	603b      	str	r3, [r7, #0]
 80076f0:	4613      	mov	r3, r2
 80076f2:	71fb      	strb	r3, [r7, #7]
 80076f4:	e025      	b.n	8007742 <I2C_WaitOnFlagUntilTimeout+0x5e>
 80076f6:	683b      	ldr	r3, [r7, #0]
 80076f8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80076fc:	d021      	beq.n	8007742 <I2C_WaitOnFlagUntilTimeout+0x5e>
 80076fe:	f7fe fa4b 	bl	8005b98 <HAL_GetTick>
 8007702:	4602      	mov	r2, r0
 8007704:	69bb      	ldr	r3, [r7, #24]
 8007706:	1ad3      	subs	r3, r2, r3
 8007708:	683a      	ldr	r2, [r7, #0]
 800770a:	429a      	cmp	r2, r3
 800770c:	d302      	bcc.n	8007714 <I2C_WaitOnFlagUntilTimeout+0x30>
 800770e:	683b      	ldr	r3, [r7, #0]
 8007710:	2b00      	cmp	r3, #0
 8007712:	d116      	bne.n	8007742 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007714:	68fb      	ldr	r3, [r7, #12]
 8007716:	2200      	movs	r2, #0
 8007718:	631a      	str	r2, [r3, #48]	; 0x30
 800771a:	68fb      	ldr	r3, [r7, #12]
 800771c:	2220      	movs	r2, #32
 800771e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007722:	68fb      	ldr	r3, [r7, #12]
 8007724:	2200      	movs	r2, #0
 8007726:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800772a:	68fb      	ldr	r3, [r7, #12]
 800772c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800772e:	f043 0220 	orr.w	r2, r3, #32
 8007732:	68fb      	ldr	r3, [r7, #12]
 8007734:	641a      	str	r2, [r3, #64]	; 0x40
 8007736:	68fb      	ldr	r3, [r7, #12]
 8007738:	2200      	movs	r2, #0
 800773a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800773e:	2301      	movs	r3, #1
 8007740:	e023      	b.n	800778a <I2C_WaitOnFlagUntilTimeout+0xa6>
 8007742:	68bb      	ldr	r3, [r7, #8]
 8007744:	0c1b      	lsrs	r3, r3, #16
 8007746:	b2db      	uxtb	r3, r3
 8007748:	2b01      	cmp	r3, #1
 800774a:	d10d      	bne.n	8007768 <I2C_WaitOnFlagUntilTimeout+0x84>
 800774c:	68fb      	ldr	r3, [r7, #12]
 800774e:	681b      	ldr	r3, [r3, #0]
 8007750:	695b      	ldr	r3, [r3, #20]
 8007752:	43da      	mvns	r2, r3
 8007754:	68bb      	ldr	r3, [r7, #8]
 8007756:	4013      	ands	r3, r2
 8007758:	b29b      	uxth	r3, r3
 800775a:	2b00      	cmp	r3, #0
 800775c:	bf0c      	ite	eq
 800775e:	2301      	moveq	r3, #1
 8007760:	2300      	movne	r3, #0
 8007762:	b2db      	uxtb	r3, r3
 8007764:	461a      	mov	r2, r3
 8007766:	e00c      	b.n	8007782 <I2C_WaitOnFlagUntilTimeout+0x9e>
 8007768:	68fb      	ldr	r3, [r7, #12]
 800776a:	681b      	ldr	r3, [r3, #0]
 800776c:	699b      	ldr	r3, [r3, #24]
 800776e:	43da      	mvns	r2, r3
 8007770:	68bb      	ldr	r3, [r7, #8]
 8007772:	4013      	ands	r3, r2
 8007774:	b29b      	uxth	r3, r3
 8007776:	2b00      	cmp	r3, #0
 8007778:	bf0c      	ite	eq
 800777a:	2301      	moveq	r3, #1
 800777c:	2300      	movne	r3, #0
 800777e:	b2db      	uxtb	r3, r3
 8007780:	461a      	mov	r2, r3
 8007782:	79fb      	ldrb	r3, [r7, #7]
 8007784:	429a      	cmp	r2, r3
 8007786:	d0b6      	beq.n	80076f6 <I2C_WaitOnFlagUntilTimeout+0x12>
 8007788:	2300      	movs	r3, #0
 800778a:	4618      	mov	r0, r3
 800778c:	3710      	adds	r7, #16
 800778e:	46bd      	mov	sp, r7
 8007790:	bd80      	pop	{r7, pc}

08007792 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8007792:	b580      	push	{r7, lr}
 8007794:	b084      	sub	sp, #16
 8007796:	af00      	add	r7, sp, #0
 8007798:	60f8      	str	r0, [r7, #12]
 800779a:	60b9      	str	r1, [r7, #8]
 800779c:	607a      	str	r2, [r7, #4]
 800779e:	603b      	str	r3, [r7, #0]
 80077a0:	e051      	b.n	8007846 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80077a2:	68fb      	ldr	r3, [r7, #12]
 80077a4:	681b      	ldr	r3, [r3, #0]
 80077a6:	695b      	ldr	r3, [r3, #20]
 80077a8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80077ac:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80077b0:	d123      	bne.n	80077fa <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 80077b2:	68fb      	ldr	r3, [r7, #12]
 80077b4:	681b      	ldr	r3, [r3, #0]
 80077b6:	681a      	ldr	r2, [r3, #0]
 80077b8:	68fb      	ldr	r3, [r7, #12]
 80077ba:	681b      	ldr	r3, [r3, #0]
 80077bc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80077c0:	601a      	str	r2, [r3, #0]
 80077c2:	68fb      	ldr	r3, [r7, #12]
 80077c4:	681b      	ldr	r3, [r3, #0]
 80077c6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80077ca:	615a      	str	r2, [r3, #20]
 80077cc:	68fb      	ldr	r3, [r7, #12]
 80077ce:	2200      	movs	r2, #0
 80077d0:	631a      	str	r2, [r3, #48]	; 0x30
 80077d2:	68fb      	ldr	r3, [r7, #12]
 80077d4:	2220      	movs	r2, #32
 80077d6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80077da:	68fb      	ldr	r3, [r7, #12]
 80077dc:	2200      	movs	r2, #0
 80077de:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80077e2:	68fb      	ldr	r3, [r7, #12]
 80077e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80077e6:	f043 0204 	orr.w	r2, r3, #4
 80077ea:	68fb      	ldr	r3, [r7, #12]
 80077ec:	641a      	str	r2, [r3, #64]	; 0x40
 80077ee:	68fb      	ldr	r3, [r7, #12]
 80077f0:	2200      	movs	r2, #0
 80077f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80077f6:	2301      	movs	r3, #1
 80077f8:	e046      	b.n	8007888 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007800:	d021      	beq.n	8007846 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007802:	f7fe f9c9 	bl	8005b98 <HAL_GetTick>
 8007806:	4602      	mov	r2, r0
 8007808:	683b      	ldr	r3, [r7, #0]
 800780a:	1ad3      	subs	r3, r2, r3
 800780c:	687a      	ldr	r2, [r7, #4]
 800780e:	429a      	cmp	r2, r3
 8007810:	d302      	bcc.n	8007818 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8007812:	687b      	ldr	r3, [r7, #4]
 8007814:	2b00      	cmp	r3, #0
 8007816:	d116      	bne.n	8007846 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007818:	68fb      	ldr	r3, [r7, #12]
 800781a:	2200      	movs	r2, #0
 800781c:	631a      	str	r2, [r3, #48]	; 0x30
 800781e:	68fb      	ldr	r3, [r7, #12]
 8007820:	2220      	movs	r2, #32
 8007822:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007826:	68fb      	ldr	r3, [r7, #12]
 8007828:	2200      	movs	r2, #0
 800782a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800782e:	68fb      	ldr	r3, [r7, #12]
 8007830:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007832:	f043 0220 	orr.w	r2, r3, #32
 8007836:	68fb      	ldr	r3, [r7, #12]
 8007838:	641a      	str	r2, [r3, #64]	; 0x40
 800783a:	68fb      	ldr	r3, [r7, #12]
 800783c:	2200      	movs	r2, #0
 800783e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007842:	2301      	movs	r3, #1
 8007844:	e020      	b.n	8007888 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8007846:	68bb      	ldr	r3, [r7, #8]
 8007848:	0c1b      	lsrs	r3, r3, #16
 800784a:	b2db      	uxtb	r3, r3
 800784c:	2b01      	cmp	r3, #1
 800784e:	d10c      	bne.n	800786a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8007850:	68fb      	ldr	r3, [r7, #12]
 8007852:	681b      	ldr	r3, [r3, #0]
 8007854:	695b      	ldr	r3, [r3, #20]
 8007856:	43da      	mvns	r2, r3
 8007858:	68bb      	ldr	r3, [r7, #8]
 800785a:	4013      	ands	r3, r2
 800785c:	b29b      	uxth	r3, r3
 800785e:	2b00      	cmp	r3, #0
 8007860:	bf14      	ite	ne
 8007862:	2301      	movne	r3, #1
 8007864:	2300      	moveq	r3, #0
 8007866:	b2db      	uxtb	r3, r3
 8007868:	e00b      	b.n	8007882 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800786a:	68fb      	ldr	r3, [r7, #12]
 800786c:	681b      	ldr	r3, [r3, #0]
 800786e:	699b      	ldr	r3, [r3, #24]
 8007870:	43da      	mvns	r2, r3
 8007872:	68bb      	ldr	r3, [r7, #8]
 8007874:	4013      	ands	r3, r2
 8007876:	b29b      	uxth	r3, r3
 8007878:	2b00      	cmp	r3, #0
 800787a:	bf14      	ite	ne
 800787c:	2301      	movne	r3, #1
 800787e:	2300      	moveq	r3, #0
 8007880:	b2db      	uxtb	r3, r3
 8007882:	2b00      	cmp	r3, #0
 8007884:	d18d      	bne.n	80077a2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8007886:	2300      	movs	r3, #0
 8007888:	4618      	mov	r0, r3
 800788a:	3710      	adds	r7, #16
 800788c:	46bd      	mov	sp, r7
 800788e:	bd80      	pop	{r7, pc}

08007890 <I2C_WaitOnTXEFlagUntilTimeout>:
 8007890:	b580      	push	{r7, lr}
 8007892:	b084      	sub	sp, #16
 8007894:	af00      	add	r7, sp, #0
 8007896:	60f8      	str	r0, [r7, #12]
 8007898:	60b9      	str	r1, [r7, #8]
 800789a:	607a      	str	r2, [r7, #4]
 800789c:	e02d      	b.n	80078fa <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800789e:	68f8      	ldr	r0, [r7, #12]
 80078a0:	f000 f8ce 	bl	8007a40 <I2C_IsAcknowledgeFailed>
 80078a4:	4603      	mov	r3, r0
 80078a6:	2b00      	cmp	r3, #0
 80078a8:	d001      	beq.n	80078ae <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 80078aa:	2301      	movs	r3, #1
 80078ac:	e02d      	b.n	800790a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 80078ae:	68bb      	ldr	r3, [r7, #8]
 80078b0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80078b4:	d021      	beq.n	80078fa <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80078b6:	f7fe f96f 	bl	8005b98 <HAL_GetTick>
 80078ba:	4602      	mov	r2, r0
 80078bc:	687b      	ldr	r3, [r7, #4]
 80078be:	1ad3      	subs	r3, r2, r3
 80078c0:	68ba      	ldr	r2, [r7, #8]
 80078c2:	429a      	cmp	r2, r3
 80078c4:	d302      	bcc.n	80078cc <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80078c6:	68bb      	ldr	r3, [r7, #8]
 80078c8:	2b00      	cmp	r3, #0
 80078ca:	d116      	bne.n	80078fa <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80078cc:	68fb      	ldr	r3, [r7, #12]
 80078ce:	2200      	movs	r2, #0
 80078d0:	631a      	str	r2, [r3, #48]	; 0x30
 80078d2:	68fb      	ldr	r3, [r7, #12]
 80078d4:	2220      	movs	r2, #32
 80078d6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80078da:	68fb      	ldr	r3, [r7, #12]
 80078dc:	2200      	movs	r2, #0
 80078de:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80078e2:	68fb      	ldr	r3, [r7, #12]
 80078e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80078e6:	f043 0220 	orr.w	r2, r3, #32
 80078ea:	68fb      	ldr	r3, [r7, #12]
 80078ec:	641a      	str	r2, [r3, #64]	; 0x40
 80078ee:	68fb      	ldr	r3, [r7, #12]
 80078f0:	2200      	movs	r2, #0
 80078f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80078f6:	2301      	movs	r3, #1
 80078f8:	e007      	b.n	800790a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 80078fa:	68fb      	ldr	r3, [r7, #12]
 80078fc:	681b      	ldr	r3, [r3, #0]
 80078fe:	695b      	ldr	r3, [r3, #20]
 8007900:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007904:	2b80      	cmp	r3, #128	; 0x80
 8007906:	d1ca      	bne.n	800789e <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8007908:	2300      	movs	r3, #0
 800790a:	4618      	mov	r0, r3
 800790c:	3710      	adds	r7, #16
 800790e:	46bd      	mov	sp, r7
 8007910:	bd80      	pop	{r7, pc}

08007912 <I2C_WaitOnBTFFlagUntilTimeout>:
 8007912:	b580      	push	{r7, lr}
 8007914:	b084      	sub	sp, #16
 8007916:	af00      	add	r7, sp, #0
 8007918:	60f8      	str	r0, [r7, #12]
 800791a:	60b9      	str	r1, [r7, #8]
 800791c:	607a      	str	r2, [r7, #4]
 800791e:	e02d      	b.n	800797c <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8007920:	68f8      	ldr	r0, [r7, #12]
 8007922:	f000 f88d 	bl	8007a40 <I2C_IsAcknowledgeFailed>
 8007926:	4603      	mov	r3, r0
 8007928:	2b00      	cmp	r3, #0
 800792a:	d001      	beq.n	8007930 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800792c:	2301      	movs	r3, #1
 800792e:	e02d      	b.n	800798c <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8007930:	68bb      	ldr	r3, [r7, #8]
 8007932:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007936:	d021      	beq.n	800797c <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8007938:	f7fe f92e 	bl	8005b98 <HAL_GetTick>
 800793c:	4602      	mov	r2, r0
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	1ad3      	subs	r3, r2, r3
 8007942:	68ba      	ldr	r2, [r7, #8]
 8007944:	429a      	cmp	r2, r3
 8007946:	d302      	bcc.n	800794e <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8007948:	68bb      	ldr	r3, [r7, #8]
 800794a:	2b00      	cmp	r3, #0
 800794c:	d116      	bne.n	800797c <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800794e:	68fb      	ldr	r3, [r7, #12]
 8007950:	2200      	movs	r2, #0
 8007952:	631a      	str	r2, [r3, #48]	; 0x30
 8007954:	68fb      	ldr	r3, [r7, #12]
 8007956:	2220      	movs	r2, #32
 8007958:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800795c:	68fb      	ldr	r3, [r7, #12]
 800795e:	2200      	movs	r2, #0
 8007960:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007964:	68fb      	ldr	r3, [r7, #12]
 8007966:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007968:	f043 0220 	orr.w	r2, r3, #32
 800796c:	68fb      	ldr	r3, [r7, #12]
 800796e:	641a      	str	r2, [r3, #64]	; 0x40
 8007970:	68fb      	ldr	r3, [r7, #12]
 8007972:	2200      	movs	r2, #0
 8007974:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007978:	2301      	movs	r3, #1
 800797a:	e007      	b.n	800798c <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 800797c:	68fb      	ldr	r3, [r7, #12]
 800797e:	681b      	ldr	r3, [r3, #0]
 8007980:	695b      	ldr	r3, [r3, #20]
 8007982:	f003 0304 	and.w	r3, r3, #4
 8007986:	2b04      	cmp	r3, #4
 8007988:	d1ca      	bne.n	8007920 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 800798a:	2300      	movs	r3, #0
 800798c:	4618      	mov	r0, r3
 800798e:	3710      	adds	r7, #16
 8007990:	46bd      	mov	sp, r7
 8007992:	bd80      	pop	{r7, pc}

08007994 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8007994:	b580      	push	{r7, lr}
 8007996:	b084      	sub	sp, #16
 8007998:	af00      	add	r7, sp, #0
 800799a:	60f8      	str	r0, [r7, #12]
 800799c:	60b9      	str	r1, [r7, #8]
 800799e:	607a      	str	r2, [r7, #4]
 80079a0:	e042      	b.n	8007a28 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 80079a2:	68fb      	ldr	r3, [r7, #12]
 80079a4:	681b      	ldr	r3, [r3, #0]
 80079a6:	695b      	ldr	r3, [r3, #20]
 80079a8:	f003 0310 	and.w	r3, r3, #16
 80079ac:	2b10      	cmp	r3, #16
 80079ae:	d119      	bne.n	80079e4 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 80079b0:	68fb      	ldr	r3, [r7, #12]
 80079b2:	681b      	ldr	r3, [r3, #0]
 80079b4:	f06f 0210 	mvn.w	r2, #16
 80079b8:	615a      	str	r2, [r3, #20]
 80079ba:	68fb      	ldr	r3, [r7, #12]
 80079bc:	2200      	movs	r2, #0
 80079be:	631a      	str	r2, [r3, #48]	; 0x30
 80079c0:	68fb      	ldr	r3, [r7, #12]
 80079c2:	2220      	movs	r2, #32
 80079c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80079c8:	68fb      	ldr	r3, [r7, #12]
 80079ca:	2200      	movs	r2, #0
 80079cc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80079d0:	68fb      	ldr	r3, [r7, #12]
 80079d2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80079d4:	68fb      	ldr	r3, [r7, #12]
 80079d6:	641a      	str	r2, [r3, #64]	; 0x40
 80079d8:	68fb      	ldr	r3, [r7, #12]
 80079da:	2200      	movs	r2, #0
 80079dc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80079e0:	2301      	movs	r3, #1
 80079e2:	e029      	b.n	8007a38 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 80079e4:	f7fe f8d8 	bl	8005b98 <HAL_GetTick>
 80079e8:	4602      	mov	r2, r0
 80079ea:	687b      	ldr	r3, [r7, #4]
 80079ec:	1ad3      	subs	r3, r2, r3
 80079ee:	68ba      	ldr	r2, [r7, #8]
 80079f0:	429a      	cmp	r2, r3
 80079f2:	d302      	bcc.n	80079fa <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80079f4:	68bb      	ldr	r3, [r7, #8]
 80079f6:	2b00      	cmp	r3, #0
 80079f8:	d116      	bne.n	8007a28 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 80079fa:	68fb      	ldr	r3, [r7, #12]
 80079fc:	2200      	movs	r2, #0
 80079fe:	631a      	str	r2, [r3, #48]	; 0x30
 8007a00:	68fb      	ldr	r3, [r7, #12]
 8007a02:	2220      	movs	r2, #32
 8007a04:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007a08:	68fb      	ldr	r3, [r7, #12]
 8007a0a:	2200      	movs	r2, #0
 8007a0c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007a10:	68fb      	ldr	r3, [r7, #12]
 8007a12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a14:	f043 0220 	orr.w	r2, r3, #32
 8007a18:	68fb      	ldr	r3, [r7, #12]
 8007a1a:	641a      	str	r2, [r3, #64]	; 0x40
 8007a1c:	68fb      	ldr	r3, [r7, #12]
 8007a1e:	2200      	movs	r2, #0
 8007a20:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007a24:	2301      	movs	r3, #1
 8007a26:	e007      	b.n	8007a38 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8007a28:	68fb      	ldr	r3, [r7, #12]
 8007a2a:	681b      	ldr	r3, [r3, #0]
 8007a2c:	695b      	ldr	r3, [r3, #20]
 8007a2e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007a32:	2b40      	cmp	r3, #64	; 0x40
 8007a34:	d1b5      	bne.n	80079a2 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8007a36:	2300      	movs	r3, #0
 8007a38:	4618      	mov	r0, r3
 8007a3a:	3710      	adds	r7, #16
 8007a3c:	46bd      	mov	sp, r7
 8007a3e:	bd80      	pop	{r7, pc}

08007a40 <I2C_IsAcknowledgeFailed>:
 8007a40:	b480      	push	{r7}
 8007a42:	b083      	sub	sp, #12
 8007a44:	af00      	add	r7, sp, #0
 8007a46:	6078      	str	r0, [r7, #4]
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	681b      	ldr	r3, [r3, #0]
 8007a4c:	695b      	ldr	r3, [r3, #20]
 8007a4e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007a52:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007a56:	d11b      	bne.n	8007a90 <I2C_IsAcknowledgeFailed+0x50>
 8007a58:	687b      	ldr	r3, [r7, #4]
 8007a5a:	681b      	ldr	r3, [r3, #0]
 8007a5c:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007a60:	615a      	str	r2, [r3, #20]
 8007a62:	687b      	ldr	r3, [r7, #4]
 8007a64:	2200      	movs	r2, #0
 8007a66:	631a      	str	r2, [r3, #48]	; 0x30
 8007a68:	687b      	ldr	r3, [r7, #4]
 8007a6a:	2220      	movs	r2, #32
 8007a6c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007a70:	687b      	ldr	r3, [r7, #4]
 8007a72:	2200      	movs	r2, #0
 8007a74:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007a78:	687b      	ldr	r3, [r7, #4]
 8007a7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a7c:	f043 0204 	orr.w	r2, r3, #4
 8007a80:	687b      	ldr	r3, [r7, #4]
 8007a82:	641a      	str	r2, [r3, #64]	; 0x40
 8007a84:	687b      	ldr	r3, [r7, #4]
 8007a86:	2200      	movs	r2, #0
 8007a88:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007a8c:	2301      	movs	r3, #1
 8007a8e:	e000      	b.n	8007a92 <I2C_IsAcknowledgeFailed+0x52>
 8007a90:	2300      	movs	r3, #0
 8007a92:	4618      	mov	r0, r3
 8007a94:	370c      	adds	r7, #12
 8007a96:	46bd      	mov	sp, r7
 8007a98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a9c:	4770      	bx	lr
	...

08007aa0 <HAL_LTDC_Init>:
 8007aa0:	b580      	push	{r7, lr}
 8007aa2:	b084      	sub	sp, #16
 8007aa4:	af00      	add	r7, sp, #0
 8007aa6:	6078      	str	r0, [r7, #4]
 8007aa8:	687b      	ldr	r3, [r7, #4]
 8007aaa:	2b00      	cmp	r3, #0
 8007aac:	d101      	bne.n	8007ab2 <HAL_LTDC_Init+0x12>
 8007aae:	2301      	movs	r3, #1
 8007ab0:	e0bf      	b.n	8007c32 <HAL_LTDC_Init+0x192>
 8007ab2:	687b      	ldr	r3, [r7, #4]
 8007ab4:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8007ab8:	b2db      	uxtb	r3, r3
 8007aba:	2b00      	cmp	r3, #0
 8007abc:	d106      	bne.n	8007acc <HAL_LTDC_Init+0x2c>
 8007abe:	687b      	ldr	r3, [r7, #4]
 8007ac0:	2200      	movs	r2, #0
 8007ac2:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8007ac6:	6878      	ldr	r0, [r7, #4]
 8007ac8:	f000 f8ba 	bl	8007c40 <HAL_LTDC_MspInit>
 8007acc:	687b      	ldr	r3, [r7, #4]
 8007ace:	2202      	movs	r2, #2
 8007ad0:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8007ad4:	687b      	ldr	r3, [r7, #4]
 8007ad6:	681b      	ldr	r3, [r3, #0]
 8007ad8:	699a      	ldr	r2, [r3, #24]
 8007ada:	687b      	ldr	r3, [r7, #4]
 8007adc:	681b      	ldr	r3, [r3, #0]
 8007ade:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8007ae2:	619a      	str	r2, [r3, #24]
 8007ae4:	687b      	ldr	r3, [r7, #4]
 8007ae6:	681b      	ldr	r3, [r3, #0]
 8007ae8:	6999      	ldr	r1, [r3, #24]
 8007aea:	687b      	ldr	r3, [r7, #4]
 8007aec:	685a      	ldr	r2, [r3, #4]
 8007aee:	687b      	ldr	r3, [r7, #4]
 8007af0:	689b      	ldr	r3, [r3, #8]
 8007af2:	431a      	orrs	r2, r3
 8007af4:	687b      	ldr	r3, [r7, #4]
 8007af6:	68db      	ldr	r3, [r3, #12]
 8007af8:	431a      	orrs	r2, r3
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	691b      	ldr	r3, [r3, #16]
 8007afe:	431a      	orrs	r2, r3
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	681b      	ldr	r3, [r3, #0]
 8007b04:	430a      	orrs	r2, r1
 8007b06:	619a      	str	r2, [r3, #24]
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	681b      	ldr	r3, [r3, #0]
 8007b0c:	6899      	ldr	r1, [r3, #8]
 8007b0e:	687b      	ldr	r3, [r7, #4]
 8007b10:	681a      	ldr	r2, [r3, #0]
 8007b12:	4b4a      	ldr	r3, [pc, #296]	; (8007c3c <HAL_LTDC_Init+0x19c>)
 8007b14:	400b      	ands	r3, r1
 8007b16:	6093      	str	r3, [r2, #8]
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	695b      	ldr	r3, [r3, #20]
 8007b1c:	041b      	lsls	r3, r3, #16
 8007b1e:	60fb      	str	r3, [r7, #12]
 8007b20:	687b      	ldr	r3, [r7, #4]
 8007b22:	681b      	ldr	r3, [r3, #0]
 8007b24:	6899      	ldr	r1, [r3, #8]
 8007b26:	687b      	ldr	r3, [r7, #4]
 8007b28:	699a      	ldr	r2, [r3, #24]
 8007b2a:	68fb      	ldr	r3, [r7, #12]
 8007b2c:	431a      	orrs	r2, r3
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	681b      	ldr	r3, [r3, #0]
 8007b32:	430a      	orrs	r2, r1
 8007b34:	609a      	str	r2, [r3, #8]
 8007b36:	687b      	ldr	r3, [r7, #4]
 8007b38:	681b      	ldr	r3, [r3, #0]
 8007b3a:	68d9      	ldr	r1, [r3, #12]
 8007b3c:	687b      	ldr	r3, [r7, #4]
 8007b3e:	681a      	ldr	r2, [r3, #0]
 8007b40:	4b3e      	ldr	r3, [pc, #248]	; (8007c3c <HAL_LTDC_Init+0x19c>)
 8007b42:	400b      	ands	r3, r1
 8007b44:	60d3      	str	r3, [r2, #12]
 8007b46:	687b      	ldr	r3, [r7, #4]
 8007b48:	69db      	ldr	r3, [r3, #28]
 8007b4a:	041b      	lsls	r3, r3, #16
 8007b4c:	60fb      	str	r3, [r7, #12]
 8007b4e:	687b      	ldr	r3, [r7, #4]
 8007b50:	681b      	ldr	r3, [r3, #0]
 8007b52:	68d9      	ldr	r1, [r3, #12]
 8007b54:	687b      	ldr	r3, [r7, #4]
 8007b56:	6a1a      	ldr	r2, [r3, #32]
 8007b58:	68fb      	ldr	r3, [r7, #12]
 8007b5a:	431a      	orrs	r2, r3
 8007b5c:	687b      	ldr	r3, [r7, #4]
 8007b5e:	681b      	ldr	r3, [r3, #0]
 8007b60:	430a      	orrs	r2, r1
 8007b62:	60da      	str	r2, [r3, #12]
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	6919      	ldr	r1, [r3, #16]
 8007b6a:	687b      	ldr	r3, [r7, #4]
 8007b6c:	681a      	ldr	r2, [r3, #0]
 8007b6e:	4b33      	ldr	r3, [pc, #204]	; (8007c3c <HAL_LTDC_Init+0x19c>)
 8007b70:	400b      	ands	r3, r1
 8007b72:	6113      	str	r3, [r2, #16]
 8007b74:	687b      	ldr	r3, [r7, #4]
 8007b76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007b78:	041b      	lsls	r3, r3, #16
 8007b7a:	60fb      	str	r3, [r7, #12]
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	681b      	ldr	r3, [r3, #0]
 8007b80:	6919      	ldr	r1, [r3, #16]
 8007b82:	687b      	ldr	r3, [r7, #4]
 8007b84:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8007b86:	68fb      	ldr	r3, [r7, #12]
 8007b88:	431a      	orrs	r2, r3
 8007b8a:	687b      	ldr	r3, [r7, #4]
 8007b8c:	681b      	ldr	r3, [r3, #0]
 8007b8e:	430a      	orrs	r2, r1
 8007b90:	611a      	str	r2, [r3, #16]
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	681b      	ldr	r3, [r3, #0]
 8007b96:	6959      	ldr	r1, [r3, #20]
 8007b98:	687b      	ldr	r3, [r7, #4]
 8007b9a:	681a      	ldr	r2, [r3, #0]
 8007b9c:	4b27      	ldr	r3, [pc, #156]	; (8007c3c <HAL_LTDC_Init+0x19c>)
 8007b9e:	400b      	ands	r3, r1
 8007ba0:	6153      	str	r3, [r2, #20]
 8007ba2:	687b      	ldr	r3, [r7, #4]
 8007ba4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ba6:	041b      	lsls	r3, r3, #16
 8007ba8:	60fb      	str	r3, [r7, #12]
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	681b      	ldr	r3, [r3, #0]
 8007bae:	6959      	ldr	r1, [r3, #20]
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007bb4:	68fb      	ldr	r3, [r7, #12]
 8007bb6:	431a      	orrs	r2, r3
 8007bb8:	687b      	ldr	r3, [r7, #4]
 8007bba:	681b      	ldr	r3, [r3, #0]
 8007bbc:	430a      	orrs	r2, r1
 8007bbe:	615a      	str	r2, [r3, #20]
 8007bc0:	687b      	ldr	r3, [r7, #4]
 8007bc2:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007bc6:	021b      	lsls	r3, r3, #8
 8007bc8:	60fb      	str	r3, [r7, #12]
 8007bca:	687b      	ldr	r3, [r7, #4]
 8007bcc:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8007bd0:	041b      	lsls	r3, r3, #16
 8007bd2:	60bb      	str	r3, [r7, #8]
 8007bd4:	687b      	ldr	r3, [r7, #4]
 8007bd6:	681b      	ldr	r3, [r3, #0]
 8007bd8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007bda:	687b      	ldr	r3, [r7, #4]
 8007bdc:	681b      	ldr	r3, [r3, #0]
 8007bde:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8007be2:	62da      	str	r2, [r3, #44]	; 0x2c
 8007be4:	687b      	ldr	r3, [r7, #4]
 8007be6:	681b      	ldr	r3, [r3, #0]
 8007be8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007bea:	68ba      	ldr	r2, [r7, #8]
 8007bec:	68fb      	ldr	r3, [r7, #12]
 8007bee:	4313      	orrs	r3, r2
 8007bf0:	687a      	ldr	r2, [r7, #4]
 8007bf2:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 8007bf6:	431a      	orrs	r2, r3
 8007bf8:	687b      	ldr	r3, [r7, #4]
 8007bfa:	681b      	ldr	r3, [r3, #0]
 8007bfc:	430a      	orrs	r2, r1
 8007bfe:	62da      	str	r2, [r3, #44]	; 0x2c
 8007c00:	687b      	ldr	r3, [r7, #4]
 8007c02:	681b      	ldr	r3, [r3, #0]
 8007c04:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007c06:	687b      	ldr	r3, [r7, #4]
 8007c08:	681b      	ldr	r3, [r3, #0]
 8007c0a:	f042 0206 	orr.w	r2, r2, #6
 8007c0e:	635a      	str	r2, [r3, #52]	; 0x34
 8007c10:	687b      	ldr	r3, [r7, #4]
 8007c12:	681b      	ldr	r3, [r3, #0]
 8007c14:	699a      	ldr	r2, [r3, #24]
 8007c16:	687b      	ldr	r3, [r7, #4]
 8007c18:	681b      	ldr	r3, [r3, #0]
 8007c1a:	f042 0201 	orr.w	r2, r2, #1
 8007c1e:	619a      	str	r2, [r3, #24]
 8007c20:	687b      	ldr	r3, [r7, #4]
 8007c22:	2200      	movs	r2, #0
 8007c24:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8007c28:	687b      	ldr	r3, [r7, #4]
 8007c2a:	2201      	movs	r2, #1
 8007c2c:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8007c30:	2300      	movs	r3, #0
 8007c32:	4618      	mov	r0, r3
 8007c34:	3710      	adds	r7, #16
 8007c36:	46bd      	mov	sp, r7
 8007c38:	bd80      	pop	{r7, pc}
 8007c3a:	bf00      	nop
 8007c3c:	f000f800 	.word	0xf000f800

08007c40 <HAL_LTDC_MspInit>:
 8007c40:	b480      	push	{r7}
 8007c42:	b083      	sub	sp, #12
 8007c44:	af00      	add	r7, sp, #0
 8007c46:	6078      	str	r0, [r7, #4]
 8007c48:	bf00      	nop
 8007c4a:	370c      	adds	r7, #12
 8007c4c:	46bd      	mov	sp, r7
 8007c4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c52:	4770      	bx	lr

08007c54 <HAL_LTDC_ConfigLayer>:
 8007c54:	b5b0      	push	{r4, r5, r7, lr}
 8007c56:	b084      	sub	sp, #16
 8007c58:	af00      	add	r7, sp, #0
 8007c5a:	60f8      	str	r0, [r7, #12]
 8007c5c:	60b9      	str	r1, [r7, #8]
 8007c5e:	607a      	str	r2, [r7, #4]
 8007c60:	68fb      	ldr	r3, [r7, #12]
 8007c62:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8007c66:	2b01      	cmp	r3, #1
 8007c68:	d101      	bne.n	8007c6e <HAL_LTDC_ConfigLayer+0x1a>
 8007c6a:	2302      	movs	r3, #2
 8007c6c:	e02c      	b.n	8007cc8 <HAL_LTDC_ConfigLayer+0x74>
 8007c6e:	68fb      	ldr	r3, [r7, #12]
 8007c70:	2201      	movs	r2, #1
 8007c72:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8007c76:	68fb      	ldr	r3, [r7, #12]
 8007c78:	2202      	movs	r2, #2
 8007c7a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8007c7e:	68fa      	ldr	r2, [r7, #12]
 8007c80:	687b      	ldr	r3, [r7, #4]
 8007c82:	2134      	movs	r1, #52	; 0x34
 8007c84:	fb01 f303 	mul.w	r3, r1, r3
 8007c88:	4413      	add	r3, r2
 8007c8a:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8007c8e:	68bb      	ldr	r3, [r7, #8]
 8007c90:	4614      	mov	r4, r2
 8007c92:	461d      	mov	r5, r3
 8007c94:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007c96:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007c98:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007c9a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007c9c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007c9e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007ca0:	682b      	ldr	r3, [r5, #0]
 8007ca2:	6023      	str	r3, [r4, #0]
 8007ca4:	687a      	ldr	r2, [r7, #4]
 8007ca6:	68b9      	ldr	r1, [r7, #8]
 8007ca8:	68f8      	ldr	r0, [r7, #12]
 8007caa:	f000 f83b 	bl	8007d24 <LTDC_SetConfig>
 8007cae:	68fb      	ldr	r3, [r7, #12]
 8007cb0:	681b      	ldr	r3, [r3, #0]
 8007cb2:	2201      	movs	r2, #1
 8007cb4:	625a      	str	r2, [r3, #36]	; 0x24
 8007cb6:	68fb      	ldr	r3, [r7, #12]
 8007cb8:	2201      	movs	r2, #1
 8007cba:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8007cbe:	68fb      	ldr	r3, [r7, #12]
 8007cc0:	2200      	movs	r2, #0
 8007cc2:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8007cc6:	2300      	movs	r3, #0
 8007cc8:	4618      	mov	r0, r3
 8007cca:	3710      	adds	r7, #16
 8007ccc:	46bd      	mov	sp, r7
 8007cce:	bdb0      	pop	{r4, r5, r7, pc}

08007cd0 <HAL_LTDC_EnableDither>:
 8007cd0:	b480      	push	{r7}
 8007cd2:	b083      	sub	sp, #12
 8007cd4:	af00      	add	r7, sp, #0
 8007cd6:	6078      	str	r0, [r7, #4]
 8007cd8:	687b      	ldr	r3, [r7, #4]
 8007cda:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8007cde:	2b01      	cmp	r3, #1
 8007ce0:	d101      	bne.n	8007ce6 <HAL_LTDC_EnableDither+0x16>
 8007ce2:	2302      	movs	r3, #2
 8007ce4:	e016      	b.n	8007d14 <HAL_LTDC_EnableDither+0x44>
 8007ce6:	687b      	ldr	r3, [r7, #4]
 8007ce8:	2201      	movs	r2, #1
 8007cea:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8007cee:	687b      	ldr	r3, [r7, #4]
 8007cf0:	2202      	movs	r2, #2
 8007cf2:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8007cf6:	4b0a      	ldr	r3, [pc, #40]	; (8007d20 <HAL_LTDC_EnableDither+0x50>)
 8007cf8:	699b      	ldr	r3, [r3, #24]
 8007cfa:	4a09      	ldr	r2, [pc, #36]	; (8007d20 <HAL_LTDC_EnableDither+0x50>)
 8007cfc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007d00:	6193      	str	r3, [r2, #24]
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	2201      	movs	r2, #1
 8007d06:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8007d0a:	687b      	ldr	r3, [r7, #4]
 8007d0c:	2200      	movs	r2, #0
 8007d0e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8007d12:	2300      	movs	r3, #0
 8007d14:	4618      	mov	r0, r3
 8007d16:	370c      	adds	r7, #12
 8007d18:	46bd      	mov	sp, r7
 8007d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d1e:	4770      	bx	lr
 8007d20:	40016800 	.word	0x40016800

08007d24 <LTDC_SetConfig>:
 8007d24:	b480      	push	{r7}
 8007d26:	b089      	sub	sp, #36	; 0x24
 8007d28:	af00      	add	r7, sp, #0
 8007d2a:	60f8      	str	r0, [r7, #12]
 8007d2c:	60b9      	str	r1, [r7, #8]
 8007d2e:	607a      	str	r2, [r7, #4]
 8007d30:	68bb      	ldr	r3, [r7, #8]
 8007d32:	685a      	ldr	r2, [r3, #4]
 8007d34:	68fb      	ldr	r3, [r7, #12]
 8007d36:	681b      	ldr	r3, [r3, #0]
 8007d38:	68db      	ldr	r3, [r3, #12]
 8007d3a:	0c1b      	lsrs	r3, r3, #16
 8007d3c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007d40:	4413      	add	r3, r2
 8007d42:	041b      	lsls	r3, r3, #16
 8007d44:	61fb      	str	r3, [r7, #28]
 8007d46:	68fb      	ldr	r3, [r7, #12]
 8007d48:	681b      	ldr	r3, [r3, #0]
 8007d4a:	461a      	mov	r2, r3
 8007d4c:	687b      	ldr	r3, [r7, #4]
 8007d4e:	01db      	lsls	r3, r3, #7
 8007d50:	4413      	add	r3, r2
 8007d52:	3384      	adds	r3, #132	; 0x84
 8007d54:	685b      	ldr	r3, [r3, #4]
 8007d56:	68fa      	ldr	r2, [r7, #12]
 8007d58:	6812      	ldr	r2, [r2, #0]
 8007d5a:	4611      	mov	r1, r2
 8007d5c:	687a      	ldr	r2, [r7, #4]
 8007d5e:	01d2      	lsls	r2, r2, #7
 8007d60:	440a      	add	r2, r1
 8007d62:	3284      	adds	r2, #132	; 0x84
 8007d64:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8007d68:	6053      	str	r3, [r2, #4]
 8007d6a:	68bb      	ldr	r3, [r7, #8]
 8007d6c:	681a      	ldr	r2, [r3, #0]
 8007d6e:	68fb      	ldr	r3, [r7, #12]
 8007d70:	681b      	ldr	r3, [r3, #0]
 8007d72:	68db      	ldr	r3, [r3, #12]
 8007d74:	0c1b      	lsrs	r3, r3, #16
 8007d76:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007d7a:	4413      	add	r3, r2
 8007d7c:	1c5a      	adds	r2, r3, #1
 8007d7e:	68fb      	ldr	r3, [r7, #12]
 8007d80:	681b      	ldr	r3, [r3, #0]
 8007d82:	4619      	mov	r1, r3
 8007d84:	687b      	ldr	r3, [r7, #4]
 8007d86:	01db      	lsls	r3, r3, #7
 8007d88:	440b      	add	r3, r1
 8007d8a:	3384      	adds	r3, #132	; 0x84
 8007d8c:	4619      	mov	r1, r3
 8007d8e:	69fb      	ldr	r3, [r7, #28]
 8007d90:	4313      	orrs	r3, r2
 8007d92:	604b      	str	r3, [r1, #4]
 8007d94:	68bb      	ldr	r3, [r7, #8]
 8007d96:	68da      	ldr	r2, [r3, #12]
 8007d98:	68fb      	ldr	r3, [r7, #12]
 8007d9a:	681b      	ldr	r3, [r3, #0]
 8007d9c:	68db      	ldr	r3, [r3, #12]
 8007d9e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007da2:	4413      	add	r3, r2
 8007da4:	041b      	lsls	r3, r3, #16
 8007da6:	61fb      	str	r3, [r7, #28]
 8007da8:	68fb      	ldr	r3, [r7, #12]
 8007daa:	681b      	ldr	r3, [r3, #0]
 8007dac:	461a      	mov	r2, r3
 8007dae:	687b      	ldr	r3, [r7, #4]
 8007db0:	01db      	lsls	r3, r3, #7
 8007db2:	4413      	add	r3, r2
 8007db4:	3384      	adds	r3, #132	; 0x84
 8007db6:	689b      	ldr	r3, [r3, #8]
 8007db8:	68fa      	ldr	r2, [r7, #12]
 8007dba:	6812      	ldr	r2, [r2, #0]
 8007dbc:	4611      	mov	r1, r2
 8007dbe:	687a      	ldr	r2, [r7, #4]
 8007dc0:	01d2      	lsls	r2, r2, #7
 8007dc2:	440a      	add	r2, r1
 8007dc4:	3284      	adds	r2, #132	; 0x84
 8007dc6:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8007dca:	6093      	str	r3, [r2, #8]
 8007dcc:	68bb      	ldr	r3, [r7, #8]
 8007dce:	689a      	ldr	r2, [r3, #8]
 8007dd0:	68fb      	ldr	r3, [r7, #12]
 8007dd2:	681b      	ldr	r3, [r3, #0]
 8007dd4:	68db      	ldr	r3, [r3, #12]
 8007dd6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8007dda:	4413      	add	r3, r2
 8007ddc:	1c5a      	adds	r2, r3, #1
 8007dde:	68fb      	ldr	r3, [r7, #12]
 8007de0:	681b      	ldr	r3, [r3, #0]
 8007de2:	4619      	mov	r1, r3
 8007de4:	687b      	ldr	r3, [r7, #4]
 8007de6:	01db      	lsls	r3, r3, #7
 8007de8:	440b      	add	r3, r1
 8007dea:	3384      	adds	r3, #132	; 0x84
 8007dec:	4619      	mov	r1, r3
 8007dee:	69fb      	ldr	r3, [r7, #28]
 8007df0:	4313      	orrs	r3, r2
 8007df2:	608b      	str	r3, [r1, #8]
 8007df4:	68fb      	ldr	r3, [r7, #12]
 8007df6:	681b      	ldr	r3, [r3, #0]
 8007df8:	461a      	mov	r2, r3
 8007dfa:	687b      	ldr	r3, [r7, #4]
 8007dfc:	01db      	lsls	r3, r3, #7
 8007dfe:	4413      	add	r3, r2
 8007e00:	3384      	adds	r3, #132	; 0x84
 8007e02:	691b      	ldr	r3, [r3, #16]
 8007e04:	68fa      	ldr	r2, [r7, #12]
 8007e06:	6812      	ldr	r2, [r2, #0]
 8007e08:	4611      	mov	r1, r2
 8007e0a:	687a      	ldr	r2, [r7, #4]
 8007e0c:	01d2      	lsls	r2, r2, #7
 8007e0e:	440a      	add	r2, r1
 8007e10:	3284      	adds	r2, #132	; 0x84
 8007e12:	f023 0307 	bic.w	r3, r3, #7
 8007e16:	6113      	str	r3, [r2, #16]
 8007e18:	68fb      	ldr	r3, [r7, #12]
 8007e1a:	681b      	ldr	r3, [r3, #0]
 8007e1c:	461a      	mov	r2, r3
 8007e1e:	687b      	ldr	r3, [r7, #4]
 8007e20:	01db      	lsls	r3, r3, #7
 8007e22:	4413      	add	r3, r2
 8007e24:	3384      	adds	r3, #132	; 0x84
 8007e26:	461a      	mov	r2, r3
 8007e28:	68bb      	ldr	r3, [r7, #8]
 8007e2a:	691b      	ldr	r3, [r3, #16]
 8007e2c:	6113      	str	r3, [r2, #16]
 8007e2e:	68bb      	ldr	r3, [r7, #8]
 8007e30:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8007e34:	021b      	lsls	r3, r3, #8
 8007e36:	61fb      	str	r3, [r7, #28]
 8007e38:	68bb      	ldr	r3, [r7, #8]
 8007e3a:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8007e3e:	041b      	lsls	r3, r3, #16
 8007e40:	61bb      	str	r3, [r7, #24]
 8007e42:	68bb      	ldr	r3, [r7, #8]
 8007e44:	699b      	ldr	r3, [r3, #24]
 8007e46:	061b      	lsls	r3, r3, #24
 8007e48:	617b      	str	r3, [r7, #20]
 8007e4a:	68fb      	ldr	r3, [r7, #12]
 8007e4c:	681b      	ldr	r3, [r3, #0]
 8007e4e:	461a      	mov	r2, r3
 8007e50:	687b      	ldr	r3, [r7, #4]
 8007e52:	01db      	lsls	r3, r3, #7
 8007e54:	4413      	add	r3, r2
 8007e56:	3384      	adds	r3, #132	; 0x84
 8007e58:	699b      	ldr	r3, [r3, #24]
 8007e5a:	68fb      	ldr	r3, [r7, #12]
 8007e5c:	681b      	ldr	r3, [r3, #0]
 8007e5e:	461a      	mov	r2, r3
 8007e60:	687b      	ldr	r3, [r7, #4]
 8007e62:	01db      	lsls	r3, r3, #7
 8007e64:	4413      	add	r3, r2
 8007e66:	3384      	adds	r3, #132	; 0x84
 8007e68:	461a      	mov	r2, r3
 8007e6a:	2300      	movs	r3, #0
 8007e6c:	6193      	str	r3, [r2, #24]
 8007e6e:	68bb      	ldr	r3, [r7, #8]
 8007e70:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8007e74:	461a      	mov	r2, r3
 8007e76:	69fb      	ldr	r3, [r7, #28]
 8007e78:	431a      	orrs	r2, r3
 8007e7a:	69bb      	ldr	r3, [r7, #24]
 8007e7c:	431a      	orrs	r2, r3
 8007e7e:	68fb      	ldr	r3, [r7, #12]
 8007e80:	681b      	ldr	r3, [r3, #0]
 8007e82:	4619      	mov	r1, r3
 8007e84:	687b      	ldr	r3, [r7, #4]
 8007e86:	01db      	lsls	r3, r3, #7
 8007e88:	440b      	add	r3, r1
 8007e8a:	3384      	adds	r3, #132	; 0x84
 8007e8c:	4619      	mov	r1, r3
 8007e8e:	697b      	ldr	r3, [r7, #20]
 8007e90:	4313      	orrs	r3, r2
 8007e92:	618b      	str	r3, [r1, #24]
 8007e94:	68fb      	ldr	r3, [r7, #12]
 8007e96:	681b      	ldr	r3, [r3, #0]
 8007e98:	461a      	mov	r2, r3
 8007e9a:	687b      	ldr	r3, [r7, #4]
 8007e9c:	01db      	lsls	r3, r3, #7
 8007e9e:	4413      	add	r3, r2
 8007ea0:	3384      	adds	r3, #132	; 0x84
 8007ea2:	695b      	ldr	r3, [r3, #20]
 8007ea4:	68fa      	ldr	r2, [r7, #12]
 8007ea6:	6812      	ldr	r2, [r2, #0]
 8007ea8:	4611      	mov	r1, r2
 8007eaa:	687a      	ldr	r2, [r7, #4]
 8007eac:	01d2      	lsls	r2, r2, #7
 8007eae:	440a      	add	r2, r1
 8007eb0:	3284      	adds	r2, #132	; 0x84
 8007eb2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8007eb6:	6153      	str	r3, [r2, #20]
 8007eb8:	68fb      	ldr	r3, [r7, #12]
 8007eba:	681b      	ldr	r3, [r3, #0]
 8007ebc:	461a      	mov	r2, r3
 8007ebe:	687b      	ldr	r3, [r7, #4]
 8007ec0:	01db      	lsls	r3, r3, #7
 8007ec2:	4413      	add	r3, r2
 8007ec4:	3384      	adds	r3, #132	; 0x84
 8007ec6:	461a      	mov	r2, r3
 8007ec8:	68bb      	ldr	r3, [r7, #8]
 8007eca:	695b      	ldr	r3, [r3, #20]
 8007ecc:	6153      	str	r3, [r2, #20]
 8007ece:	68fb      	ldr	r3, [r7, #12]
 8007ed0:	681b      	ldr	r3, [r3, #0]
 8007ed2:	461a      	mov	r2, r3
 8007ed4:	687b      	ldr	r3, [r7, #4]
 8007ed6:	01db      	lsls	r3, r3, #7
 8007ed8:	4413      	add	r3, r2
 8007eda:	3384      	adds	r3, #132	; 0x84
 8007edc:	69db      	ldr	r3, [r3, #28]
 8007ede:	68fa      	ldr	r2, [r7, #12]
 8007ee0:	6812      	ldr	r2, [r2, #0]
 8007ee2:	4611      	mov	r1, r2
 8007ee4:	687a      	ldr	r2, [r7, #4]
 8007ee6:	01d2      	lsls	r2, r2, #7
 8007ee8:	440a      	add	r2, r1
 8007eea:	3284      	adds	r2, #132	; 0x84
 8007eec:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8007ef0:	f023 0307 	bic.w	r3, r3, #7
 8007ef4:	61d3      	str	r3, [r2, #28]
 8007ef6:	68bb      	ldr	r3, [r7, #8]
 8007ef8:	69da      	ldr	r2, [r3, #28]
 8007efa:	68bb      	ldr	r3, [r7, #8]
 8007efc:	6a1b      	ldr	r3, [r3, #32]
 8007efe:	68f9      	ldr	r1, [r7, #12]
 8007f00:	6809      	ldr	r1, [r1, #0]
 8007f02:	4608      	mov	r0, r1
 8007f04:	6879      	ldr	r1, [r7, #4]
 8007f06:	01c9      	lsls	r1, r1, #7
 8007f08:	4401      	add	r1, r0
 8007f0a:	3184      	adds	r1, #132	; 0x84
 8007f0c:	4313      	orrs	r3, r2
 8007f0e:	61cb      	str	r3, [r1, #28]
 8007f10:	68fb      	ldr	r3, [r7, #12]
 8007f12:	681b      	ldr	r3, [r3, #0]
 8007f14:	461a      	mov	r2, r3
 8007f16:	687b      	ldr	r3, [r7, #4]
 8007f18:	01db      	lsls	r3, r3, #7
 8007f1a:	4413      	add	r3, r2
 8007f1c:	3384      	adds	r3, #132	; 0x84
 8007f1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007f20:	68fb      	ldr	r3, [r7, #12]
 8007f22:	681b      	ldr	r3, [r3, #0]
 8007f24:	461a      	mov	r2, r3
 8007f26:	687b      	ldr	r3, [r7, #4]
 8007f28:	01db      	lsls	r3, r3, #7
 8007f2a:	4413      	add	r3, r2
 8007f2c:	3384      	adds	r3, #132	; 0x84
 8007f2e:	461a      	mov	r2, r3
 8007f30:	2300      	movs	r3, #0
 8007f32:	6293      	str	r3, [r2, #40]	; 0x28
 8007f34:	68fb      	ldr	r3, [r7, #12]
 8007f36:	681b      	ldr	r3, [r3, #0]
 8007f38:	461a      	mov	r2, r3
 8007f3a:	687b      	ldr	r3, [r7, #4]
 8007f3c:	01db      	lsls	r3, r3, #7
 8007f3e:	4413      	add	r3, r2
 8007f40:	3384      	adds	r3, #132	; 0x84
 8007f42:	461a      	mov	r2, r3
 8007f44:	68bb      	ldr	r3, [r7, #8]
 8007f46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007f48:	6293      	str	r3, [r2, #40]	; 0x28
 8007f4a:	68bb      	ldr	r3, [r7, #8]
 8007f4c:	691b      	ldr	r3, [r3, #16]
 8007f4e:	2b00      	cmp	r3, #0
 8007f50:	d102      	bne.n	8007f58 <LTDC_SetConfig+0x234>
 8007f52:	2304      	movs	r3, #4
 8007f54:	61fb      	str	r3, [r7, #28]
 8007f56:	e01b      	b.n	8007f90 <LTDC_SetConfig+0x26c>
 8007f58:	68bb      	ldr	r3, [r7, #8]
 8007f5a:	691b      	ldr	r3, [r3, #16]
 8007f5c:	2b01      	cmp	r3, #1
 8007f5e:	d102      	bne.n	8007f66 <LTDC_SetConfig+0x242>
 8007f60:	2303      	movs	r3, #3
 8007f62:	61fb      	str	r3, [r7, #28]
 8007f64:	e014      	b.n	8007f90 <LTDC_SetConfig+0x26c>
 8007f66:	68bb      	ldr	r3, [r7, #8]
 8007f68:	691b      	ldr	r3, [r3, #16]
 8007f6a:	2b04      	cmp	r3, #4
 8007f6c:	d00b      	beq.n	8007f86 <LTDC_SetConfig+0x262>
 8007f6e:	68bb      	ldr	r3, [r7, #8]
 8007f70:	691b      	ldr	r3, [r3, #16]
 8007f72:	2b02      	cmp	r3, #2
 8007f74:	d007      	beq.n	8007f86 <LTDC_SetConfig+0x262>
 8007f76:	68bb      	ldr	r3, [r7, #8]
 8007f78:	691b      	ldr	r3, [r3, #16]
 8007f7a:	2b03      	cmp	r3, #3
 8007f7c:	d003      	beq.n	8007f86 <LTDC_SetConfig+0x262>
 8007f7e:	68bb      	ldr	r3, [r7, #8]
 8007f80:	691b      	ldr	r3, [r3, #16]
 8007f82:	2b07      	cmp	r3, #7
 8007f84:	d102      	bne.n	8007f8c <LTDC_SetConfig+0x268>
 8007f86:	2302      	movs	r3, #2
 8007f88:	61fb      	str	r3, [r7, #28]
 8007f8a:	e001      	b.n	8007f90 <LTDC_SetConfig+0x26c>
 8007f8c:	2301      	movs	r3, #1
 8007f8e:	61fb      	str	r3, [r7, #28]
 8007f90:	68fb      	ldr	r3, [r7, #12]
 8007f92:	681b      	ldr	r3, [r3, #0]
 8007f94:	461a      	mov	r2, r3
 8007f96:	687b      	ldr	r3, [r7, #4]
 8007f98:	01db      	lsls	r3, r3, #7
 8007f9a:	4413      	add	r3, r2
 8007f9c:	3384      	adds	r3, #132	; 0x84
 8007f9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007fa0:	68fa      	ldr	r2, [r7, #12]
 8007fa2:	6812      	ldr	r2, [r2, #0]
 8007fa4:	4611      	mov	r1, r2
 8007fa6:	687a      	ldr	r2, [r7, #4]
 8007fa8:	01d2      	lsls	r2, r2, #7
 8007faa:	440a      	add	r2, r1
 8007fac:	3284      	adds	r2, #132	; 0x84
 8007fae:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8007fb2:	62d3      	str	r3, [r2, #44]	; 0x2c
 8007fb4:	68bb      	ldr	r3, [r7, #8]
 8007fb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007fb8:	69fa      	ldr	r2, [r7, #28]
 8007fba:	fb02 f303 	mul.w	r3, r2, r3
 8007fbe:	041a      	lsls	r2, r3, #16
 8007fc0:	68bb      	ldr	r3, [r7, #8]
 8007fc2:	6859      	ldr	r1, [r3, #4]
 8007fc4:	68bb      	ldr	r3, [r7, #8]
 8007fc6:	681b      	ldr	r3, [r3, #0]
 8007fc8:	1acb      	subs	r3, r1, r3
 8007fca:	69f9      	ldr	r1, [r7, #28]
 8007fcc:	fb01 f303 	mul.w	r3, r1, r3
 8007fd0:	3303      	adds	r3, #3
 8007fd2:	68f9      	ldr	r1, [r7, #12]
 8007fd4:	6809      	ldr	r1, [r1, #0]
 8007fd6:	4608      	mov	r0, r1
 8007fd8:	6879      	ldr	r1, [r7, #4]
 8007fda:	01c9      	lsls	r1, r1, #7
 8007fdc:	4401      	add	r1, r0
 8007fde:	3184      	adds	r1, #132	; 0x84
 8007fe0:	4313      	orrs	r3, r2
 8007fe2:	62cb      	str	r3, [r1, #44]	; 0x2c
 8007fe4:	68fb      	ldr	r3, [r7, #12]
 8007fe6:	681b      	ldr	r3, [r3, #0]
 8007fe8:	461a      	mov	r2, r3
 8007fea:	687b      	ldr	r3, [r7, #4]
 8007fec:	01db      	lsls	r3, r3, #7
 8007fee:	4413      	add	r3, r2
 8007ff0:	3384      	adds	r3, #132	; 0x84
 8007ff2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007ff4:	68fa      	ldr	r2, [r7, #12]
 8007ff6:	6812      	ldr	r2, [r2, #0]
 8007ff8:	4611      	mov	r1, r2
 8007ffa:	687a      	ldr	r2, [r7, #4]
 8007ffc:	01d2      	lsls	r2, r2, #7
 8007ffe:	440a      	add	r2, r1
 8008000:	3284      	adds	r2, #132	; 0x84
 8008002:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8008006:	f023 0307 	bic.w	r3, r3, #7
 800800a:	6313      	str	r3, [r2, #48]	; 0x30
 800800c:	68fb      	ldr	r3, [r7, #12]
 800800e:	681b      	ldr	r3, [r3, #0]
 8008010:	461a      	mov	r2, r3
 8008012:	687b      	ldr	r3, [r7, #4]
 8008014:	01db      	lsls	r3, r3, #7
 8008016:	4413      	add	r3, r2
 8008018:	3384      	adds	r3, #132	; 0x84
 800801a:	461a      	mov	r2, r3
 800801c:	68bb      	ldr	r3, [r7, #8]
 800801e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008020:	6313      	str	r3, [r2, #48]	; 0x30
 8008022:	68fb      	ldr	r3, [r7, #12]
 8008024:	681b      	ldr	r3, [r3, #0]
 8008026:	461a      	mov	r2, r3
 8008028:	687b      	ldr	r3, [r7, #4]
 800802a:	01db      	lsls	r3, r3, #7
 800802c:	4413      	add	r3, r2
 800802e:	3384      	adds	r3, #132	; 0x84
 8008030:	681b      	ldr	r3, [r3, #0]
 8008032:	68fa      	ldr	r2, [r7, #12]
 8008034:	6812      	ldr	r2, [r2, #0]
 8008036:	4611      	mov	r1, r2
 8008038:	687a      	ldr	r2, [r7, #4]
 800803a:	01d2      	lsls	r2, r2, #7
 800803c:	440a      	add	r2, r1
 800803e:	3284      	adds	r2, #132	; 0x84
 8008040:	f043 0301 	orr.w	r3, r3, #1
 8008044:	6013      	str	r3, [r2, #0]
 8008046:	bf00      	nop
 8008048:	3724      	adds	r7, #36	; 0x24
 800804a:	46bd      	mov	sp, r7
 800804c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008050:	4770      	bx	lr
	...

08008054 <HAL_RCC_OscConfig>:
 8008054:	b580      	push	{r7, lr}
 8008056:	b086      	sub	sp, #24
 8008058:	af00      	add	r7, sp, #0
 800805a:	6078      	str	r0, [r7, #4]
 800805c:	687b      	ldr	r3, [r7, #4]
 800805e:	2b00      	cmp	r3, #0
 8008060:	d101      	bne.n	8008066 <HAL_RCC_OscConfig+0x12>
 8008062:	2301      	movs	r3, #1
 8008064:	e25e      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 8008066:	687b      	ldr	r3, [r7, #4]
 8008068:	681b      	ldr	r3, [r3, #0]
 800806a:	f003 0301 	and.w	r3, r3, #1
 800806e:	2b00      	cmp	r3, #0
 8008070:	d075      	beq.n	800815e <HAL_RCC_OscConfig+0x10a>
 8008072:	4b88      	ldr	r3, [pc, #544]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 8008074:	689b      	ldr	r3, [r3, #8]
 8008076:	f003 030c 	and.w	r3, r3, #12
 800807a:	2b04      	cmp	r3, #4
 800807c:	d00c      	beq.n	8008098 <HAL_RCC_OscConfig+0x44>
 800807e:	4b85      	ldr	r3, [pc, #532]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 8008080:	689b      	ldr	r3, [r3, #8]
 8008082:	f003 030c 	and.w	r3, r3, #12
 8008086:	2b08      	cmp	r3, #8
 8008088:	d112      	bne.n	80080b0 <HAL_RCC_OscConfig+0x5c>
 800808a:	4b82      	ldr	r3, [pc, #520]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 800808c:	685b      	ldr	r3, [r3, #4]
 800808e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008092:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008096:	d10b      	bne.n	80080b0 <HAL_RCC_OscConfig+0x5c>
 8008098:	4b7e      	ldr	r3, [pc, #504]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 800809a:	681b      	ldr	r3, [r3, #0]
 800809c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80080a0:	2b00      	cmp	r3, #0
 80080a2:	d05b      	beq.n	800815c <HAL_RCC_OscConfig+0x108>
 80080a4:	687b      	ldr	r3, [r7, #4]
 80080a6:	685b      	ldr	r3, [r3, #4]
 80080a8:	2b00      	cmp	r3, #0
 80080aa:	d157      	bne.n	800815c <HAL_RCC_OscConfig+0x108>
 80080ac:	2301      	movs	r3, #1
 80080ae:	e239      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 80080b0:	687b      	ldr	r3, [r7, #4]
 80080b2:	685b      	ldr	r3, [r3, #4]
 80080b4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80080b8:	d106      	bne.n	80080c8 <HAL_RCC_OscConfig+0x74>
 80080ba:	4b76      	ldr	r3, [pc, #472]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80080bc:	681b      	ldr	r3, [r3, #0]
 80080be:	4a75      	ldr	r2, [pc, #468]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80080c0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80080c4:	6013      	str	r3, [r2, #0]
 80080c6:	e01d      	b.n	8008104 <HAL_RCC_OscConfig+0xb0>
 80080c8:	687b      	ldr	r3, [r7, #4]
 80080ca:	685b      	ldr	r3, [r3, #4]
 80080cc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80080d0:	d10c      	bne.n	80080ec <HAL_RCC_OscConfig+0x98>
 80080d2:	4b70      	ldr	r3, [pc, #448]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80080d4:	681b      	ldr	r3, [r3, #0]
 80080d6:	4a6f      	ldr	r2, [pc, #444]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80080d8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80080dc:	6013      	str	r3, [r2, #0]
 80080de:	4b6d      	ldr	r3, [pc, #436]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80080e0:	681b      	ldr	r3, [r3, #0]
 80080e2:	4a6c      	ldr	r2, [pc, #432]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80080e4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80080e8:	6013      	str	r3, [r2, #0]
 80080ea:	e00b      	b.n	8008104 <HAL_RCC_OscConfig+0xb0>
 80080ec:	4b69      	ldr	r3, [pc, #420]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80080ee:	681b      	ldr	r3, [r3, #0]
 80080f0:	4a68      	ldr	r2, [pc, #416]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80080f2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80080f6:	6013      	str	r3, [r2, #0]
 80080f8:	4b66      	ldr	r3, [pc, #408]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80080fa:	681b      	ldr	r3, [r3, #0]
 80080fc:	4a65      	ldr	r2, [pc, #404]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80080fe:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008102:	6013      	str	r3, [r2, #0]
 8008104:	687b      	ldr	r3, [r7, #4]
 8008106:	685b      	ldr	r3, [r3, #4]
 8008108:	2b00      	cmp	r3, #0
 800810a:	d013      	beq.n	8008134 <HAL_RCC_OscConfig+0xe0>
 800810c:	f7fd fd44 	bl	8005b98 <HAL_GetTick>
 8008110:	6138      	str	r0, [r7, #16]
 8008112:	e008      	b.n	8008126 <HAL_RCC_OscConfig+0xd2>
 8008114:	f7fd fd40 	bl	8005b98 <HAL_GetTick>
 8008118:	4602      	mov	r2, r0
 800811a:	693b      	ldr	r3, [r7, #16]
 800811c:	1ad3      	subs	r3, r2, r3
 800811e:	2b64      	cmp	r3, #100	; 0x64
 8008120:	d901      	bls.n	8008126 <HAL_RCC_OscConfig+0xd2>
 8008122:	2303      	movs	r3, #3
 8008124:	e1fe      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 8008126:	4b5b      	ldr	r3, [pc, #364]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 8008128:	681b      	ldr	r3, [r3, #0]
 800812a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800812e:	2b00      	cmp	r3, #0
 8008130:	d0f0      	beq.n	8008114 <HAL_RCC_OscConfig+0xc0>
 8008132:	e014      	b.n	800815e <HAL_RCC_OscConfig+0x10a>
 8008134:	f7fd fd30 	bl	8005b98 <HAL_GetTick>
 8008138:	6138      	str	r0, [r7, #16]
 800813a:	e008      	b.n	800814e <HAL_RCC_OscConfig+0xfa>
 800813c:	f7fd fd2c 	bl	8005b98 <HAL_GetTick>
 8008140:	4602      	mov	r2, r0
 8008142:	693b      	ldr	r3, [r7, #16]
 8008144:	1ad3      	subs	r3, r2, r3
 8008146:	2b64      	cmp	r3, #100	; 0x64
 8008148:	d901      	bls.n	800814e <HAL_RCC_OscConfig+0xfa>
 800814a:	2303      	movs	r3, #3
 800814c:	e1ea      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 800814e:	4b51      	ldr	r3, [pc, #324]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 8008150:	681b      	ldr	r3, [r3, #0]
 8008152:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008156:	2b00      	cmp	r3, #0
 8008158:	d1f0      	bne.n	800813c <HAL_RCC_OscConfig+0xe8>
 800815a:	e000      	b.n	800815e <HAL_RCC_OscConfig+0x10a>
 800815c:	bf00      	nop
 800815e:	687b      	ldr	r3, [r7, #4]
 8008160:	681b      	ldr	r3, [r3, #0]
 8008162:	f003 0302 	and.w	r3, r3, #2
 8008166:	2b00      	cmp	r3, #0
 8008168:	d063      	beq.n	8008232 <HAL_RCC_OscConfig+0x1de>
 800816a:	4b4a      	ldr	r3, [pc, #296]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 800816c:	689b      	ldr	r3, [r3, #8]
 800816e:	f003 030c 	and.w	r3, r3, #12
 8008172:	2b00      	cmp	r3, #0
 8008174:	d00b      	beq.n	800818e <HAL_RCC_OscConfig+0x13a>
 8008176:	4b47      	ldr	r3, [pc, #284]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 8008178:	689b      	ldr	r3, [r3, #8]
 800817a:	f003 030c 	and.w	r3, r3, #12
 800817e:	2b08      	cmp	r3, #8
 8008180:	d11c      	bne.n	80081bc <HAL_RCC_OscConfig+0x168>
 8008182:	4b44      	ldr	r3, [pc, #272]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 8008184:	685b      	ldr	r3, [r3, #4]
 8008186:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800818a:	2b00      	cmp	r3, #0
 800818c:	d116      	bne.n	80081bc <HAL_RCC_OscConfig+0x168>
 800818e:	4b41      	ldr	r3, [pc, #260]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 8008190:	681b      	ldr	r3, [r3, #0]
 8008192:	f003 0302 	and.w	r3, r3, #2
 8008196:	2b00      	cmp	r3, #0
 8008198:	d005      	beq.n	80081a6 <HAL_RCC_OscConfig+0x152>
 800819a:	687b      	ldr	r3, [r7, #4]
 800819c:	68db      	ldr	r3, [r3, #12]
 800819e:	2b01      	cmp	r3, #1
 80081a0:	d001      	beq.n	80081a6 <HAL_RCC_OscConfig+0x152>
 80081a2:	2301      	movs	r3, #1
 80081a4:	e1be      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 80081a6:	4b3b      	ldr	r3, [pc, #236]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80081a8:	681b      	ldr	r3, [r3, #0]
 80081aa:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80081ae:	687b      	ldr	r3, [r7, #4]
 80081b0:	691b      	ldr	r3, [r3, #16]
 80081b2:	00db      	lsls	r3, r3, #3
 80081b4:	4937      	ldr	r1, [pc, #220]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80081b6:	4313      	orrs	r3, r2
 80081b8:	600b      	str	r3, [r1, #0]
 80081ba:	e03a      	b.n	8008232 <HAL_RCC_OscConfig+0x1de>
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	68db      	ldr	r3, [r3, #12]
 80081c0:	2b00      	cmp	r3, #0
 80081c2:	d020      	beq.n	8008206 <HAL_RCC_OscConfig+0x1b2>
 80081c4:	4b34      	ldr	r3, [pc, #208]	; (8008298 <HAL_RCC_OscConfig+0x244>)
 80081c6:	2201      	movs	r2, #1
 80081c8:	601a      	str	r2, [r3, #0]
 80081ca:	f7fd fce5 	bl	8005b98 <HAL_GetTick>
 80081ce:	6138      	str	r0, [r7, #16]
 80081d0:	e008      	b.n	80081e4 <HAL_RCC_OscConfig+0x190>
 80081d2:	f7fd fce1 	bl	8005b98 <HAL_GetTick>
 80081d6:	4602      	mov	r2, r0
 80081d8:	693b      	ldr	r3, [r7, #16]
 80081da:	1ad3      	subs	r3, r2, r3
 80081dc:	2b02      	cmp	r3, #2
 80081de:	d901      	bls.n	80081e4 <HAL_RCC_OscConfig+0x190>
 80081e0:	2303      	movs	r3, #3
 80081e2:	e19f      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 80081e4:	4b2b      	ldr	r3, [pc, #172]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80081e6:	681b      	ldr	r3, [r3, #0]
 80081e8:	f003 0302 	and.w	r3, r3, #2
 80081ec:	2b00      	cmp	r3, #0
 80081ee:	d0f0      	beq.n	80081d2 <HAL_RCC_OscConfig+0x17e>
 80081f0:	4b28      	ldr	r3, [pc, #160]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 80081f2:	681b      	ldr	r3, [r3, #0]
 80081f4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80081f8:	687b      	ldr	r3, [r7, #4]
 80081fa:	691b      	ldr	r3, [r3, #16]
 80081fc:	00db      	lsls	r3, r3, #3
 80081fe:	4925      	ldr	r1, [pc, #148]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 8008200:	4313      	orrs	r3, r2
 8008202:	600b      	str	r3, [r1, #0]
 8008204:	e015      	b.n	8008232 <HAL_RCC_OscConfig+0x1de>
 8008206:	4b24      	ldr	r3, [pc, #144]	; (8008298 <HAL_RCC_OscConfig+0x244>)
 8008208:	2200      	movs	r2, #0
 800820a:	601a      	str	r2, [r3, #0]
 800820c:	f7fd fcc4 	bl	8005b98 <HAL_GetTick>
 8008210:	6138      	str	r0, [r7, #16]
 8008212:	e008      	b.n	8008226 <HAL_RCC_OscConfig+0x1d2>
 8008214:	f7fd fcc0 	bl	8005b98 <HAL_GetTick>
 8008218:	4602      	mov	r2, r0
 800821a:	693b      	ldr	r3, [r7, #16]
 800821c:	1ad3      	subs	r3, r2, r3
 800821e:	2b02      	cmp	r3, #2
 8008220:	d901      	bls.n	8008226 <HAL_RCC_OscConfig+0x1d2>
 8008222:	2303      	movs	r3, #3
 8008224:	e17e      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 8008226:	4b1b      	ldr	r3, [pc, #108]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 8008228:	681b      	ldr	r3, [r3, #0]
 800822a:	f003 0302 	and.w	r3, r3, #2
 800822e:	2b00      	cmp	r3, #0
 8008230:	d1f0      	bne.n	8008214 <HAL_RCC_OscConfig+0x1c0>
 8008232:	687b      	ldr	r3, [r7, #4]
 8008234:	681b      	ldr	r3, [r3, #0]
 8008236:	f003 0308 	and.w	r3, r3, #8
 800823a:	2b00      	cmp	r3, #0
 800823c:	d036      	beq.n	80082ac <HAL_RCC_OscConfig+0x258>
 800823e:	687b      	ldr	r3, [r7, #4]
 8008240:	695b      	ldr	r3, [r3, #20]
 8008242:	2b00      	cmp	r3, #0
 8008244:	d016      	beq.n	8008274 <HAL_RCC_OscConfig+0x220>
 8008246:	4b15      	ldr	r3, [pc, #84]	; (800829c <HAL_RCC_OscConfig+0x248>)
 8008248:	2201      	movs	r2, #1
 800824a:	601a      	str	r2, [r3, #0]
 800824c:	f7fd fca4 	bl	8005b98 <HAL_GetTick>
 8008250:	6138      	str	r0, [r7, #16]
 8008252:	e008      	b.n	8008266 <HAL_RCC_OscConfig+0x212>
 8008254:	f7fd fca0 	bl	8005b98 <HAL_GetTick>
 8008258:	4602      	mov	r2, r0
 800825a:	693b      	ldr	r3, [r7, #16]
 800825c:	1ad3      	subs	r3, r2, r3
 800825e:	2b02      	cmp	r3, #2
 8008260:	d901      	bls.n	8008266 <HAL_RCC_OscConfig+0x212>
 8008262:	2303      	movs	r3, #3
 8008264:	e15e      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 8008266:	4b0b      	ldr	r3, [pc, #44]	; (8008294 <HAL_RCC_OscConfig+0x240>)
 8008268:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800826a:	f003 0302 	and.w	r3, r3, #2
 800826e:	2b00      	cmp	r3, #0
 8008270:	d0f0      	beq.n	8008254 <HAL_RCC_OscConfig+0x200>
 8008272:	e01b      	b.n	80082ac <HAL_RCC_OscConfig+0x258>
 8008274:	4b09      	ldr	r3, [pc, #36]	; (800829c <HAL_RCC_OscConfig+0x248>)
 8008276:	2200      	movs	r2, #0
 8008278:	601a      	str	r2, [r3, #0]
 800827a:	f7fd fc8d 	bl	8005b98 <HAL_GetTick>
 800827e:	6138      	str	r0, [r7, #16]
 8008280:	e00e      	b.n	80082a0 <HAL_RCC_OscConfig+0x24c>
 8008282:	f7fd fc89 	bl	8005b98 <HAL_GetTick>
 8008286:	4602      	mov	r2, r0
 8008288:	693b      	ldr	r3, [r7, #16]
 800828a:	1ad3      	subs	r3, r2, r3
 800828c:	2b02      	cmp	r3, #2
 800828e:	d907      	bls.n	80082a0 <HAL_RCC_OscConfig+0x24c>
 8008290:	2303      	movs	r3, #3
 8008292:	e147      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 8008294:	40023800 	.word	0x40023800
 8008298:	42470000 	.word	0x42470000
 800829c:	42470e80 	.word	0x42470e80
 80082a0:	4b88      	ldr	r3, [pc, #544]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 80082a2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80082a4:	f003 0302 	and.w	r3, r3, #2
 80082a8:	2b00      	cmp	r3, #0
 80082aa:	d1ea      	bne.n	8008282 <HAL_RCC_OscConfig+0x22e>
 80082ac:	687b      	ldr	r3, [r7, #4]
 80082ae:	681b      	ldr	r3, [r3, #0]
 80082b0:	f003 0304 	and.w	r3, r3, #4
 80082b4:	2b00      	cmp	r3, #0
 80082b6:	f000 8097 	beq.w	80083e8 <HAL_RCC_OscConfig+0x394>
 80082ba:	2300      	movs	r3, #0
 80082bc:	75fb      	strb	r3, [r7, #23]
 80082be:	4b81      	ldr	r3, [pc, #516]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 80082c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80082c2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80082c6:	2b00      	cmp	r3, #0
 80082c8:	d10f      	bne.n	80082ea <HAL_RCC_OscConfig+0x296>
 80082ca:	2300      	movs	r3, #0
 80082cc:	60bb      	str	r3, [r7, #8]
 80082ce:	4b7d      	ldr	r3, [pc, #500]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 80082d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80082d2:	4a7c      	ldr	r2, [pc, #496]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 80082d4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80082d8:	6413      	str	r3, [r2, #64]	; 0x40
 80082da:	4b7a      	ldr	r3, [pc, #488]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 80082dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80082de:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80082e2:	60bb      	str	r3, [r7, #8]
 80082e4:	68bb      	ldr	r3, [r7, #8]
 80082e6:	2301      	movs	r3, #1
 80082e8:	75fb      	strb	r3, [r7, #23]
 80082ea:	4b77      	ldr	r3, [pc, #476]	; (80084c8 <HAL_RCC_OscConfig+0x474>)
 80082ec:	681b      	ldr	r3, [r3, #0]
 80082ee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80082f2:	2b00      	cmp	r3, #0
 80082f4:	d118      	bne.n	8008328 <HAL_RCC_OscConfig+0x2d4>
 80082f6:	4b74      	ldr	r3, [pc, #464]	; (80084c8 <HAL_RCC_OscConfig+0x474>)
 80082f8:	681b      	ldr	r3, [r3, #0]
 80082fa:	4a73      	ldr	r2, [pc, #460]	; (80084c8 <HAL_RCC_OscConfig+0x474>)
 80082fc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008300:	6013      	str	r3, [r2, #0]
 8008302:	f7fd fc49 	bl	8005b98 <HAL_GetTick>
 8008306:	6138      	str	r0, [r7, #16]
 8008308:	e008      	b.n	800831c <HAL_RCC_OscConfig+0x2c8>
 800830a:	f7fd fc45 	bl	8005b98 <HAL_GetTick>
 800830e:	4602      	mov	r2, r0
 8008310:	693b      	ldr	r3, [r7, #16]
 8008312:	1ad3      	subs	r3, r2, r3
 8008314:	2b02      	cmp	r3, #2
 8008316:	d901      	bls.n	800831c <HAL_RCC_OscConfig+0x2c8>
 8008318:	2303      	movs	r3, #3
 800831a:	e103      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 800831c:	4b6a      	ldr	r3, [pc, #424]	; (80084c8 <HAL_RCC_OscConfig+0x474>)
 800831e:	681b      	ldr	r3, [r3, #0]
 8008320:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008324:	2b00      	cmp	r3, #0
 8008326:	d0f0      	beq.n	800830a <HAL_RCC_OscConfig+0x2b6>
 8008328:	687b      	ldr	r3, [r7, #4]
 800832a:	689b      	ldr	r3, [r3, #8]
 800832c:	2b01      	cmp	r3, #1
 800832e:	d106      	bne.n	800833e <HAL_RCC_OscConfig+0x2ea>
 8008330:	4b64      	ldr	r3, [pc, #400]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 8008332:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008334:	4a63      	ldr	r2, [pc, #396]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 8008336:	f043 0301 	orr.w	r3, r3, #1
 800833a:	6713      	str	r3, [r2, #112]	; 0x70
 800833c:	e01c      	b.n	8008378 <HAL_RCC_OscConfig+0x324>
 800833e:	687b      	ldr	r3, [r7, #4]
 8008340:	689b      	ldr	r3, [r3, #8]
 8008342:	2b05      	cmp	r3, #5
 8008344:	d10c      	bne.n	8008360 <HAL_RCC_OscConfig+0x30c>
 8008346:	4b5f      	ldr	r3, [pc, #380]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 8008348:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800834a:	4a5e      	ldr	r2, [pc, #376]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 800834c:	f043 0304 	orr.w	r3, r3, #4
 8008350:	6713      	str	r3, [r2, #112]	; 0x70
 8008352:	4b5c      	ldr	r3, [pc, #368]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 8008354:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008356:	4a5b      	ldr	r2, [pc, #364]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 8008358:	f043 0301 	orr.w	r3, r3, #1
 800835c:	6713      	str	r3, [r2, #112]	; 0x70
 800835e:	e00b      	b.n	8008378 <HAL_RCC_OscConfig+0x324>
 8008360:	4b58      	ldr	r3, [pc, #352]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 8008362:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008364:	4a57      	ldr	r2, [pc, #348]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 8008366:	f023 0301 	bic.w	r3, r3, #1
 800836a:	6713      	str	r3, [r2, #112]	; 0x70
 800836c:	4b55      	ldr	r3, [pc, #340]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 800836e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008370:	4a54      	ldr	r2, [pc, #336]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 8008372:	f023 0304 	bic.w	r3, r3, #4
 8008376:	6713      	str	r3, [r2, #112]	; 0x70
 8008378:	687b      	ldr	r3, [r7, #4]
 800837a:	689b      	ldr	r3, [r3, #8]
 800837c:	2b00      	cmp	r3, #0
 800837e:	d015      	beq.n	80083ac <HAL_RCC_OscConfig+0x358>
 8008380:	f7fd fc0a 	bl	8005b98 <HAL_GetTick>
 8008384:	6138      	str	r0, [r7, #16]
 8008386:	e00a      	b.n	800839e <HAL_RCC_OscConfig+0x34a>
 8008388:	f7fd fc06 	bl	8005b98 <HAL_GetTick>
 800838c:	4602      	mov	r2, r0
 800838e:	693b      	ldr	r3, [r7, #16]
 8008390:	1ad3      	subs	r3, r2, r3
 8008392:	f241 3288 	movw	r2, #5000	; 0x1388
 8008396:	4293      	cmp	r3, r2
 8008398:	d901      	bls.n	800839e <HAL_RCC_OscConfig+0x34a>
 800839a:	2303      	movs	r3, #3
 800839c:	e0c2      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 800839e:	4b49      	ldr	r3, [pc, #292]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 80083a0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80083a2:	f003 0302 	and.w	r3, r3, #2
 80083a6:	2b00      	cmp	r3, #0
 80083a8:	d0ee      	beq.n	8008388 <HAL_RCC_OscConfig+0x334>
 80083aa:	e014      	b.n	80083d6 <HAL_RCC_OscConfig+0x382>
 80083ac:	f7fd fbf4 	bl	8005b98 <HAL_GetTick>
 80083b0:	6138      	str	r0, [r7, #16]
 80083b2:	e00a      	b.n	80083ca <HAL_RCC_OscConfig+0x376>
 80083b4:	f7fd fbf0 	bl	8005b98 <HAL_GetTick>
 80083b8:	4602      	mov	r2, r0
 80083ba:	693b      	ldr	r3, [r7, #16]
 80083bc:	1ad3      	subs	r3, r2, r3
 80083be:	f241 3288 	movw	r2, #5000	; 0x1388
 80083c2:	4293      	cmp	r3, r2
 80083c4:	d901      	bls.n	80083ca <HAL_RCC_OscConfig+0x376>
 80083c6:	2303      	movs	r3, #3
 80083c8:	e0ac      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 80083ca:	4b3e      	ldr	r3, [pc, #248]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 80083cc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80083ce:	f003 0302 	and.w	r3, r3, #2
 80083d2:	2b00      	cmp	r3, #0
 80083d4:	d1ee      	bne.n	80083b4 <HAL_RCC_OscConfig+0x360>
 80083d6:	7dfb      	ldrb	r3, [r7, #23]
 80083d8:	2b01      	cmp	r3, #1
 80083da:	d105      	bne.n	80083e8 <HAL_RCC_OscConfig+0x394>
 80083dc:	4b39      	ldr	r3, [pc, #228]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 80083de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80083e0:	4a38      	ldr	r2, [pc, #224]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 80083e2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80083e6:	6413      	str	r3, [r2, #64]	; 0x40
 80083e8:	687b      	ldr	r3, [r7, #4]
 80083ea:	699b      	ldr	r3, [r3, #24]
 80083ec:	2b00      	cmp	r3, #0
 80083ee:	f000 8098 	beq.w	8008522 <HAL_RCC_OscConfig+0x4ce>
 80083f2:	4b34      	ldr	r3, [pc, #208]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 80083f4:	689b      	ldr	r3, [r3, #8]
 80083f6:	f003 030c 	and.w	r3, r3, #12
 80083fa:	2b08      	cmp	r3, #8
 80083fc:	d05c      	beq.n	80084b8 <HAL_RCC_OscConfig+0x464>
 80083fe:	687b      	ldr	r3, [r7, #4]
 8008400:	699b      	ldr	r3, [r3, #24]
 8008402:	2b02      	cmp	r3, #2
 8008404:	d141      	bne.n	800848a <HAL_RCC_OscConfig+0x436>
 8008406:	4b31      	ldr	r3, [pc, #196]	; (80084cc <HAL_RCC_OscConfig+0x478>)
 8008408:	2200      	movs	r2, #0
 800840a:	601a      	str	r2, [r3, #0]
 800840c:	f7fd fbc4 	bl	8005b98 <HAL_GetTick>
 8008410:	6138      	str	r0, [r7, #16]
 8008412:	e008      	b.n	8008426 <HAL_RCC_OscConfig+0x3d2>
 8008414:	f7fd fbc0 	bl	8005b98 <HAL_GetTick>
 8008418:	4602      	mov	r2, r0
 800841a:	693b      	ldr	r3, [r7, #16]
 800841c:	1ad3      	subs	r3, r2, r3
 800841e:	2b02      	cmp	r3, #2
 8008420:	d901      	bls.n	8008426 <HAL_RCC_OscConfig+0x3d2>
 8008422:	2303      	movs	r3, #3
 8008424:	e07e      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 8008426:	4b27      	ldr	r3, [pc, #156]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 8008428:	681b      	ldr	r3, [r3, #0]
 800842a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800842e:	2b00      	cmp	r3, #0
 8008430:	d1f0      	bne.n	8008414 <HAL_RCC_OscConfig+0x3c0>
 8008432:	687b      	ldr	r3, [r7, #4]
 8008434:	69da      	ldr	r2, [r3, #28]
 8008436:	687b      	ldr	r3, [r7, #4]
 8008438:	6a1b      	ldr	r3, [r3, #32]
 800843a:	431a      	orrs	r2, r3
 800843c:	687b      	ldr	r3, [r7, #4]
 800843e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008440:	019b      	lsls	r3, r3, #6
 8008442:	431a      	orrs	r2, r3
 8008444:	687b      	ldr	r3, [r7, #4]
 8008446:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008448:	085b      	lsrs	r3, r3, #1
 800844a:	3b01      	subs	r3, #1
 800844c:	041b      	lsls	r3, r3, #16
 800844e:	431a      	orrs	r2, r3
 8008450:	687b      	ldr	r3, [r7, #4]
 8008452:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008454:	061b      	lsls	r3, r3, #24
 8008456:	491b      	ldr	r1, [pc, #108]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 8008458:	4313      	orrs	r3, r2
 800845a:	604b      	str	r3, [r1, #4]
 800845c:	4b1b      	ldr	r3, [pc, #108]	; (80084cc <HAL_RCC_OscConfig+0x478>)
 800845e:	2201      	movs	r2, #1
 8008460:	601a      	str	r2, [r3, #0]
 8008462:	f7fd fb99 	bl	8005b98 <HAL_GetTick>
 8008466:	6138      	str	r0, [r7, #16]
 8008468:	e008      	b.n	800847c <HAL_RCC_OscConfig+0x428>
 800846a:	f7fd fb95 	bl	8005b98 <HAL_GetTick>
 800846e:	4602      	mov	r2, r0
 8008470:	693b      	ldr	r3, [r7, #16]
 8008472:	1ad3      	subs	r3, r2, r3
 8008474:	2b02      	cmp	r3, #2
 8008476:	d901      	bls.n	800847c <HAL_RCC_OscConfig+0x428>
 8008478:	2303      	movs	r3, #3
 800847a:	e053      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 800847c:	4b11      	ldr	r3, [pc, #68]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 800847e:	681b      	ldr	r3, [r3, #0]
 8008480:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008484:	2b00      	cmp	r3, #0
 8008486:	d0f0      	beq.n	800846a <HAL_RCC_OscConfig+0x416>
 8008488:	e04b      	b.n	8008522 <HAL_RCC_OscConfig+0x4ce>
 800848a:	4b10      	ldr	r3, [pc, #64]	; (80084cc <HAL_RCC_OscConfig+0x478>)
 800848c:	2200      	movs	r2, #0
 800848e:	601a      	str	r2, [r3, #0]
 8008490:	f7fd fb82 	bl	8005b98 <HAL_GetTick>
 8008494:	6138      	str	r0, [r7, #16]
 8008496:	e008      	b.n	80084aa <HAL_RCC_OscConfig+0x456>
 8008498:	f7fd fb7e 	bl	8005b98 <HAL_GetTick>
 800849c:	4602      	mov	r2, r0
 800849e:	693b      	ldr	r3, [r7, #16]
 80084a0:	1ad3      	subs	r3, r2, r3
 80084a2:	2b02      	cmp	r3, #2
 80084a4:	d901      	bls.n	80084aa <HAL_RCC_OscConfig+0x456>
 80084a6:	2303      	movs	r3, #3
 80084a8:	e03c      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 80084aa:	4b06      	ldr	r3, [pc, #24]	; (80084c4 <HAL_RCC_OscConfig+0x470>)
 80084ac:	681b      	ldr	r3, [r3, #0]
 80084ae:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80084b2:	2b00      	cmp	r3, #0
 80084b4:	d1f0      	bne.n	8008498 <HAL_RCC_OscConfig+0x444>
 80084b6:	e034      	b.n	8008522 <HAL_RCC_OscConfig+0x4ce>
 80084b8:	687b      	ldr	r3, [r7, #4]
 80084ba:	699b      	ldr	r3, [r3, #24]
 80084bc:	2b01      	cmp	r3, #1
 80084be:	d107      	bne.n	80084d0 <HAL_RCC_OscConfig+0x47c>
 80084c0:	2301      	movs	r3, #1
 80084c2:	e02f      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 80084c4:	40023800 	.word	0x40023800
 80084c8:	40007000 	.word	0x40007000
 80084cc:	42470060 	.word	0x42470060
 80084d0:	4b16      	ldr	r3, [pc, #88]	; (800852c <HAL_RCC_OscConfig+0x4d8>)
 80084d2:	685b      	ldr	r3, [r3, #4]
 80084d4:	60fb      	str	r3, [r7, #12]
 80084d6:	68fb      	ldr	r3, [r7, #12]
 80084d8:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80084dc:	687b      	ldr	r3, [r7, #4]
 80084de:	69db      	ldr	r3, [r3, #28]
 80084e0:	429a      	cmp	r2, r3
 80084e2:	d11c      	bne.n	800851e <HAL_RCC_OscConfig+0x4ca>
 80084e4:	68fb      	ldr	r3, [r7, #12]
 80084e6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80084ea:	687b      	ldr	r3, [r7, #4]
 80084ec:	6a1b      	ldr	r3, [r3, #32]
 80084ee:	429a      	cmp	r2, r3
 80084f0:	d115      	bne.n	800851e <HAL_RCC_OscConfig+0x4ca>
 80084f2:	68fa      	ldr	r2, [r7, #12]
 80084f4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80084f8:	4013      	ands	r3, r2
 80084fa:	687a      	ldr	r2, [r7, #4]
 80084fc:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80084fe:	4293      	cmp	r3, r2
 8008500:	d10d      	bne.n	800851e <HAL_RCC_OscConfig+0x4ca>
 8008502:	68fb      	ldr	r3, [r7, #12]
 8008504:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8008508:	687b      	ldr	r3, [r7, #4]
 800850a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800850c:	429a      	cmp	r2, r3
 800850e:	d106      	bne.n	800851e <HAL_RCC_OscConfig+0x4ca>
 8008510:	68fb      	ldr	r3, [r7, #12]
 8008512:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8008516:	687b      	ldr	r3, [r7, #4]
 8008518:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800851a:	429a      	cmp	r2, r3
 800851c:	d001      	beq.n	8008522 <HAL_RCC_OscConfig+0x4ce>
 800851e:	2301      	movs	r3, #1
 8008520:	e000      	b.n	8008524 <HAL_RCC_OscConfig+0x4d0>
 8008522:	2300      	movs	r3, #0
 8008524:	4618      	mov	r0, r3
 8008526:	3718      	adds	r7, #24
 8008528:	46bd      	mov	sp, r7
 800852a:	bd80      	pop	{r7, pc}
 800852c:	40023800 	.word	0x40023800

08008530 <HAL_RCC_ClockConfig>:
 8008530:	b580      	push	{r7, lr}
 8008532:	b084      	sub	sp, #16
 8008534:	af00      	add	r7, sp, #0
 8008536:	6078      	str	r0, [r7, #4]
 8008538:	6039      	str	r1, [r7, #0]
 800853a:	687b      	ldr	r3, [r7, #4]
 800853c:	2b00      	cmp	r3, #0
 800853e:	d101      	bne.n	8008544 <HAL_RCC_ClockConfig+0x14>
 8008540:	2301      	movs	r3, #1
 8008542:	e0cc      	b.n	80086de <HAL_RCC_ClockConfig+0x1ae>
 8008544:	4b68      	ldr	r3, [pc, #416]	; (80086e8 <HAL_RCC_ClockConfig+0x1b8>)
 8008546:	681b      	ldr	r3, [r3, #0]
 8008548:	f003 030f 	and.w	r3, r3, #15
 800854c:	683a      	ldr	r2, [r7, #0]
 800854e:	429a      	cmp	r2, r3
 8008550:	d90c      	bls.n	800856c <HAL_RCC_ClockConfig+0x3c>
 8008552:	4b65      	ldr	r3, [pc, #404]	; (80086e8 <HAL_RCC_ClockConfig+0x1b8>)
 8008554:	683a      	ldr	r2, [r7, #0]
 8008556:	b2d2      	uxtb	r2, r2
 8008558:	701a      	strb	r2, [r3, #0]
 800855a:	4b63      	ldr	r3, [pc, #396]	; (80086e8 <HAL_RCC_ClockConfig+0x1b8>)
 800855c:	681b      	ldr	r3, [r3, #0]
 800855e:	f003 030f 	and.w	r3, r3, #15
 8008562:	683a      	ldr	r2, [r7, #0]
 8008564:	429a      	cmp	r2, r3
 8008566:	d001      	beq.n	800856c <HAL_RCC_ClockConfig+0x3c>
 8008568:	2301      	movs	r3, #1
 800856a:	e0b8      	b.n	80086de <HAL_RCC_ClockConfig+0x1ae>
 800856c:	687b      	ldr	r3, [r7, #4]
 800856e:	681b      	ldr	r3, [r3, #0]
 8008570:	f003 0302 	and.w	r3, r3, #2
 8008574:	2b00      	cmp	r3, #0
 8008576:	d020      	beq.n	80085ba <HAL_RCC_ClockConfig+0x8a>
 8008578:	687b      	ldr	r3, [r7, #4]
 800857a:	681b      	ldr	r3, [r3, #0]
 800857c:	f003 0304 	and.w	r3, r3, #4
 8008580:	2b00      	cmp	r3, #0
 8008582:	d005      	beq.n	8008590 <HAL_RCC_ClockConfig+0x60>
 8008584:	4b59      	ldr	r3, [pc, #356]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 8008586:	689b      	ldr	r3, [r3, #8]
 8008588:	4a58      	ldr	r2, [pc, #352]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 800858a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800858e:	6093      	str	r3, [r2, #8]
 8008590:	687b      	ldr	r3, [r7, #4]
 8008592:	681b      	ldr	r3, [r3, #0]
 8008594:	f003 0308 	and.w	r3, r3, #8
 8008598:	2b00      	cmp	r3, #0
 800859a:	d005      	beq.n	80085a8 <HAL_RCC_ClockConfig+0x78>
 800859c:	4b53      	ldr	r3, [pc, #332]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 800859e:	689b      	ldr	r3, [r3, #8]
 80085a0:	4a52      	ldr	r2, [pc, #328]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 80085a2:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80085a6:	6093      	str	r3, [r2, #8]
 80085a8:	4b50      	ldr	r3, [pc, #320]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 80085aa:	689b      	ldr	r3, [r3, #8]
 80085ac:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80085b0:	687b      	ldr	r3, [r7, #4]
 80085b2:	689b      	ldr	r3, [r3, #8]
 80085b4:	494d      	ldr	r1, [pc, #308]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 80085b6:	4313      	orrs	r3, r2
 80085b8:	608b      	str	r3, [r1, #8]
 80085ba:	687b      	ldr	r3, [r7, #4]
 80085bc:	681b      	ldr	r3, [r3, #0]
 80085be:	f003 0301 	and.w	r3, r3, #1
 80085c2:	2b00      	cmp	r3, #0
 80085c4:	d044      	beq.n	8008650 <HAL_RCC_ClockConfig+0x120>
 80085c6:	687b      	ldr	r3, [r7, #4]
 80085c8:	685b      	ldr	r3, [r3, #4]
 80085ca:	2b01      	cmp	r3, #1
 80085cc:	d107      	bne.n	80085de <HAL_RCC_ClockConfig+0xae>
 80085ce:	4b47      	ldr	r3, [pc, #284]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 80085d0:	681b      	ldr	r3, [r3, #0]
 80085d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80085d6:	2b00      	cmp	r3, #0
 80085d8:	d119      	bne.n	800860e <HAL_RCC_ClockConfig+0xde>
 80085da:	2301      	movs	r3, #1
 80085dc:	e07f      	b.n	80086de <HAL_RCC_ClockConfig+0x1ae>
 80085de:	687b      	ldr	r3, [r7, #4]
 80085e0:	685b      	ldr	r3, [r3, #4]
 80085e2:	2b02      	cmp	r3, #2
 80085e4:	d003      	beq.n	80085ee <HAL_RCC_ClockConfig+0xbe>
 80085e6:	687b      	ldr	r3, [r7, #4]
 80085e8:	685b      	ldr	r3, [r3, #4]
 80085ea:	2b03      	cmp	r3, #3
 80085ec:	d107      	bne.n	80085fe <HAL_RCC_ClockConfig+0xce>
 80085ee:	4b3f      	ldr	r3, [pc, #252]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 80085f0:	681b      	ldr	r3, [r3, #0]
 80085f2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80085f6:	2b00      	cmp	r3, #0
 80085f8:	d109      	bne.n	800860e <HAL_RCC_ClockConfig+0xde>
 80085fa:	2301      	movs	r3, #1
 80085fc:	e06f      	b.n	80086de <HAL_RCC_ClockConfig+0x1ae>
 80085fe:	4b3b      	ldr	r3, [pc, #236]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 8008600:	681b      	ldr	r3, [r3, #0]
 8008602:	f003 0302 	and.w	r3, r3, #2
 8008606:	2b00      	cmp	r3, #0
 8008608:	d101      	bne.n	800860e <HAL_RCC_ClockConfig+0xde>
 800860a:	2301      	movs	r3, #1
 800860c:	e067      	b.n	80086de <HAL_RCC_ClockConfig+0x1ae>
 800860e:	4b37      	ldr	r3, [pc, #220]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 8008610:	689b      	ldr	r3, [r3, #8]
 8008612:	f023 0203 	bic.w	r2, r3, #3
 8008616:	687b      	ldr	r3, [r7, #4]
 8008618:	685b      	ldr	r3, [r3, #4]
 800861a:	4934      	ldr	r1, [pc, #208]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 800861c:	4313      	orrs	r3, r2
 800861e:	608b      	str	r3, [r1, #8]
 8008620:	f7fd faba 	bl	8005b98 <HAL_GetTick>
 8008624:	60f8      	str	r0, [r7, #12]
 8008626:	e00a      	b.n	800863e <HAL_RCC_ClockConfig+0x10e>
 8008628:	f7fd fab6 	bl	8005b98 <HAL_GetTick>
 800862c:	4602      	mov	r2, r0
 800862e:	68fb      	ldr	r3, [r7, #12]
 8008630:	1ad3      	subs	r3, r2, r3
 8008632:	f241 3288 	movw	r2, #5000	; 0x1388
 8008636:	4293      	cmp	r3, r2
 8008638:	d901      	bls.n	800863e <HAL_RCC_ClockConfig+0x10e>
 800863a:	2303      	movs	r3, #3
 800863c:	e04f      	b.n	80086de <HAL_RCC_ClockConfig+0x1ae>
 800863e:	4b2b      	ldr	r3, [pc, #172]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 8008640:	689b      	ldr	r3, [r3, #8]
 8008642:	f003 020c 	and.w	r2, r3, #12
 8008646:	687b      	ldr	r3, [r7, #4]
 8008648:	685b      	ldr	r3, [r3, #4]
 800864a:	009b      	lsls	r3, r3, #2
 800864c:	429a      	cmp	r2, r3
 800864e:	d1eb      	bne.n	8008628 <HAL_RCC_ClockConfig+0xf8>
 8008650:	4b25      	ldr	r3, [pc, #148]	; (80086e8 <HAL_RCC_ClockConfig+0x1b8>)
 8008652:	681b      	ldr	r3, [r3, #0]
 8008654:	f003 030f 	and.w	r3, r3, #15
 8008658:	683a      	ldr	r2, [r7, #0]
 800865a:	429a      	cmp	r2, r3
 800865c:	d20c      	bcs.n	8008678 <HAL_RCC_ClockConfig+0x148>
 800865e:	4b22      	ldr	r3, [pc, #136]	; (80086e8 <HAL_RCC_ClockConfig+0x1b8>)
 8008660:	683a      	ldr	r2, [r7, #0]
 8008662:	b2d2      	uxtb	r2, r2
 8008664:	701a      	strb	r2, [r3, #0]
 8008666:	4b20      	ldr	r3, [pc, #128]	; (80086e8 <HAL_RCC_ClockConfig+0x1b8>)
 8008668:	681b      	ldr	r3, [r3, #0]
 800866a:	f003 030f 	and.w	r3, r3, #15
 800866e:	683a      	ldr	r2, [r7, #0]
 8008670:	429a      	cmp	r2, r3
 8008672:	d001      	beq.n	8008678 <HAL_RCC_ClockConfig+0x148>
 8008674:	2301      	movs	r3, #1
 8008676:	e032      	b.n	80086de <HAL_RCC_ClockConfig+0x1ae>
 8008678:	687b      	ldr	r3, [r7, #4]
 800867a:	681b      	ldr	r3, [r3, #0]
 800867c:	f003 0304 	and.w	r3, r3, #4
 8008680:	2b00      	cmp	r3, #0
 8008682:	d008      	beq.n	8008696 <HAL_RCC_ClockConfig+0x166>
 8008684:	4b19      	ldr	r3, [pc, #100]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 8008686:	689b      	ldr	r3, [r3, #8]
 8008688:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800868c:	687b      	ldr	r3, [r7, #4]
 800868e:	68db      	ldr	r3, [r3, #12]
 8008690:	4916      	ldr	r1, [pc, #88]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 8008692:	4313      	orrs	r3, r2
 8008694:	608b      	str	r3, [r1, #8]
 8008696:	687b      	ldr	r3, [r7, #4]
 8008698:	681b      	ldr	r3, [r3, #0]
 800869a:	f003 0308 	and.w	r3, r3, #8
 800869e:	2b00      	cmp	r3, #0
 80086a0:	d009      	beq.n	80086b6 <HAL_RCC_ClockConfig+0x186>
 80086a2:	4b12      	ldr	r3, [pc, #72]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 80086a4:	689b      	ldr	r3, [r3, #8]
 80086a6:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80086aa:	687b      	ldr	r3, [r7, #4]
 80086ac:	691b      	ldr	r3, [r3, #16]
 80086ae:	00db      	lsls	r3, r3, #3
 80086b0:	490e      	ldr	r1, [pc, #56]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 80086b2:	4313      	orrs	r3, r2
 80086b4:	608b      	str	r3, [r1, #8]
 80086b6:	f000 f821 	bl	80086fc <HAL_RCC_GetSysClockFreq>
 80086ba:	4602      	mov	r2, r0
 80086bc:	4b0b      	ldr	r3, [pc, #44]	; (80086ec <HAL_RCC_ClockConfig+0x1bc>)
 80086be:	689b      	ldr	r3, [r3, #8]
 80086c0:	091b      	lsrs	r3, r3, #4
 80086c2:	f003 030f 	and.w	r3, r3, #15
 80086c6:	490a      	ldr	r1, [pc, #40]	; (80086f0 <HAL_RCC_ClockConfig+0x1c0>)
 80086c8:	5ccb      	ldrb	r3, [r1, r3]
 80086ca:	fa22 f303 	lsr.w	r3, r2, r3
 80086ce:	4a09      	ldr	r2, [pc, #36]	; (80086f4 <HAL_RCC_ClockConfig+0x1c4>)
 80086d0:	6013      	str	r3, [r2, #0]
 80086d2:	4b09      	ldr	r3, [pc, #36]	; (80086f8 <HAL_RCC_ClockConfig+0x1c8>)
 80086d4:	681b      	ldr	r3, [r3, #0]
 80086d6:	4618      	mov	r0, r3
 80086d8:	f7fd fa1a 	bl	8005b10 <HAL_InitTick>
 80086dc:	2300      	movs	r3, #0
 80086de:	4618      	mov	r0, r3
 80086e0:	3710      	adds	r7, #16
 80086e2:	46bd      	mov	sp, r7
 80086e4:	bd80      	pop	{r7, pc}
 80086e6:	bf00      	nop
 80086e8:	40023c00 	.word	0x40023c00
 80086ec:	40023800 	.word	0x40023800
 80086f0:	080126dc 	.word	0x080126dc
 80086f4:	20000064 	.word	0x20000064
 80086f8:	200000f4 	.word	0x200000f4

080086fc <HAL_RCC_GetSysClockFreq>:
 80086fc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008700:	b094      	sub	sp, #80	; 0x50
 8008702:	af00      	add	r7, sp, #0
 8008704:	2300      	movs	r3, #0
 8008706:	647b      	str	r3, [r7, #68]	; 0x44
 8008708:	2300      	movs	r3, #0
 800870a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800870c:	2300      	movs	r3, #0
 800870e:	643b      	str	r3, [r7, #64]	; 0x40
 8008710:	2300      	movs	r3, #0
 8008712:	64bb      	str	r3, [r7, #72]	; 0x48
 8008714:	4b79      	ldr	r3, [pc, #484]	; (80088fc <HAL_RCC_GetSysClockFreq+0x200>)
 8008716:	689b      	ldr	r3, [r3, #8]
 8008718:	f003 030c 	and.w	r3, r3, #12
 800871c:	2b08      	cmp	r3, #8
 800871e:	d00d      	beq.n	800873c <HAL_RCC_GetSysClockFreq+0x40>
 8008720:	2b08      	cmp	r3, #8
 8008722:	f200 80e1 	bhi.w	80088e8 <HAL_RCC_GetSysClockFreq+0x1ec>
 8008726:	2b00      	cmp	r3, #0
 8008728:	d002      	beq.n	8008730 <HAL_RCC_GetSysClockFreq+0x34>
 800872a:	2b04      	cmp	r3, #4
 800872c:	d003      	beq.n	8008736 <HAL_RCC_GetSysClockFreq+0x3a>
 800872e:	e0db      	b.n	80088e8 <HAL_RCC_GetSysClockFreq+0x1ec>
 8008730:	4b73      	ldr	r3, [pc, #460]	; (8008900 <HAL_RCC_GetSysClockFreq+0x204>)
 8008732:	64bb      	str	r3, [r7, #72]	; 0x48
 8008734:	e0db      	b.n	80088ee <HAL_RCC_GetSysClockFreq+0x1f2>
 8008736:	4b73      	ldr	r3, [pc, #460]	; (8008904 <HAL_RCC_GetSysClockFreq+0x208>)
 8008738:	64bb      	str	r3, [r7, #72]	; 0x48
 800873a:	e0d8      	b.n	80088ee <HAL_RCC_GetSysClockFreq+0x1f2>
 800873c:	4b6f      	ldr	r3, [pc, #444]	; (80088fc <HAL_RCC_GetSysClockFreq+0x200>)
 800873e:	685b      	ldr	r3, [r3, #4]
 8008740:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008744:	647b      	str	r3, [r7, #68]	; 0x44
 8008746:	4b6d      	ldr	r3, [pc, #436]	; (80088fc <HAL_RCC_GetSysClockFreq+0x200>)
 8008748:	685b      	ldr	r3, [r3, #4]
 800874a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800874e:	2b00      	cmp	r3, #0
 8008750:	d063      	beq.n	800881a <HAL_RCC_GetSysClockFreq+0x11e>
 8008752:	4b6a      	ldr	r3, [pc, #424]	; (80088fc <HAL_RCC_GetSysClockFreq+0x200>)
 8008754:	685b      	ldr	r3, [r3, #4]
 8008756:	099b      	lsrs	r3, r3, #6
 8008758:	2200      	movs	r2, #0
 800875a:	63bb      	str	r3, [r7, #56]	; 0x38
 800875c:	63fa      	str	r2, [r7, #60]	; 0x3c
 800875e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008760:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008764:	633b      	str	r3, [r7, #48]	; 0x30
 8008766:	2300      	movs	r3, #0
 8008768:	637b      	str	r3, [r7, #52]	; 0x34
 800876a:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 800876e:	4622      	mov	r2, r4
 8008770:	462b      	mov	r3, r5
 8008772:	f04f 0000 	mov.w	r0, #0
 8008776:	f04f 0100 	mov.w	r1, #0
 800877a:	0159      	lsls	r1, r3, #5
 800877c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008780:	0150      	lsls	r0, r2, #5
 8008782:	4602      	mov	r2, r0
 8008784:	460b      	mov	r3, r1
 8008786:	4621      	mov	r1, r4
 8008788:	1a51      	subs	r1, r2, r1
 800878a:	6139      	str	r1, [r7, #16]
 800878c:	4629      	mov	r1, r5
 800878e:	eb63 0301 	sbc.w	r3, r3, r1
 8008792:	617b      	str	r3, [r7, #20]
 8008794:	f04f 0200 	mov.w	r2, #0
 8008798:	f04f 0300 	mov.w	r3, #0
 800879c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80087a0:	4659      	mov	r1, fp
 80087a2:	018b      	lsls	r3, r1, #6
 80087a4:	4651      	mov	r1, sl
 80087a6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80087aa:	4651      	mov	r1, sl
 80087ac:	018a      	lsls	r2, r1, #6
 80087ae:	4651      	mov	r1, sl
 80087b0:	ebb2 0801 	subs.w	r8, r2, r1
 80087b4:	4659      	mov	r1, fp
 80087b6:	eb63 0901 	sbc.w	r9, r3, r1
 80087ba:	f04f 0200 	mov.w	r2, #0
 80087be:	f04f 0300 	mov.w	r3, #0
 80087c2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80087c6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80087ca:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80087ce:	4690      	mov	r8, r2
 80087d0:	4699      	mov	r9, r3
 80087d2:	4623      	mov	r3, r4
 80087d4:	eb18 0303 	adds.w	r3, r8, r3
 80087d8:	60bb      	str	r3, [r7, #8]
 80087da:	462b      	mov	r3, r5
 80087dc:	eb49 0303 	adc.w	r3, r9, r3
 80087e0:	60fb      	str	r3, [r7, #12]
 80087e2:	f04f 0200 	mov.w	r2, #0
 80087e6:	f04f 0300 	mov.w	r3, #0
 80087ea:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80087ee:	4629      	mov	r1, r5
 80087f0:	024b      	lsls	r3, r1, #9
 80087f2:	4621      	mov	r1, r4
 80087f4:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80087f8:	4621      	mov	r1, r4
 80087fa:	024a      	lsls	r2, r1, #9
 80087fc:	4610      	mov	r0, r2
 80087fe:	4619      	mov	r1, r3
 8008800:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8008802:	2200      	movs	r2, #0
 8008804:	62bb      	str	r3, [r7, #40]	; 0x28
 8008806:	62fa      	str	r2, [r7, #44]	; 0x2c
 8008808:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800880c:	f7f8 faac 	bl	8000d68 <__aeabi_uldivmod>
 8008810:	4602      	mov	r2, r0
 8008812:	460b      	mov	r3, r1
 8008814:	4613      	mov	r3, r2
 8008816:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008818:	e058      	b.n	80088cc <HAL_RCC_GetSysClockFreq+0x1d0>
 800881a:	4b38      	ldr	r3, [pc, #224]	; (80088fc <HAL_RCC_GetSysClockFreq+0x200>)
 800881c:	685b      	ldr	r3, [r3, #4]
 800881e:	099b      	lsrs	r3, r3, #6
 8008820:	2200      	movs	r2, #0
 8008822:	4618      	mov	r0, r3
 8008824:	4611      	mov	r1, r2
 8008826:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800882a:	623b      	str	r3, [r7, #32]
 800882c:	2300      	movs	r3, #0
 800882e:	627b      	str	r3, [r7, #36]	; 0x24
 8008830:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8008834:	4642      	mov	r2, r8
 8008836:	464b      	mov	r3, r9
 8008838:	f04f 0000 	mov.w	r0, #0
 800883c:	f04f 0100 	mov.w	r1, #0
 8008840:	0159      	lsls	r1, r3, #5
 8008842:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008846:	0150      	lsls	r0, r2, #5
 8008848:	4602      	mov	r2, r0
 800884a:	460b      	mov	r3, r1
 800884c:	4641      	mov	r1, r8
 800884e:	ebb2 0a01 	subs.w	sl, r2, r1
 8008852:	4649      	mov	r1, r9
 8008854:	eb63 0b01 	sbc.w	fp, r3, r1
 8008858:	f04f 0200 	mov.w	r2, #0
 800885c:	f04f 0300 	mov.w	r3, #0
 8008860:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8008864:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8008868:	ea4f 128a 	mov.w	r2, sl, lsl #6
 800886c:	ebb2 040a 	subs.w	r4, r2, sl
 8008870:	eb63 050b 	sbc.w	r5, r3, fp
 8008874:	f04f 0200 	mov.w	r2, #0
 8008878:	f04f 0300 	mov.w	r3, #0
 800887c:	00eb      	lsls	r3, r5, #3
 800887e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8008882:	00e2      	lsls	r2, r4, #3
 8008884:	4614      	mov	r4, r2
 8008886:	461d      	mov	r5, r3
 8008888:	4643      	mov	r3, r8
 800888a:	18e3      	adds	r3, r4, r3
 800888c:	603b      	str	r3, [r7, #0]
 800888e:	464b      	mov	r3, r9
 8008890:	eb45 0303 	adc.w	r3, r5, r3
 8008894:	607b      	str	r3, [r7, #4]
 8008896:	f04f 0200 	mov.w	r2, #0
 800889a:	f04f 0300 	mov.w	r3, #0
 800889e:	e9d7 4500 	ldrd	r4, r5, [r7]
 80088a2:	4629      	mov	r1, r5
 80088a4:	028b      	lsls	r3, r1, #10
 80088a6:	4621      	mov	r1, r4
 80088a8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80088ac:	4621      	mov	r1, r4
 80088ae:	028a      	lsls	r2, r1, #10
 80088b0:	4610      	mov	r0, r2
 80088b2:	4619      	mov	r1, r3
 80088b4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80088b6:	2200      	movs	r2, #0
 80088b8:	61bb      	str	r3, [r7, #24]
 80088ba:	61fa      	str	r2, [r7, #28]
 80088bc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80088c0:	f7f8 fa52 	bl	8000d68 <__aeabi_uldivmod>
 80088c4:	4602      	mov	r2, r0
 80088c6:	460b      	mov	r3, r1
 80088c8:	4613      	mov	r3, r2
 80088ca:	64fb      	str	r3, [r7, #76]	; 0x4c
 80088cc:	4b0b      	ldr	r3, [pc, #44]	; (80088fc <HAL_RCC_GetSysClockFreq+0x200>)
 80088ce:	685b      	ldr	r3, [r3, #4]
 80088d0:	0c1b      	lsrs	r3, r3, #16
 80088d2:	f003 0303 	and.w	r3, r3, #3
 80088d6:	3301      	adds	r3, #1
 80088d8:	005b      	lsls	r3, r3, #1
 80088da:	643b      	str	r3, [r7, #64]	; 0x40
 80088dc:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80088de:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80088e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80088e4:	64bb      	str	r3, [r7, #72]	; 0x48
 80088e6:	e002      	b.n	80088ee <HAL_RCC_GetSysClockFreq+0x1f2>
 80088e8:	4b05      	ldr	r3, [pc, #20]	; (8008900 <HAL_RCC_GetSysClockFreq+0x204>)
 80088ea:	64bb      	str	r3, [r7, #72]	; 0x48
 80088ec:	bf00      	nop
 80088ee:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80088f0:	4618      	mov	r0, r3
 80088f2:	3750      	adds	r7, #80	; 0x50
 80088f4:	46bd      	mov	sp, r7
 80088f6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80088fa:	bf00      	nop
 80088fc:	40023800 	.word	0x40023800
 8008900:	00f42400 	.word	0x00f42400
 8008904:	007a1200 	.word	0x007a1200

08008908 <HAL_RCC_GetHCLKFreq>:
 8008908:	b480      	push	{r7}
 800890a:	af00      	add	r7, sp, #0
 800890c:	4b03      	ldr	r3, [pc, #12]	; (800891c <HAL_RCC_GetHCLKFreq+0x14>)
 800890e:	681b      	ldr	r3, [r3, #0]
 8008910:	4618      	mov	r0, r3
 8008912:	46bd      	mov	sp, r7
 8008914:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008918:	4770      	bx	lr
 800891a:	bf00      	nop
 800891c:	20000064 	.word	0x20000064

08008920 <HAL_RCC_GetPCLK1Freq>:
 8008920:	b580      	push	{r7, lr}
 8008922:	af00      	add	r7, sp, #0
 8008924:	f7ff fff0 	bl	8008908 <HAL_RCC_GetHCLKFreq>
 8008928:	4602      	mov	r2, r0
 800892a:	4b05      	ldr	r3, [pc, #20]	; (8008940 <HAL_RCC_GetPCLK1Freq+0x20>)
 800892c:	689b      	ldr	r3, [r3, #8]
 800892e:	0a9b      	lsrs	r3, r3, #10
 8008930:	f003 0307 	and.w	r3, r3, #7
 8008934:	4903      	ldr	r1, [pc, #12]	; (8008944 <HAL_RCC_GetPCLK1Freq+0x24>)
 8008936:	5ccb      	ldrb	r3, [r1, r3]
 8008938:	fa22 f303 	lsr.w	r3, r2, r3
 800893c:	4618      	mov	r0, r3
 800893e:	bd80      	pop	{r7, pc}
 8008940:	40023800 	.word	0x40023800
 8008944:	080126ec 	.word	0x080126ec

08008948 <HAL_RCCEx_PeriphCLKConfig>:
 8008948:	b580      	push	{r7, lr}
 800894a:	b086      	sub	sp, #24
 800894c:	af00      	add	r7, sp, #0
 800894e:	6078      	str	r0, [r7, #4]
 8008950:	2300      	movs	r3, #0
 8008952:	617b      	str	r3, [r7, #20]
 8008954:	2300      	movs	r3, #0
 8008956:	613b      	str	r3, [r7, #16]
 8008958:	687b      	ldr	r3, [r7, #4]
 800895a:	681b      	ldr	r3, [r3, #0]
 800895c:	f003 0301 	and.w	r3, r3, #1
 8008960:	2b00      	cmp	r3, #0
 8008962:	d10b      	bne.n	800897c <HAL_RCCEx_PeriphCLKConfig+0x34>
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	681b      	ldr	r3, [r3, #0]
 8008968:	f003 0302 	and.w	r3, r3, #2
 800896c:	2b00      	cmp	r3, #0
 800896e:	d105      	bne.n	800897c <HAL_RCCEx_PeriphCLKConfig+0x34>
 8008970:	687b      	ldr	r3, [r7, #4]
 8008972:	681b      	ldr	r3, [r3, #0]
 8008974:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008978:	2b00      	cmp	r3, #0
 800897a:	d075      	beq.n	8008a68 <HAL_RCCEx_PeriphCLKConfig+0x120>
 800897c:	4b91      	ldr	r3, [pc, #580]	; (8008bc4 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 800897e:	2200      	movs	r2, #0
 8008980:	601a      	str	r2, [r3, #0]
 8008982:	f7fd f909 	bl	8005b98 <HAL_GetTick>
 8008986:	6178      	str	r0, [r7, #20]
 8008988:	e008      	b.n	800899c <HAL_RCCEx_PeriphCLKConfig+0x54>
 800898a:	f7fd f905 	bl	8005b98 <HAL_GetTick>
 800898e:	4602      	mov	r2, r0
 8008990:	697b      	ldr	r3, [r7, #20]
 8008992:	1ad3      	subs	r3, r2, r3
 8008994:	2b02      	cmp	r3, #2
 8008996:	d901      	bls.n	800899c <HAL_RCCEx_PeriphCLKConfig+0x54>
 8008998:	2303      	movs	r3, #3
 800899a:	e189      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x368>
 800899c:	4b8a      	ldr	r3, [pc, #552]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800899e:	681b      	ldr	r3, [r3, #0]
 80089a0:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80089a4:	2b00      	cmp	r3, #0
 80089a6:	d1f0      	bne.n	800898a <HAL_RCCEx_PeriphCLKConfig+0x42>
 80089a8:	687b      	ldr	r3, [r7, #4]
 80089aa:	681b      	ldr	r3, [r3, #0]
 80089ac:	f003 0301 	and.w	r3, r3, #1
 80089b0:	2b00      	cmp	r3, #0
 80089b2:	d009      	beq.n	80089c8 <HAL_RCCEx_PeriphCLKConfig+0x80>
 80089b4:	687b      	ldr	r3, [r7, #4]
 80089b6:	685b      	ldr	r3, [r3, #4]
 80089b8:	019a      	lsls	r2, r3, #6
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	689b      	ldr	r3, [r3, #8]
 80089be:	071b      	lsls	r3, r3, #28
 80089c0:	4981      	ldr	r1, [pc, #516]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80089c2:	4313      	orrs	r3, r2
 80089c4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80089c8:	687b      	ldr	r3, [r7, #4]
 80089ca:	681b      	ldr	r3, [r3, #0]
 80089cc:	f003 0302 	and.w	r3, r3, #2
 80089d0:	2b00      	cmp	r3, #0
 80089d2:	d01f      	beq.n	8008a14 <HAL_RCCEx_PeriphCLKConfig+0xcc>
 80089d4:	4b7c      	ldr	r3, [pc, #496]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80089d6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80089da:	0f1b      	lsrs	r3, r3, #28
 80089dc:	f003 0307 	and.w	r3, r3, #7
 80089e0:	613b      	str	r3, [r7, #16]
 80089e2:	687b      	ldr	r3, [r7, #4]
 80089e4:	685b      	ldr	r3, [r3, #4]
 80089e6:	019a      	lsls	r2, r3, #6
 80089e8:	687b      	ldr	r3, [r7, #4]
 80089ea:	68db      	ldr	r3, [r3, #12]
 80089ec:	061b      	lsls	r3, r3, #24
 80089ee:	431a      	orrs	r2, r3
 80089f0:	693b      	ldr	r3, [r7, #16]
 80089f2:	071b      	lsls	r3, r3, #28
 80089f4:	4974      	ldr	r1, [pc, #464]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80089f6:	4313      	orrs	r3, r2
 80089f8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80089fc:	4b72      	ldr	r3, [pc, #456]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80089fe:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8008a02:	f023 021f 	bic.w	r2, r3, #31
 8008a06:	687b      	ldr	r3, [r7, #4]
 8008a08:	69db      	ldr	r3, [r3, #28]
 8008a0a:	3b01      	subs	r3, #1
 8008a0c:	496e      	ldr	r1, [pc, #440]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008a0e:	4313      	orrs	r3, r2
 8008a10:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8008a14:	687b      	ldr	r3, [r7, #4]
 8008a16:	681b      	ldr	r3, [r3, #0]
 8008a18:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008a1c:	2b00      	cmp	r3, #0
 8008a1e:	d00d      	beq.n	8008a3c <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8008a20:	687b      	ldr	r3, [r7, #4]
 8008a22:	685b      	ldr	r3, [r3, #4]
 8008a24:	019a      	lsls	r2, r3, #6
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	68db      	ldr	r3, [r3, #12]
 8008a2a:	061b      	lsls	r3, r3, #24
 8008a2c:	431a      	orrs	r2, r3
 8008a2e:	687b      	ldr	r3, [r7, #4]
 8008a30:	689b      	ldr	r3, [r3, #8]
 8008a32:	071b      	lsls	r3, r3, #28
 8008a34:	4964      	ldr	r1, [pc, #400]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008a36:	4313      	orrs	r3, r2
 8008a38:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8008a3c:	4b61      	ldr	r3, [pc, #388]	; (8008bc4 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 8008a3e:	2201      	movs	r2, #1
 8008a40:	601a      	str	r2, [r3, #0]
 8008a42:	f7fd f8a9 	bl	8005b98 <HAL_GetTick>
 8008a46:	6178      	str	r0, [r7, #20]
 8008a48:	e008      	b.n	8008a5c <HAL_RCCEx_PeriphCLKConfig+0x114>
 8008a4a:	f7fd f8a5 	bl	8005b98 <HAL_GetTick>
 8008a4e:	4602      	mov	r2, r0
 8008a50:	697b      	ldr	r3, [r7, #20]
 8008a52:	1ad3      	subs	r3, r2, r3
 8008a54:	2b02      	cmp	r3, #2
 8008a56:	d901      	bls.n	8008a5c <HAL_RCCEx_PeriphCLKConfig+0x114>
 8008a58:	2303      	movs	r3, #3
 8008a5a:	e129      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8008a5c:	4b5a      	ldr	r3, [pc, #360]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008a5e:	681b      	ldr	r3, [r3, #0]
 8008a60:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8008a64:	2b00      	cmp	r3, #0
 8008a66:	d0f0      	beq.n	8008a4a <HAL_RCCEx_PeriphCLKConfig+0x102>
 8008a68:	687b      	ldr	r3, [r7, #4]
 8008a6a:	681b      	ldr	r3, [r3, #0]
 8008a6c:	f003 0304 	and.w	r3, r3, #4
 8008a70:	2b00      	cmp	r3, #0
 8008a72:	d105      	bne.n	8008a80 <HAL_RCCEx_PeriphCLKConfig+0x138>
 8008a74:	687b      	ldr	r3, [r7, #4]
 8008a76:	681b      	ldr	r3, [r3, #0]
 8008a78:	f003 0308 	and.w	r3, r3, #8
 8008a7c:	2b00      	cmp	r3, #0
 8008a7e:	d079      	beq.n	8008b74 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8008a80:	4b52      	ldr	r3, [pc, #328]	; (8008bcc <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008a82:	2200      	movs	r2, #0
 8008a84:	601a      	str	r2, [r3, #0]
 8008a86:	f7fd f887 	bl	8005b98 <HAL_GetTick>
 8008a8a:	6178      	str	r0, [r7, #20]
 8008a8c:	e008      	b.n	8008aa0 <HAL_RCCEx_PeriphCLKConfig+0x158>
 8008a8e:	f7fd f883 	bl	8005b98 <HAL_GetTick>
 8008a92:	4602      	mov	r2, r0
 8008a94:	697b      	ldr	r3, [r7, #20]
 8008a96:	1ad3      	subs	r3, r2, r3
 8008a98:	2b02      	cmp	r3, #2
 8008a9a:	d901      	bls.n	8008aa0 <HAL_RCCEx_PeriphCLKConfig+0x158>
 8008a9c:	2303      	movs	r3, #3
 8008a9e:	e107      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8008aa0:	4b49      	ldr	r3, [pc, #292]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008aa2:	681b      	ldr	r3, [r3, #0]
 8008aa4:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8008aa8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008aac:	d0ef      	beq.n	8008a8e <HAL_RCCEx_PeriphCLKConfig+0x146>
 8008aae:	687b      	ldr	r3, [r7, #4]
 8008ab0:	681b      	ldr	r3, [r3, #0]
 8008ab2:	f003 0304 	and.w	r3, r3, #4
 8008ab6:	2b00      	cmp	r3, #0
 8008ab8:	d020      	beq.n	8008afc <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8008aba:	4b43      	ldr	r3, [pc, #268]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008abc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008ac0:	0f1b      	lsrs	r3, r3, #28
 8008ac2:	f003 0307 	and.w	r3, r3, #7
 8008ac6:	613b      	str	r3, [r7, #16]
 8008ac8:	687b      	ldr	r3, [r7, #4]
 8008aca:	691b      	ldr	r3, [r3, #16]
 8008acc:	019a      	lsls	r2, r3, #6
 8008ace:	687b      	ldr	r3, [r7, #4]
 8008ad0:	695b      	ldr	r3, [r3, #20]
 8008ad2:	061b      	lsls	r3, r3, #24
 8008ad4:	431a      	orrs	r2, r3
 8008ad6:	693b      	ldr	r3, [r7, #16]
 8008ad8:	071b      	lsls	r3, r3, #28
 8008ada:	493b      	ldr	r1, [pc, #236]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008adc:	4313      	orrs	r3, r2
 8008ade:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8008ae2:	4b39      	ldr	r3, [pc, #228]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008ae4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8008ae8:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8008aec:	687b      	ldr	r3, [r7, #4]
 8008aee:	6a1b      	ldr	r3, [r3, #32]
 8008af0:	3b01      	subs	r3, #1
 8008af2:	021b      	lsls	r3, r3, #8
 8008af4:	4934      	ldr	r1, [pc, #208]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008af6:	4313      	orrs	r3, r2
 8008af8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8008afc:	687b      	ldr	r3, [r7, #4]
 8008afe:	681b      	ldr	r3, [r3, #0]
 8008b00:	f003 0308 	and.w	r3, r3, #8
 8008b04:	2b00      	cmp	r3, #0
 8008b06:	d01e      	beq.n	8008b46 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
 8008b08:	4b2f      	ldr	r3, [pc, #188]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008b0a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008b0e:	0e1b      	lsrs	r3, r3, #24
 8008b10:	f003 030f 	and.w	r3, r3, #15
 8008b14:	613b      	str	r3, [r7, #16]
 8008b16:	687b      	ldr	r3, [r7, #4]
 8008b18:	691b      	ldr	r3, [r3, #16]
 8008b1a:	019a      	lsls	r2, r3, #6
 8008b1c:	693b      	ldr	r3, [r7, #16]
 8008b1e:	061b      	lsls	r3, r3, #24
 8008b20:	431a      	orrs	r2, r3
 8008b22:	687b      	ldr	r3, [r7, #4]
 8008b24:	699b      	ldr	r3, [r3, #24]
 8008b26:	071b      	lsls	r3, r3, #28
 8008b28:	4927      	ldr	r1, [pc, #156]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008b2a:	4313      	orrs	r3, r2
 8008b2c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8008b30:	4b25      	ldr	r3, [pc, #148]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008b32:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8008b36:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8008b3a:	687b      	ldr	r3, [r7, #4]
 8008b3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008b3e:	4922      	ldr	r1, [pc, #136]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008b40:	4313      	orrs	r3, r2
 8008b42:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8008b46:	4b21      	ldr	r3, [pc, #132]	; (8008bcc <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8008b48:	2201      	movs	r2, #1
 8008b4a:	601a      	str	r2, [r3, #0]
 8008b4c:	f7fd f824 	bl	8005b98 <HAL_GetTick>
 8008b50:	6178      	str	r0, [r7, #20]
 8008b52:	e008      	b.n	8008b66 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8008b54:	f7fd f820 	bl	8005b98 <HAL_GetTick>
 8008b58:	4602      	mov	r2, r0
 8008b5a:	697b      	ldr	r3, [r7, #20]
 8008b5c:	1ad3      	subs	r3, r2, r3
 8008b5e:	2b02      	cmp	r3, #2
 8008b60:	d901      	bls.n	8008b66 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8008b62:	2303      	movs	r3, #3
 8008b64:	e0a4      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8008b66:	4b18      	ldr	r3, [pc, #96]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008b68:	681b      	ldr	r3, [r3, #0]
 8008b6a:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8008b6e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008b72:	d1ef      	bne.n	8008b54 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 8008b74:	687b      	ldr	r3, [r7, #4]
 8008b76:	681b      	ldr	r3, [r3, #0]
 8008b78:	f003 0320 	and.w	r3, r3, #32
 8008b7c:	2b00      	cmp	r3, #0
 8008b7e:	f000 808b 	beq.w	8008c98 <HAL_RCCEx_PeriphCLKConfig+0x350>
 8008b82:	2300      	movs	r3, #0
 8008b84:	60fb      	str	r3, [r7, #12]
 8008b86:	4b10      	ldr	r3, [pc, #64]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008b88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008b8a:	4a0f      	ldr	r2, [pc, #60]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008b8c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008b90:	6413      	str	r3, [r2, #64]	; 0x40
 8008b92:	4b0d      	ldr	r3, [pc, #52]	; (8008bc8 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8008b94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008b96:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008b9a:	60fb      	str	r3, [r7, #12]
 8008b9c:	68fb      	ldr	r3, [r7, #12]
 8008b9e:	4b0c      	ldr	r3, [pc, #48]	; (8008bd0 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8008ba0:	681b      	ldr	r3, [r3, #0]
 8008ba2:	4a0b      	ldr	r2, [pc, #44]	; (8008bd0 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8008ba4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008ba8:	6013      	str	r3, [r2, #0]
 8008baa:	f7fc fff5 	bl	8005b98 <HAL_GetTick>
 8008bae:	6178      	str	r0, [r7, #20]
 8008bb0:	e010      	b.n	8008bd4 <HAL_RCCEx_PeriphCLKConfig+0x28c>
 8008bb2:	f7fc fff1 	bl	8005b98 <HAL_GetTick>
 8008bb6:	4602      	mov	r2, r0
 8008bb8:	697b      	ldr	r3, [r7, #20]
 8008bba:	1ad3      	subs	r3, r2, r3
 8008bbc:	2b02      	cmp	r3, #2
 8008bbe:	d909      	bls.n	8008bd4 <HAL_RCCEx_PeriphCLKConfig+0x28c>
 8008bc0:	2303      	movs	r3, #3
 8008bc2:	e075      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8008bc4:	42470068 	.word	0x42470068
 8008bc8:	40023800 	.word	0x40023800
 8008bcc:	42470070 	.word	0x42470070
 8008bd0:	40007000 	.word	0x40007000
 8008bd4:	4b38      	ldr	r3, [pc, #224]	; (8008cb8 <HAL_RCCEx_PeriphCLKConfig+0x370>)
 8008bd6:	681b      	ldr	r3, [r3, #0]
 8008bd8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008bdc:	2b00      	cmp	r3, #0
 8008bde:	d0e8      	beq.n	8008bb2 <HAL_RCCEx_PeriphCLKConfig+0x26a>
 8008be0:	4b36      	ldr	r3, [pc, #216]	; (8008cbc <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8008be2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008be4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008be8:	613b      	str	r3, [r7, #16]
 8008bea:	693b      	ldr	r3, [r7, #16]
 8008bec:	2b00      	cmp	r3, #0
 8008bee:	d02f      	beq.n	8008c50 <HAL_RCCEx_PeriphCLKConfig+0x308>
 8008bf0:	687b      	ldr	r3, [r7, #4]
 8008bf2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008bf4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008bf8:	693a      	ldr	r2, [r7, #16]
 8008bfa:	429a      	cmp	r2, r3
 8008bfc:	d028      	beq.n	8008c50 <HAL_RCCEx_PeriphCLKConfig+0x308>
 8008bfe:	4b2f      	ldr	r3, [pc, #188]	; (8008cbc <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8008c00:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008c02:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008c06:	613b      	str	r3, [r7, #16]
 8008c08:	4b2d      	ldr	r3, [pc, #180]	; (8008cc0 <HAL_RCCEx_PeriphCLKConfig+0x378>)
 8008c0a:	2201      	movs	r2, #1
 8008c0c:	601a      	str	r2, [r3, #0]
 8008c0e:	4b2c      	ldr	r3, [pc, #176]	; (8008cc0 <HAL_RCCEx_PeriphCLKConfig+0x378>)
 8008c10:	2200      	movs	r2, #0
 8008c12:	601a      	str	r2, [r3, #0]
 8008c14:	4a29      	ldr	r2, [pc, #164]	; (8008cbc <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8008c16:	693b      	ldr	r3, [r7, #16]
 8008c18:	6713      	str	r3, [r2, #112]	; 0x70
 8008c1a:	4b28      	ldr	r3, [pc, #160]	; (8008cbc <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8008c1c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008c1e:	f003 0301 	and.w	r3, r3, #1
 8008c22:	2b01      	cmp	r3, #1
 8008c24:	d114      	bne.n	8008c50 <HAL_RCCEx_PeriphCLKConfig+0x308>
 8008c26:	f7fc ffb7 	bl	8005b98 <HAL_GetTick>
 8008c2a:	6178      	str	r0, [r7, #20]
 8008c2c:	e00a      	b.n	8008c44 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8008c2e:	f7fc ffb3 	bl	8005b98 <HAL_GetTick>
 8008c32:	4602      	mov	r2, r0
 8008c34:	697b      	ldr	r3, [r7, #20]
 8008c36:	1ad3      	subs	r3, r2, r3
 8008c38:	f241 3288 	movw	r2, #5000	; 0x1388
 8008c3c:	4293      	cmp	r3, r2
 8008c3e:	d901      	bls.n	8008c44 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8008c40:	2303      	movs	r3, #3
 8008c42:	e035      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8008c44:	4b1d      	ldr	r3, [pc, #116]	; (8008cbc <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8008c46:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008c48:	f003 0302 	and.w	r3, r3, #2
 8008c4c:	2b00      	cmp	r3, #0
 8008c4e:	d0ee      	beq.n	8008c2e <HAL_RCCEx_PeriphCLKConfig+0x2e6>
 8008c50:	687b      	ldr	r3, [r7, #4]
 8008c52:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008c54:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008c58:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008c5c:	d10d      	bne.n	8008c7a <HAL_RCCEx_PeriphCLKConfig+0x332>
 8008c5e:	4b17      	ldr	r3, [pc, #92]	; (8008cbc <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8008c60:	689b      	ldr	r3, [r3, #8]
 8008c62:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8008c66:	687b      	ldr	r3, [r7, #4]
 8008c68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008c6a:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8008c6e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008c72:	4912      	ldr	r1, [pc, #72]	; (8008cbc <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8008c74:	4313      	orrs	r3, r2
 8008c76:	608b      	str	r3, [r1, #8]
 8008c78:	e005      	b.n	8008c86 <HAL_RCCEx_PeriphCLKConfig+0x33e>
 8008c7a:	4b10      	ldr	r3, [pc, #64]	; (8008cbc <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8008c7c:	689b      	ldr	r3, [r3, #8]
 8008c7e:	4a0f      	ldr	r2, [pc, #60]	; (8008cbc <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8008c80:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8008c84:	6093      	str	r3, [r2, #8]
 8008c86:	4b0d      	ldr	r3, [pc, #52]	; (8008cbc <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8008c88:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8008c8a:	687b      	ldr	r3, [r7, #4]
 8008c8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008c8e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008c92:	490a      	ldr	r1, [pc, #40]	; (8008cbc <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8008c94:	4313      	orrs	r3, r2
 8008c96:	670b      	str	r3, [r1, #112]	; 0x70
 8008c98:	687b      	ldr	r3, [r7, #4]
 8008c9a:	681b      	ldr	r3, [r3, #0]
 8008c9c:	f003 0310 	and.w	r3, r3, #16
 8008ca0:	2b00      	cmp	r3, #0
 8008ca2:	d004      	beq.n	8008cae <HAL_RCCEx_PeriphCLKConfig+0x366>
 8008ca4:	687b      	ldr	r3, [r7, #4]
 8008ca6:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 8008caa:	4b06      	ldr	r3, [pc, #24]	; (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x37c>)
 8008cac:	601a      	str	r2, [r3, #0]
 8008cae:	2300      	movs	r3, #0
 8008cb0:	4618      	mov	r0, r3
 8008cb2:	3718      	adds	r7, #24
 8008cb4:	46bd      	mov	sp, r7
 8008cb6:	bd80      	pop	{r7, pc}
 8008cb8:	40007000 	.word	0x40007000
 8008cbc:	40023800 	.word	0x40023800
 8008cc0:	42470e40 	.word	0x42470e40
 8008cc4:	424711e0 	.word	0x424711e0

08008cc8 <HAL_SDRAM_Init>:
 8008cc8:	b580      	push	{r7, lr}
 8008cca:	b082      	sub	sp, #8
 8008ccc:	af00      	add	r7, sp, #0
 8008cce:	6078      	str	r0, [r7, #4]
 8008cd0:	6039      	str	r1, [r7, #0]
 8008cd2:	687b      	ldr	r3, [r7, #4]
 8008cd4:	2b00      	cmp	r3, #0
 8008cd6:	d101      	bne.n	8008cdc <HAL_SDRAM_Init+0x14>
 8008cd8:	2301      	movs	r3, #1
 8008cda:	e025      	b.n	8008d28 <HAL_SDRAM_Init+0x60>
 8008cdc:	687b      	ldr	r3, [r7, #4]
 8008cde:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8008ce2:	b2db      	uxtb	r3, r3
 8008ce4:	2b00      	cmp	r3, #0
 8008ce6:	d106      	bne.n	8008cf6 <HAL_SDRAM_Init+0x2e>
 8008ce8:	687b      	ldr	r3, [r7, #4]
 8008cea:	2200      	movs	r2, #0
 8008cec:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 8008cf0:	6878      	ldr	r0, [r7, #4]
 8008cf2:	f000 f81d 	bl	8008d30 <HAL_SDRAM_MspInit>
 8008cf6:	687b      	ldr	r3, [r7, #4]
 8008cf8:	2202      	movs	r2, #2
 8008cfa:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8008cfe:	687b      	ldr	r3, [r7, #4]
 8008d00:	681a      	ldr	r2, [r3, #0]
 8008d02:	687b      	ldr	r3, [r7, #4]
 8008d04:	3304      	adds	r3, #4
 8008d06:	4619      	mov	r1, r3
 8008d08:	4610      	mov	r0, r2
 8008d0a:	f000 ff0f 	bl	8009b2c <FMC_SDRAM_Init>
 8008d0e:	687b      	ldr	r3, [r7, #4]
 8008d10:	6818      	ldr	r0, [r3, #0]
 8008d12:	687b      	ldr	r3, [r7, #4]
 8008d14:	685b      	ldr	r3, [r3, #4]
 8008d16:	461a      	mov	r2, r3
 8008d18:	6839      	ldr	r1, [r7, #0]
 8008d1a:	f000 ff7a 	bl	8009c12 <FMC_SDRAM_Timing_Init>
 8008d1e:	687b      	ldr	r3, [r7, #4]
 8008d20:	2201      	movs	r2, #1
 8008d22:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8008d26:	2300      	movs	r3, #0
 8008d28:	4618      	mov	r0, r3
 8008d2a:	3708      	adds	r7, #8
 8008d2c:	46bd      	mov	sp, r7
 8008d2e:	bd80      	pop	{r7, pc}

08008d30 <HAL_SDRAM_MspInit>:
 8008d30:	b480      	push	{r7}
 8008d32:	b083      	sub	sp, #12
 8008d34:	af00      	add	r7, sp, #0
 8008d36:	6078      	str	r0, [r7, #4]
 8008d38:	bf00      	nop
 8008d3a:	370c      	adds	r7, #12
 8008d3c:	46bd      	mov	sp, r7
 8008d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d42:	4770      	bx	lr

08008d44 <HAL_SDRAM_SendCommand>:
 8008d44:	b580      	push	{r7, lr}
 8008d46:	b084      	sub	sp, #16
 8008d48:	af00      	add	r7, sp, #0
 8008d4a:	60f8      	str	r0, [r7, #12]
 8008d4c:	60b9      	str	r1, [r7, #8]
 8008d4e:	607a      	str	r2, [r7, #4]
 8008d50:	68fb      	ldr	r3, [r7, #12]
 8008d52:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8008d56:	b2db      	uxtb	r3, r3
 8008d58:	2b02      	cmp	r3, #2
 8008d5a:	d101      	bne.n	8008d60 <HAL_SDRAM_SendCommand+0x1c>
 8008d5c:	2302      	movs	r3, #2
 8008d5e:	e018      	b.n	8008d92 <HAL_SDRAM_SendCommand+0x4e>
 8008d60:	68fb      	ldr	r3, [r7, #12]
 8008d62:	2202      	movs	r2, #2
 8008d64:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8008d68:	68fb      	ldr	r3, [r7, #12]
 8008d6a:	681b      	ldr	r3, [r3, #0]
 8008d6c:	687a      	ldr	r2, [r7, #4]
 8008d6e:	68b9      	ldr	r1, [r7, #8]
 8008d70:	4618      	mov	r0, r3
 8008d72:	f000 ffcd 	bl	8009d10 <FMC_SDRAM_SendCommand>
 8008d76:	68bb      	ldr	r3, [r7, #8]
 8008d78:	681b      	ldr	r3, [r3, #0]
 8008d7a:	2b02      	cmp	r3, #2
 8008d7c:	d104      	bne.n	8008d88 <HAL_SDRAM_SendCommand+0x44>
 8008d7e:	68fb      	ldr	r3, [r7, #12]
 8008d80:	2205      	movs	r2, #5
 8008d82:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8008d86:	e003      	b.n	8008d90 <HAL_SDRAM_SendCommand+0x4c>
 8008d88:	68fb      	ldr	r3, [r7, #12]
 8008d8a:	2201      	movs	r2, #1
 8008d8c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8008d90:	2300      	movs	r3, #0
 8008d92:	4618      	mov	r0, r3
 8008d94:	3710      	adds	r7, #16
 8008d96:	46bd      	mov	sp, r7
 8008d98:	bd80      	pop	{r7, pc}

08008d9a <HAL_SDRAM_ProgramRefreshRate>:
 8008d9a:	b580      	push	{r7, lr}
 8008d9c:	b082      	sub	sp, #8
 8008d9e:	af00      	add	r7, sp, #0
 8008da0:	6078      	str	r0, [r7, #4]
 8008da2:	6039      	str	r1, [r7, #0]
 8008da4:	687b      	ldr	r3, [r7, #4]
 8008da6:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8008daa:	b2db      	uxtb	r3, r3
 8008dac:	2b02      	cmp	r3, #2
 8008dae:	d101      	bne.n	8008db4 <HAL_SDRAM_ProgramRefreshRate+0x1a>
 8008db0:	2302      	movs	r3, #2
 8008db2:	e00e      	b.n	8008dd2 <HAL_SDRAM_ProgramRefreshRate+0x38>
 8008db4:	687b      	ldr	r3, [r7, #4]
 8008db6:	2202      	movs	r2, #2
 8008db8:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8008dbc:	687b      	ldr	r3, [r7, #4]
 8008dbe:	681b      	ldr	r3, [r3, #0]
 8008dc0:	6839      	ldr	r1, [r7, #0]
 8008dc2:	4618      	mov	r0, r3
 8008dc4:	f000 ffe0 	bl	8009d88 <FMC_SDRAM_ProgramRefreshRate>
 8008dc8:	687b      	ldr	r3, [r7, #4]
 8008dca:	2201      	movs	r2, #1
 8008dcc:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8008dd0:	2300      	movs	r3, #0
 8008dd2:	4618      	mov	r0, r3
 8008dd4:	3708      	adds	r7, #8
 8008dd6:	46bd      	mov	sp, r7
 8008dd8:	bd80      	pop	{r7, pc}

08008dda <HAL_SPI_Init>:
 8008dda:	b580      	push	{r7, lr}
 8008ddc:	b082      	sub	sp, #8
 8008dde:	af00      	add	r7, sp, #0
 8008de0:	6078      	str	r0, [r7, #4]
 8008de2:	687b      	ldr	r3, [r7, #4]
 8008de4:	2b00      	cmp	r3, #0
 8008de6:	d101      	bne.n	8008dec <HAL_SPI_Init+0x12>
 8008de8:	2301      	movs	r3, #1
 8008dea:	e05d      	b.n	8008ea8 <HAL_SPI_Init+0xce>
 8008dec:	687b      	ldr	r3, [r7, #4]
 8008dee:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008df2:	b2db      	uxtb	r3, r3
 8008df4:	2b00      	cmp	r3, #0
 8008df6:	d106      	bne.n	8008e06 <HAL_SPI_Init+0x2c>
 8008df8:	687b      	ldr	r3, [r7, #4]
 8008dfa:	2200      	movs	r2, #0
 8008dfc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008e00:	6878      	ldr	r0, [r7, #4]
 8008e02:	f000 f87d 	bl	8008f00 <HAL_SPI_MspInit>
 8008e06:	687b      	ldr	r3, [r7, #4]
 8008e08:	2202      	movs	r2, #2
 8008e0a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008e0e:	687b      	ldr	r3, [r7, #4]
 8008e10:	681b      	ldr	r3, [r3, #0]
 8008e12:	681a      	ldr	r2, [r3, #0]
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	681b      	ldr	r3, [r3, #0]
 8008e18:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008e1c:	601a      	str	r2, [r3, #0]
 8008e1e:	687b      	ldr	r3, [r7, #4]
 8008e20:	685a      	ldr	r2, [r3, #4]
 8008e22:	687b      	ldr	r3, [r7, #4]
 8008e24:	689b      	ldr	r3, [r3, #8]
 8008e26:	431a      	orrs	r2, r3
 8008e28:	687b      	ldr	r3, [r7, #4]
 8008e2a:	68db      	ldr	r3, [r3, #12]
 8008e2c:	431a      	orrs	r2, r3
 8008e2e:	687b      	ldr	r3, [r7, #4]
 8008e30:	691b      	ldr	r3, [r3, #16]
 8008e32:	431a      	orrs	r2, r3
 8008e34:	687b      	ldr	r3, [r7, #4]
 8008e36:	695b      	ldr	r3, [r3, #20]
 8008e38:	431a      	orrs	r2, r3
 8008e3a:	687b      	ldr	r3, [r7, #4]
 8008e3c:	699b      	ldr	r3, [r3, #24]
 8008e3e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8008e42:	431a      	orrs	r2, r3
 8008e44:	687b      	ldr	r3, [r7, #4]
 8008e46:	69db      	ldr	r3, [r3, #28]
 8008e48:	431a      	orrs	r2, r3
 8008e4a:	687b      	ldr	r3, [r7, #4]
 8008e4c:	6a1b      	ldr	r3, [r3, #32]
 8008e4e:	ea42 0103 	orr.w	r1, r2, r3
 8008e52:	687b      	ldr	r3, [r7, #4]
 8008e54:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008e56:	687b      	ldr	r3, [r7, #4]
 8008e58:	681b      	ldr	r3, [r3, #0]
 8008e5a:	430a      	orrs	r2, r1
 8008e5c:	601a      	str	r2, [r3, #0]
 8008e5e:	687b      	ldr	r3, [r7, #4]
 8008e60:	699b      	ldr	r3, [r3, #24]
 8008e62:	0c1b      	lsrs	r3, r3, #16
 8008e64:	f003 0104 	and.w	r1, r3, #4
 8008e68:	687b      	ldr	r3, [r7, #4]
 8008e6a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008e6c:	687b      	ldr	r3, [r7, #4]
 8008e6e:	681b      	ldr	r3, [r3, #0]
 8008e70:	430a      	orrs	r2, r1
 8008e72:	605a      	str	r2, [r3, #4]
 8008e74:	687b      	ldr	r3, [r7, #4]
 8008e76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008e78:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008e7c:	d104      	bne.n	8008e88 <HAL_SPI_Init+0xae>
 8008e7e:	687b      	ldr	r3, [r7, #4]
 8008e80:	681b      	ldr	r3, [r3, #0]
 8008e82:	687a      	ldr	r2, [r7, #4]
 8008e84:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8008e86:	611a      	str	r2, [r3, #16]
 8008e88:	687b      	ldr	r3, [r7, #4]
 8008e8a:	681b      	ldr	r3, [r3, #0]
 8008e8c:	69da      	ldr	r2, [r3, #28]
 8008e8e:	687b      	ldr	r3, [r7, #4]
 8008e90:	681b      	ldr	r3, [r3, #0]
 8008e92:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008e96:	61da      	str	r2, [r3, #28]
 8008e98:	687b      	ldr	r3, [r7, #4]
 8008e9a:	2200      	movs	r2, #0
 8008e9c:	655a      	str	r2, [r3, #84]	; 0x54
 8008e9e:	687b      	ldr	r3, [r7, #4]
 8008ea0:	2201      	movs	r2, #1
 8008ea2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008ea6:	2300      	movs	r3, #0
 8008ea8:	4618      	mov	r0, r3
 8008eaa:	3708      	adds	r7, #8
 8008eac:	46bd      	mov	sp, r7
 8008eae:	bd80      	pop	{r7, pc}

08008eb0 <HAL_SPI_DeInit>:
 8008eb0:	b580      	push	{r7, lr}
 8008eb2:	b082      	sub	sp, #8
 8008eb4:	af00      	add	r7, sp, #0
 8008eb6:	6078      	str	r0, [r7, #4]
 8008eb8:	687b      	ldr	r3, [r7, #4]
 8008eba:	2b00      	cmp	r3, #0
 8008ebc:	d101      	bne.n	8008ec2 <HAL_SPI_DeInit+0x12>
 8008ebe:	2301      	movs	r3, #1
 8008ec0:	e01a      	b.n	8008ef8 <HAL_SPI_DeInit+0x48>
 8008ec2:	687b      	ldr	r3, [r7, #4]
 8008ec4:	2202      	movs	r2, #2
 8008ec6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008eca:	687b      	ldr	r3, [r7, #4]
 8008ecc:	681b      	ldr	r3, [r3, #0]
 8008ece:	681a      	ldr	r2, [r3, #0]
 8008ed0:	687b      	ldr	r3, [r7, #4]
 8008ed2:	681b      	ldr	r3, [r3, #0]
 8008ed4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008ed8:	601a      	str	r2, [r3, #0]
 8008eda:	6878      	ldr	r0, [r7, #4]
 8008edc:	f000 f81a 	bl	8008f14 <HAL_SPI_MspDeInit>
 8008ee0:	687b      	ldr	r3, [r7, #4]
 8008ee2:	2200      	movs	r2, #0
 8008ee4:	655a      	str	r2, [r3, #84]	; 0x54
 8008ee6:	687b      	ldr	r3, [r7, #4]
 8008ee8:	2200      	movs	r2, #0
 8008eea:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008eee:	687b      	ldr	r3, [r7, #4]
 8008ef0:	2200      	movs	r2, #0
 8008ef2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008ef6:	2300      	movs	r3, #0
 8008ef8:	4618      	mov	r0, r3
 8008efa:	3708      	adds	r7, #8
 8008efc:	46bd      	mov	sp, r7
 8008efe:	bd80      	pop	{r7, pc}

08008f00 <HAL_SPI_MspInit>:
 8008f00:	b480      	push	{r7}
 8008f02:	b083      	sub	sp, #12
 8008f04:	af00      	add	r7, sp, #0
 8008f06:	6078      	str	r0, [r7, #4]
 8008f08:	bf00      	nop
 8008f0a:	370c      	adds	r7, #12
 8008f0c:	46bd      	mov	sp, r7
 8008f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f12:	4770      	bx	lr

08008f14 <HAL_SPI_MspDeInit>:
 8008f14:	b480      	push	{r7}
 8008f16:	b083      	sub	sp, #12
 8008f18:	af00      	add	r7, sp, #0
 8008f1a:	6078      	str	r0, [r7, #4]
 8008f1c:	bf00      	nop
 8008f1e:	370c      	adds	r7, #12
 8008f20:	46bd      	mov	sp, r7
 8008f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f26:	4770      	bx	lr

08008f28 <HAL_SPI_Transmit>:
 8008f28:	b580      	push	{r7, lr}
 8008f2a:	b088      	sub	sp, #32
 8008f2c:	af00      	add	r7, sp, #0
 8008f2e:	60f8      	str	r0, [r7, #12]
 8008f30:	60b9      	str	r1, [r7, #8]
 8008f32:	603b      	str	r3, [r7, #0]
 8008f34:	4613      	mov	r3, r2
 8008f36:	80fb      	strh	r3, [r7, #6]
 8008f38:	2300      	movs	r3, #0
 8008f3a:	77fb      	strb	r3, [r7, #31]
 8008f3c:	68fb      	ldr	r3, [r7, #12]
 8008f3e:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8008f42:	2b01      	cmp	r3, #1
 8008f44:	d101      	bne.n	8008f4a <HAL_SPI_Transmit+0x22>
 8008f46:	2302      	movs	r3, #2
 8008f48:	e140      	b.n	80091cc <HAL_SPI_Transmit+0x2a4>
 8008f4a:	68fb      	ldr	r3, [r7, #12]
 8008f4c:	2201      	movs	r2, #1
 8008f4e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008f52:	f7fc fe21 	bl	8005b98 <HAL_GetTick>
 8008f56:	61b8      	str	r0, [r7, #24]
 8008f58:	88fb      	ldrh	r3, [r7, #6]
 8008f5a:	82fb      	strh	r3, [r7, #22]
 8008f5c:	68fb      	ldr	r3, [r7, #12]
 8008f5e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008f62:	b2db      	uxtb	r3, r3
 8008f64:	2b01      	cmp	r3, #1
 8008f66:	d002      	beq.n	8008f6e <HAL_SPI_Transmit+0x46>
 8008f68:	2302      	movs	r3, #2
 8008f6a:	77fb      	strb	r3, [r7, #31]
 8008f6c:	e125      	b.n	80091ba <HAL_SPI_Transmit+0x292>
 8008f6e:	68bb      	ldr	r3, [r7, #8]
 8008f70:	2b00      	cmp	r3, #0
 8008f72:	d002      	beq.n	8008f7a <HAL_SPI_Transmit+0x52>
 8008f74:	88fb      	ldrh	r3, [r7, #6]
 8008f76:	2b00      	cmp	r3, #0
 8008f78:	d102      	bne.n	8008f80 <HAL_SPI_Transmit+0x58>
 8008f7a:	2301      	movs	r3, #1
 8008f7c:	77fb      	strb	r3, [r7, #31]
 8008f7e:	e11c      	b.n	80091ba <HAL_SPI_Transmit+0x292>
 8008f80:	68fb      	ldr	r3, [r7, #12]
 8008f82:	2203      	movs	r2, #3
 8008f84:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008f88:	68fb      	ldr	r3, [r7, #12]
 8008f8a:	2200      	movs	r2, #0
 8008f8c:	655a      	str	r2, [r3, #84]	; 0x54
 8008f8e:	68fb      	ldr	r3, [r7, #12]
 8008f90:	68ba      	ldr	r2, [r7, #8]
 8008f92:	631a      	str	r2, [r3, #48]	; 0x30
 8008f94:	68fb      	ldr	r3, [r7, #12]
 8008f96:	88fa      	ldrh	r2, [r7, #6]
 8008f98:	869a      	strh	r2, [r3, #52]	; 0x34
 8008f9a:	68fb      	ldr	r3, [r7, #12]
 8008f9c:	88fa      	ldrh	r2, [r7, #6]
 8008f9e:	86da      	strh	r2, [r3, #54]	; 0x36
 8008fa0:	68fb      	ldr	r3, [r7, #12]
 8008fa2:	2200      	movs	r2, #0
 8008fa4:	639a      	str	r2, [r3, #56]	; 0x38
 8008fa6:	68fb      	ldr	r3, [r7, #12]
 8008fa8:	2200      	movs	r2, #0
 8008faa:	879a      	strh	r2, [r3, #60]	; 0x3c
 8008fac:	68fb      	ldr	r3, [r7, #12]
 8008fae:	2200      	movs	r2, #0
 8008fb0:	87da      	strh	r2, [r3, #62]	; 0x3e
 8008fb2:	68fb      	ldr	r3, [r7, #12]
 8008fb4:	2200      	movs	r2, #0
 8008fb6:	645a      	str	r2, [r3, #68]	; 0x44
 8008fb8:	68fb      	ldr	r3, [r7, #12]
 8008fba:	2200      	movs	r2, #0
 8008fbc:	641a      	str	r2, [r3, #64]	; 0x40
 8008fbe:	68fb      	ldr	r3, [r7, #12]
 8008fc0:	689b      	ldr	r3, [r3, #8]
 8008fc2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008fc6:	d107      	bne.n	8008fd8 <HAL_SPI_Transmit+0xb0>
 8008fc8:	68fb      	ldr	r3, [r7, #12]
 8008fca:	681b      	ldr	r3, [r3, #0]
 8008fcc:	681a      	ldr	r2, [r3, #0]
 8008fce:	68fb      	ldr	r3, [r7, #12]
 8008fd0:	681b      	ldr	r3, [r3, #0]
 8008fd2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8008fd6:	601a      	str	r2, [r3, #0]
 8008fd8:	68fb      	ldr	r3, [r7, #12]
 8008fda:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008fdc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008fe0:	d10f      	bne.n	8009002 <HAL_SPI_Transmit+0xda>
 8008fe2:	68fb      	ldr	r3, [r7, #12]
 8008fe4:	681b      	ldr	r3, [r3, #0]
 8008fe6:	681a      	ldr	r2, [r3, #0]
 8008fe8:	68fb      	ldr	r3, [r7, #12]
 8008fea:	681b      	ldr	r3, [r3, #0]
 8008fec:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008ff0:	601a      	str	r2, [r3, #0]
 8008ff2:	68fb      	ldr	r3, [r7, #12]
 8008ff4:	681b      	ldr	r3, [r3, #0]
 8008ff6:	681a      	ldr	r2, [r3, #0]
 8008ff8:	68fb      	ldr	r3, [r7, #12]
 8008ffa:	681b      	ldr	r3, [r3, #0]
 8008ffc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8009000:	601a      	str	r2, [r3, #0]
 8009002:	68fb      	ldr	r3, [r7, #12]
 8009004:	681b      	ldr	r3, [r3, #0]
 8009006:	681b      	ldr	r3, [r3, #0]
 8009008:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800900c:	2b40      	cmp	r3, #64	; 0x40
 800900e:	d007      	beq.n	8009020 <HAL_SPI_Transmit+0xf8>
 8009010:	68fb      	ldr	r3, [r7, #12]
 8009012:	681b      	ldr	r3, [r3, #0]
 8009014:	681a      	ldr	r2, [r3, #0]
 8009016:	68fb      	ldr	r3, [r7, #12]
 8009018:	681b      	ldr	r3, [r3, #0]
 800901a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800901e:	601a      	str	r2, [r3, #0]
 8009020:	68fb      	ldr	r3, [r7, #12]
 8009022:	68db      	ldr	r3, [r3, #12]
 8009024:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009028:	d14b      	bne.n	80090c2 <HAL_SPI_Transmit+0x19a>
 800902a:	68fb      	ldr	r3, [r7, #12]
 800902c:	685b      	ldr	r3, [r3, #4]
 800902e:	2b00      	cmp	r3, #0
 8009030:	d002      	beq.n	8009038 <HAL_SPI_Transmit+0x110>
 8009032:	8afb      	ldrh	r3, [r7, #22]
 8009034:	2b01      	cmp	r3, #1
 8009036:	d13e      	bne.n	80090b6 <HAL_SPI_Transmit+0x18e>
 8009038:	68fb      	ldr	r3, [r7, #12]
 800903a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800903c:	881a      	ldrh	r2, [r3, #0]
 800903e:	68fb      	ldr	r3, [r7, #12]
 8009040:	681b      	ldr	r3, [r3, #0]
 8009042:	60da      	str	r2, [r3, #12]
 8009044:	68fb      	ldr	r3, [r7, #12]
 8009046:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009048:	1c9a      	adds	r2, r3, #2
 800904a:	68fb      	ldr	r3, [r7, #12]
 800904c:	631a      	str	r2, [r3, #48]	; 0x30
 800904e:	68fb      	ldr	r3, [r7, #12]
 8009050:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009052:	b29b      	uxth	r3, r3
 8009054:	3b01      	subs	r3, #1
 8009056:	b29a      	uxth	r2, r3
 8009058:	68fb      	ldr	r3, [r7, #12]
 800905a:	86da      	strh	r2, [r3, #54]	; 0x36
 800905c:	e02b      	b.n	80090b6 <HAL_SPI_Transmit+0x18e>
 800905e:	68fb      	ldr	r3, [r7, #12]
 8009060:	681b      	ldr	r3, [r3, #0]
 8009062:	689b      	ldr	r3, [r3, #8]
 8009064:	f003 0302 	and.w	r3, r3, #2
 8009068:	2b02      	cmp	r3, #2
 800906a:	d112      	bne.n	8009092 <HAL_SPI_Transmit+0x16a>
 800906c:	68fb      	ldr	r3, [r7, #12]
 800906e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009070:	881a      	ldrh	r2, [r3, #0]
 8009072:	68fb      	ldr	r3, [r7, #12]
 8009074:	681b      	ldr	r3, [r3, #0]
 8009076:	60da      	str	r2, [r3, #12]
 8009078:	68fb      	ldr	r3, [r7, #12]
 800907a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800907c:	1c9a      	adds	r2, r3, #2
 800907e:	68fb      	ldr	r3, [r7, #12]
 8009080:	631a      	str	r2, [r3, #48]	; 0x30
 8009082:	68fb      	ldr	r3, [r7, #12]
 8009084:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009086:	b29b      	uxth	r3, r3
 8009088:	3b01      	subs	r3, #1
 800908a:	b29a      	uxth	r2, r3
 800908c:	68fb      	ldr	r3, [r7, #12]
 800908e:	86da      	strh	r2, [r3, #54]	; 0x36
 8009090:	e011      	b.n	80090b6 <HAL_SPI_Transmit+0x18e>
 8009092:	f7fc fd81 	bl	8005b98 <HAL_GetTick>
 8009096:	4602      	mov	r2, r0
 8009098:	69bb      	ldr	r3, [r7, #24]
 800909a:	1ad3      	subs	r3, r2, r3
 800909c:	683a      	ldr	r2, [r7, #0]
 800909e:	429a      	cmp	r2, r3
 80090a0:	d803      	bhi.n	80090aa <HAL_SPI_Transmit+0x182>
 80090a2:	683b      	ldr	r3, [r7, #0]
 80090a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80090a8:	d102      	bne.n	80090b0 <HAL_SPI_Transmit+0x188>
 80090aa:	683b      	ldr	r3, [r7, #0]
 80090ac:	2b00      	cmp	r3, #0
 80090ae:	d102      	bne.n	80090b6 <HAL_SPI_Transmit+0x18e>
 80090b0:	2303      	movs	r3, #3
 80090b2:	77fb      	strb	r3, [r7, #31]
 80090b4:	e081      	b.n	80091ba <HAL_SPI_Transmit+0x292>
 80090b6:	68fb      	ldr	r3, [r7, #12]
 80090b8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80090ba:	b29b      	uxth	r3, r3
 80090bc:	2b00      	cmp	r3, #0
 80090be:	d1ce      	bne.n	800905e <HAL_SPI_Transmit+0x136>
 80090c0:	e04c      	b.n	800915c <HAL_SPI_Transmit+0x234>
 80090c2:	68fb      	ldr	r3, [r7, #12]
 80090c4:	685b      	ldr	r3, [r3, #4]
 80090c6:	2b00      	cmp	r3, #0
 80090c8:	d002      	beq.n	80090d0 <HAL_SPI_Transmit+0x1a8>
 80090ca:	8afb      	ldrh	r3, [r7, #22]
 80090cc:	2b01      	cmp	r3, #1
 80090ce:	d140      	bne.n	8009152 <HAL_SPI_Transmit+0x22a>
 80090d0:	68fb      	ldr	r3, [r7, #12]
 80090d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80090d4:	68fb      	ldr	r3, [r7, #12]
 80090d6:	681b      	ldr	r3, [r3, #0]
 80090d8:	330c      	adds	r3, #12
 80090da:	7812      	ldrb	r2, [r2, #0]
 80090dc:	701a      	strb	r2, [r3, #0]
 80090de:	68fb      	ldr	r3, [r7, #12]
 80090e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80090e2:	1c5a      	adds	r2, r3, #1
 80090e4:	68fb      	ldr	r3, [r7, #12]
 80090e6:	631a      	str	r2, [r3, #48]	; 0x30
 80090e8:	68fb      	ldr	r3, [r7, #12]
 80090ea:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80090ec:	b29b      	uxth	r3, r3
 80090ee:	3b01      	subs	r3, #1
 80090f0:	b29a      	uxth	r2, r3
 80090f2:	68fb      	ldr	r3, [r7, #12]
 80090f4:	86da      	strh	r2, [r3, #54]	; 0x36
 80090f6:	e02c      	b.n	8009152 <HAL_SPI_Transmit+0x22a>
 80090f8:	68fb      	ldr	r3, [r7, #12]
 80090fa:	681b      	ldr	r3, [r3, #0]
 80090fc:	689b      	ldr	r3, [r3, #8]
 80090fe:	f003 0302 	and.w	r3, r3, #2
 8009102:	2b02      	cmp	r3, #2
 8009104:	d113      	bne.n	800912e <HAL_SPI_Transmit+0x206>
 8009106:	68fb      	ldr	r3, [r7, #12]
 8009108:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800910a:	68fb      	ldr	r3, [r7, #12]
 800910c:	681b      	ldr	r3, [r3, #0]
 800910e:	330c      	adds	r3, #12
 8009110:	7812      	ldrb	r2, [r2, #0]
 8009112:	701a      	strb	r2, [r3, #0]
 8009114:	68fb      	ldr	r3, [r7, #12]
 8009116:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009118:	1c5a      	adds	r2, r3, #1
 800911a:	68fb      	ldr	r3, [r7, #12]
 800911c:	631a      	str	r2, [r3, #48]	; 0x30
 800911e:	68fb      	ldr	r3, [r7, #12]
 8009120:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009122:	b29b      	uxth	r3, r3
 8009124:	3b01      	subs	r3, #1
 8009126:	b29a      	uxth	r2, r3
 8009128:	68fb      	ldr	r3, [r7, #12]
 800912a:	86da      	strh	r2, [r3, #54]	; 0x36
 800912c:	e011      	b.n	8009152 <HAL_SPI_Transmit+0x22a>
 800912e:	f7fc fd33 	bl	8005b98 <HAL_GetTick>
 8009132:	4602      	mov	r2, r0
 8009134:	69bb      	ldr	r3, [r7, #24]
 8009136:	1ad3      	subs	r3, r2, r3
 8009138:	683a      	ldr	r2, [r7, #0]
 800913a:	429a      	cmp	r2, r3
 800913c:	d803      	bhi.n	8009146 <HAL_SPI_Transmit+0x21e>
 800913e:	683b      	ldr	r3, [r7, #0]
 8009140:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009144:	d102      	bne.n	800914c <HAL_SPI_Transmit+0x224>
 8009146:	683b      	ldr	r3, [r7, #0]
 8009148:	2b00      	cmp	r3, #0
 800914a:	d102      	bne.n	8009152 <HAL_SPI_Transmit+0x22a>
 800914c:	2303      	movs	r3, #3
 800914e:	77fb      	strb	r3, [r7, #31]
 8009150:	e033      	b.n	80091ba <HAL_SPI_Transmit+0x292>
 8009152:	68fb      	ldr	r3, [r7, #12]
 8009154:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009156:	b29b      	uxth	r3, r3
 8009158:	2b00      	cmp	r3, #0
 800915a:	d1cd      	bne.n	80090f8 <HAL_SPI_Transmit+0x1d0>
 800915c:	68fb      	ldr	r3, [r7, #12]
 800915e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009160:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009164:	d107      	bne.n	8009176 <HAL_SPI_Transmit+0x24e>
 8009166:	68fb      	ldr	r3, [r7, #12]
 8009168:	681b      	ldr	r3, [r3, #0]
 800916a:	681a      	ldr	r2, [r3, #0]
 800916c:	68fb      	ldr	r3, [r7, #12]
 800916e:	681b      	ldr	r3, [r3, #0]
 8009170:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009174:	601a      	str	r2, [r3, #0]
 8009176:	69ba      	ldr	r2, [r7, #24]
 8009178:	6839      	ldr	r1, [r7, #0]
 800917a:	68f8      	ldr	r0, [r7, #12]
 800917c:	f000 fc94 	bl	8009aa8 <SPI_EndRxTxTransaction>
 8009180:	4603      	mov	r3, r0
 8009182:	2b00      	cmp	r3, #0
 8009184:	d002      	beq.n	800918c <HAL_SPI_Transmit+0x264>
 8009186:	68fb      	ldr	r3, [r7, #12]
 8009188:	2220      	movs	r2, #32
 800918a:	655a      	str	r2, [r3, #84]	; 0x54
 800918c:	68fb      	ldr	r3, [r7, #12]
 800918e:	689b      	ldr	r3, [r3, #8]
 8009190:	2b00      	cmp	r3, #0
 8009192:	d10a      	bne.n	80091aa <HAL_SPI_Transmit+0x282>
 8009194:	2300      	movs	r3, #0
 8009196:	613b      	str	r3, [r7, #16]
 8009198:	68fb      	ldr	r3, [r7, #12]
 800919a:	681b      	ldr	r3, [r3, #0]
 800919c:	68db      	ldr	r3, [r3, #12]
 800919e:	613b      	str	r3, [r7, #16]
 80091a0:	68fb      	ldr	r3, [r7, #12]
 80091a2:	681b      	ldr	r3, [r3, #0]
 80091a4:	689b      	ldr	r3, [r3, #8]
 80091a6:	613b      	str	r3, [r7, #16]
 80091a8:	693b      	ldr	r3, [r7, #16]
 80091aa:	68fb      	ldr	r3, [r7, #12]
 80091ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80091ae:	2b00      	cmp	r3, #0
 80091b0:	d002      	beq.n	80091b8 <HAL_SPI_Transmit+0x290>
 80091b2:	2301      	movs	r3, #1
 80091b4:	77fb      	strb	r3, [r7, #31]
 80091b6:	e000      	b.n	80091ba <HAL_SPI_Transmit+0x292>
 80091b8:	bf00      	nop
 80091ba:	68fb      	ldr	r3, [r7, #12]
 80091bc:	2201      	movs	r2, #1
 80091be:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80091c2:	68fb      	ldr	r3, [r7, #12]
 80091c4:	2200      	movs	r2, #0
 80091c6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80091ca:	7ffb      	ldrb	r3, [r7, #31]
 80091cc:	4618      	mov	r0, r3
 80091ce:	3720      	adds	r7, #32
 80091d0:	46bd      	mov	sp, r7
 80091d2:	bd80      	pop	{r7, pc}

080091d4 <HAL_SPI_Receive>:
 80091d4:	b580      	push	{r7, lr}
 80091d6:	b088      	sub	sp, #32
 80091d8:	af02      	add	r7, sp, #8
 80091da:	60f8      	str	r0, [r7, #12]
 80091dc:	60b9      	str	r1, [r7, #8]
 80091de:	603b      	str	r3, [r7, #0]
 80091e0:	4613      	mov	r3, r2
 80091e2:	80fb      	strh	r3, [r7, #6]
 80091e4:	2300      	movs	r3, #0
 80091e6:	75fb      	strb	r3, [r7, #23]
 80091e8:	68fb      	ldr	r3, [r7, #12]
 80091ea:	685b      	ldr	r3, [r3, #4]
 80091ec:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80091f0:	d112      	bne.n	8009218 <HAL_SPI_Receive+0x44>
 80091f2:	68fb      	ldr	r3, [r7, #12]
 80091f4:	689b      	ldr	r3, [r3, #8]
 80091f6:	2b00      	cmp	r3, #0
 80091f8:	d10e      	bne.n	8009218 <HAL_SPI_Receive+0x44>
 80091fa:	68fb      	ldr	r3, [r7, #12]
 80091fc:	2204      	movs	r2, #4
 80091fe:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009202:	88fa      	ldrh	r2, [r7, #6]
 8009204:	683b      	ldr	r3, [r7, #0]
 8009206:	9300      	str	r3, [sp, #0]
 8009208:	4613      	mov	r3, r2
 800920a:	68ba      	ldr	r2, [r7, #8]
 800920c:	68b9      	ldr	r1, [r7, #8]
 800920e:	68f8      	ldr	r0, [r7, #12]
 8009210:	f000 f95f 	bl	80094d2 <HAL_SPI_TransmitReceive>
 8009214:	4603      	mov	r3, r0
 8009216:	e158      	b.n	80094ca <HAL_SPI_Receive+0x2f6>
 8009218:	68fb      	ldr	r3, [r7, #12]
 800921a:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800921e:	2b01      	cmp	r3, #1
 8009220:	d101      	bne.n	8009226 <HAL_SPI_Receive+0x52>
 8009222:	2302      	movs	r3, #2
 8009224:	e151      	b.n	80094ca <HAL_SPI_Receive+0x2f6>
 8009226:	68fb      	ldr	r3, [r7, #12]
 8009228:	2201      	movs	r2, #1
 800922a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800922e:	f7fc fcb3 	bl	8005b98 <HAL_GetTick>
 8009232:	6138      	str	r0, [r7, #16]
 8009234:	68fb      	ldr	r3, [r7, #12]
 8009236:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800923a:	b2db      	uxtb	r3, r3
 800923c:	2b01      	cmp	r3, #1
 800923e:	d002      	beq.n	8009246 <HAL_SPI_Receive+0x72>
 8009240:	2302      	movs	r3, #2
 8009242:	75fb      	strb	r3, [r7, #23]
 8009244:	e138      	b.n	80094b8 <HAL_SPI_Receive+0x2e4>
 8009246:	68bb      	ldr	r3, [r7, #8]
 8009248:	2b00      	cmp	r3, #0
 800924a:	d002      	beq.n	8009252 <HAL_SPI_Receive+0x7e>
 800924c:	88fb      	ldrh	r3, [r7, #6]
 800924e:	2b00      	cmp	r3, #0
 8009250:	d102      	bne.n	8009258 <HAL_SPI_Receive+0x84>
 8009252:	2301      	movs	r3, #1
 8009254:	75fb      	strb	r3, [r7, #23]
 8009256:	e12f      	b.n	80094b8 <HAL_SPI_Receive+0x2e4>
 8009258:	68fb      	ldr	r3, [r7, #12]
 800925a:	2204      	movs	r2, #4
 800925c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009260:	68fb      	ldr	r3, [r7, #12]
 8009262:	2200      	movs	r2, #0
 8009264:	655a      	str	r2, [r3, #84]	; 0x54
 8009266:	68fb      	ldr	r3, [r7, #12]
 8009268:	68ba      	ldr	r2, [r7, #8]
 800926a:	639a      	str	r2, [r3, #56]	; 0x38
 800926c:	68fb      	ldr	r3, [r7, #12]
 800926e:	88fa      	ldrh	r2, [r7, #6]
 8009270:	879a      	strh	r2, [r3, #60]	; 0x3c
 8009272:	68fb      	ldr	r3, [r7, #12]
 8009274:	88fa      	ldrh	r2, [r7, #6]
 8009276:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009278:	68fb      	ldr	r3, [r7, #12]
 800927a:	2200      	movs	r2, #0
 800927c:	631a      	str	r2, [r3, #48]	; 0x30
 800927e:	68fb      	ldr	r3, [r7, #12]
 8009280:	2200      	movs	r2, #0
 8009282:	869a      	strh	r2, [r3, #52]	; 0x34
 8009284:	68fb      	ldr	r3, [r7, #12]
 8009286:	2200      	movs	r2, #0
 8009288:	86da      	strh	r2, [r3, #54]	; 0x36
 800928a:	68fb      	ldr	r3, [r7, #12]
 800928c:	2200      	movs	r2, #0
 800928e:	641a      	str	r2, [r3, #64]	; 0x40
 8009290:	68fb      	ldr	r3, [r7, #12]
 8009292:	2200      	movs	r2, #0
 8009294:	645a      	str	r2, [r3, #68]	; 0x44
 8009296:	68fb      	ldr	r3, [r7, #12]
 8009298:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800929a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800929e:	d116      	bne.n	80092ce <HAL_SPI_Receive+0xfa>
 80092a0:	68fb      	ldr	r3, [r7, #12]
 80092a2:	681b      	ldr	r3, [r3, #0]
 80092a4:	681a      	ldr	r2, [r3, #0]
 80092a6:	68fb      	ldr	r3, [r7, #12]
 80092a8:	681b      	ldr	r3, [r3, #0]
 80092aa:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80092ae:	601a      	str	r2, [r3, #0]
 80092b0:	68fb      	ldr	r3, [r7, #12]
 80092b2:	681b      	ldr	r3, [r3, #0]
 80092b4:	681a      	ldr	r2, [r3, #0]
 80092b6:	68fb      	ldr	r3, [r7, #12]
 80092b8:	681b      	ldr	r3, [r3, #0]
 80092ba:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80092be:	601a      	str	r2, [r3, #0]
 80092c0:	68fb      	ldr	r3, [r7, #12]
 80092c2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80092c4:	b29b      	uxth	r3, r3
 80092c6:	3b01      	subs	r3, #1
 80092c8:	b29a      	uxth	r2, r3
 80092ca:	68fb      	ldr	r3, [r7, #12]
 80092cc:	87da      	strh	r2, [r3, #62]	; 0x3e
 80092ce:	68fb      	ldr	r3, [r7, #12]
 80092d0:	689b      	ldr	r3, [r3, #8]
 80092d2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80092d6:	d107      	bne.n	80092e8 <HAL_SPI_Receive+0x114>
 80092d8:	68fb      	ldr	r3, [r7, #12]
 80092da:	681b      	ldr	r3, [r3, #0]
 80092dc:	681a      	ldr	r2, [r3, #0]
 80092de:	68fb      	ldr	r3, [r7, #12]
 80092e0:	681b      	ldr	r3, [r3, #0]
 80092e2:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80092e6:	601a      	str	r2, [r3, #0]
 80092e8:	68fb      	ldr	r3, [r7, #12]
 80092ea:	681b      	ldr	r3, [r3, #0]
 80092ec:	681b      	ldr	r3, [r3, #0]
 80092ee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80092f2:	2b40      	cmp	r3, #64	; 0x40
 80092f4:	d007      	beq.n	8009306 <HAL_SPI_Receive+0x132>
 80092f6:	68fb      	ldr	r3, [r7, #12]
 80092f8:	681b      	ldr	r3, [r3, #0]
 80092fa:	681a      	ldr	r2, [r3, #0]
 80092fc:	68fb      	ldr	r3, [r7, #12]
 80092fe:	681b      	ldr	r3, [r3, #0]
 8009300:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009304:	601a      	str	r2, [r3, #0]
 8009306:	68fb      	ldr	r3, [r7, #12]
 8009308:	68db      	ldr	r3, [r3, #12]
 800930a:	2b00      	cmp	r3, #0
 800930c:	d162      	bne.n	80093d4 <HAL_SPI_Receive+0x200>
 800930e:	e02e      	b.n	800936e <HAL_SPI_Receive+0x19a>
 8009310:	68fb      	ldr	r3, [r7, #12]
 8009312:	681b      	ldr	r3, [r3, #0]
 8009314:	689b      	ldr	r3, [r3, #8]
 8009316:	f003 0301 	and.w	r3, r3, #1
 800931a:	2b01      	cmp	r3, #1
 800931c:	d115      	bne.n	800934a <HAL_SPI_Receive+0x176>
 800931e:	68fb      	ldr	r3, [r7, #12]
 8009320:	681b      	ldr	r3, [r3, #0]
 8009322:	f103 020c 	add.w	r2, r3, #12
 8009326:	68fb      	ldr	r3, [r7, #12]
 8009328:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800932a:	7812      	ldrb	r2, [r2, #0]
 800932c:	b2d2      	uxtb	r2, r2
 800932e:	701a      	strb	r2, [r3, #0]
 8009330:	68fb      	ldr	r3, [r7, #12]
 8009332:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009334:	1c5a      	adds	r2, r3, #1
 8009336:	68fb      	ldr	r3, [r7, #12]
 8009338:	639a      	str	r2, [r3, #56]	; 0x38
 800933a:	68fb      	ldr	r3, [r7, #12]
 800933c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800933e:	b29b      	uxth	r3, r3
 8009340:	3b01      	subs	r3, #1
 8009342:	b29a      	uxth	r2, r3
 8009344:	68fb      	ldr	r3, [r7, #12]
 8009346:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009348:	e011      	b.n	800936e <HAL_SPI_Receive+0x19a>
 800934a:	f7fc fc25 	bl	8005b98 <HAL_GetTick>
 800934e:	4602      	mov	r2, r0
 8009350:	693b      	ldr	r3, [r7, #16]
 8009352:	1ad3      	subs	r3, r2, r3
 8009354:	683a      	ldr	r2, [r7, #0]
 8009356:	429a      	cmp	r2, r3
 8009358:	d803      	bhi.n	8009362 <HAL_SPI_Receive+0x18e>
 800935a:	683b      	ldr	r3, [r7, #0]
 800935c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009360:	d102      	bne.n	8009368 <HAL_SPI_Receive+0x194>
 8009362:	683b      	ldr	r3, [r7, #0]
 8009364:	2b00      	cmp	r3, #0
 8009366:	d102      	bne.n	800936e <HAL_SPI_Receive+0x19a>
 8009368:	2303      	movs	r3, #3
 800936a:	75fb      	strb	r3, [r7, #23]
 800936c:	e0a4      	b.n	80094b8 <HAL_SPI_Receive+0x2e4>
 800936e:	68fb      	ldr	r3, [r7, #12]
 8009370:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009372:	b29b      	uxth	r3, r3
 8009374:	2b00      	cmp	r3, #0
 8009376:	d1cb      	bne.n	8009310 <HAL_SPI_Receive+0x13c>
 8009378:	e031      	b.n	80093de <HAL_SPI_Receive+0x20a>
 800937a:	68fb      	ldr	r3, [r7, #12]
 800937c:	681b      	ldr	r3, [r3, #0]
 800937e:	689b      	ldr	r3, [r3, #8]
 8009380:	f003 0301 	and.w	r3, r3, #1
 8009384:	2b01      	cmp	r3, #1
 8009386:	d113      	bne.n	80093b0 <HAL_SPI_Receive+0x1dc>
 8009388:	68fb      	ldr	r3, [r7, #12]
 800938a:	681b      	ldr	r3, [r3, #0]
 800938c:	68da      	ldr	r2, [r3, #12]
 800938e:	68fb      	ldr	r3, [r7, #12]
 8009390:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009392:	b292      	uxth	r2, r2
 8009394:	801a      	strh	r2, [r3, #0]
 8009396:	68fb      	ldr	r3, [r7, #12]
 8009398:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800939a:	1c9a      	adds	r2, r3, #2
 800939c:	68fb      	ldr	r3, [r7, #12]
 800939e:	639a      	str	r2, [r3, #56]	; 0x38
 80093a0:	68fb      	ldr	r3, [r7, #12]
 80093a2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80093a4:	b29b      	uxth	r3, r3
 80093a6:	3b01      	subs	r3, #1
 80093a8:	b29a      	uxth	r2, r3
 80093aa:	68fb      	ldr	r3, [r7, #12]
 80093ac:	87da      	strh	r2, [r3, #62]	; 0x3e
 80093ae:	e011      	b.n	80093d4 <HAL_SPI_Receive+0x200>
 80093b0:	f7fc fbf2 	bl	8005b98 <HAL_GetTick>
 80093b4:	4602      	mov	r2, r0
 80093b6:	693b      	ldr	r3, [r7, #16]
 80093b8:	1ad3      	subs	r3, r2, r3
 80093ba:	683a      	ldr	r2, [r7, #0]
 80093bc:	429a      	cmp	r2, r3
 80093be:	d803      	bhi.n	80093c8 <HAL_SPI_Receive+0x1f4>
 80093c0:	683b      	ldr	r3, [r7, #0]
 80093c2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80093c6:	d102      	bne.n	80093ce <HAL_SPI_Receive+0x1fa>
 80093c8:	683b      	ldr	r3, [r7, #0]
 80093ca:	2b00      	cmp	r3, #0
 80093cc:	d102      	bne.n	80093d4 <HAL_SPI_Receive+0x200>
 80093ce:	2303      	movs	r3, #3
 80093d0:	75fb      	strb	r3, [r7, #23]
 80093d2:	e071      	b.n	80094b8 <HAL_SPI_Receive+0x2e4>
 80093d4:	68fb      	ldr	r3, [r7, #12]
 80093d6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80093d8:	b29b      	uxth	r3, r3
 80093da:	2b00      	cmp	r3, #0
 80093dc:	d1cd      	bne.n	800937a <HAL_SPI_Receive+0x1a6>
 80093de:	68fb      	ldr	r3, [r7, #12]
 80093e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80093e2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80093e6:	d142      	bne.n	800946e <HAL_SPI_Receive+0x29a>
 80093e8:	68fb      	ldr	r3, [r7, #12]
 80093ea:	681b      	ldr	r3, [r3, #0]
 80093ec:	681a      	ldr	r2, [r3, #0]
 80093ee:	68fb      	ldr	r3, [r7, #12]
 80093f0:	681b      	ldr	r3, [r3, #0]
 80093f2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80093f6:	601a      	str	r2, [r3, #0]
 80093f8:	693b      	ldr	r3, [r7, #16]
 80093fa:	9300      	str	r3, [sp, #0]
 80093fc:	683b      	ldr	r3, [r7, #0]
 80093fe:	2201      	movs	r2, #1
 8009400:	2101      	movs	r1, #1
 8009402:	68f8      	ldr	r0, [r7, #12]
 8009404:	f000 fa81 	bl	800990a <SPI_WaitFlagStateUntilTimeout>
 8009408:	4603      	mov	r3, r0
 800940a:	2b00      	cmp	r3, #0
 800940c:	d002      	beq.n	8009414 <HAL_SPI_Receive+0x240>
 800940e:	2303      	movs	r3, #3
 8009410:	75fb      	strb	r3, [r7, #23]
 8009412:	e051      	b.n	80094b8 <HAL_SPI_Receive+0x2e4>
 8009414:	68fb      	ldr	r3, [r7, #12]
 8009416:	68db      	ldr	r3, [r3, #12]
 8009418:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800941c:	d107      	bne.n	800942e <HAL_SPI_Receive+0x25a>
 800941e:	68fb      	ldr	r3, [r7, #12]
 8009420:	681b      	ldr	r3, [r3, #0]
 8009422:	68da      	ldr	r2, [r3, #12]
 8009424:	68fb      	ldr	r3, [r7, #12]
 8009426:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009428:	b292      	uxth	r2, r2
 800942a:	801a      	strh	r2, [r3, #0]
 800942c:	e008      	b.n	8009440 <HAL_SPI_Receive+0x26c>
 800942e:	68fb      	ldr	r3, [r7, #12]
 8009430:	681b      	ldr	r3, [r3, #0]
 8009432:	f103 020c 	add.w	r2, r3, #12
 8009436:	68fb      	ldr	r3, [r7, #12]
 8009438:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800943a:	7812      	ldrb	r2, [r2, #0]
 800943c:	b2d2      	uxtb	r2, r2
 800943e:	701a      	strb	r2, [r3, #0]
 8009440:	693b      	ldr	r3, [r7, #16]
 8009442:	9300      	str	r3, [sp, #0]
 8009444:	683b      	ldr	r3, [r7, #0]
 8009446:	2201      	movs	r2, #1
 8009448:	2101      	movs	r1, #1
 800944a:	68f8      	ldr	r0, [r7, #12]
 800944c:	f000 fa5d 	bl	800990a <SPI_WaitFlagStateUntilTimeout>
 8009450:	4603      	mov	r3, r0
 8009452:	2b00      	cmp	r3, #0
 8009454:	d008      	beq.n	8009468 <HAL_SPI_Receive+0x294>
 8009456:	68fb      	ldr	r3, [r7, #12]
 8009458:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800945a:	f043 0202 	orr.w	r2, r3, #2
 800945e:	68fb      	ldr	r3, [r7, #12]
 8009460:	655a      	str	r2, [r3, #84]	; 0x54
 8009462:	2303      	movs	r3, #3
 8009464:	75fb      	strb	r3, [r7, #23]
 8009466:	e027      	b.n	80094b8 <HAL_SPI_Receive+0x2e4>
 8009468:	68fb      	ldr	r3, [r7, #12]
 800946a:	681b      	ldr	r3, [r3, #0]
 800946c:	68db      	ldr	r3, [r3, #12]
 800946e:	693a      	ldr	r2, [r7, #16]
 8009470:	6839      	ldr	r1, [r7, #0]
 8009472:	68f8      	ldr	r0, [r7, #12]
 8009474:	f000 fab3 	bl	80099de <SPI_EndRxTransaction>
 8009478:	4603      	mov	r3, r0
 800947a:	2b00      	cmp	r3, #0
 800947c:	d002      	beq.n	8009484 <HAL_SPI_Receive+0x2b0>
 800947e:	68fb      	ldr	r3, [r7, #12]
 8009480:	2220      	movs	r2, #32
 8009482:	655a      	str	r2, [r3, #84]	; 0x54
 8009484:	68fb      	ldr	r3, [r7, #12]
 8009486:	681b      	ldr	r3, [r3, #0]
 8009488:	689b      	ldr	r3, [r3, #8]
 800948a:	f003 0310 	and.w	r3, r3, #16
 800948e:	2b10      	cmp	r3, #16
 8009490:	d10a      	bne.n	80094a8 <HAL_SPI_Receive+0x2d4>
 8009492:	68fb      	ldr	r3, [r7, #12]
 8009494:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009496:	f043 0202 	orr.w	r2, r3, #2
 800949a:	68fb      	ldr	r3, [r7, #12]
 800949c:	655a      	str	r2, [r3, #84]	; 0x54
 800949e:	68fb      	ldr	r3, [r7, #12]
 80094a0:	681b      	ldr	r3, [r3, #0]
 80094a2:	f64f 72ef 	movw	r2, #65519	; 0xffef
 80094a6:	609a      	str	r2, [r3, #8]
 80094a8:	68fb      	ldr	r3, [r7, #12]
 80094aa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80094ac:	2b00      	cmp	r3, #0
 80094ae:	d002      	beq.n	80094b6 <HAL_SPI_Receive+0x2e2>
 80094b0:	2301      	movs	r3, #1
 80094b2:	75fb      	strb	r3, [r7, #23]
 80094b4:	e000      	b.n	80094b8 <HAL_SPI_Receive+0x2e4>
 80094b6:	bf00      	nop
 80094b8:	68fb      	ldr	r3, [r7, #12]
 80094ba:	2201      	movs	r2, #1
 80094bc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80094c0:	68fb      	ldr	r3, [r7, #12]
 80094c2:	2200      	movs	r2, #0
 80094c4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80094c8:	7dfb      	ldrb	r3, [r7, #23]
 80094ca:	4618      	mov	r0, r3
 80094cc:	3718      	adds	r7, #24
 80094ce:	46bd      	mov	sp, r7
 80094d0:	bd80      	pop	{r7, pc}

080094d2 <HAL_SPI_TransmitReceive>:
 80094d2:	b580      	push	{r7, lr}
 80094d4:	b08e      	sub	sp, #56	; 0x38
 80094d6:	af02      	add	r7, sp, #8
 80094d8:	60f8      	str	r0, [r7, #12]
 80094da:	60b9      	str	r1, [r7, #8]
 80094dc:	607a      	str	r2, [r7, #4]
 80094de:	807b      	strh	r3, [r7, #2]
 80094e0:	2301      	movs	r3, #1
 80094e2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80094e4:	2300      	movs	r3, #0
 80094e6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80094ea:	68fb      	ldr	r3, [r7, #12]
 80094ec:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80094f0:	2b01      	cmp	r3, #1
 80094f2:	d101      	bne.n	80094f8 <HAL_SPI_TransmitReceive+0x26>
 80094f4:	2302      	movs	r3, #2
 80094f6:	e1f6      	b.n	80098e6 <HAL_SPI_TransmitReceive+0x414>
 80094f8:	68fb      	ldr	r3, [r7, #12]
 80094fa:	2201      	movs	r2, #1
 80094fc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8009500:	f7fc fb4a 	bl	8005b98 <HAL_GetTick>
 8009504:	6278      	str	r0, [r7, #36]	; 0x24
 8009506:	68fb      	ldr	r3, [r7, #12]
 8009508:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800950c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8009510:	68fb      	ldr	r3, [r7, #12]
 8009512:	685b      	ldr	r3, [r3, #4]
 8009514:	61fb      	str	r3, [r7, #28]
 8009516:	887b      	ldrh	r3, [r7, #2]
 8009518:	837b      	strh	r3, [r7, #26]
 800951a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800951e:	2b01      	cmp	r3, #1
 8009520:	d00f      	beq.n	8009542 <HAL_SPI_TransmitReceive+0x70>
 8009522:	69fb      	ldr	r3, [r7, #28]
 8009524:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009528:	d107      	bne.n	800953a <HAL_SPI_TransmitReceive+0x68>
 800952a:	68fb      	ldr	r3, [r7, #12]
 800952c:	689b      	ldr	r3, [r3, #8]
 800952e:	2b00      	cmp	r3, #0
 8009530:	d103      	bne.n	800953a <HAL_SPI_TransmitReceive+0x68>
 8009532:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8009536:	2b04      	cmp	r3, #4
 8009538:	d003      	beq.n	8009542 <HAL_SPI_TransmitReceive+0x70>
 800953a:	2302      	movs	r3, #2
 800953c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009540:	e1c7      	b.n	80098d2 <HAL_SPI_TransmitReceive+0x400>
 8009542:	68bb      	ldr	r3, [r7, #8]
 8009544:	2b00      	cmp	r3, #0
 8009546:	d005      	beq.n	8009554 <HAL_SPI_TransmitReceive+0x82>
 8009548:	687b      	ldr	r3, [r7, #4]
 800954a:	2b00      	cmp	r3, #0
 800954c:	d002      	beq.n	8009554 <HAL_SPI_TransmitReceive+0x82>
 800954e:	887b      	ldrh	r3, [r7, #2]
 8009550:	2b00      	cmp	r3, #0
 8009552:	d103      	bne.n	800955c <HAL_SPI_TransmitReceive+0x8a>
 8009554:	2301      	movs	r3, #1
 8009556:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800955a:	e1ba      	b.n	80098d2 <HAL_SPI_TransmitReceive+0x400>
 800955c:	68fb      	ldr	r3, [r7, #12]
 800955e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8009562:	b2db      	uxtb	r3, r3
 8009564:	2b04      	cmp	r3, #4
 8009566:	d003      	beq.n	8009570 <HAL_SPI_TransmitReceive+0x9e>
 8009568:	68fb      	ldr	r3, [r7, #12]
 800956a:	2205      	movs	r2, #5
 800956c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009570:	68fb      	ldr	r3, [r7, #12]
 8009572:	2200      	movs	r2, #0
 8009574:	655a      	str	r2, [r3, #84]	; 0x54
 8009576:	68fb      	ldr	r3, [r7, #12]
 8009578:	687a      	ldr	r2, [r7, #4]
 800957a:	639a      	str	r2, [r3, #56]	; 0x38
 800957c:	68fb      	ldr	r3, [r7, #12]
 800957e:	887a      	ldrh	r2, [r7, #2]
 8009580:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009582:	68fb      	ldr	r3, [r7, #12]
 8009584:	887a      	ldrh	r2, [r7, #2]
 8009586:	879a      	strh	r2, [r3, #60]	; 0x3c
 8009588:	68fb      	ldr	r3, [r7, #12]
 800958a:	68ba      	ldr	r2, [r7, #8]
 800958c:	631a      	str	r2, [r3, #48]	; 0x30
 800958e:	68fb      	ldr	r3, [r7, #12]
 8009590:	887a      	ldrh	r2, [r7, #2]
 8009592:	86da      	strh	r2, [r3, #54]	; 0x36
 8009594:	68fb      	ldr	r3, [r7, #12]
 8009596:	887a      	ldrh	r2, [r7, #2]
 8009598:	869a      	strh	r2, [r3, #52]	; 0x34
 800959a:	68fb      	ldr	r3, [r7, #12]
 800959c:	2200      	movs	r2, #0
 800959e:	641a      	str	r2, [r3, #64]	; 0x40
 80095a0:	68fb      	ldr	r3, [r7, #12]
 80095a2:	2200      	movs	r2, #0
 80095a4:	645a      	str	r2, [r3, #68]	; 0x44
 80095a6:	68fb      	ldr	r3, [r7, #12]
 80095a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80095aa:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80095ae:	d10f      	bne.n	80095d0 <HAL_SPI_TransmitReceive+0xfe>
 80095b0:	68fb      	ldr	r3, [r7, #12]
 80095b2:	681b      	ldr	r3, [r3, #0]
 80095b4:	681a      	ldr	r2, [r3, #0]
 80095b6:	68fb      	ldr	r3, [r7, #12]
 80095b8:	681b      	ldr	r3, [r3, #0]
 80095ba:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80095be:	601a      	str	r2, [r3, #0]
 80095c0:	68fb      	ldr	r3, [r7, #12]
 80095c2:	681b      	ldr	r3, [r3, #0]
 80095c4:	681a      	ldr	r2, [r3, #0]
 80095c6:	68fb      	ldr	r3, [r7, #12]
 80095c8:	681b      	ldr	r3, [r3, #0]
 80095ca:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80095ce:	601a      	str	r2, [r3, #0]
 80095d0:	68fb      	ldr	r3, [r7, #12]
 80095d2:	681b      	ldr	r3, [r3, #0]
 80095d4:	681b      	ldr	r3, [r3, #0]
 80095d6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80095da:	2b40      	cmp	r3, #64	; 0x40
 80095dc:	d007      	beq.n	80095ee <HAL_SPI_TransmitReceive+0x11c>
 80095de:	68fb      	ldr	r3, [r7, #12]
 80095e0:	681b      	ldr	r3, [r3, #0]
 80095e2:	681a      	ldr	r2, [r3, #0]
 80095e4:	68fb      	ldr	r3, [r7, #12]
 80095e6:	681b      	ldr	r3, [r3, #0]
 80095e8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80095ec:	601a      	str	r2, [r3, #0]
 80095ee:	68fb      	ldr	r3, [r7, #12]
 80095f0:	68db      	ldr	r3, [r3, #12]
 80095f2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80095f6:	f040 808b 	bne.w	8009710 <HAL_SPI_TransmitReceive+0x23e>
 80095fa:	68fb      	ldr	r3, [r7, #12]
 80095fc:	685b      	ldr	r3, [r3, #4]
 80095fe:	2b00      	cmp	r3, #0
 8009600:	d002      	beq.n	8009608 <HAL_SPI_TransmitReceive+0x136>
 8009602:	8b7b      	ldrh	r3, [r7, #26]
 8009604:	2b01      	cmp	r3, #1
 8009606:	d178      	bne.n	80096fa <HAL_SPI_TransmitReceive+0x228>
 8009608:	68fb      	ldr	r3, [r7, #12]
 800960a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800960c:	881a      	ldrh	r2, [r3, #0]
 800960e:	68fb      	ldr	r3, [r7, #12]
 8009610:	681b      	ldr	r3, [r3, #0]
 8009612:	60da      	str	r2, [r3, #12]
 8009614:	68fb      	ldr	r3, [r7, #12]
 8009616:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009618:	1c9a      	adds	r2, r3, #2
 800961a:	68fb      	ldr	r3, [r7, #12]
 800961c:	631a      	str	r2, [r3, #48]	; 0x30
 800961e:	68fb      	ldr	r3, [r7, #12]
 8009620:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009622:	b29b      	uxth	r3, r3
 8009624:	3b01      	subs	r3, #1
 8009626:	b29a      	uxth	r2, r3
 8009628:	68fb      	ldr	r3, [r7, #12]
 800962a:	86da      	strh	r2, [r3, #54]	; 0x36
 800962c:	e065      	b.n	80096fa <HAL_SPI_TransmitReceive+0x228>
 800962e:	68fb      	ldr	r3, [r7, #12]
 8009630:	681b      	ldr	r3, [r3, #0]
 8009632:	689b      	ldr	r3, [r3, #8]
 8009634:	f003 0302 	and.w	r3, r3, #2
 8009638:	2b02      	cmp	r3, #2
 800963a:	d12d      	bne.n	8009698 <HAL_SPI_TransmitReceive+0x1c6>
 800963c:	68fb      	ldr	r3, [r7, #12]
 800963e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009640:	b29b      	uxth	r3, r3
 8009642:	2b00      	cmp	r3, #0
 8009644:	d028      	beq.n	8009698 <HAL_SPI_TransmitReceive+0x1c6>
 8009646:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009648:	2b01      	cmp	r3, #1
 800964a:	d125      	bne.n	8009698 <HAL_SPI_TransmitReceive+0x1c6>
 800964c:	68fb      	ldr	r3, [r7, #12]
 800964e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009650:	881a      	ldrh	r2, [r3, #0]
 8009652:	68fb      	ldr	r3, [r7, #12]
 8009654:	681b      	ldr	r3, [r3, #0]
 8009656:	60da      	str	r2, [r3, #12]
 8009658:	68fb      	ldr	r3, [r7, #12]
 800965a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800965c:	1c9a      	adds	r2, r3, #2
 800965e:	68fb      	ldr	r3, [r7, #12]
 8009660:	631a      	str	r2, [r3, #48]	; 0x30
 8009662:	68fb      	ldr	r3, [r7, #12]
 8009664:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009666:	b29b      	uxth	r3, r3
 8009668:	3b01      	subs	r3, #1
 800966a:	b29a      	uxth	r2, r3
 800966c:	68fb      	ldr	r3, [r7, #12]
 800966e:	86da      	strh	r2, [r3, #54]	; 0x36
 8009670:	2300      	movs	r3, #0
 8009672:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009674:	68fb      	ldr	r3, [r7, #12]
 8009676:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009678:	b29b      	uxth	r3, r3
 800967a:	2b00      	cmp	r3, #0
 800967c:	d10c      	bne.n	8009698 <HAL_SPI_TransmitReceive+0x1c6>
 800967e:	68fb      	ldr	r3, [r7, #12]
 8009680:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009682:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009686:	d107      	bne.n	8009698 <HAL_SPI_TransmitReceive+0x1c6>
 8009688:	68fb      	ldr	r3, [r7, #12]
 800968a:	681b      	ldr	r3, [r3, #0]
 800968c:	681a      	ldr	r2, [r3, #0]
 800968e:	68fb      	ldr	r3, [r7, #12]
 8009690:	681b      	ldr	r3, [r3, #0]
 8009692:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009696:	601a      	str	r2, [r3, #0]
 8009698:	68fb      	ldr	r3, [r7, #12]
 800969a:	681b      	ldr	r3, [r3, #0]
 800969c:	689b      	ldr	r3, [r3, #8]
 800969e:	f003 0301 	and.w	r3, r3, #1
 80096a2:	2b01      	cmp	r3, #1
 80096a4:	d119      	bne.n	80096da <HAL_SPI_TransmitReceive+0x208>
 80096a6:	68fb      	ldr	r3, [r7, #12]
 80096a8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80096aa:	b29b      	uxth	r3, r3
 80096ac:	2b00      	cmp	r3, #0
 80096ae:	d014      	beq.n	80096da <HAL_SPI_TransmitReceive+0x208>
 80096b0:	68fb      	ldr	r3, [r7, #12]
 80096b2:	681b      	ldr	r3, [r3, #0]
 80096b4:	68da      	ldr	r2, [r3, #12]
 80096b6:	68fb      	ldr	r3, [r7, #12]
 80096b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80096ba:	b292      	uxth	r2, r2
 80096bc:	801a      	strh	r2, [r3, #0]
 80096be:	68fb      	ldr	r3, [r7, #12]
 80096c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80096c2:	1c9a      	adds	r2, r3, #2
 80096c4:	68fb      	ldr	r3, [r7, #12]
 80096c6:	639a      	str	r2, [r3, #56]	; 0x38
 80096c8:	68fb      	ldr	r3, [r7, #12]
 80096ca:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80096cc:	b29b      	uxth	r3, r3
 80096ce:	3b01      	subs	r3, #1
 80096d0:	b29a      	uxth	r2, r3
 80096d2:	68fb      	ldr	r3, [r7, #12]
 80096d4:	87da      	strh	r2, [r3, #62]	; 0x3e
 80096d6:	2301      	movs	r3, #1
 80096d8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80096da:	f7fc fa5d 	bl	8005b98 <HAL_GetTick>
 80096de:	4602      	mov	r2, r0
 80096e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80096e2:	1ad3      	subs	r3, r2, r3
 80096e4:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80096e6:	429a      	cmp	r2, r3
 80096e8:	d807      	bhi.n	80096fa <HAL_SPI_TransmitReceive+0x228>
 80096ea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80096ec:	f1b3 3fff 	cmp.w	r3, #4294967295
 80096f0:	d003      	beq.n	80096fa <HAL_SPI_TransmitReceive+0x228>
 80096f2:	2303      	movs	r3, #3
 80096f4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80096f8:	e0eb      	b.n	80098d2 <HAL_SPI_TransmitReceive+0x400>
 80096fa:	68fb      	ldr	r3, [r7, #12]
 80096fc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80096fe:	b29b      	uxth	r3, r3
 8009700:	2b00      	cmp	r3, #0
 8009702:	d194      	bne.n	800962e <HAL_SPI_TransmitReceive+0x15c>
 8009704:	68fb      	ldr	r3, [r7, #12]
 8009706:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009708:	b29b      	uxth	r3, r3
 800970a:	2b00      	cmp	r3, #0
 800970c:	d18f      	bne.n	800962e <HAL_SPI_TransmitReceive+0x15c>
 800970e:	e08e      	b.n	800982e <HAL_SPI_TransmitReceive+0x35c>
 8009710:	68fb      	ldr	r3, [r7, #12]
 8009712:	685b      	ldr	r3, [r3, #4]
 8009714:	2b00      	cmp	r3, #0
 8009716:	d002      	beq.n	800971e <HAL_SPI_TransmitReceive+0x24c>
 8009718:	8b7b      	ldrh	r3, [r7, #26]
 800971a:	2b01      	cmp	r3, #1
 800971c:	d17d      	bne.n	800981a <HAL_SPI_TransmitReceive+0x348>
 800971e:	68fb      	ldr	r3, [r7, #12]
 8009720:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009722:	68fb      	ldr	r3, [r7, #12]
 8009724:	681b      	ldr	r3, [r3, #0]
 8009726:	330c      	adds	r3, #12
 8009728:	7812      	ldrb	r2, [r2, #0]
 800972a:	701a      	strb	r2, [r3, #0]
 800972c:	68fb      	ldr	r3, [r7, #12]
 800972e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009730:	1c5a      	adds	r2, r3, #1
 8009732:	68fb      	ldr	r3, [r7, #12]
 8009734:	631a      	str	r2, [r3, #48]	; 0x30
 8009736:	68fb      	ldr	r3, [r7, #12]
 8009738:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800973a:	b29b      	uxth	r3, r3
 800973c:	3b01      	subs	r3, #1
 800973e:	b29a      	uxth	r2, r3
 8009740:	68fb      	ldr	r3, [r7, #12]
 8009742:	86da      	strh	r2, [r3, #54]	; 0x36
 8009744:	e069      	b.n	800981a <HAL_SPI_TransmitReceive+0x348>
 8009746:	68fb      	ldr	r3, [r7, #12]
 8009748:	681b      	ldr	r3, [r3, #0]
 800974a:	689b      	ldr	r3, [r3, #8]
 800974c:	f003 0302 	and.w	r3, r3, #2
 8009750:	2b02      	cmp	r3, #2
 8009752:	d12e      	bne.n	80097b2 <HAL_SPI_TransmitReceive+0x2e0>
 8009754:	68fb      	ldr	r3, [r7, #12]
 8009756:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009758:	b29b      	uxth	r3, r3
 800975a:	2b00      	cmp	r3, #0
 800975c:	d029      	beq.n	80097b2 <HAL_SPI_TransmitReceive+0x2e0>
 800975e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009760:	2b01      	cmp	r3, #1
 8009762:	d126      	bne.n	80097b2 <HAL_SPI_TransmitReceive+0x2e0>
 8009764:	68fb      	ldr	r3, [r7, #12]
 8009766:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009768:	68fb      	ldr	r3, [r7, #12]
 800976a:	681b      	ldr	r3, [r3, #0]
 800976c:	330c      	adds	r3, #12
 800976e:	7812      	ldrb	r2, [r2, #0]
 8009770:	701a      	strb	r2, [r3, #0]
 8009772:	68fb      	ldr	r3, [r7, #12]
 8009774:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009776:	1c5a      	adds	r2, r3, #1
 8009778:	68fb      	ldr	r3, [r7, #12]
 800977a:	631a      	str	r2, [r3, #48]	; 0x30
 800977c:	68fb      	ldr	r3, [r7, #12]
 800977e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009780:	b29b      	uxth	r3, r3
 8009782:	3b01      	subs	r3, #1
 8009784:	b29a      	uxth	r2, r3
 8009786:	68fb      	ldr	r3, [r7, #12]
 8009788:	86da      	strh	r2, [r3, #54]	; 0x36
 800978a:	2300      	movs	r3, #0
 800978c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800978e:	68fb      	ldr	r3, [r7, #12]
 8009790:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8009792:	b29b      	uxth	r3, r3
 8009794:	2b00      	cmp	r3, #0
 8009796:	d10c      	bne.n	80097b2 <HAL_SPI_TransmitReceive+0x2e0>
 8009798:	68fb      	ldr	r3, [r7, #12]
 800979a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800979c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80097a0:	d107      	bne.n	80097b2 <HAL_SPI_TransmitReceive+0x2e0>
 80097a2:	68fb      	ldr	r3, [r7, #12]
 80097a4:	681b      	ldr	r3, [r3, #0]
 80097a6:	681a      	ldr	r2, [r3, #0]
 80097a8:	68fb      	ldr	r3, [r7, #12]
 80097aa:	681b      	ldr	r3, [r3, #0]
 80097ac:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80097b0:	601a      	str	r2, [r3, #0]
 80097b2:	68fb      	ldr	r3, [r7, #12]
 80097b4:	681b      	ldr	r3, [r3, #0]
 80097b6:	689b      	ldr	r3, [r3, #8]
 80097b8:	f003 0301 	and.w	r3, r3, #1
 80097bc:	2b01      	cmp	r3, #1
 80097be:	d119      	bne.n	80097f4 <HAL_SPI_TransmitReceive+0x322>
 80097c0:	68fb      	ldr	r3, [r7, #12]
 80097c2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80097c4:	b29b      	uxth	r3, r3
 80097c6:	2b00      	cmp	r3, #0
 80097c8:	d014      	beq.n	80097f4 <HAL_SPI_TransmitReceive+0x322>
 80097ca:	68fb      	ldr	r3, [r7, #12]
 80097cc:	681b      	ldr	r3, [r3, #0]
 80097ce:	68da      	ldr	r2, [r3, #12]
 80097d0:	68fb      	ldr	r3, [r7, #12]
 80097d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80097d4:	b2d2      	uxtb	r2, r2
 80097d6:	701a      	strb	r2, [r3, #0]
 80097d8:	68fb      	ldr	r3, [r7, #12]
 80097da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80097dc:	1c5a      	adds	r2, r3, #1
 80097de:	68fb      	ldr	r3, [r7, #12]
 80097e0:	639a      	str	r2, [r3, #56]	; 0x38
 80097e2:	68fb      	ldr	r3, [r7, #12]
 80097e4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80097e6:	b29b      	uxth	r3, r3
 80097e8:	3b01      	subs	r3, #1
 80097ea:	b29a      	uxth	r2, r3
 80097ec:	68fb      	ldr	r3, [r7, #12]
 80097ee:	87da      	strh	r2, [r3, #62]	; 0x3e
 80097f0:	2301      	movs	r3, #1
 80097f2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80097f4:	f7fc f9d0 	bl	8005b98 <HAL_GetTick>
 80097f8:	4602      	mov	r2, r0
 80097fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80097fc:	1ad3      	subs	r3, r2, r3
 80097fe:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8009800:	429a      	cmp	r2, r3
 8009802:	d803      	bhi.n	800980c <HAL_SPI_TransmitReceive+0x33a>
 8009804:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009806:	f1b3 3fff 	cmp.w	r3, #4294967295
 800980a:	d102      	bne.n	8009812 <HAL_SPI_TransmitReceive+0x340>
 800980c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800980e:	2b00      	cmp	r3, #0
 8009810:	d103      	bne.n	800981a <HAL_SPI_TransmitReceive+0x348>
 8009812:	2303      	movs	r3, #3
 8009814:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009818:	e05b      	b.n	80098d2 <HAL_SPI_TransmitReceive+0x400>
 800981a:	68fb      	ldr	r3, [r7, #12]
 800981c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800981e:	b29b      	uxth	r3, r3
 8009820:	2b00      	cmp	r3, #0
 8009822:	d190      	bne.n	8009746 <HAL_SPI_TransmitReceive+0x274>
 8009824:	68fb      	ldr	r3, [r7, #12]
 8009826:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8009828:	b29b      	uxth	r3, r3
 800982a:	2b00      	cmp	r3, #0
 800982c:	d18b      	bne.n	8009746 <HAL_SPI_TransmitReceive+0x274>
 800982e:	68fb      	ldr	r3, [r7, #12]
 8009830:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009832:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009836:	d117      	bne.n	8009868 <HAL_SPI_TransmitReceive+0x396>
 8009838:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800983a:	9300      	str	r3, [sp, #0]
 800983c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800983e:	2201      	movs	r2, #1
 8009840:	2101      	movs	r1, #1
 8009842:	68f8      	ldr	r0, [r7, #12]
 8009844:	f000 f861 	bl	800990a <SPI_WaitFlagStateUntilTimeout>
 8009848:	4603      	mov	r3, r0
 800984a:	2b00      	cmp	r3, #0
 800984c:	d009      	beq.n	8009862 <HAL_SPI_TransmitReceive+0x390>
 800984e:	68fb      	ldr	r3, [r7, #12]
 8009850:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009852:	f043 0202 	orr.w	r2, r3, #2
 8009856:	68fb      	ldr	r3, [r7, #12]
 8009858:	655a      	str	r2, [r3, #84]	; 0x54
 800985a:	2303      	movs	r3, #3
 800985c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009860:	e037      	b.n	80098d2 <HAL_SPI_TransmitReceive+0x400>
 8009862:	68fb      	ldr	r3, [r7, #12]
 8009864:	681b      	ldr	r3, [r3, #0]
 8009866:	68db      	ldr	r3, [r3, #12]
 8009868:	68fb      	ldr	r3, [r7, #12]
 800986a:	681b      	ldr	r3, [r3, #0]
 800986c:	689b      	ldr	r3, [r3, #8]
 800986e:	f003 0310 	and.w	r3, r3, #16
 8009872:	2b10      	cmp	r3, #16
 8009874:	d10d      	bne.n	8009892 <HAL_SPI_TransmitReceive+0x3c0>
 8009876:	68fb      	ldr	r3, [r7, #12]
 8009878:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800987a:	f043 0202 	orr.w	r2, r3, #2
 800987e:	68fb      	ldr	r3, [r7, #12]
 8009880:	655a      	str	r2, [r3, #84]	; 0x54
 8009882:	68fb      	ldr	r3, [r7, #12]
 8009884:	681b      	ldr	r3, [r3, #0]
 8009886:	f64f 72ef 	movw	r2, #65519	; 0xffef
 800988a:	609a      	str	r2, [r3, #8]
 800988c:	2301      	movs	r3, #1
 800988e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009892:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009894:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8009896:	68f8      	ldr	r0, [r7, #12]
 8009898:	f000 f906 	bl	8009aa8 <SPI_EndRxTxTransaction>
 800989c:	4603      	mov	r3, r0
 800989e:	2b00      	cmp	r3, #0
 80098a0:	d006      	beq.n	80098b0 <HAL_SPI_TransmitReceive+0x3de>
 80098a2:	2301      	movs	r3, #1
 80098a4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80098a8:	68fb      	ldr	r3, [r7, #12]
 80098aa:	2220      	movs	r2, #32
 80098ac:	655a      	str	r2, [r3, #84]	; 0x54
 80098ae:	e010      	b.n	80098d2 <HAL_SPI_TransmitReceive+0x400>
 80098b0:	68fb      	ldr	r3, [r7, #12]
 80098b2:	689b      	ldr	r3, [r3, #8]
 80098b4:	2b00      	cmp	r3, #0
 80098b6:	d10b      	bne.n	80098d0 <HAL_SPI_TransmitReceive+0x3fe>
 80098b8:	2300      	movs	r3, #0
 80098ba:	617b      	str	r3, [r7, #20]
 80098bc:	68fb      	ldr	r3, [r7, #12]
 80098be:	681b      	ldr	r3, [r3, #0]
 80098c0:	68db      	ldr	r3, [r3, #12]
 80098c2:	617b      	str	r3, [r7, #20]
 80098c4:	68fb      	ldr	r3, [r7, #12]
 80098c6:	681b      	ldr	r3, [r3, #0]
 80098c8:	689b      	ldr	r3, [r3, #8]
 80098ca:	617b      	str	r3, [r7, #20]
 80098cc:	697b      	ldr	r3, [r7, #20]
 80098ce:	e000      	b.n	80098d2 <HAL_SPI_TransmitReceive+0x400>
 80098d0:	bf00      	nop
 80098d2:	68fb      	ldr	r3, [r7, #12]
 80098d4:	2201      	movs	r2, #1
 80098d6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80098da:	68fb      	ldr	r3, [r7, #12]
 80098dc:	2200      	movs	r2, #0
 80098de:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80098e2:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80098e6:	4618      	mov	r0, r3
 80098e8:	3730      	adds	r7, #48	; 0x30
 80098ea:	46bd      	mov	sp, r7
 80098ec:	bd80      	pop	{r7, pc}

080098ee <HAL_SPI_GetState>:
 80098ee:	b480      	push	{r7}
 80098f0:	b083      	sub	sp, #12
 80098f2:	af00      	add	r7, sp, #0
 80098f4:	6078      	str	r0, [r7, #4]
 80098f6:	687b      	ldr	r3, [r7, #4]
 80098f8:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80098fc:	b2db      	uxtb	r3, r3
 80098fe:	4618      	mov	r0, r3
 8009900:	370c      	adds	r7, #12
 8009902:	46bd      	mov	sp, r7
 8009904:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009908:	4770      	bx	lr

0800990a <SPI_WaitFlagStateUntilTimeout>:
 800990a:	b580      	push	{r7, lr}
 800990c:	b084      	sub	sp, #16
 800990e:	af00      	add	r7, sp, #0
 8009910:	60f8      	str	r0, [r7, #12]
 8009912:	60b9      	str	r1, [r7, #8]
 8009914:	603b      	str	r3, [r7, #0]
 8009916:	4613      	mov	r3, r2
 8009918:	71fb      	strb	r3, [r7, #7]
 800991a:	e04c      	b.n	80099b6 <SPI_WaitFlagStateUntilTimeout+0xac>
 800991c:	683b      	ldr	r3, [r7, #0]
 800991e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009922:	d048      	beq.n	80099b6 <SPI_WaitFlagStateUntilTimeout+0xac>
 8009924:	f7fc f938 	bl	8005b98 <HAL_GetTick>
 8009928:	4602      	mov	r2, r0
 800992a:	69bb      	ldr	r3, [r7, #24]
 800992c:	1ad3      	subs	r3, r2, r3
 800992e:	683a      	ldr	r2, [r7, #0]
 8009930:	429a      	cmp	r2, r3
 8009932:	d902      	bls.n	800993a <SPI_WaitFlagStateUntilTimeout+0x30>
 8009934:	683b      	ldr	r3, [r7, #0]
 8009936:	2b00      	cmp	r3, #0
 8009938:	d13d      	bne.n	80099b6 <SPI_WaitFlagStateUntilTimeout+0xac>
 800993a:	68fb      	ldr	r3, [r7, #12]
 800993c:	681b      	ldr	r3, [r3, #0]
 800993e:	685a      	ldr	r2, [r3, #4]
 8009940:	68fb      	ldr	r3, [r7, #12]
 8009942:	681b      	ldr	r3, [r3, #0]
 8009944:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8009948:	605a      	str	r2, [r3, #4]
 800994a:	68fb      	ldr	r3, [r7, #12]
 800994c:	685b      	ldr	r3, [r3, #4]
 800994e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009952:	d111      	bne.n	8009978 <SPI_WaitFlagStateUntilTimeout+0x6e>
 8009954:	68fb      	ldr	r3, [r7, #12]
 8009956:	689b      	ldr	r3, [r3, #8]
 8009958:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800995c:	d004      	beq.n	8009968 <SPI_WaitFlagStateUntilTimeout+0x5e>
 800995e:	68fb      	ldr	r3, [r7, #12]
 8009960:	689b      	ldr	r3, [r3, #8]
 8009962:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009966:	d107      	bne.n	8009978 <SPI_WaitFlagStateUntilTimeout+0x6e>
 8009968:	68fb      	ldr	r3, [r7, #12]
 800996a:	681b      	ldr	r3, [r3, #0]
 800996c:	681a      	ldr	r2, [r3, #0]
 800996e:	68fb      	ldr	r3, [r7, #12]
 8009970:	681b      	ldr	r3, [r3, #0]
 8009972:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009976:	601a      	str	r2, [r3, #0]
 8009978:	68fb      	ldr	r3, [r7, #12]
 800997a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800997c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009980:	d10f      	bne.n	80099a2 <SPI_WaitFlagStateUntilTimeout+0x98>
 8009982:	68fb      	ldr	r3, [r7, #12]
 8009984:	681b      	ldr	r3, [r3, #0]
 8009986:	681a      	ldr	r2, [r3, #0]
 8009988:	68fb      	ldr	r3, [r7, #12]
 800998a:	681b      	ldr	r3, [r3, #0]
 800998c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8009990:	601a      	str	r2, [r3, #0]
 8009992:	68fb      	ldr	r3, [r7, #12]
 8009994:	681b      	ldr	r3, [r3, #0]
 8009996:	681a      	ldr	r2, [r3, #0]
 8009998:	68fb      	ldr	r3, [r7, #12]
 800999a:	681b      	ldr	r3, [r3, #0]
 800999c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80099a0:	601a      	str	r2, [r3, #0]
 80099a2:	68fb      	ldr	r3, [r7, #12]
 80099a4:	2201      	movs	r2, #1
 80099a6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80099aa:	68fb      	ldr	r3, [r7, #12]
 80099ac:	2200      	movs	r2, #0
 80099ae:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80099b2:	2303      	movs	r3, #3
 80099b4:	e00f      	b.n	80099d6 <SPI_WaitFlagStateUntilTimeout+0xcc>
 80099b6:	68fb      	ldr	r3, [r7, #12]
 80099b8:	681b      	ldr	r3, [r3, #0]
 80099ba:	689a      	ldr	r2, [r3, #8]
 80099bc:	68bb      	ldr	r3, [r7, #8]
 80099be:	4013      	ands	r3, r2
 80099c0:	68ba      	ldr	r2, [r7, #8]
 80099c2:	429a      	cmp	r2, r3
 80099c4:	bf0c      	ite	eq
 80099c6:	2301      	moveq	r3, #1
 80099c8:	2300      	movne	r3, #0
 80099ca:	b2db      	uxtb	r3, r3
 80099cc:	461a      	mov	r2, r3
 80099ce:	79fb      	ldrb	r3, [r7, #7]
 80099d0:	429a      	cmp	r2, r3
 80099d2:	d1a3      	bne.n	800991c <SPI_WaitFlagStateUntilTimeout+0x12>
 80099d4:	2300      	movs	r3, #0
 80099d6:	4618      	mov	r0, r3
 80099d8:	3710      	adds	r7, #16
 80099da:	46bd      	mov	sp, r7
 80099dc:	bd80      	pop	{r7, pc}

080099de <SPI_EndRxTransaction>:
 80099de:	b580      	push	{r7, lr}
 80099e0:	b086      	sub	sp, #24
 80099e2:	af02      	add	r7, sp, #8
 80099e4:	60f8      	str	r0, [r7, #12]
 80099e6:	60b9      	str	r1, [r7, #8]
 80099e8:	607a      	str	r2, [r7, #4]
 80099ea:	68fb      	ldr	r3, [r7, #12]
 80099ec:	685b      	ldr	r3, [r3, #4]
 80099ee:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80099f2:	d111      	bne.n	8009a18 <SPI_EndRxTransaction+0x3a>
 80099f4:	68fb      	ldr	r3, [r7, #12]
 80099f6:	689b      	ldr	r3, [r3, #8]
 80099f8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80099fc:	d004      	beq.n	8009a08 <SPI_EndRxTransaction+0x2a>
 80099fe:	68fb      	ldr	r3, [r7, #12]
 8009a00:	689b      	ldr	r3, [r3, #8]
 8009a02:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009a06:	d107      	bne.n	8009a18 <SPI_EndRxTransaction+0x3a>
 8009a08:	68fb      	ldr	r3, [r7, #12]
 8009a0a:	681b      	ldr	r3, [r3, #0]
 8009a0c:	681a      	ldr	r2, [r3, #0]
 8009a0e:	68fb      	ldr	r3, [r7, #12]
 8009a10:	681b      	ldr	r3, [r3, #0]
 8009a12:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009a16:	601a      	str	r2, [r3, #0]
 8009a18:	68fb      	ldr	r3, [r7, #12]
 8009a1a:	685b      	ldr	r3, [r3, #4]
 8009a1c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009a20:	d12a      	bne.n	8009a78 <SPI_EndRxTransaction+0x9a>
 8009a22:	68fb      	ldr	r3, [r7, #12]
 8009a24:	689b      	ldr	r3, [r3, #8]
 8009a26:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009a2a:	d012      	beq.n	8009a52 <SPI_EndRxTransaction+0x74>
 8009a2c:	687b      	ldr	r3, [r7, #4]
 8009a2e:	9300      	str	r3, [sp, #0]
 8009a30:	68bb      	ldr	r3, [r7, #8]
 8009a32:	2200      	movs	r2, #0
 8009a34:	2180      	movs	r1, #128	; 0x80
 8009a36:	68f8      	ldr	r0, [r7, #12]
 8009a38:	f7ff ff67 	bl	800990a <SPI_WaitFlagStateUntilTimeout>
 8009a3c:	4603      	mov	r3, r0
 8009a3e:	2b00      	cmp	r3, #0
 8009a40:	d02d      	beq.n	8009a9e <SPI_EndRxTransaction+0xc0>
 8009a42:	68fb      	ldr	r3, [r7, #12]
 8009a44:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009a46:	f043 0220 	orr.w	r2, r3, #32
 8009a4a:	68fb      	ldr	r3, [r7, #12]
 8009a4c:	655a      	str	r2, [r3, #84]	; 0x54
 8009a4e:	2303      	movs	r3, #3
 8009a50:	e026      	b.n	8009aa0 <SPI_EndRxTransaction+0xc2>
 8009a52:	687b      	ldr	r3, [r7, #4]
 8009a54:	9300      	str	r3, [sp, #0]
 8009a56:	68bb      	ldr	r3, [r7, #8]
 8009a58:	2200      	movs	r2, #0
 8009a5a:	2101      	movs	r1, #1
 8009a5c:	68f8      	ldr	r0, [r7, #12]
 8009a5e:	f7ff ff54 	bl	800990a <SPI_WaitFlagStateUntilTimeout>
 8009a62:	4603      	mov	r3, r0
 8009a64:	2b00      	cmp	r3, #0
 8009a66:	d01a      	beq.n	8009a9e <SPI_EndRxTransaction+0xc0>
 8009a68:	68fb      	ldr	r3, [r7, #12]
 8009a6a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009a6c:	f043 0220 	orr.w	r2, r3, #32
 8009a70:	68fb      	ldr	r3, [r7, #12]
 8009a72:	655a      	str	r2, [r3, #84]	; 0x54
 8009a74:	2303      	movs	r3, #3
 8009a76:	e013      	b.n	8009aa0 <SPI_EndRxTransaction+0xc2>
 8009a78:	687b      	ldr	r3, [r7, #4]
 8009a7a:	9300      	str	r3, [sp, #0]
 8009a7c:	68bb      	ldr	r3, [r7, #8]
 8009a7e:	2200      	movs	r2, #0
 8009a80:	2101      	movs	r1, #1
 8009a82:	68f8      	ldr	r0, [r7, #12]
 8009a84:	f7ff ff41 	bl	800990a <SPI_WaitFlagStateUntilTimeout>
 8009a88:	4603      	mov	r3, r0
 8009a8a:	2b00      	cmp	r3, #0
 8009a8c:	d007      	beq.n	8009a9e <SPI_EndRxTransaction+0xc0>
 8009a8e:	68fb      	ldr	r3, [r7, #12]
 8009a90:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009a92:	f043 0220 	orr.w	r2, r3, #32
 8009a96:	68fb      	ldr	r3, [r7, #12]
 8009a98:	655a      	str	r2, [r3, #84]	; 0x54
 8009a9a:	2303      	movs	r3, #3
 8009a9c:	e000      	b.n	8009aa0 <SPI_EndRxTransaction+0xc2>
 8009a9e:	2300      	movs	r3, #0
 8009aa0:	4618      	mov	r0, r3
 8009aa2:	3710      	adds	r7, #16
 8009aa4:	46bd      	mov	sp, r7
 8009aa6:	bd80      	pop	{r7, pc}

08009aa8 <SPI_EndRxTxTransaction>:
 8009aa8:	b580      	push	{r7, lr}
 8009aaa:	b088      	sub	sp, #32
 8009aac:	af02      	add	r7, sp, #8
 8009aae:	60f8      	str	r0, [r7, #12]
 8009ab0:	60b9      	str	r1, [r7, #8]
 8009ab2:	607a      	str	r2, [r7, #4]
 8009ab4:	4b1b      	ldr	r3, [pc, #108]	; (8009b24 <SPI_EndRxTxTransaction+0x7c>)
 8009ab6:	681b      	ldr	r3, [r3, #0]
 8009ab8:	4a1b      	ldr	r2, [pc, #108]	; (8009b28 <SPI_EndRxTxTransaction+0x80>)
 8009aba:	fba2 2303 	umull	r2, r3, r2, r3
 8009abe:	0d5b      	lsrs	r3, r3, #21
 8009ac0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8009ac4:	fb02 f303 	mul.w	r3, r2, r3
 8009ac8:	617b      	str	r3, [r7, #20]
 8009aca:	68fb      	ldr	r3, [r7, #12]
 8009acc:	685b      	ldr	r3, [r3, #4]
 8009ace:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009ad2:	d112      	bne.n	8009afa <SPI_EndRxTxTransaction+0x52>
 8009ad4:	687b      	ldr	r3, [r7, #4]
 8009ad6:	9300      	str	r3, [sp, #0]
 8009ad8:	68bb      	ldr	r3, [r7, #8]
 8009ada:	2200      	movs	r2, #0
 8009adc:	2180      	movs	r1, #128	; 0x80
 8009ade:	68f8      	ldr	r0, [r7, #12]
 8009ae0:	f7ff ff13 	bl	800990a <SPI_WaitFlagStateUntilTimeout>
 8009ae4:	4603      	mov	r3, r0
 8009ae6:	2b00      	cmp	r3, #0
 8009ae8:	d016      	beq.n	8009b18 <SPI_EndRxTxTransaction+0x70>
 8009aea:	68fb      	ldr	r3, [r7, #12]
 8009aec:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009aee:	f043 0220 	orr.w	r2, r3, #32
 8009af2:	68fb      	ldr	r3, [r7, #12]
 8009af4:	655a      	str	r2, [r3, #84]	; 0x54
 8009af6:	2303      	movs	r3, #3
 8009af8:	e00f      	b.n	8009b1a <SPI_EndRxTxTransaction+0x72>
 8009afa:	697b      	ldr	r3, [r7, #20]
 8009afc:	2b00      	cmp	r3, #0
 8009afe:	d00a      	beq.n	8009b16 <SPI_EndRxTxTransaction+0x6e>
 8009b00:	697b      	ldr	r3, [r7, #20]
 8009b02:	3b01      	subs	r3, #1
 8009b04:	617b      	str	r3, [r7, #20]
 8009b06:	68fb      	ldr	r3, [r7, #12]
 8009b08:	681b      	ldr	r3, [r3, #0]
 8009b0a:	689b      	ldr	r3, [r3, #8]
 8009b0c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009b10:	2b80      	cmp	r3, #128	; 0x80
 8009b12:	d0f2      	beq.n	8009afa <SPI_EndRxTxTransaction+0x52>
 8009b14:	e000      	b.n	8009b18 <SPI_EndRxTxTransaction+0x70>
 8009b16:	bf00      	nop
 8009b18:	2300      	movs	r3, #0
 8009b1a:	4618      	mov	r0, r3
 8009b1c:	3718      	adds	r7, #24
 8009b1e:	46bd      	mov	sp, r7
 8009b20:	bd80      	pop	{r7, pc}
 8009b22:	bf00      	nop
 8009b24:	20000064 	.word	0x20000064
 8009b28:	165e9f81 	.word	0x165e9f81

08009b2c <FMC_SDRAM_Init>:
 8009b2c:	b480      	push	{r7}
 8009b2e:	b085      	sub	sp, #20
 8009b30:	af00      	add	r7, sp, #0
 8009b32:	6078      	str	r0, [r7, #4]
 8009b34:	6039      	str	r1, [r7, #0]
 8009b36:	2300      	movs	r3, #0
 8009b38:	60fb      	str	r3, [r7, #12]
 8009b3a:	2300      	movs	r3, #0
 8009b3c:	60bb      	str	r3, [r7, #8]
 8009b3e:	683b      	ldr	r3, [r7, #0]
 8009b40:	681b      	ldr	r3, [r3, #0]
 8009b42:	2b01      	cmp	r3, #1
 8009b44:	d029      	beq.n	8009b9a <FMC_SDRAM_Init+0x6e>
 8009b46:	687b      	ldr	r3, [r7, #4]
 8009b48:	681b      	ldr	r3, [r3, #0]
 8009b4a:	60fb      	str	r3, [r7, #12]
 8009b4c:	68fb      	ldr	r3, [r7, #12]
 8009b4e:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8009b52:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8009b56:	60fb      	str	r3, [r7, #12]
 8009b58:	683b      	ldr	r3, [r7, #0]
 8009b5a:	685a      	ldr	r2, [r3, #4]
 8009b5c:	683b      	ldr	r3, [r7, #0]
 8009b5e:	689b      	ldr	r3, [r3, #8]
 8009b60:	431a      	orrs	r2, r3
 8009b62:	683b      	ldr	r3, [r7, #0]
 8009b64:	68db      	ldr	r3, [r3, #12]
 8009b66:	431a      	orrs	r2, r3
 8009b68:	683b      	ldr	r3, [r7, #0]
 8009b6a:	691b      	ldr	r3, [r3, #16]
 8009b6c:	431a      	orrs	r2, r3
 8009b6e:	683b      	ldr	r3, [r7, #0]
 8009b70:	695b      	ldr	r3, [r3, #20]
 8009b72:	431a      	orrs	r2, r3
 8009b74:	683b      	ldr	r3, [r7, #0]
 8009b76:	699b      	ldr	r3, [r3, #24]
 8009b78:	431a      	orrs	r2, r3
 8009b7a:	683b      	ldr	r3, [r7, #0]
 8009b7c:	69db      	ldr	r3, [r3, #28]
 8009b7e:	431a      	orrs	r2, r3
 8009b80:	683b      	ldr	r3, [r7, #0]
 8009b82:	6a1b      	ldr	r3, [r3, #32]
 8009b84:	431a      	orrs	r2, r3
 8009b86:	683b      	ldr	r3, [r7, #0]
 8009b88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009b8a:	4313      	orrs	r3, r2
 8009b8c:	68fa      	ldr	r2, [r7, #12]
 8009b8e:	4313      	orrs	r3, r2
 8009b90:	60fb      	str	r3, [r7, #12]
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	68fa      	ldr	r2, [r7, #12]
 8009b96:	601a      	str	r2, [r3, #0]
 8009b98:	e034      	b.n	8009c04 <FMC_SDRAM_Init+0xd8>
 8009b9a:	687b      	ldr	r3, [r7, #4]
 8009b9c:	681b      	ldr	r3, [r3, #0]
 8009b9e:	60fb      	str	r3, [r7, #12]
 8009ba0:	68fb      	ldr	r3, [r7, #12]
 8009ba2:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8009ba6:	60fb      	str	r3, [r7, #12]
 8009ba8:	683b      	ldr	r3, [r7, #0]
 8009baa:	69da      	ldr	r2, [r3, #28]
 8009bac:	683b      	ldr	r3, [r7, #0]
 8009bae:	6a1b      	ldr	r3, [r3, #32]
 8009bb0:	431a      	orrs	r2, r3
 8009bb2:	683b      	ldr	r3, [r7, #0]
 8009bb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009bb6:	4313      	orrs	r3, r2
 8009bb8:	68fa      	ldr	r2, [r7, #12]
 8009bba:	4313      	orrs	r3, r2
 8009bbc:	60fb      	str	r3, [r7, #12]
 8009bbe:	687b      	ldr	r3, [r7, #4]
 8009bc0:	685b      	ldr	r3, [r3, #4]
 8009bc2:	60bb      	str	r3, [r7, #8]
 8009bc4:	68bb      	ldr	r3, [r7, #8]
 8009bc6:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8009bca:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8009bce:	60bb      	str	r3, [r7, #8]
 8009bd0:	683b      	ldr	r3, [r7, #0]
 8009bd2:	685a      	ldr	r2, [r3, #4]
 8009bd4:	683b      	ldr	r3, [r7, #0]
 8009bd6:	689b      	ldr	r3, [r3, #8]
 8009bd8:	431a      	orrs	r2, r3
 8009bda:	683b      	ldr	r3, [r7, #0]
 8009bdc:	68db      	ldr	r3, [r3, #12]
 8009bde:	431a      	orrs	r2, r3
 8009be0:	683b      	ldr	r3, [r7, #0]
 8009be2:	691b      	ldr	r3, [r3, #16]
 8009be4:	431a      	orrs	r2, r3
 8009be6:	683b      	ldr	r3, [r7, #0]
 8009be8:	695b      	ldr	r3, [r3, #20]
 8009bea:	431a      	orrs	r2, r3
 8009bec:	683b      	ldr	r3, [r7, #0]
 8009bee:	699b      	ldr	r3, [r3, #24]
 8009bf0:	4313      	orrs	r3, r2
 8009bf2:	68ba      	ldr	r2, [r7, #8]
 8009bf4:	4313      	orrs	r3, r2
 8009bf6:	60bb      	str	r3, [r7, #8]
 8009bf8:	687b      	ldr	r3, [r7, #4]
 8009bfa:	68fa      	ldr	r2, [r7, #12]
 8009bfc:	601a      	str	r2, [r3, #0]
 8009bfe:	687b      	ldr	r3, [r7, #4]
 8009c00:	68ba      	ldr	r2, [r7, #8]
 8009c02:	605a      	str	r2, [r3, #4]
 8009c04:	2300      	movs	r3, #0
 8009c06:	4618      	mov	r0, r3
 8009c08:	3714      	adds	r7, #20
 8009c0a:	46bd      	mov	sp, r7
 8009c0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c10:	4770      	bx	lr

08009c12 <FMC_SDRAM_Timing_Init>:
 8009c12:	b480      	push	{r7}
 8009c14:	b087      	sub	sp, #28
 8009c16:	af00      	add	r7, sp, #0
 8009c18:	60f8      	str	r0, [r7, #12]
 8009c1a:	60b9      	str	r1, [r7, #8]
 8009c1c:	607a      	str	r2, [r7, #4]
 8009c1e:	2300      	movs	r3, #0
 8009c20:	617b      	str	r3, [r7, #20]
 8009c22:	2300      	movs	r3, #0
 8009c24:	613b      	str	r3, [r7, #16]
 8009c26:	687b      	ldr	r3, [r7, #4]
 8009c28:	2b01      	cmp	r3, #1
 8009c2a:	d02e      	beq.n	8009c8a <FMC_SDRAM_Timing_Init+0x78>
 8009c2c:	68fb      	ldr	r3, [r7, #12]
 8009c2e:	689b      	ldr	r3, [r3, #8]
 8009c30:	617b      	str	r3, [r7, #20]
 8009c32:	697b      	ldr	r3, [r7, #20]
 8009c34:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8009c38:	617b      	str	r3, [r7, #20]
 8009c3a:	68bb      	ldr	r3, [r7, #8]
 8009c3c:	681b      	ldr	r3, [r3, #0]
 8009c3e:	1e5a      	subs	r2, r3, #1
 8009c40:	68bb      	ldr	r3, [r7, #8]
 8009c42:	685b      	ldr	r3, [r3, #4]
 8009c44:	3b01      	subs	r3, #1
 8009c46:	011b      	lsls	r3, r3, #4
 8009c48:	431a      	orrs	r2, r3
 8009c4a:	68bb      	ldr	r3, [r7, #8]
 8009c4c:	689b      	ldr	r3, [r3, #8]
 8009c4e:	3b01      	subs	r3, #1
 8009c50:	021b      	lsls	r3, r3, #8
 8009c52:	431a      	orrs	r2, r3
 8009c54:	68bb      	ldr	r3, [r7, #8]
 8009c56:	68db      	ldr	r3, [r3, #12]
 8009c58:	3b01      	subs	r3, #1
 8009c5a:	031b      	lsls	r3, r3, #12
 8009c5c:	431a      	orrs	r2, r3
 8009c5e:	68bb      	ldr	r3, [r7, #8]
 8009c60:	691b      	ldr	r3, [r3, #16]
 8009c62:	3b01      	subs	r3, #1
 8009c64:	041b      	lsls	r3, r3, #16
 8009c66:	431a      	orrs	r2, r3
 8009c68:	68bb      	ldr	r3, [r7, #8]
 8009c6a:	695b      	ldr	r3, [r3, #20]
 8009c6c:	3b01      	subs	r3, #1
 8009c6e:	051b      	lsls	r3, r3, #20
 8009c70:	431a      	orrs	r2, r3
 8009c72:	68bb      	ldr	r3, [r7, #8]
 8009c74:	699b      	ldr	r3, [r3, #24]
 8009c76:	3b01      	subs	r3, #1
 8009c78:	061b      	lsls	r3, r3, #24
 8009c7a:	4313      	orrs	r3, r2
 8009c7c:	697a      	ldr	r2, [r7, #20]
 8009c7e:	4313      	orrs	r3, r2
 8009c80:	617b      	str	r3, [r7, #20]
 8009c82:	68fb      	ldr	r3, [r7, #12]
 8009c84:	697a      	ldr	r2, [r7, #20]
 8009c86:	609a      	str	r2, [r3, #8]
 8009c88:	e03b      	b.n	8009d02 <FMC_SDRAM_Timing_Init+0xf0>
 8009c8a:	68fb      	ldr	r3, [r7, #12]
 8009c8c:	689b      	ldr	r3, [r3, #8]
 8009c8e:	617b      	str	r3, [r7, #20]
 8009c90:	697b      	ldr	r3, [r7, #20]
 8009c92:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8009c96:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8009c9a:	617b      	str	r3, [r7, #20]
 8009c9c:	68bb      	ldr	r3, [r7, #8]
 8009c9e:	68db      	ldr	r3, [r3, #12]
 8009ca0:	3b01      	subs	r3, #1
 8009ca2:	031a      	lsls	r2, r3, #12
 8009ca4:	68bb      	ldr	r3, [r7, #8]
 8009ca6:	695b      	ldr	r3, [r3, #20]
 8009ca8:	3b01      	subs	r3, #1
 8009caa:	051b      	lsls	r3, r3, #20
 8009cac:	4313      	orrs	r3, r2
 8009cae:	697a      	ldr	r2, [r7, #20]
 8009cb0:	4313      	orrs	r3, r2
 8009cb2:	617b      	str	r3, [r7, #20]
 8009cb4:	68fb      	ldr	r3, [r7, #12]
 8009cb6:	68db      	ldr	r3, [r3, #12]
 8009cb8:	613b      	str	r3, [r7, #16]
 8009cba:	693b      	ldr	r3, [r7, #16]
 8009cbc:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8009cc0:	613b      	str	r3, [r7, #16]
 8009cc2:	68bb      	ldr	r3, [r7, #8]
 8009cc4:	681b      	ldr	r3, [r3, #0]
 8009cc6:	1e5a      	subs	r2, r3, #1
 8009cc8:	68bb      	ldr	r3, [r7, #8]
 8009cca:	685b      	ldr	r3, [r3, #4]
 8009ccc:	3b01      	subs	r3, #1
 8009cce:	011b      	lsls	r3, r3, #4
 8009cd0:	431a      	orrs	r2, r3
 8009cd2:	68bb      	ldr	r3, [r7, #8]
 8009cd4:	689b      	ldr	r3, [r3, #8]
 8009cd6:	3b01      	subs	r3, #1
 8009cd8:	021b      	lsls	r3, r3, #8
 8009cda:	431a      	orrs	r2, r3
 8009cdc:	68bb      	ldr	r3, [r7, #8]
 8009cde:	691b      	ldr	r3, [r3, #16]
 8009ce0:	3b01      	subs	r3, #1
 8009ce2:	041b      	lsls	r3, r3, #16
 8009ce4:	431a      	orrs	r2, r3
 8009ce6:	68bb      	ldr	r3, [r7, #8]
 8009ce8:	699b      	ldr	r3, [r3, #24]
 8009cea:	3b01      	subs	r3, #1
 8009cec:	061b      	lsls	r3, r3, #24
 8009cee:	4313      	orrs	r3, r2
 8009cf0:	693a      	ldr	r2, [r7, #16]
 8009cf2:	4313      	orrs	r3, r2
 8009cf4:	613b      	str	r3, [r7, #16]
 8009cf6:	68fb      	ldr	r3, [r7, #12]
 8009cf8:	697a      	ldr	r2, [r7, #20]
 8009cfa:	609a      	str	r2, [r3, #8]
 8009cfc:	68fb      	ldr	r3, [r7, #12]
 8009cfe:	693a      	ldr	r2, [r7, #16]
 8009d00:	60da      	str	r2, [r3, #12]
 8009d02:	2300      	movs	r3, #0
 8009d04:	4618      	mov	r0, r3
 8009d06:	371c      	adds	r7, #28
 8009d08:	46bd      	mov	sp, r7
 8009d0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d0e:	4770      	bx	lr

08009d10 <FMC_SDRAM_SendCommand>:
 8009d10:	b580      	push	{r7, lr}
 8009d12:	b086      	sub	sp, #24
 8009d14:	af00      	add	r7, sp, #0
 8009d16:	60f8      	str	r0, [r7, #12]
 8009d18:	60b9      	str	r1, [r7, #8]
 8009d1a:	607a      	str	r2, [r7, #4]
 8009d1c:	2300      	movs	r3, #0
 8009d1e:	613b      	str	r3, [r7, #16]
 8009d20:	2300      	movs	r3, #0
 8009d22:	617b      	str	r3, [r7, #20]
 8009d24:	68bb      	ldr	r3, [r7, #8]
 8009d26:	681a      	ldr	r2, [r3, #0]
 8009d28:	68bb      	ldr	r3, [r7, #8]
 8009d2a:	685b      	ldr	r3, [r3, #4]
 8009d2c:	431a      	orrs	r2, r3
 8009d2e:	68bb      	ldr	r3, [r7, #8]
 8009d30:	689b      	ldr	r3, [r3, #8]
 8009d32:	3b01      	subs	r3, #1
 8009d34:	015b      	lsls	r3, r3, #5
 8009d36:	431a      	orrs	r2, r3
 8009d38:	68bb      	ldr	r3, [r7, #8]
 8009d3a:	68db      	ldr	r3, [r3, #12]
 8009d3c:	025b      	lsls	r3, r3, #9
 8009d3e:	4313      	orrs	r3, r2
 8009d40:	613b      	str	r3, [r7, #16]
 8009d42:	693a      	ldr	r2, [r7, #16]
 8009d44:	68fb      	ldr	r3, [r7, #12]
 8009d46:	611a      	str	r2, [r3, #16]
 8009d48:	f7fb ff26 	bl	8005b98 <HAL_GetTick>
 8009d4c:	6178      	str	r0, [r7, #20]
 8009d4e:	e010      	b.n	8009d72 <FMC_SDRAM_SendCommand+0x62>
 8009d50:	687b      	ldr	r3, [r7, #4]
 8009d52:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009d56:	d00c      	beq.n	8009d72 <FMC_SDRAM_SendCommand+0x62>
 8009d58:	687b      	ldr	r3, [r7, #4]
 8009d5a:	2b00      	cmp	r3, #0
 8009d5c:	d007      	beq.n	8009d6e <FMC_SDRAM_SendCommand+0x5e>
 8009d5e:	f7fb ff1b 	bl	8005b98 <HAL_GetTick>
 8009d62:	4602      	mov	r2, r0
 8009d64:	697b      	ldr	r3, [r7, #20]
 8009d66:	1ad3      	subs	r3, r2, r3
 8009d68:	687a      	ldr	r2, [r7, #4]
 8009d6a:	429a      	cmp	r2, r3
 8009d6c:	d201      	bcs.n	8009d72 <FMC_SDRAM_SendCommand+0x62>
 8009d6e:	2303      	movs	r3, #3
 8009d70:	e006      	b.n	8009d80 <FMC_SDRAM_SendCommand+0x70>
 8009d72:	68fb      	ldr	r3, [r7, #12]
 8009d74:	699b      	ldr	r3, [r3, #24]
 8009d76:	f003 0320 	and.w	r3, r3, #32
 8009d7a:	2b20      	cmp	r3, #32
 8009d7c:	d0e8      	beq.n	8009d50 <FMC_SDRAM_SendCommand+0x40>
 8009d7e:	2300      	movs	r3, #0
 8009d80:	4618      	mov	r0, r3
 8009d82:	3718      	adds	r7, #24
 8009d84:	46bd      	mov	sp, r7
 8009d86:	bd80      	pop	{r7, pc}

08009d88 <FMC_SDRAM_ProgramRefreshRate>:
 8009d88:	b480      	push	{r7}
 8009d8a:	b083      	sub	sp, #12
 8009d8c:	af00      	add	r7, sp, #0
 8009d8e:	6078      	str	r0, [r7, #4]
 8009d90:	6039      	str	r1, [r7, #0]
 8009d92:	687b      	ldr	r3, [r7, #4]
 8009d94:	695a      	ldr	r2, [r3, #20]
 8009d96:	683b      	ldr	r3, [r7, #0]
 8009d98:	005b      	lsls	r3, r3, #1
 8009d9a:	431a      	orrs	r2, r3
 8009d9c:	687b      	ldr	r3, [r7, #4]
 8009d9e:	615a      	str	r2, [r3, #20]
 8009da0:	2300      	movs	r3, #0
 8009da2:	4618      	mov	r0, r3
 8009da4:	370c      	adds	r7, #12
 8009da6:	46bd      	mov	sp, r7
 8009da8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dac:	4770      	bx	lr
	...

08009db0 <arm_rfft_fast_init_f32>:
 8009db0:	084b      	lsrs	r3, r1, #1
 8009db2:	2b80      	cmp	r3, #128	; 0x80
 8009db4:	b410      	push	{r4}
 8009db6:	8201      	strh	r1, [r0, #16]
 8009db8:	8003      	strh	r3, [r0, #0]
 8009dba:	d046      	beq.n	8009e4a <arm_rfft_fast_init_f32+0x9a>
 8009dbc:	d916      	bls.n	8009dec <arm_rfft_fast_init_f32+0x3c>
 8009dbe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009dc2:	d03c      	beq.n	8009e3e <arm_rfft_fast_init_f32+0x8e>
 8009dc4:	d928      	bls.n	8009e18 <arm_rfft_fast_init_f32+0x68>
 8009dc6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009dca:	d01f      	beq.n	8009e0c <arm_rfft_fast_init_f32+0x5c>
 8009dcc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009dd0:	d112      	bne.n	8009df8 <arm_rfft_fast_init_f32+0x48>
 8009dd2:	4920      	ldr	r1, [pc, #128]	; (8009e54 <arm_rfft_fast_init_f32+0xa4>)
 8009dd4:	4a20      	ldr	r2, [pc, #128]	; (8009e58 <arm_rfft_fast_init_f32+0xa8>)
 8009dd6:	4b21      	ldr	r3, [pc, #132]	; (8009e5c <arm_rfft_fast_init_f32+0xac>)
 8009dd8:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8009ddc:	8184      	strh	r4, [r0, #12]
 8009dde:	6081      	str	r1, [r0, #8]
 8009de0:	6042      	str	r2, [r0, #4]
 8009de2:	6143      	str	r3, [r0, #20]
 8009de4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009de8:	2000      	movs	r0, #0
 8009dea:	4770      	bx	lr
 8009dec:	2b20      	cmp	r3, #32
 8009dee:	d01c      	beq.n	8009e2a <arm_rfft_fast_init_f32+0x7a>
 8009df0:	2b40      	cmp	r3, #64	; 0x40
 8009df2:	d006      	beq.n	8009e02 <arm_rfft_fast_init_f32+0x52>
 8009df4:	2b10      	cmp	r3, #16
 8009df6:	d01d      	beq.n	8009e34 <arm_rfft_fast_init_f32+0x84>
 8009df8:	f04f 30ff 	mov.w	r0, #4294967295
 8009dfc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009e00:	4770      	bx	lr
 8009e02:	2438      	movs	r4, #56	; 0x38
 8009e04:	4916      	ldr	r1, [pc, #88]	; (8009e60 <arm_rfft_fast_init_f32+0xb0>)
 8009e06:	4a17      	ldr	r2, [pc, #92]	; (8009e64 <arm_rfft_fast_init_f32+0xb4>)
 8009e08:	4b17      	ldr	r3, [pc, #92]	; (8009e68 <arm_rfft_fast_init_f32+0xb8>)
 8009e0a:	e7e7      	b.n	8009ddc <arm_rfft_fast_init_f32+0x2c>
 8009e0c:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8009e10:	4916      	ldr	r1, [pc, #88]	; (8009e6c <arm_rfft_fast_init_f32+0xbc>)
 8009e12:	4a17      	ldr	r2, [pc, #92]	; (8009e70 <arm_rfft_fast_init_f32+0xc0>)
 8009e14:	4b17      	ldr	r3, [pc, #92]	; (8009e74 <arm_rfft_fast_init_f32+0xc4>)
 8009e16:	e7e1      	b.n	8009ddc <arm_rfft_fast_init_f32+0x2c>
 8009e18:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009e1c:	d1ec      	bne.n	8009df8 <arm_rfft_fast_init_f32+0x48>
 8009e1e:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8009e22:	4915      	ldr	r1, [pc, #84]	; (8009e78 <arm_rfft_fast_init_f32+0xc8>)
 8009e24:	4a15      	ldr	r2, [pc, #84]	; (8009e7c <arm_rfft_fast_init_f32+0xcc>)
 8009e26:	4b16      	ldr	r3, [pc, #88]	; (8009e80 <arm_rfft_fast_init_f32+0xd0>)
 8009e28:	e7d8      	b.n	8009ddc <arm_rfft_fast_init_f32+0x2c>
 8009e2a:	2430      	movs	r4, #48	; 0x30
 8009e2c:	4915      	ldr	r1, [pc, #84]	; (8009e84 <arm_rfft_fast_init_f32+0xd4>)
 8009e2e:	4a16      	ldr	r2, [pc, #88]	; (8009e88 <arm_rfft_fast_init_f32+0xd8>)
 8009e30:	4b16      	ldr	r3, [pc, #88]	; (8009e8c <arm_rfft_fast_init_f32+0xdc>)
 8009e32:	e7d3      	b.n	8009ddc <arm_rfft_fast_init_f32+0x2c>
 8009e34:	2414      	movs	r4, #20
 8009e36:	4916      	ldr	r1, [pc, #88]	; (8009e90 <arm_rfft_fast_init_f32+0xe0>)
 8009e38:	4a16      	ldr	r2, [pc, #88]	; (8009e94 <arm_rfft_fast_init_f32+0xe4>)
 8009e3a:	4b17      	ldr	r3, [pc, #92]	; (8009e98 <arm_rfft_fast_init_f32+0xe8>)
 8009e3c:	e7ce      	b.n	8009ddc <arm_rfft_fast_init_f32+0x2c>
 8009e3e:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8009e42:	4916      	ldr	r1, [pc, #88]	; (8009e9c <arm_rfft_fast_init_f32+0xec>)
 8009e44:	4a16      	ldr	r2, [pc, #88]	; (8009ea0 <arm_rfft_fast_init_f32+0xf0>)
 8009e46:	4b17      	ldr	r3, [pc, #92]	; (8009ea4 <arm_rfft_fast_init_f32+0xf4>)
 8009e48:	e7c8      	b.n	8009ddc <arm_rfft_fast_init_f32+0x2c>
 8009e4a:	24d0      	movs	r4, #208	; 0xd0
 8009e4c:	4916      	ldr	r1, [pc, #88]	; (8009ea8 <arm_rfft_fast_init_f32+0xf8>)
 8009e4e:	4a17      	ldr	r2, [pc, #92]	; (8009eac <arm_rfft_fast_init_f32+0xfc>)
 8009e50:	4b17      	ldr	r3, [pc, #92]	; (8009eb0 <arm_rfft_fast_init_f32+0x100>)
 8009e52:	e7c3      	b.n	8009ddc <arm_rfft_fast_init_f32+0x2c>
 8009e54:	08024014 	.word	0x08024014
 8009e58:	0801520c 	.word	0x0801520c
 8009e5c:	0801b37c 	.word	0x0801b37c
 8009e60:	0801930c 	.word	0x0801930c
 8009e64:	08025dd4 	.word	0x08025dd4
 8009e68:	080282c4 	.word	0x080282c4
 8009e6c:	08021cfc 	.word	0x08021cfc
 8009e70:	0801fbfc 	.word	0x0801fbfc
 8009e74:	0801937c 	.word	0x0801937c
 8009e78:	08027f54 	.word	0x08027f54
 8009e7c:	0801f37c 	.word	0x0801f37c
 8009e80:	08025fd4 	.word	0x08025fd4
 8009e84:	08022bb4 	.word	0x08022bb4
 8009e88:	08021bfc 	.word	0x08021bfc
 8009e8c:	0801920c 	.word	0x0801920c
 8009e90:	08022b0c 	.word	0x08022b0c
 8009e94:	0801fb7c 	.word	0x0801fb7c
 8009e98:	08022b34 	.word	0x08022b34
 8009e9c:	080267d4 	.word	0x080267d4
 8009ea0:	08023014 	.word	0x08023014
 8009ea4:	08026b54 	.word	0x08026b54
 8009ea8:	080284c4 	.word	0x080284c4
 8009eac:	08022c14 	.word	0x08022c14
 8009eb0:	08027b54 	.word	0x08027b54

08009eb4 <arm_rfft_fast_f32>:
 8009eb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009eb8:	8a06      	ldrh	r6, [r0, #16]
 8009eba:	0876      	lsrs	r6, r6, #1
 8009ebc:	4607      	mov	r7, r0
 8009ebe:	4615      	mov	r5, r2
 8009ec0:	8006      	strh	r6, [r0, #0]
 8009ec2:	460c      	mov	r4, r1
 8009ec4:	2b00      	cmp	r3, #0
 8009ec6:	d15c      	bne.n	8009f82 <arm_rfft_fast_f32+0xce>
 8009ec8:	461a      	mov	r2, r3
 8009eca:	2301      	movs	r3, #1
 8009ecc:	f000 fbe4 	bl	800a698 <arm_cfft_f32>
 8009ed0:	edd4 7a00 	vldr	s15, [r4]
 8009ed4:	ed94 7a01 	vldr	s14, [r4, #4]
 8009ed8:	883e      	ldrh	r6, [r7, #0]
 8009eda:	6978      	ldr	r0, [r7, #20]
 8009edc:	ee37 7a07 	vadd.f32	s14, s14, s14
 8009ee0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8009ee4:	eeb6 3a00 	vmov.f32	s6, #96	; 0x3f000000  0.5
 8009ee8:	ee77 6a87 	vadd.f32	s13, s15, s14
 8009eec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8009ef0:	3e01      	subs	r6, #1
 8009ef2:	ee26 7a83 	vmul.f32	s14, s13, s6
 8009ef6:	ee67 7a83 	vmul.f32	s15, s15, s6
 8009efa:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8009efe:	ed85 7a00 	vstr	s14, [r5]
 8009f02:	edc5 7a01 	vstr	s15, [r5, #4]
 8009f06:	3010      	adds	r0, #16
 8009f08:	f105 0210 	add.w	r2, r5, #16
 8009f0c:	3b08      	subs	r3, #8
 8009f0e:	f104 0110 	add.w	r1, r4, #16
 8009f12:	ed93 7a02 	vldr	s14, [r3, #8]
 8009f16:	ed51 6a02 	vldr	s13, [r1, #-8]
 8009f1a:	ed10 6a02 	vldr	s12, [r0, #-8]
 8009f1e:	edd3 3a03 	vldr	s7, [r3, #12]
 8009f22:	ed11 5a01 	vldr	s10, [r1, #-4]
 8009f26:	ed50 5a01 	vldr	s11, [r0, #-4]
 8009f2a:	ee77 7a66 	vsub.f32	s15, s14, s13
 8009f2e:	ee77 4a26 	vadd.f32	s9, s14, s13
 8009f32:	ee33 4a85 	vadd.f32	s8, s7, s10
 8009f36:	ee66 6a27 	vmul.f32	s13, s12, s15
 8009f3a:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8009f3e:	ee35 5a63 	vsub.f32	s10, s10, s7
 8009f42:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8009f46:	ee77 7a05 	vadd.f32	s15, s14, s10
 8009f4a:	ee26 6a04 	vmul.f32	s12, s12, s8
 8009f4e:	ee65 5a84 	vmul.f32	s11, s11, s8
 8009f52:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8009f56:	ee36 7aa5 	vadd.f32	s14, s13, s11
 8009f5a:	ee67 7a83 	vmul.f32	s15, s15, s6
 8009f5e:	ee27 7a03 	vmul.f32	s14, s14, s6
 8009f62:	3e01      	subs	r6, #1
 8009f64:	ed02 7a02 	vstr	s14, [r2, #-8]
 8009f68:	ed42 7a01 	vstr	s15, [r2, #-4]
 8009f6c:	f1a3 0308 	sub.w	r3, r3, #8
 8009f70:	f101 0108 	add.w	r1, r1, #8
 8009f74:	f100 0008 	add.w	r0, r0, #8
 8009f78:	f102 0208 	add.w	r2, r2, #8
 8009f7c:	d1c9      	bne.n	8009f12 <arm_rfft_fast_f32+0x5e>
 8009f7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009f82:	edd1 7a00 	vldr	s15, [r1]
 8009f86:	edd1 6a01 	vldr	s13, [r1, #4]
 8009f8a:	6941      	ldr	r1, [r0, #20]
 8009f8c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8009f90:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8009f94:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8009f98:	ee27 7a23 	vmul.f32	s14, s14, s7
 8009f9c:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8009fa0:	3e01      	subs	r6, #1
 8009fa2:	ed82 7a00 	vstr	s14, [r2]
 8009fa6:	edc2 7a01 	vstr	s15, [r2, #4]
 8009faa:	00f0      	lsls	r0, r6, #3
 8009fac:	b3ee      	cbz	r6, 800a02a <arm_rfft_fast_f32+0x176>
 8009fae:	3808      	subs	r0, #8
 8009fb0:	f101 0e10 	add.w	lr, r1, #16
 8009fb4:	4420      	add	r0, r4
 8009fb6:	f104 0110 	add.w	r1, r4, #16
 8009fba:	f102 0c10 	add.w	ip, r2, #16
 8009fbe:	ed90 7a02 	vldr	s14, [r0, #8]
 8009fc2:	ed51 6a02 	vldr	s13, [r1, #-8]
 8009fc6:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8009fca:	ed90 4a03 	vldr	s8, [r0, #12]
 8009fce:	ed11 5a01 	vldr	s10, [r1, #-4]
 8009fd2:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8009fd6:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8009fda:	ee74 4a05 	vadd.f32	s9, s8, s10
 8009fde:	ee26 3a27 	vmul.f32	s6, s12, s15
 8009fe2:	ee77 6a26 	vadd.f32	s13, s14, s13
 8009fe6:	ee35 5a44 	vsub.f32	s10, s10, s8
 8009fea:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8009fee:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8009ff2:	ee77 7a05 	vadd.f32	s15, s14, s10
 8009ff6:	ee26 6a24 	vmul.f32	s12, s12, s9
 8009ffa:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8009ffe:	ee77 7ac6 	vsub.f32	s15, s15, s12
 800a002:	ee36 7ae5 	vsub.f32	s14, s13, s11
 800a006:	ee67 7aa3 	vmul.f32	s15, s15, s7
 800a00a:	ee27 7a23 	vmul.f32	s14, s14, s7
 800a00e:	3e01      	subs	r6, #1
 800a010:	ed0c 7a02 	vstr	s14, [ip, #-8]
 800a014:	ed4c 7a01 	vstr	s15, [ip, #-4]
 800a018:	f1a0 0008 	sub.w	r0, r0, #8
 800a01c:	f101 0108 	add.w	r1, r1, #8
 800a020:	f10e 0e08 	add.w	lr, lr, #8
 800a024:	f10c 0c08 	add.w	ip, ip, #8
 800a028:	d1c9      	bne.n	8009fbe <arm_rfft_fast_f32+0x10a>
 800a02a:	461a      	mov	r2, r3
 800a02c:	4629      	mov	r1, r5
 800a02e:	4638      	mov	r0, r7
 800a030:	2301      	movs	r3, #1
 800a032:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a036:	f000 bb2f 	b.w	800a698 <arm_cfft_f32>
 800a03a:	bf00      	nop

0800a03c <arm_cfft_radix8by2_f32>:
 800a03c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a040:	ed2d 8b08 	vpush	{d8-d11}
 800a044:	4607      	mov	r7, r0
 800a046:	4608      	mov	r0, r1
 800a048:	f8b7 e000 	ldrh.w	lr, [r7]
 800a04c:	687a      	ldr	r2, [r7, #4]
 800a04e:	ea4f 015e 	mov.w	r1, lr, lsr #1
 800a052:	eb00 088e 	add.w	r8, r0, lr, lsl #2
 800a056:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 800a05a:	f000 80b0 	beq.w	800a1be <arm_cfft_radix8by2_f32+0x182>
 800a05e:	008b      	lsls	r3, r1, #2
 800a060:	3310      	adds	r3, #16
 800a062:	18c6      	adds	r6, r0, r3
 800a064:	3210      	adds	r2, #16
 800a066:	4443      	add	r3, r8
 800a068:	f100 0510 	add.w	r5, r0, #16
 800a06c:	f108 0410 	add.w	r4, r8, #16
 800a070:	ed54 1a04 	vldr	s3, [r4, #-16]
 800a074:	ed54 6a03 	vldr	s13, [r4, #-12]
 800a078:	ed13 4a04 	vldr	s8, [r3, #-16]
 800a07c:	ed53 3a03 	vldr	s7, [r3, #-12]
 800a080:	ed53 5a02 	vldr	s11, [r3, #-8]
 800a084:	ed13 5a01 	vldr	s10, [r3, #-4]
 800a088:	ed14 0a02 	vldr	s0, [r4, #-8]
 800a08c:	ed54 7a01 	vldr	s15, [r4, #-4]
 800a090:	ed16 2a04 	vldr	s4, [r6, #-16]
 800a094:	ed56 2a03 	vldr	s5, [r6, #-12]
 800a098:	ed15 6a03 	vldr	s12, [r5, #-12]
 800a09c:	ed15 7a01 	vldr	s14, [r5, #-4]
 800a0a0:	ed15 3a04 	vldr	s6, [r5, #-16]
 800a0a4:	ed56 0a02 	vldr	s1, [r6, #-8]
 800a0a8:	ed16 1a01 	vldr	s2, [r6, #-4]
 800a0ac:	ed55 4a02 	vldr	s9, [r5, #-8]
 800a0b0:	ee73 ba21 	vadd.f32	s23, s6, s3
 800a0b4:	ee36 ba26 	vadd.f32	s22, s12, s13
 800a0b8:	ee37 aa27 	vadd.f32	s20, s14, s15
 800a0bc:	ee72 9a04 	vadd.f32	s19, s4, s8
 800a0c0:	ee32 9aa3 	vadd.f32	s18, s5, s7
 800a0c4:	ee31 8a05 	vadd.f32	s16, s2, s10
 800a0c8:	ee74 aa80 	vadd.f32	s21, s9, s0
 800a0cc:	ee70 8aa5 	vadd.f32	s17, s1, s11
 800a0d0:	ed45 ba04 	vstr	s23, [r5, #-16]
 800a0d4:	ed05 ba03 	vstr	s22, [r5, #-12]
 800a0d8:	ed45 aa02 	vstr	s21, [r5, #-8]
 800a0dc:	ed05 aa01 	vstr	s20, [r5, #-4]
 800a0e0:	ed06 8a01 	vstr	s16, [r6, #-4]
 800a0e4:	ed46 9a04 	vstr	s19, [r6, #-16]
 800a0e8:	ed06 9a03 	vstr	s18, [r6, #-12]
 800a0ec:	ed46 8a02 	vstr	s17, [r6, #-8]
 800a0f0:	ee76 6a66 	vsub.f32	s13, s12, s13
 800a0f4:	ee73 3ae2 	vsub.f32	s7, s7, s5
 800a0f8:	ed12 6a03 	vldr	s12, [r2, #-12]
 800a0fc:	ed52 2a04 	vldr	s5, [r2, #-16]
 800a100:	ee33 3a61 	vsub.f32	s6, s6, s3
 800a104:	ee34 4a42 	vsub.f32	s8, s8, s4
 800a108:	ee26 8a86 	vmul.f32	s16, s13, s12
 800a10c:	ee24 2a06 	vmul.f32	s4, s8, s12
 800a110:	ee63 1a22 	vmul.f32	s3, s6, s5
 800a114:	ee24 4a22 	vmul.f32	s8, s8, s5
 800a118:	ee23 3a06 	vmul.f32	s6, s6, s12
 800a11c:	ee66 6aa2 	vmul.f32	s13, s13, s5
 800a120:	ee23 6a86 	vmul.f32	s12, s7, s12
 800a124:	ee63 3aa2 	vmul.f32	s7, s7, s5
 800a128:	ee36 6a04 	vadd.f32	s12, s12, s8
 800a12c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 800a130:	ee72 3a63 	vsub.f32	s7, s4, s7
 800a134:	ee71 2a88 	vadd.f32	s5, s3, s16
 800a138:	ed44 6a03 	vstr	s13, [r4, #-12]
 800a13c:	ed44 2a04 	vstr	s5, [r4, #-16]
 800a140:	ed43 3a04 	vstr	s7, [r3, #-16]
 800a144:	ed03 6a03 	vstr	s12, [r3, #-12]
 800a148:	ee77 7a67 	vsub.f32	s15, s14, s15
 800a14c:	ee75 6ae0 	vsub.f32	s13, s11, s1
 800a150:	ed12 7a01 	vldr	s14, [r2, #-4]
 800a154:	ed52 5a02 	vldr	s11, [r2, #-8]
 800a158:	ee35 6a41 	vsub.f32	s12, s10, s2
 800a15c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 800a160:	ee67 3a87 	vmul.f32	s7, s15, s14
 800a164:	ee26 5a87 	vmul.f32	s10, s13, s14
 800a168:	ee24 4aa5 	vmul.f32	s8, s9, s11
 800a16c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 800a170:	ee64 4a87 	vmul.f32	s9, s9, s14
 800a174:	ee66 6aa5 	vmul.f32	s13, s13, s11
 800a178:	ee26 7a07 	vmul.f32	s14, s12, s14
 800a17c:	ee26 6a25 	vmul.f32	s12, s12, s11
 800a180:	ee77 7ae4 	vsub.f32	s15, s15, s9
 800a184:	ee74 5a23 	vadd.f32	s11, s8, s7
 800a188:	ee35 6a46 	vsub.f32	s12, s10, s12
 800a18c:	ee37 7a26 	vadd.f32	s14, s14, s13
 800a190:	f1be 0e01 	subs.w	lr, lr, #1
 800a194:	ed44 5a02 	vstr	s11, [r4, #-8]
 800a198:	f105 0510 	add.w	r5, r5, #16
 800a19c:	ed44 7a01 	vstr	s15, [r4, #-4]
 800a1a0:	f106 0610 	add.w	r6, r6, #16
 800a1a4:	ed03 6a02 	vstr	s12, [r3, #-8]
 800a1a8:	ed03 7a01 	vstr	s14, [r3, #-4]
 800a1ac:	f102 0210 	add.w	r2, r2, #16
 800a1b0:	f104 0410 	add.w	r4, r4, #16
 800a1b4:	f103 0310 	add.w	r3, r3, #16
 800a1b8:	f47f af5a 	bne.w	800a070 <arm_cfft_radix8by2_f32+0x34>
 800a1bc:	687a      	ldr	r2, [r7, #4]
 800a1be:	b28c      	uxth	r4, r1
 800a1c0:	4621      	mov	r1, r4
 800a1c2:	2302      	movs	r3, #2
 800a1c4:	f000 fae2 	bl	800a78c <arm_radix8_butterfly_f32>
 800a1c8:	ecbd 8b08 	vpop	{d8-d11}
 800a1cc:	4621      	mov	r1, r4
 800a1ce:	687a      	ldr	r2, [r7, #4]
 800a1d0:	4640      	mov	r0, r8
 800a1d2:	2302      	movs	r3, #2
 800a1d4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a1d8:	f000 bad8 	b.w	800a78c <arm_radix8_butterfly_f32>

0800a1dc <arm_cfft_radix8by4_f32>:
 800a1dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1e0:	ed2d 8b0a 	vpush	{d8-d12}
 800a1e4:	8802      	ldrh	r2, [r0, #0]
 800a1e6:	ed91 6a00 	vldr	s12, [r1]
 800a1ea:	b08f      	sub	sp, #60	; 0x3c
 800a1ec:	460f      	mov	r7, r1
 800a1ee:	0852      	lsrs	r2, r2, #1
 800a1f0:	6841      	ldr	r1, [r0, #4]
 800a1f2:	900c      	str	r0, [sp, #48]	; 0x30
 800a1f4:	0093      	lsls	r3, r2, #2
 800a1f6:	4638      	mov	r0, r7
 800a1f8:	4418      	add	r0, r3
 800a1fa:	4606      	mov	r6, r0
 800a1fc:	9009      	str	r0, [sp, #36]	; 0x24
 800a1fe:	4418      	add	r0, r3
 800a200:	edd0 6a00 	vldr	s13, [r0]
 800a204:	ed96 4a00 	vldr	s8, [r6]
 800a208:	edd6 2a01 	vldr	s5, [r6, #4]
 800a20c:	edd0 7a01 	vldr	s15, [r0, #4]
 800a210:	900a      	str	r0, [sp, #40]	; 0x28
 800a212:	ee76 5a26 	vadd.f32	s11, s12, s13
 800a216:	4604      	mov	r4, r0
 800a218:	4625      	mov	r5, r4
 800a21a:	441c      	add	r4, r3
 800a21c:	edd4 4a00 	vldr	s9, [r4]
 800a220:	ed97 7a01 	vldr	s14, [r7, #4]
 800a224:	ed94 3a01 	vldr	s6, [r4, #4]
 800a228:	9401      	str	r4, [sp, #4]
 800a22a:	ee35 5a84 	vadd.f32	s10, s11, s8
 800a22e:	4630      	mov	r0, r6
 800a230:	ee35 5a24 	vadd.f32	s10, s10, s9
 800a234:	463e      	mov	r6, r7
 800a236:	ee15 ea10 	vmov	lr, s10
 800a23a:	ee76 6a66 	vsub.f32	s13, s12, s13
 800a23e:	f846 eb08 	str.w	lr, [r6], #8
 800a242:	ee37 6a27 	vadd.f32	s12, s14, s15
 800a246:	ed90 5a01 	vldr	s10, [r0, #4]
 800a24a:	9605      	str	r6, [sp, #20]
 800a24c:	ee77 7a67 	vsub.f32	s15, s14, s15
 800a250:	9e01      	ldr	r6, [sp, #4]
 800a252:	9707      	str	r7, [sp, #28]
 800a254:	ee76 3aa2 	vadd.f32	s7, s13, s5
 800a258:	ed96 2a01 	vldr	s4, [r6, #4]
 800a25c:	ee36 7a05 	vadd.f32	s14, s12, s10
 800a260:	ee75 5ac4 	vsub.f32	s11, s11, s8
 800a264:	ee37 5ac4 	vsub.f32	s10, s15, s8
 800a268:	ee77 7a84 	vadd.f32	s15, s15, s8
 800a26c:	ee33 4ac3 	vsub.f32	s8, s7, s6
 800a270:	4604      	mov	r4, r0
 800a272:	46a3      	mov	fp, r4
 800a274:	ee37 7a02 	vadd.f32	s14, s14, s4
 800a278:	ee35 5a24 	vadd.f32	s10, s10, s9
 800a27c:	ee14 8a10 	vmov	r8, s8
 800a280:	46a4      	mov	ip, r4
 800a282:	ee75 5ae4 	vsub.f32	s11, s11, s9
 800a286:	ed87 7a01 	vstr	s14, [r7, #4]
 800a28a:	f84b 8b08 	str.w	r8, [fp], #8
 800a28e:	f1ac 0704 	sub.w	r7, ip, #4
 800a292:	ed8c 5a01 	vstr	s10, [ip, #4]
 800a296:	f101 0c08 	add.w	ip, r1, #8
 800a29a:	462c      	mov	r4, r5
 800a29c:	f8cd c010 	str.w	ip, [sp, #16]
 800a2a0:	ee15 ca90 	vmov	ip, s11
 800a2a4:	ee36 6a62 	vsub.f32	s12, s12, s5
 800a2a8:	f844 cb08 	str.w	ip, [r4], #8
 800a2ac:	ee76 6ae2 	vsub.f32	s13, s13, s5
 800a2b0:	ee36 6a43 	vsub.f32	s12, s12, s6
 800a2b4:	9406      	str	r4, [sp, #24]
 800a2b6:	ee76 6a83 	vadd.f32	s13, s13, s6
 800a2ba:	f101 0410 	add.w	r4, r1, #16
 800a2be:	0852      	lsrs	r2, r2, #1
 800a2c0:	9402      	str	r4, [sp, #8]
 800a2c2:	ed85 6a01 	vstr	s12, [r5, #4]
 800a2c6:	462c      	mov	r4, r5
 800a2c8:	f101 0518 	add.w	r5, r1, #24
 800a2cc:	920b      	str	r2, [sp, #44]	; 0x2c
 800a2ce:	46b2      	mov	sl, r6
 800a2d0:	9503      	str	r5, [sp, #12]
 800a2d2:	ee77 7ae4 	vsub.f32	s15, s15, s9
 800a2d6:	3a02      	subs	r2, #2
 800a2d8:	ee16 5a90 	vmov	r5, s13
 800a2dc:	46b6      	mov	lr, r6
 800a2de:	4630      	mov	r0, r6
 800a2e0:	0852      	lsrs	r2, r2, #1
 800a2e2:	f84a 5b08 	str.w	r5, [sl], #8
 800a2e6:	f1a0 0604 	sub.w	r6, r0, #4
 800a2ea:	edce 7a01 	vstr	s15, [lr, #4]
 800a2ee:	9208      	str	r2, [sp, #32]
 800a2f0:	f000 8130 	beq.w	800a554 <arm_cfft_radix8by4_f32+0x378>
 800a2f4:	4691      	mov	r9, r2
 800a2f6:	9a07      	ldr	r2, [sp, #28]
 800a2f8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800a2fc:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 800a300:	3b08      	subs	r3, #8
 800a302:	f102 0510 	add.w	r5, r2, #16
 800a306:	f101 0c20 	add.w	ip, r1, #32
 800a30a:	f1a4 020c 	sub.w	r2, r4, #12
 800a30e:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 800a312:	4433      	add	r3, r6
 800a314:	3410      	adds	r4, #16
 800a316:	4650      	mov	r0, sl
 800a318:	4659      	mov	r1, fp
 800a31a:	ed55 3a02 	vldr	s7, [r5, #-8]
 800a31e:	ed14 5a02 	vldr	s10, [r4, #-8]
 800a322:	ed91 7a00 	vldr	s14, [r1]
 800a326:	edd0 7a00 	vldr	s15, [r0]
 800a32a:	ed54 5a01 	vldr	s11, [r4, #-4]
 800a32e:	ed15 4a01 	vldr	s8, [r5, #-4]
 800a332:	edd0 6a01 	vldr	s13, [r0, #4]
 800a336:	ed91 6a01 	vldr	s12, [r1, #4]
 800a33a:	ee33 8a85 	vadd.f32	s16, s7, s10
 800a33e:	ee34 0a25 	vadd.f32	s0, s8, s11
 800a342:	ee78 4a07 	vadd.f32	s9, s16, s14
 800a346:	ee74 5a65 	vsub.f32	s11, s8, s11
 800a34a:	ee74 4aa7 	vadd.f32	s9, s9, s15
 800a34e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 800a352:	ed45 4a02 	vstr	s9, [r5, #-8]
 800a356:	edd1 4a01 	vldr	s9, [r1, #4]
 800a35a:	ed90 4a01 	vldr	s8, [r0, #4]
 800a35e:	ee70 4a24 	vadd.f32	s9, s0, s9
 800a362:	ee75 aa06 	vadd.f32	s21, s10, s12
 800a366:	ee74 4a84 	vadd.f32	s9, s9, s8
 800a36a:	ee35 aac7 	vsub.f32	s20, s11, s14
 800a36e:	ed45 4a01 	vstr	s9, [r5, #-4]
 800a372:	edd6 1a00 	vldr	s3, [r6]
 800a376:	edd7 0a00 	vldr	s1, [r7]
 800a37a:	ed92 4a02 	vldr	s8, [r2, #8]
 800a37e:	edd3 3a02 	vldr	s7, [r3, #8]
 800a382:	ed93 2a01 	vldr	s4, [r3, #4]
 800a386:	ed16 1a01 	vldr	s2, [r6, #-4]
 800a38a:	edd2 2a01 	vldr	s5, [r2, #4]
 800a38e:	ed57 9a01 	vldr	s19, [r7, #-4]
 800a392:	ee70 4aa1 	vadd.f32	s9, s1, s3
 800a396:	ee39 3a81 	vadd.f32	s6, s19, s2
 800a39a:	ee74 8a84 	vadd.f32	s17, s9, s8
 800a39e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 800a3a2:	ee78 8aa3 	vadd.f32	s17, s17, s7
 800a3a6:	ee7a aae6 	vsub.f32	s21, s21, s13
 800a3aa:	ee18 aa90 	vmov	sl, s17
 800a3ae:	f847 a908 	str.w	sl, [r7], #-8
 800a3b2:	edd2 8a01 	vldr	s17, [r2, #4]
 800a3b6:	ed93 9a01 	vldr	s18, [r3, #4]
 800a3ba:	ee73 8a28 	vadd.f32	s17, s6, s17
 800a3be:	ee3a aa27 	vadd.f32	s20, s20, s15
 800a3c2:	ee78 8a89 	vadd.f32	s17, s17, s18
 800a3c6:	ee74 0a63 	vsub.f32	s1, s8, s7
 800a3ca:	edc7 8a01 	vstr	s17, [r7, #4]
 800a3ce:	ed18 ba02 	vldr	s22, [r8, #-8]
 800a3d2:	ed58 8a01 	vldr	s17, [r8, #-4]
 800a3d6:	ee39 1ac1 	vsub.f32	s2, s19, s2
 800a3da:	ee6a ba28 	vmul.f32	s23, s20, s17
 800a3de:	ee2a ca8b 	vmul.f32	s24, s21, s22
 800a3e2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 800a3e6:	ee31 9a20 	vadd.f32	s18, s2, s1
 800a3ea:	ee79 9a82 	vadd.f32	s19, s19, s4
 800a3ee:	ee3c ca2b 	vadd.f32	s24, s24, s23
 800a3f2:	ee6a aaa8 	vmul.f32	s21, s21, s17
 800a3f6:	ee69 baa8 	vmul.f32	s23, s19, s17
 800a3fa:	ee2a aa0b 	vmul.f32	s20, s20, s22
 800a3fe:	ee69 9a8b 	vmul.f32	s19, s19, s22
 800a402:	ee69 8a28 	vmul.f32	s17, s18, s17
 800a406:	ee29 ba0b 	vmul.f32	s22, s18, s22
 800a40a:	ee1c aa10 	vmov	sl, s24
 800a40e:	ee78 8aa9 	vadd.f32	s17, s17, s19
 800a412:	f841 ab08 	str.w	sl, [r1], #8
 800a416:	ee3a aa6a 	vsub.f32	s20, s20, s21
 800a41a:	ee3b bacb 	vsub.f32	s22, s23, s22
 800a41e:	ee34 4ac4 	vsub.f32	s8, s9, s8
 800a422:	ee33 3a62 	vsub.f32	s6, s6, s5
 800a426:	ed01 aa01 	vstr	s20, [r1, #-4]
 800a42a:	edc2 8a01 	vstr	s17, [r2, #4]
 800a42e:	ed82 ba02 	vstr	s22, [r2, #8]
 800a432:	ed5c 4a04 	vldr	s9, [ip, #-16]
 800a436:	ee74 3a63 	vsub.f32	s7, s8, s7
 800a43a:	ee38 8a47 	vsub.f32	s16, s16, s14
 800a43e:	ed1c 4a03 	vldr	s8, [ip, #-12]
 800a442:	ee30 0a46 	vsub.f32	s0, s0, s12
 800a446:	ee33 3a42 	vsub.f32	s6, s6, s4
 800a44a:	ee38 8a67 	vsub.f32	s16, s16, s15
 800a44e:	ee30 0a66 	vsub.f32	s0, s0, s13
 800a452:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 800a456:	ee63 8a04 	vmul.f32	s17, s6, s8
 800a45a:	ee28 aa24 	vmul.f32	s20, s16, s9
 800a45e:	ee60 9a04 	vmul.f32	s19, s0, s8
 800a462:	ee28 8a04 	vmul.f32	s16, s16, s8
 800a466:	ee20 0a24 	vmul.f32	s0, s0, s9
 800a46a:	ee63 3a84 	vmul.f32	s7, s7, s8
 800a46e:	ee39 4a68 	vsub.f32	s8, s18, s17
 800a472:	ee7a 9a29 	vadd.f32	s19, s20, s19
 800a476:	ee14 aa10 	vmov	sl, s8
 800a47a:	ee30 0a48 	vsub.f32	s0, s0, s16
 800a47e:	ee63 4a24 	vmul.f32	s9, s6, s9
 800a482:	ed44 9a02 	vstr	s19, [r4, #-8]
 800a486:	ee73 3ae4 	vsub.f32	s7, s7, s9
 800a48a:	ed04 0a01 	vstr	s0, [r4, #-4]
 800a48e:	f846 a908 	str.w	sl, [r6], #-8
 800a492:	ee35 6a46 	vsub.f32	s12, s10, s12
 800a496:	ee35 7a87 	vadd.f32	s14, s11, s14
 800a49a:	edc6 3a01 	vstr	s7, [r6, #4]
 800a49e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800a4a2:	ee77 7a67 	vsub.f32	s15, s14, s15
 800a4a6:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 800a4aa:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 800a4ae:	ee67 5a86 	vmul.f32	s11, s15, s12
 800a4b2:	ee26 5a87 	vmul.f32	s10, s13, s14
 800a4b6:	ee72 2a62 	vsub.f32	s5, s4, s5
 800a4ba:	ee30 1ac1 	vsub.f32	s2, s1, s2
 800a4be:	ee72 2ae1 	vsub.f32	s5, s5, s3
 800a4c2:	ee75 5a25 	vadd.f32	s11, s10, s11
 800a4c6:	ee62 0a86 	vmul.f32	s1, s5, s12
 800a4ca:	ee66 6a86 	vmul.f32	s13, s13, s12
 800a4ce:	ee67 7a87 	vmul.f32	s15, s15, s14
 800a4d2:	ee21 6a06 	vmul.f32	s12, s2, s12
 800a4d6:	ee62 2a87 	vmul.f32	s5, s5, s14
 800a4da:	ee21 1a07 	vmul.f32	s2, s2, s14
 800a4de:	ee15 aa90 	vmov	sl, s11
 800a4e2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800a4e6:	f840 ab08 	str.w	sl, [r0], #8
 800a4ea:	ee30 1ac1 	vsub.f32	s2, s1, s2
 800a4ee:	ee76 2a22 	vadd.f32	s5, s12, s5
 800a4f2:	f1b9 0901 	subs.w	r9, r9, #1
 800a4f6:	ed40 7a01 	vstr	s15, [r0, #-4]
 800a4fa:	f105 0508 	add.w	r5, r5, #8
 800a4fe:	ed83 1a02 	vstr	s2, [r3, #8]
 800a502:	edc3 2a01 	vstr	s5, [r3, #4]
 800a506:	f108 0808 	add.w	r8, r8, #8
 800a50a:	f1a2 0208 	sub.w	r2, r2, #8
 800a50e:	f10c 0c10 	add.w	ip, ip, #16
 800a512:	f104 0408 	add.w	r4, r4, #8
 800a516:	f10e 0e18 	add.w	lr, lr, #24
 800a51a:	f1a3 0308 	sub.w	r3, r3, #8
 800a51e:	f47f aefc 	bne.w	800a31a <arm_cfft_radix8by4_f32+0x13e>
 800a522:	9908      	ldr	r1, [sp, #32]
 800a524:	9802      	ldr	r0, [sp, #8]
 800a526:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 800a52a:	00cb      	lsls	r3, r1, #3
 800a52c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 800a530:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 800a534:	9102      	str	r1, [sp, #8]
 800a536:	9905      	ldr	r1, [sp, #20]
 800a538:	4419      	add	r1, r3
 800a53a:	9105      	str	r1, [sp, #20]
 800a53c:	9904      	ldr	r1, [sp, #16]
 800a53e:	4419      	add	r1, r3
 800a540:	9104      	str	r1, [sp, #16]
 800a542:	9906      	ldr	r1, [sp, #24]
 800a544:	449b      	add	fp, r3
 800a546:	4419      	add	r1, r3
 800a548:	449a      	add	sl, r3
 800a54a:	9b03      	ldr	r3, [sp, #12]
 800a54c:	9106      	str	r1, [sp, #24]
 800a54e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a552:	9303      	str	r3, [sp, #12]
 800a554:	9a05      	ldr	r2, [sp, #20]
 800a556:	9806      	ldr	r0, [sp, #24]
 800a558:	ed92 4a00 	vldr	s8, [r2]
 800a55c:	ed90 7a00 	vldr	s14, [r0]
 800a560:	ed9b 3a00 	vldr	s6, [fp]
 800a564:	edda 3a00 	vldr	s7, [sl]
 800a568:	edd2 4a01 	vldr	s9, [r2, #4]
 800a56c:	edd0 6a01 	vldr	s13, [r0, #4]
 800a570:	ed9a 2a01 	vldr	s4, [sl, #4]
 800a574:	eddb 7a01 	vldr	s15, [fp, #4]
 800a578:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 800a57c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800a57e:	ee34 6a07 	vadd.f32	s12, s8, s14
 800a582:	ee74 5aa6 	vadd.f32	s11, s9, s13
 800a586:	ee36 5a03 	vadd.f32	s10, s12, s6
 800a58a:	ee74 6ae6 	vsub.f32	s13, s9, s13
 800a58e:	ee35 5a23 	vadd.f32	s10, s10, s7
 800a592:	ee34 7a47 	vsub.f32	s14, s8, s14
 800a596:	ed82 5a00 	vstr	s10, [r2]
 800a59a:	ed9b 5a01 	vldr	s10, [fp, #4]
 800a59e:	edda 4a01 	vldr	s9, [sl, #4]
 800a5a2:	ee35 5a85 	vadd.f32	s10, s11, s10
 800a5a6:	ee37 4a27 	vadd.f32	s8, s14, s15
 800a5aa:	ee35 5a24 	vadd.f32	s10, s10, s9
 800a5ae:	ee76 4ac3 	vsub.f32	s9, s13, s6
 800a5b2:	ed82 5a01 	vstr	s10, [r2, #4]
 800a5b6:	9a04      	ldr	r2, [sp, #16]
 800a5b8:	ee34 5aa3 	vadd.f32	s10, s9, s7
 800a5bc:	edd2 1a00 	vldr	s3, [r2]
 800a5c0:	edd2 2a01 	vldr	s5, [r2, #4]
 800a5c4:	9a02      	ldr	r2, [sp, #8]
 800a5c6:	ee34 4a42 	vsub.f32	s8, s8, s4
 800a5ca:	ee36 6a43 	vsub.f32	s12, s12, s6
 800a5ce:	ee64 4a21 	vmul.f32	s9, s8, s3
 800a5d2:	ee24 4a22 	vmul.f32	s8, s8, s5
 800a5d6:	ee65 2a22 	vmul.f32	s5, s10, s5
 800a5da:	ee25 5a21 	vmul.f32	s10, s10, s3
 800a5de:	ee74 2aa2 	vadd.f32	s5, s9, s5
 800a5e2:	ee35 5a44 	vsub.f32	s10, s10, s8
 800a5e6:	ee75 5ae7 	vsub.f32	s11, s11, s15
 800a5ea:	edcb 2a00 	vstr	s5, [fp]
 800a5ee:	ed8b 5a01 	vstr	s10, [fp, #4]
 800a5f2:	ed92 4a01 	vldr	s8, [r2, #4]
 800a5f6:	ed92 5a00 	vldr	s10, [r2]
 800a5fa:	9a03      	ldr	r2, [sp, #12]
 800a5fc:	ee36 6a63 	vsub.f32	s12, s12, s7
 800a600:	ee75 5ac2 	vsub.f32	s11, s11, s4
 800a604:	ee66 4a05 	vmul.f32	s9, s12, s10
 800a608:	ee25 5a85 	vmul.f32	s10, s11, s10
 800a60c:	ee26 6a04 	vmul.f32	s12, s12, s8
 800a610:	ee65 5a84 	vmul.f32	s11, s11, s8
 800a614:	ee35 6a46 	vsub.f32	s12, s10, s12
 800a618:	ee74 5aa5 	vadd.f32	s11, s9, s11
 800a61c:	ee76 6a83 	vadd.f32	s13, s13, s6
 800a620:	ee37 7a67 	vsub.f32	s14, s14, s15
 800a624:	ed80 6a01 	vstr	s12, [r0, #4]
 800a628:	edc0 5a00 	vstr	s11, [r0]
 800a62c:	edd2 5a01 	vldr	s11, [r2, #4]
 800a630:	9807      	ldr	r0, [sp, #28]
 800a632:	ee77 7a02 	vadd.f32	s15, s14, s4
 800a636:	ee36 7ae3 	vsub.f32	s14, s13, s7
 800a63a:	edd2 6a00 	vldr	s13, [r2]
 800a63e:	ee27 6aa6 	vmul.f32	s12, s15, s13
 800a642:	ee67 6a26 	vmul.f32	s13, s14, s13
 800a646:	ee67 7aa5 	vmul.f32	s15, s15, s11
 800a64a:	ee27 7a25 	vmul.f32	s14, s14, s11
 800a64e:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800a652:	ee36 7a07 	vadd.f32	s14, s12, s14
 800a656:	edca 7a01 	vstr	s15, [sl, #4]
 800a65a:	ed8a 7a00 	vstr	s14, [sl]
 800a65e:	6872      	ldr	r2, [r6, #4]
 800a660:	4621      	mov	r1, r4
 800a662:	2304      	movs	r3, #4
 800a664:	f000 f892 	bl	800a78c <arm_radix8_butterfly_f32>
 800a668:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a66a:	6872      	ldr	r2, [r6, #4]
 800a66c:	4621      	mov	r1, r4
 800a66e:	2304      	movs	r3, #4
 800a670:	f000 f88c 	bl	800a78c <arm_radix8_butterfly_f32>
 800a674:	980a      	ldr	r0, [sp, #40]	; 0x28
 800a676:	6872      	ldr	r2, [r6, #4]
 800a678:	4621      	mov	r1, r4
 800a67a:	2304      	movs	r3, #4
 800a67c:	f000 f886 	bl	800a78c <arm_radix8_butterfly_f32>
 800a680:	6872      	ldr	r2, [r6, #4]
 800a682:	9801      	ldr	r0, [sp, #4]
 800a684:	4621      	mov	r1, r4
 800a686:	2304      	movs	r3, #4
 800a688:	b00f      	add	sp, #60	; 0x3c
 800a68a:	ecbd 8b0a 	vpop	{d8-d12}
 800a68e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a692:	f000 b87b 	b.w	800a78c <arm_radix8_butterfly_f32>
 800a696:	bf00      	nop

0800a698 <arm_cfft_f32>:
 800a698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a69c:	2a01      	cmp	r2, #1
 800a69e:	4606      	mov	r6, r0
 800a6a0:	4617      	mov	r7, r2
 800a6a2:	460c      	mov	r4, r1
 800a6a4:	4698      	mov	r8, r3
 800a6a6:	8805      	ldrh	r5, [r0, #0]
 800a6a8:	d054      	beq.n	800a754 <arm_cfft_f32+0xbc>
 800a6aa:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 800a6ae:	d04c      	beq.n	800a74a <arm_cfft_f32+0xb2>
 800a6b0:	d916      	bls.n	800a6e0 <arm_cfft_f32+0x48>
 800a6b2:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 800a6b6:	d01a      	beq.n	800a6ee <arm_cfft_f32+0x56>
 800a6b8:	d95c      	bls.n	800a774 <arm_cfft_f32+0xdc>
 800a6ba:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 800a6be:	d044      	beq.n	800a74a <arm_cfft_f32+0xb2>
 800a6c0:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 800a6c4:	d105      	bne.n	800a6d2 <arm_cfft_f32+0x3a>
 800a6c6:	2301      	movs	r3, #1
 800a6c8:	6872      	ldr	r2, [r6, #4]
 800a6ca:	4629      	mov	r1, r5
 800a6cc:	4620      	mov	r0, r4
 800a6ce:	f000 f85d 	bl	800a78c <arm_radix8_butterfly_f32>
 800a6d2:	f1b8 0f00 	cmp.w	r8, #0
 800a6d6:	d111      	bne.n	800a6fc <arm_cfft_f32+0x64>
 800a6d8:	2f01      	cmp	r7, #1
 800a6da:	d016      	beq.n	800a70a <arm_cfft_f32+0x72>
 800a6dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a6e0:	2d20      	cmp	r5, #32
 800a6e2:	d032      	beq.n	800a74a <arm_cfft_f32+0xb2>
 800a6e4:	d94a      	bls.n	800a77c <arm_cfft_f32+0xe4>
 800a6e6:	2d40      	cmp	r5, #64	; 0x40
 800a6e8:	d0ed      	beq.n	800a6c6 <arm_cfft_f32+0x2e>
 800a6ea:	2d80      	cmp	r5, #128	; 0x80
 800a6ec:	d1f1      	bne.n	800a6d2 <arm_cfft_f32+0x3a>
 800a6ee:	4621      	mov	r1, r4
 800a6f0:	4630      	mov	r0, r6
 800a6f2:	f7ff fca3 	bl	800a03c <arm_cfft_radix8by2_f32>
 800a6f6:	f1b8 0f00 	cmp.w	r8, #0
 800a6fa:	d0ed      	beq.n	800a6d8 <arm_cfft_f32+0x40>
 800a6fc:	68b2      	ldr	r2, [r6, #8]
 800a6fe:	89b1      	ldrh	r1, [r6, #12]
 800a700:	4620      	mov	r0, r4
 800a702:	f7f5 fd75 	bl	80001f0 <arm_bitreversal_32>
 800a706:	2f01      	cmp	r7, #1
 800a708:	d1e8      	bne.n	800a6dc <arm_cfft_f32+0x44>
 800a70a:	ee07 5a90 	vmov	s15, r5
 800a70e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a712:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a716:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800a71a:	2d00      	cmp	r5, #0
 800a71c:	d0de      	beq.n	800a6dc <arm_cfft_f32+0x44>
 800a71e:	f104 0108 	add.w	r1, r4, #8
 800a722:	2300      	movs	r3, #0
 800a724:	3301      	adds	r3, #1
 800a726:	429d      	cmp	r5, r3
 800a728:	f101 0108 	add.w	r1, r1, #8
 800a72c:	ed11 7a04 	vldr	s14, [r1, #-16]
 800a730:	ed51 7a03 	vldr	s15, [r1, #-12]
 800a734:	ee27 7a26 	vmul.f32	s14, s14, s13
 800a738:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 800a73c:	ed01 7a04 	vstr	s14, [r1, #-16]
 800a740:	ed41 7a03 	vstr	s15, [r1, #-12]
 800a744:	d1ee      	bne.n	800a724 <arm_cfft_f32+0x8c>
 800a746:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a74a:	4621      	mov	r1, r4
 800a74c:	4630      	mov	r0, r6
 800a74e:	f7ff fd45 	bl	800a1dc <arm_cfft_radix8by4_f32>
 800a752:	e7be      	b.n	800a6d2 <arm_cfft_f32+0x3a>
 800a754:	b1ad      	cbz	r5, 800a782 <arm_cfft_f32+0xea>
 800a756:	f101 030c 	add.w	r3, r1, #12
 800a75a:	2200      	movs	r2, #0
 800a75c:	ed53 7a02 	vldr	s15, [r3, #-8]
 800a760:	3201      	adds	r2, #1
 800a762:	eef1 7a67 	vneg.f32	s15, s15
 800a766:	4295      	cmp	r5, r2
 800a768:	ed43 7a02 	vstr	s15, [r3, #-8]
 800a76c:	f103 0308 	add.w	r3, r3, #8
 800a770:	d1f4      	bne.n	800a75c <arm_cfft_f32+0xc4>
 800a772:	e79a      	b.n	800a6aa <arm_cfft_f32+0x12>
 800a774:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 800a778:	d0a5      	beq.n	800a6c6 <arm_cfft_f32+0x2e>
 800a77a:	e7aa      	b.n	800a6d2 <arm_cfft_f32+0x3a>
 800a77c:	2d10      	cmp	r5, #16
 800a77e:	d0b6      	beq.n	800a6ee <arm_cfft_f32+0x56>
 800a780:	e7a7      	b.n	800a6d2 <arm_cfft_f32+0x3a>
 800a782:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 800a786:	d894      	bhi.n	800a6b2 <arm_cfft_f32+0x1a>
 800a788:	e7aa      	b.n	800a6e0 <arm_cfft_f32+0x48>
 800a78a:	bf00      	nop

0800a78c <arm_radix8_butterfly_f32>:
 800a78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a790:	ed2d 8b10 	vpush	{d8-d15}
 800a794:	461c      	mov	r4, r3
 800a796:	b09d      	sub	sp, #116	; 0x74
 800a798:	4603      	mov	r3, r0
 800a79a:	3304      	adds	r3, #4
 800a79c:	ed9f bac4 	vldr	s22, [pc, #784]	; 800aab0 <arm_radix8_butterfly_f32+0x324>
 800a7a0:	9019      	str	r0, [sp, #100]	; 0x64
 800a7a2:	921a      	str	r2, [sp, #104]	; 0x68
 800a7a4:	468b      	mov	fp, r1
 800a7a6:	931b      	str	r3, [sp, #108]	; 0x6c
 800a7a8:	468a      	mov	sl, r1
 800a7aa:	46a1      	mov	r9, r4
 800a7ac:	4607      	mov	r7, r0
 800a7ae:	ea4f 03db 	mov.w	r3, fp, lsr #3
 800a7b2:	ea4f 0843 	mov.w	r8, r3, lsl #1
 800a7b6:	eb03 0508 	add.w	r5, r3, r8
 800a7ba:	195c      	adds	r4, r3, r5
 800a7bc:	00de      	lsls	r6, r3, #3
 800a7be:	191a      	adds	r2, r3, r4
 800a7c0:	9600      	str	r6, [sp, #0]
 800a7c2:	1898      	adds	r0, r3, r2
 800a7c4:	4619      	mov	r1, r3
 800a7c6:	9e00      	ldr	r6, [sp, #0]
 800a7c8:	9311      	str	r3, [sp, #68]	; 0x44
 800a7ca:	4401      	add	r1, r0
 800a7cc:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 800a7d0:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
 800a7d4:	19be      	adds	r6, r7, r6
 800a7d6:	eb07 05c5 	add.w	r5, r7, r5, lsl #3
 800a7da:	eb07 04c4 	add.w	r4, r7, r4, lsl #3
 800a7de:	eb07 00c0 	add.w	r0, r7, r0, lsl #3
 800a7e2:	9f00      	ldr	r7, [sp, #0]
 800a7e4:	011b      	lsls	r3, r3, #4
 800a7e6:	eb06 0e07 	add.w	lr, r6, r7
 800a7ea:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800a7ec:	9302      	str	r3, [sp, #8]
 800a7ee:	3204      	adds	r2, #4
 800a7f0:	3104      	adds	r1, #4
 800a7f2:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800a7f6:	f04f 0c00 	mov.w	ip, #0
 800a7fa:	edde 7a00 	vldr	s15, [lr]
 800a7fe:	edd6 6a00 	vldr	s13, [r6]
 800a802:	ed95 2a00 	vldr	s4, [r5]
 800a806:	ed17 aa01 	vldr	s20, [r7, #-4]
 800a80a:	edd4 4a00 	vldr	s9, [r4]
 800a80e:	ed90 5a00 	vldr	s10, [r0]
 800a812:	ed12 7a01 	vldr	s14, [r2, #-4]
 800a816:	ed51 0a01 	vldr	s1, [r1, #-4]
 800a81a:	ee77 8a85 	vadd.f32	s17, s15, s10
 800a81e:	ee76 3a87 	vadd.f32	s7, s13, s14
 800a822:	ee32 4a20 	vadd.f32	s8, s4, s1
 800a826:	ee3a 3a24 	vadd.f32	s6, s20, s9
 800a82a:	ee33 6a84 	vadd.f32	s12, s7, s8
 800a82e:	ee73 5a28 	vadd.f32	s11, s6, s17
 800a832:	ee36 7ac7 	vsub.f32	s14, s13, s14
 800a836:	ee75 6a86 	vadd.f32	s13, s11, s12
 800a83a:	ee75 5ac6 	vsub.f32	s11, s11, s12
 800a83e:	ed47 6a01 	vstr	s13, [r7, #-4]
 800a842:	edc4 5a00 	vstr	s11, [r4]
 800a846:	ed92 9a00 	vldr	s18, [r2]
 800a84a:	ed95 1a01 	vldr	s2, [r5, #4]
 800a84e:	edd6 5a01 	vldr	s11, [r6, #4]
 800a852:	ed91 6a00 	vldr	s12, [r1]
 800a856:	edd7 2a00 	vldr	s5, [r7]
 800a85a:	edd4 1a01 	vldr	s3, [r4, #4]
 800a85e:	edde 6a01 	vldr	s13, [lr, #4]
 800a862:	edd0 9a01 	vldr	s19, [r0, #4]
 800a866:	ee72 0a60 	vsub.f32	s1, s4, s1
 800a86a:	ee71 aa46 	vsub.f32	s21, s2, s12
 800a86e:	ee35 2ac9 	vsub.f32	s4, s11, s18
 800a872:	ee37 0a60 	vsub.f32	s0, s14, s1
 800a876:	ee32 8a2a 	vadd.f32	s16, s4, s21
 800a87a:	ee37 7a20 	vadd.f32	s14, s14, s1
 800a87e:	ee32 2a6a 	vsub.f32	s4, s4, s21
 800a882:	ee37 5ac5 	vsub.f32	s10, s15, s10
 800a886:	ee75 5a89 	vadd.f32	s11, s11, s18
 800a88a:	ee60 0a0b 	vmul.f32	s1, s0, s22
 800a88e:	ee7a 4a64 	vsub.f32	s9, s20, s9
 800a892:	ee31 6a06 	vadd.f32	s12, s2, s12
 800a896:	ee36 9aa9 	vadd.f32	s18, s13, s19
 800a89a:	ee32 1aa1 	vadd.f32	s2, s5, s3
 800a89e:	ee76 6ae9 	vsub.f32	s13, s13, s19
 800a8a2:	ee72 1ae1 	vsub.f32	s3, s5, s3
 800a8a6:	ee28 8a0b 	vmul.f32	s16, s16, s22
 800a8aa:	ee62 2a0b 	vmul.f32	s5, s4, s22
 800a8ae:	ee67 7a0b 	vmul.f32	s15, s14, s22
 800a8b2:	ee33 3a68 	vsub.f32	s6, s6, s17
 800a8b6:	ee36 0a88 	vadd.f32	s0, s13, s16
 800a8ba:	ee75 8a86 	vadd.f32	s17, s11, s12
 800a8be:	ee36 7ac8 	vsub.f32	s14, s13, s16
 800a8c2:	ee33 4ac4 	vsub.f32	s8, s7, s8
 800a8c6:	ee74 6ae0 	vsub.f32	s13, s9, s1
 800a8ca:	ee74 3aa0 	vadd.f32	s7, s9, s1
 800a8ce:	ee35 6ac6 	vsub.f32	s12, s11, s12
 800a8d2:	ee75 4a27 	vadd.f32	s9, s10, s15
 800a8d6:	ee71 5a49 	vsub.f32	s11, s2, s18
 800a8da:	ee31 2a09 	vadd.f32	s4, s2, s18
 800a8de:	ee75 7a67 	vsub.f32	s15, s10, s15
 800a8e2:	ee31 1aa2 	vadd.f32	s2, s3, s5
 800a8e6:	ee71 2ae2 	vsub.f32	s5, s3, s5
 800a8ea:	ee73 0a06 	vadd.f32	s1, s6, s12
 800a8ee:	ee75 1ac4 	vsub.f32	s3, s11, s8
 800a8f2:	ee36 5a87 	vadd.f32	s10, s13, s14
 800a8f6:	ee32 8a28 	vadd.f32	s16, s4, s17
 800a8fa:	ee33 6a46 	vsub.f32	s12, s6, s12
 800a8fe:	ee34 4a25 	vadd.f32	s8, s8, s11
 800a902:	ee33 3a80 	vadd.f32	s6, s7, s0
 800a906:	ee36 7ac7 	vsub.f32	s14, s13, s14
 800a90a:	ee71 5a64 	vsub.f32	s11, s2, s9
 800a90e:	ee72 6ae7 	vsub.f32	s13, s5, s15
 800a912:	ee32 2a68 	vsub.f32	s4, s4, s17
 800a916:	ee73 3ac0 	vsub.f32	s7, s7, s0
 800a91a:	ee74 4a81 	vadd.f32	s9, s9, s2
 800a91e:	ee77 7aa2 	vadd.f32	s15, s15, s5
 800a922:	44dc      	add	ip, fp
 800a924:	45e2      	cmp	sl, ip
 800a926:	ed87 8a00 	vstr	s16, [r7]
 800a92a:	ed84 2a01 	vstr	s4, [r4, #4]
 800a92e:	441f      	add	r7, r3
 800a930:	edce 0a00 	vstr	s1, [lr]
 800a934:	441c      	add	r4, r3
 800a936:	ed80 6a00 	vstr	s12, [r0]
 800a93a:	edce 1a01 	vstr	s3, [lr, #4]
 800a93e:	ed80 4a01 	vstr	s8, [r0, #4]
 800a942:	449e      	add	lr, r3
 800a944:	ed86 3a00 	vstr	s6, [r6]
 800a948:	4418      	add	r0, r3
 800a94a:	ed41 3a01 	vstr	s7, [r1, #-4]
 800a94e:	ed02 5a01 	vstr	s10, [r2, #-4]
 800a952:	ed85 7a00 	vstr	s14, [r5]
 800a956:	edc6 5a01 	vstr	s11, [r6, #4]
 800a95a:	edc1 4a00 	vstr	s9, [r1]
 800a95e:	441e      	add	r6, r3
 800a960:	edc2 6a00 	vstr	s13, [r2]
 800a964:	4419      	add	r1, r3
 800a966:	edc5 7a01 	vstr	s15, [r5, #4]
 800a96a:	441a      	add	r2, r3
 800a96c:	441d      	add	r5, r3
 800a96e:	f63f af44 	bhi.w	800a7fa <arm_radix8_butterfly_f32+0x6e>
 800a972:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800a974:	2a07      	cmp	r2, #7
 800a976:	f240 81f5 	bls.w	800ad64 <arm_radix8_butterfly_f32+0x5d8>
 800a97a:	f108 0101 	add.w	r1, r8, #1
 800a97e:	188f      	adds	r7, r1, r2
 800a980:	eb09 0849 	add.w	r8, r9, r9, lsl #1
 800a984:	19d6      	adds	r6, r2, r7
 800a986:	eb08 0c09 	add.w	ip, r8, r9
 800a98a:	1994      	adds	r4, r2, r6
 800a98c:	eb0c 0e09 	add.w	lr, ip, r9
 800a990:	4610      	mov	r0, r2
 800a992:	9701      	str	r7, [sp, #4]
 800a994:	4420      	add	r0, r4
 800a996:	eb0e 0709 	add.w	r7, lr, r9
 800a99a:	1815      	adds	r5, r2, r0
 800a99c:	eb07 0209 	add.w	r2, r7, r9
 800a9a0:	9203      	str	r2, [sp, #12]
 800a9a2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800a9a4:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800a9a8:	9117      	str	r1, [sp, #92]	; 0x5c
 800a9aa:	440a      	add	r2, r1
 800a9ac:	9900      	ldr	r1, [sp, #0]
 800a9ae:	3108      	adds	r1, #8
 800a9b0:	9100      	str	r1, [sp, #0]
 800a9b2:	9902      	ldr	r1, [sp, #8]
 800a9b4:	3108      	adds	r1, #8
 800a9b6:	9102      	str	r1, [sp, #8]
 800a9b8:	9919      	ldr	r1, [sp, #100]	; 0x64
 800a9ba:	00ff      	lsls	r7, r7, #3
 800a9bc:	9715      	str	r7, [sp, #84]	; 0x54
 800a9be:	eb01 04c4 	add.w	r4, r1, r4, lsl #3
 800a9c2:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 800a9c6:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 800a9ca:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800a9cc:	9903      	ldr	r1, [sp, #12]
 800a9ce:	19d7      	adds	r7, r2, r7
 800a9d0:	00c9      	lsls	r1, r1, #3
 800a9d2:	9114      	str	r1, [sp, #80]	; 0x50
 800a9d4:	9710      	str	r7, [sp, #64]	; 0x40
 800a9d6:	9919      	ldr	r1, [sp, #100]	; 0x64
 800a9d8:	9f00      	ldr	r7, [sp, #0]
 800a9da:	19cf      	adds	r7, r1, r7
 800a9dc:	970d      	str	r7, [sp, #52]	; 0x34
 800a9de:	9f02      	ldr	r7, [sp, #8]
 800a9e0:	19cf      	adds	r7, r1, r7
 800a9e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800a9e6:	970c      	str	r7, [sp, #48]	; 0x30
 800a9e8:	9f01      	ldr	r7, [sp, #4]
 800a9ea:	f8cd e058 	str.w	lr, [sp, #88]	; 0x58
 800a9ee:	3504      	adds	r5, #4
 800a9f0:	3004      	adds	r0, #4
 800a9f2:	eb01 0ec7 	add.w	lr, r1, r7, lsl #3
 800a9f6:	9508      	str	r5, [sp, #32]
 800a9f8:	9009      	str	r0, [sp, #36]	; 0x24
 800a9fa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800a9fc:	981a      	ldr	r0, [sp, #104]	; 0x68
 800a9fe:	f8cd e02c 	str.w	lr, [sp, #44]	; 0x2c
 800aa02:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800aa06:	eb01 0ec6 	add.w	lr, r1, r6, lsl #3
 800aa0a:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800aa0c:	f8cd e038 	str.w	lr, [sp, #56]	; 0x38
 800aa10:	1945      	adds	r5, r0, r5
 800aa12:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800aa16:	460f      	mov	r7, r1
 800aa18:	3404      	adds	r4, #4
 800aa1a:	4641      	mov	r1, r8
 800aa1c:	1841      	adds	r1, r0, r1
 800aa1e:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800aa22:	940a      	str	r4, [sp, #40]	; 0x28
 800aa24:	eb00 0c06 	add.w	ip, r0, r6
 800aa28:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 800aa2c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800aa2e:	9506      	str	r5, [sp, #24]
 800aa30:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800aa32:	9105      	str	r1, [sp, #20]
 800aa34:	4639      	mov	r1, r7
 800aa36:	1905      	adds	r5, r0, r4
 800aa38:	3108      	adds	r1, #8
 800aa3a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800aa3c:	9507      	str	r5, [sp, #28]
 800aa3e:	910f      	str	r1, [sp, #60]	; 0x3c
 800aa40:	ea4f 1509 	mov.w	r5, r9, lsl #4
 800aa44:	2101      	movs	r1, #1
 800aa46:	eb00 0e06 	add.w	lr, r0, r6
 800aa4a:	9518      	str	r5, [sp, #96]	; 0x60
 800aa4c:	9404      	str	r4, [sp, #16]
 800aa4e:	9103      	str	r1, [sp, #12]
 800aa50:	4620      	mov	r0, r4
 800aa52:	4689      	mov	r9, r1
 800aa54:	9e06      	ldr	r6, [sp, #24]
 800aa56:	ed90 fa00 	vldr	s30, [r0]
 800aa5a:	edd6 7a01 	vldr	s15, [r6, #4]
 800aa5e:	edd0 ba01 	vldr	s23, [r0, #4]
 800aa62:	edcd 7a00 	vstr	s15, [sp]
 800aa66:	a80d      	add	r0, sp, #52	; 0x34
 800aa68:	edde 7a01 	vldr	s15, [lr, #4]
 800aa6c:	9c05      	ldr	r4, [sp, #20]
 800aa6e:	9d07      	ldr	r5, [sp, #28]
 800aa70:	edd2 fa00 	vldr	s31, [r2]
 800aa74:	ed92 ca01 	vldr	s24, [r2, #4]
 800aa78:	edcd 7a01 	vstr	s15, [sp, #4]
 800aa7c:	c807      	ldmia	r0, {r0, r1, r2}
 800aa7e:	eddc 7a01 	vldr	s15, [ip, #4]
 800aa82:	edd4 ea00 	vldr	s29, [r4]
 800aa86:	ed95 ea00 	vldr	s28, [r5]
 800aa8a:	edd6 da00 	vldr	s27, [r6]
 800aa8e:	edd4 aa01 	vldr	s21, [r4, #4]
 800aa92:	ed95 aa01 	vldr	s20, [r5, #4]
 800aa96:	ed9e da00 	vldr	s26, [lr]
 800aa9a:	eddc ca00 	vldr	s25, [ip]
 800aa9e:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800aaa2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800aaa4:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800aaa6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800aaa8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800aaaa:	edcd 7a02 	vstr	s15, [sp, #8]
 800aaae:	e001      	b.n	800aab4 <arm_radix8_butterfly_f32+0x328>
 800aab0:	3f3504f3 	.word	0x3f3504f3
 800aab4:	ed16 6a01 	vldr	s12, [r6, #-4]
 800aab8:	ed91 5a00 	vldr	s10, [r1]
 800aabc:	ed57 9a01 	vldr	s19, [r7, #-4]
 800aac0:	edd5 7a00 	vldr	s15, [r5]
 800aac4:	ed18 7a01 	vldr	s14, [r8, #-4]
 800aac8:	edd2 3a00 	vldr	s7, [r2]
 800aacc:	ed94 3a00 	vldr	s6, [r4]
 800aad0:	ed90 2a00 	vldr	s4, [r0]
 800aad4:	ed92 0a01 	vldr	s0, [r2, #4]
 800aad8:	ee33 8a85 	vadd.f32	s16, s7, s10
 800aadc:	ee32 1a06 	vadd.f32	s2, s4, s12
 800aae0:	ee33 4a29 	vadd.f32	s8, s6, s19
 800aae4:	ee77 4a87 	vadd.f32	s9, s15, s14
 800aae8:	ee78 1a04 	vadd.f32	s3, s16, s8
 800aaec:	ee71 6a24 	vadd.f32	s13, s2, s9
 800aaf0:	ee32 2a46 	vsub.f32	s4, s4, s12
 800aaf4:	ee31 6aa6 	vadd.f32	s12, s3, s13
 800aaf8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800aafc:	ed82 6a00 	vstr	s12, [r2]
 800ab00:	edd5 8a01 	vldr	s17, [r5, #4]
 800ab04:	ed90 9a01 	vldr	s18, [r0, #4]
 800ab08:	edd6 2a00 	vldr	s5, [r6]
 800ab0c:	ed98 7a00 	vldr	s14, [r8]
 800ab10:	edd4 0a01 	vldr	s1, [r4, #4]
 800ab14:	ed91 6a01 	vldr	s12, [r1, #4]
 800ab18:	edd7 5a00 	vldr	s11, [r7]
 800ab1c:	ee73 3ac5 	vsub.f32	s7, s7, s10
 800ab20:	ee33 3a69 	vsub.f32	s6, s6, s19
 800ab24:	ee39 5a62 	vsub.f32	s10, s18, s5
 800ab28:	ee78 9ac7 	vsub.f32	s19, s17, s14
 800ab2c:	ee38 4a44 	vsub.f32	s8, s16, s8
 800ab30:	ee38 7a87 	vadd.f32	s14, s17, s14
 800ab34:	ee30 8aa5 	vadd.f32	s16, s1, s11
 800ab38:	ee79 2a22 	vadd.f32	s5, s18, s5
 800ab3c:	ee75 8a69 	vsub.f32	s17, s10, s19
 800ab40:	ee32 9a27 	vadd.f32	s18, s4, s15
 800ab44:	ee35 5a29 	vadd.f32	s10, s10, s19
 800ab48:	ee72 7a67 	vsub.f32	s15, s4, s15
 800ab4c:	ee30 2a06 	vadd.f32	s4, s0, s12
 800ab50:	ee69 9a0b 	vmul.f32	s19, s18, s22
 800ab54:	ee70 5ae5 	vsub.f32	s11, s1, s11
 800ab58:	ee32 9a08 	vadd.f32	s18, s4, s16
 800ab5c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 800ab60:	ee32 2a48 	vsub.f32	s4, s4, s16
 800ab64:	ee71 4a64 	vsub.f32	s9, s2, s9
 800ab68:	ee25 5a0b 	vmul.f32	s10, s10, s22
 800ab6c:	ee32 1a87 	vadd.f32	s2, s5, s14
 800ab70:	ee67 7a8b 	vmul.f32	s15, s15, s22
 800ab74:	ee72 2ac7 	vsub.f32	s5, s5, s14
 800ab78:	ee30 6a46 	vsub.f32	s12, s0, s12
 800ab7c:	ee73 0a29 	vadd.f32	s1, s6, s19
 800ab80:	ee36 0a28 	vadd.f32	s0, s12, s17
 800ab84:	ee33 3a69 	vsub.f32	s6, s6, s19
 800ab88:	ee32 7a64 	vsub.f32	s14, s4, s9
 800ab8c:	ee73 9aa7 	vadd.f32	s19, s7, s15
 800ab90:	ee36 6a68 	vsub.f32	s12, s12, s17
 800ab94:	ee73 7ae7 	vsub.f32	s15, s7, s15
 800ab98:	ee75 8a85 	vadd.f32	s17, s11, s10
 800ab9c:	ee74 3a22 	vadd.f32	s7, s8, s5
 800aba0:	ee35 5ac5 	vsub.f32	s10, s11, s10
 800aba4:	ee71 6ae6 	vsub.f32	s13, s3, s13
 800aba8:	ee79 1a41 	vsub.f32	s3, s18, s2
 800abac:	ee39 8aa8 	vadd.f32	s16, s19, s17
 800abb0:	ee76 5a43 	vsub.f32	s11, s12, s6
 800abb4:	ee74 2a62 	vsub.f32	s5, s8, s5
 800abb8:	ee74 4a82 	vadd.f32	s9, s9, s4
 800abbc:	ee30 4a60 	vsub.f32	s8, s0, s1
 800abc0:	ee79 8ae8 	vsub.f32	s17, s19, s17
 800abc4:	ee30 0a80 	vadd.f32	s0, s1, s0
 800abc8:	ee77 9a85 	vadd.f32	s19, s15, s10
 800abcc:	ee33 6a06 	vadd.f32	s12, s6, s12
 800abd0:	ee77 7ac5 	vsub.f32	s15, s15, s10
 800abd4:	ee2e 2a21 	vmul.f32	s4, s28, s3
 800abd8:	ee2e 5a26 	vmul.f32	s10, s28, s13
 800abdc:	ee6f 0a23 	vmul.f32	s1, s30, s7
 800abe0:	ee2a 3a21 	vmul.f32	s6, s20, s3
 800abe4:	ee39 1a01 	vadd.f32	s2, s18, s2
 800abe8:	ee6a 6a26 	vmul.f32	s13, s20, s13
 800abec:	ee2b 9a87 	vmul.f32	s18, s23, s14
 800abf0:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 800abf4:	ee2f 7a07 	vmul.f32	s14, s30, s14
 800abf8:	ee6f 1a84 	vmul.f32	s3, s31, s8
 800abfc:	ee35 3a03 	vadd.f32	s6, s10, s6
 800ac00:	ee72 6a66 	vsub.f32	s13, s4, s13
 800ac04:	ee2c 5a04 	vmul.f32	s10, s24, s8
 800ac08:	ee2f 2a88 	vmul.f32	s4, s31, s16
 800ac0c:	ed9d 4a02 	vldr	s8, [sp, #8]
 800ac10:	ed82 1a01 	vstr	s2, [r2, #4]
 800ac14:	ee77 3a63 	vsub.f32	s7, s14, s7
 800ac18:	ee2c 8a08 	vmul.f32	s16, s24, s16
 800ac1c:	ed9d 7a01 	vldr	s14, [sp, #4]
 800ac20:	ed81 3a00 	vstr	s6, [r1]
 800ac24:	ee30 9a89 	vadd.f32	s18, s1, s18
 800ac28:	ee32 2a05 	vadd.f32	s4, s4, s10
 800ac2c:	ee6d 0a22 	vmul.f32	s1, s26, s5
 800ac30:	ee31 8ac8 	vsub.f32	s16, s3, s16
 800ac34:	ee67 2a22 	vmul.f32	s5, s14, s5
 800ac38:	ee64 1a00 	vmul.f32	s3, s8, s0
 800ac3c:	ee27 7a24 	vmul.f32	s14, s14, s9
 800ac40:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 800ac44:	ee6d 4a24 	vmul.f32	s9, s26, s9
 800ac48:	ee64 8a28 	vmul.f32	s17, s8, s17
 800ac4c:	ed9d 4a00 	vldr	s8, [sp]
 800ac50:	edc1 6a01 	vstr	s13, [r1, #4]
 800ac54:	ee74 2ae2 	vsub.f32	s5, s9, s5
 800ac58:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 800ac5c:	ee64 9a29 	vmul.f32	s19, s8, s19
 800ac60:	ee24 4a25 	vmul.f32	s8, s8, s11
 800ac64:	ee30 7a87 	vadd.f32	s14, s1, s14
 800ac68:	ee74 4a84 	vadd.f32	s9, s9, s8
 800ac6c:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 800ac70:	ee2a 4a86 	vmul.f32	s8, s21, s12
 800ac74:	ee2c 0a80 	vmul.f32	s0, s25, s0
 800ac78:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 800ac7c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 800ac80:	ee2e 6a86 	vmul.f32	s12, s29, s12
 800ac84:	ee75 1a21 	vadd.f32	s3, s10, s3
 800ac88:	ee30 0a68 	vsub.f32	s0, s0, s17
 800ac8c:	ee75 9ae9 	vsub.f32	s19, s11, s19
 800ac90:	ee70 0a84 	vadd.f32	s1, s1, s8
 800ac94:	ee36 6a67 	vsub.f32	s12, s12, s15
 800ac98:	44d9      	add	r9, fp
 800ac9a:	45ca      	cmp	sl, r9
 800ac9c:	ed84 9a00 	vstr	s18, [r4]
 800aca0:	edc4 3a01 	vstr	s7, [r4, #4]
 800aca4:	441a      	add	r2, r3
 800aca6:	ed07 7a01 	vstr	s14, [r7, #-4]
 800acaa:	edc7 2a00 	vstr	s5, [r7]
 800acae:	4419      	add	r1, r3
 800acb0:	ed80 2a00 	vstr	s4, [r0]
 800acb4:	ed80 8a01 	vstr	s16, [r0, #4]
 800acb8:	441c      	add	r4, r3
 800acba:	ed48 1a01 	vstr	s3, [r8, #-4]
 800acbe:	ed88 0a00 	vstr	s0, [r8]
 800acc2:	441f      	add	r7, r3
 800acc4:	ed46 4a01 	vstr	s9, [r6, #-4]
 800acc8:	4418      	add	r0, r3
 800acca:	edc6 9a00 	vstr	s19, [r6]
 800acce:	4498      	add	r8, r3
 800acd0:	edc5 0a00 	vstr	s1, [r5]
 800acd4:	ed85 6a01 	vstr	s12, [r5, #4]
 800acd8:	441e      	add	r6, r3
 800acda:	441d      	add	r5, r3
 800acdc:	f63f aeea 	bhi.w	800aab4 <arm_radix8_butterfly_f32+0x328>
 800ace0:	9a03      	ldr	r2, [sp, #12]
 800ace2:	9818      	ldr	r0, [sp, #96]	; 0x60
 800ace4:	3201      	adds	r2, #1
 800ace6:	4611      	mov	r1, r2
 800ace8:	9203      	str	r2, [sp, #12]
 800acea:	9a04      	ldr	r2, [sp, #16]
 800acec:	4402      	add	r2, r0
 800acee:	9204      	str	r2, [sp, #16]
 800acf0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800acf2:	9a05      	ldr	r2, [sp, #20]
 800acf4:	4402      	add	r2, r0
 800acf6:	9205      	str	r2, [sp, #20]
 800acf8:	9812      	ldr	r0, [sp, #72]	; 0x48
 800acfa:	9a07      	ldr	r2, [sp, #28]
 800acfc:	4402      	add	r2, r0
 800acfe:	9207      	str	r2, [sp, #28]
 800ad00:	9816      	ldr	r0, [sp, #88]	; 0x58
 800ad02:	9a06      	ldr	r2, [sp, #24]
 800ad04:	4402      	add	r2, r0
 800ad06:	9206      	str	r2, [sp, #24]
 800ad08:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800ad0a:	4496      	add	lr, r2
 800ad0c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ad0e:	4494      	add	ip, r2
 800ad10:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ad12:	3208      	adds	r2, #8
 800ad14:	920f      	str	r2, [sp, #60]	; 0x3c
 800ad16:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ad18:	3208      	adds	r2, #8
 800ad1a:	920e      	str	r2, [sp, #56]	; 0x38
 800ad1c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800ad1e:	3208      	adds	r2, #8
 800ad20:	920d      	str	r2, [sp, #52]	; 0x34
 800ad22:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ad24:	3208      	adds	r2, #8
 800ad26:	920c      	str	r2, [sp, #48]	; 0x30
 800ad28:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ad2a:	3208      	adds	r2, #8
 800ad2c:	920b      	str	r2, [sp, #44]	; 0x2c
 800ad2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ad30:	3208      	adds	r2, #8
 800ad32:	920a      	str	r2, [sp, #40]	; 0x28
 800ad34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ad36:	3208      	adds	r2, #8
 800ad38:	9209      	str	r2, [sp, #36]	; 0x24
 800ad3a:	9a08      	ldr	r2, [sp, #32]
 800ad3c:	3208      	adds	r2, #8
 800ad3e:	9208      	str	r2, [sp, #32]
 800ad40:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800ad42:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ad44:	4288      	cmp	r0, r1
 800ad46:	4622      	mov	r2, r4
 800ad48:	d007      	beq.n	800ad5a <arm_radix8_butterfly_f32+0x5ce>
 800ad4a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800ad4c:	f8dd 900c 	ldr.w	r9, [sp, #12]
 800ad50:	4621      	mov	r1, r4
 800ad52:	4401      	add	r1, r0
 800ad54:	9110      	str	r1, [sp, #64]	; 0x40
 800ad56:	9804      	ldr	r0, [sp, #16]
 800ad58:	e67c      	b.n	800aa54 <arm_radix8_butterfly_f32+0x2c8>
 800ad5a:	4683      	mov	fp, r0
 800ad5c:	f8bd 905c 	ldrh.w	r9, [sp, #92]	; 0x5c
 800ad60:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800ad62:	e524      	b.n	800a7ae <arm_radix8_butterfly_f32+0x22>
 800ad64:	b01d      	add	sp, #116	; 0x74
 800ad66:	ecbd 8b10 	vpop	{d8-d15}
 800ad6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad6e:	bf00      	nop

0800ad70 <__libc_init_array>:
 800ad70:	b570      	push	{r4, r5, r6, lr}
 800ad72:	4d0d      	ldr	r5, [pc, #52]	; (800ada8 <__libc_init_array+0x38>)
 800ad74:	4c0d      	ldr	r4, [pc, #52]	; (800adac <__libc_init_array+0x3c>)
 800ad76:	1b64      	subs	r4, r4, r5
 800ad78:	10a4      	asrs	r4, r4, #2
 800ad7a:	2600      	movs	r6, #0
 800ad7c:	42a6      	cmp	r6, r4
 800ad7e:	d109      	bne.n	800ad94 <__libc_init_array+0x24>
 800ad80:	4d0b      	ldr	r5, [pc, #44]	; (800adb0 <__libc_init_array+0x40>)
 800ad82:	4c0c      	ldr	r4, [pc, #48]	; (800adb4 <__libc_init_array+0x44>)
 800ad84:	f004 ff2c 	bl	800fbe0 <_init>
 800ad88:	1b64      	subs	r4, r4, r5
 800ad8a:	10a4      	asrs	r4, r4, #2
 800ad8c:	2600      	movs	r6, #0
 800ad8e:	42a6      	cmp	r6, r4
 800ad90:	d105      	bne.n	800ad9e <__libc_init_array+0x2e>
 800ad92:	bd70      	pop	{r4, r5, r6, pc}
 800ad94:	f855 3b04 	ldr.w	r3, [r5], #4
 800ad98:	4798      	blx	r3
 800ad9a:	3601      	adds	r6, #1
 800ad9c:	e7ee      	b.n	800ad7c <__libc_init_array+0xc>
 800ad9e:	f855 3b04 	ldr.w	r3, [r5], #4
 800ada2:	4798      	blx	r3
 800ada4:	3601      	adds	r6, #1
 800ada6:	e7f2      	b.n	800ad8e <__libc_init_array+0x1e>
 800ada8:	08028c90 	.word	0x08028c90
 800adac:	08028c90 	.word	0x08028c90
 800adb0:	08028c90 	.word	0x08028c90
 800adb4:	08028c94 	.word	0x08028c94

0800adb8 <memset>:
 800adb8:	4402      	add	r2, r0
 800adba:	4603      	mov	r3, r0
 800adbc:	4293      	cmp	r3, r2
 800adbe:	d100      	bne.n	800adc2 <memset+0xa>
 800adc0:	4770      	bx	lr
 800adc2:	f803 1b01 	strb.w	r1, [r3], #1
 800adc6:	e7f9      	b.n	800adbc <memset+0x4>

0800adc8 <__cvt>:
 800adc8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800adcc:	ec55 4b10 	vmov	r4, r5, d0
 800add0:	2d00      	cmp	r5, #0
 800add2:	460e      	mov	r6, r1
 800add4:	4619      	mov	r1, r3
 800add6:	462b      	mov	r3, r5
 800add8:	bfbb      	ittet	lt
 800adda:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800adde:	461d      	movlt	r5, r3
 800ade0:	2300      	movge	r3, #0
 800ade2:	232d      	movlt	r3, #45	; 0x2d
 800ade4:	700b      	strb	r3, [r1, #0]
 800ade6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ade8:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800adec:	4691      	mov	r9, r2
 800adee:	f023 0820 	bic.w	r8, r3, #32
 800adf2:	bfbc      	itt	lt
 800adf4:	4622      	movlt	r2, r4
 800adf6:	4614      	movlt	r4, r2
 800adf8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800adfc:	d005      	beq.n	800ae0a <__cvt+0x42>
 800adfe:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800ae02:	d100      	bne.n	800ae06 <__cvt+0x3e>
 800ae04:	3601      	adds	r6, #1
 800ae06:	2102      	movs	r1, #2
 800ae08:	e000      	b.n	800ae0c <__cvt+0x44>
 800ae0a:	2103      	movs	r1, #3
 800ae0c:	ab03      	add	r3, sp, #12
 800ae0e:	9301      	str	r3, [sp, #4]
 800ae10:	ab02      	add	r3, sp, #8
 800ae12:	9300      	str	r3, [sp, #0]
 800ae14:	ec45 4b10 	vmov	d0, r4, r5
 800ae18:	4653      	mov	r3, sl
 800ae1a:	4632      	mov	r2, r6
 800ae1c:	f000 fd00 	bl	800b820 <_dtoa_r>
 800ae20:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800ae24:	4607      	mov	r7, r0
 800ae26:	d102      	bne.n	800ae2e <__cvt+0x66>
 800ae28:	f019 0f01 	tst.w	r9, #1
 800ae2c:	d022      	beq.n	800ae74 <__cvt+0xac>
 800ae2e:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800ae32:	eb07 0906 	add.w	r9, r7, r6
 800ae36:	d110      	bne.n	800ae5a <__cvt+0x92>
 800ae38:	783b      	ldrb	r3, [r7, #0]
 800ae3a:	2b30      	cmp	r3, #48	; 0x30
 800ae3c:	d10a      	bne.n	800ae54 <__cvt+0x8c>
 800ae3e:	2200      	movs	r2, #0
 800ae40:	2300      	movs	r3, #0
 800ae42:	4620      	mov	r0, r4
 800ae44:	4629      	mov	r1, r5
 800ae46:	f7f5 feaf 	bl	8000ba8 <__aeabi_dcmpeq>
 800ae4a:	b918      	cbnz	r0, 800ae54 <__cvt+0x8c>
 800ae4c:	f1c6 0601 	rsb	r6, r6, #1
 800ae50:	f8ca 6000 	str.w	r6, [sl]
 800ae54:	f8da 3000 	ldr.w	r3, [sl]
 800ae58:	4499      	add	r9, r3
 800ae5a:	2200      	movs	r2, #0
 800ae5c:	2300      	movs	r3, #0
 800ae5e:	4620      	mov	r0, r4
 800ae60:	4629      	mov	r1, r5
 800ae62:	f7f5 fea1 	bl	8000ba8 <__aeabi_dcmpeq>
 800ae66:	b108      	cbz	r0, 800ae6c <__cvt+0xa4>
 800ae68:	f8cd 900c 	str.w	r9, [sp, #12]
 800ae6c:	2230      	movs	r2, #48	; 0x30
 800ae6e:	9b03      	ldr	r3, [sp, #12]
 800ae70:	454b      	cmp	r3, r9
 800ae72:	d307      	bcc.n	800ae84 <__cvt+0xbc>
 800ae74:	9b03      	ldr	r3, [sp, #12]
 800ae76:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ae78:	1bdb      	subs	r3, r3, r7
 800ae7a:	4638      	mov	r0, r7
 800ae7c:	6013      	str	r3, [r2, #0]
 800ae7e:	b004      	add	sp, #16
 800ae80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ae84:	1c59      	adds	r1, r3, #1
 800ae86:	9103      	str	r1, [sp, #12]
 800ae88:	701a      	strb	r2, [r3, #0]
 800ae8a:	e7f0      	b.n	800ae6e <__cvt+0xa6>

0800ae8c <__exponent>:
 800ae8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ae8e:	4603      	mov	r3, r0
 800ae90:	2900      	cmp	r1, #0
 800ae92:	bfb8      	it	lt
 800ae94:	4249      	neglt	r1, r1
 800ae96:	f803 2b02 	strb.w	r2, [r3], #2
 800ae9a:	bfb4      	ite	lt
 800ae9c:	222d      	movlt	r2, #45	; 0x2d
 800ae9e:	222b      	movge	r2, #43	; 0x2b
 800aea0:	2909      	cmp	r1, #9
 800aea2:	7042      	strb	r2, [r0, #1]
 800aea4:	dd2a      	ble.n	800aefc <__exponent+0x70>
 800aea6:	f10d 0407 	add.w	r4, sp, #7
 800aeaa:	46a4      	mov	ip, r4
 800aeac:	270a      	movs	r7, #10
 800aeae:	46a6      	mov	lr, r4
 800aeb0:	460a      	mov	r2, r1
 800aeb2:	fb91 f6f7 	sdiv	r6, r1, r7
 800aeb6:	fb07 1516 	mls	r5, r7, r6, r1
 800aeba:	3530      	adds	r5, #48	; 0x30
 800aebc:	2a63      	cmp	r2, #99	; 0x63
 800aebe:	f104 34ff 	add.w	r4, r4, #4294967295
 800aec2:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800aec6:	4631      	mov	r1, r6
 800aec8:	dcf1      	bgt.n	800aeae <__exponent+0x22>
 800aeca:	3130      	adds	r1, #48	; 0x30
 800aecc:	f1ae 0502 	sub.w	r5, lr, #2
 800aed0:	f804 1c01 	strb.w	r1, [r4, #-1]
 800aed4:	1c44      	adds	r4, r0, #1
 800aed6:	4629      	mov	r1, r5
 800aed8:	4561      	cmp	r1, ip
 800aeda:	d30a      	bcc.n	800aef2 <__exponent+0x66>
 800aedc:	f10d 0209 	add.w	r2, sp, #9
 800aee0:	eba2 020e 	sub.w	r2, r2, lr
 800aee4:	4565      	cmp	r5, ip
 800aee6:	bf88      	it	hi
 800aee8:	2200      	movhi	r2, #0
 800aeea:	4413      	add	r3, r2
 800aeec:	1a18      	subs	r0, r3, r0
 800aeee:	b003      	add	sp, #12
 800aef0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aef2:	f811 2b01 	ldrb.w	r2, [r1], #1
 800aef6:	f804 2f01 	strb.w	r2, [r4, #1]!
 800aefa:	e7ed      	b.n	800aed8 <__exponent+0x4c>
 800aefc:	2330      	movs	r3, #48	; 0x30
 800aefe:	3130      	adds	r1, #48	; 0x30
 800af00:	7083      	strb	r3, [r0, #2]
 800af02:	70c1      	strb	r1, [r0, #3]
 800af04:	1d03      	adds	r3, r0, #4
 800af06:	e7f1      	b.n	800aeec <__exponent+0x60>

0800af08 <_printf_float>:
 800af08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af0c:	ed2d 8b02 	vpush	{d8}
 800af10:	b08d      	sub	sp, #52	; 0x34
 800af12:	460c      	mov	r4, r1
 800af14:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800af18:	4616      	mov	r6, r2
 800af1a:	461f      	mov	r7, r3
 800af1c:	4605      	mov	r5, r0
 800af1e:	f001 fa6d 	bl	800c3fc <_localeconv_r>
 800af22:	f8d0 a000 	ldr.w	sl, [r0]
 800af26:	4650      	mov	r0, sl
 800af28:	f7f5 f9c2 	bl	80002b0 <strlen>
 800af2c:	2300      	movs	r3, #0
 800af2e:	930a      	str	r3, [sp, #40]	; 0x28
 800af30:	6823      	ldr	r3, [r4, #0]
 800af32:	9305      	str	r3, [sp, #20]
 800af34:	f8d8 3000 	ldr.w	r3, [r8]
 800af38:	f894 b018 	ldrb.w	fp, [r4, #24]
 800af3c:	3307      	adds	r3, #7
 800af3e:	f023 0307 	bic.w	r3, r3, #7
 800af42:	f103 0208 	add.w	r2, r3, #8
 800af46:	f8c8 2000 	str.w	r2, [r8]
 800af4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800af4e:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800af52:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800af56:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800af5a:	9307      	str	r3, [sp, #28]
 800af5c:	f8cd 8018 	str.w	r8, [sp, #24]
 800af60:	ee08 0a10 	vmov	s16, r0
 800af64:	4b9f      	ldr	r3, [pc, #636]	; (800b1e4 <_printf_float+0x2dc>)
 800af66:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800af6a:	f04f 32ff 	mov.w	r2, #4294967295
 800af6e:	f7f5 fe4d 	bl	8000c0c <__aeabi_dcmpun>
 800af72:	bb88      	cbnz	r0, 800afd8 <_printf_float+0xd0>
 800af74:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800af78:	4b9a      	ldr	r3, [pc, #616]	; (800b1e4 <_printf_float+0x2dc>)
 800af7a:	f04f 32ff 	mov.w	r2, #4294967295
 800af7e:	f7f5 fe27 	bl	8000bd0 <__aeabi_dcmple>
 800af82:	bb48      	cbnz	r0, 800afd8 <_printf_float+0xd0>
 800af84:	2200      	movs	r2, #0
 800af86:	2300      	movs	r3, #0
 800af88:	4640      	mov	r0, r8
 800af8a:	4649      	mov	r1, r9
 800af8c:	f7f5 fe16 	bl	8000bbc <__aeabi_dcmplt>
 800af90:	b110      	cbz	r0, 800af98 <_printf_float+0x90>
 800af92:	232d      	movs	r3, #45	; 0x2d
 800af94:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800af98:	4b93      	ldr	r3, [pc, #588]	; (800b1e8 <_printf_float+0x2e0>)
 800af9a:	4894      	ldr	r0, [pc, #592]	; (800b1ec <_printf_float+0x2e4>)
 800af9c:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800afa0:	bf94      	ite	ls
 800afa2:	4698      	movls	r8, r3
 800afa4:	4680      	movhi	r8, r0
 800afa6:	2303      	movs	r3, #3
 800afa8:	6123      	str	r3, [r4, #16]
 800afaa:	9b05      	ldr	r3, [sp, #20]
 800afac:	f023 0204 	bic.w	r2, r3, #4
 800afb0:	6022      	str	r2, [r4, #0]
 800afb2:	f04f 0900 	mov.w	r9, #0
 800afb6:	9700      	str	r7, [sp, #0]
 800afb8:	4633      	mov	r3, r6
 800afba:	aa0b      	add	r2, sp, #44	; 0x2c
 800afbc:	4621      	mov	r1, r4
 800afbe:	4628      	mov	r0, r5
 800afc0:	f000 f9d8 	bl	800b374 <_printf_common>
 800afc4:	3001      	adds	r0, #1
 800afc6:	f040 8090 	bne.w	800b0ea <_printf_float+0x1e2>
 800afca:	f04f 30ff 	mov.w	r0, #4294967295
 800afce:	b00d      	add	sp, #52	; 0x34
 800afd0:	ecbd 8b02 	vpop	{d8}
 800afd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800afd8:	4642      	mov	r2, r8
 800afda:	464b      	mov	r3, r9
 800afdc:	4640      	mov	r0, r8
 800afde:	4649      	mov	r1, r9
 800afe0:	f7f5 fe14 	bl	8000c0c <__aeabi_dcmpun>
 800afe4:	b140      	cbz	r0, 800aff8 <_printf_float+0xf0>
 800afe6:	464b      	mov	r3, r9
 800afe8:	2b00      	cmp	r3, #0
 800afea:	bfbc      	itt	lt
 800afec:	232d      	movlt	r3, #45	; 0x2d
 800afee:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800aff2:	487f      	ldr	r0, [pc, #508]	; (800b1f0 <_printf_float+0x2e8>)
 800aff4:	4b7f      	ldr	r3, [pc, #508]	; (800b1f4 <_printf_float+0x2ec>)
 800aff6:	e7d1      	b.n	800af9c <_printf_float+0x94>
 800aff8:	6863      	ldr	r3, [r4, #4]
 800affa:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800affe:	9206      	str	r2, [sp, #24]
 800b000:	1c5a      	adds	r2, r3, #1
 800b002:	d13f      	bne.n	800b084 <_printf_float+0x17c>
 800b004:	2306      	movs	r3, #6
 800b006:	6063      	str	r3, [r4, #4]
 800b008:	9b05      	ldr	r3, [sp, #20]
 800b00a:	6861      	ldr	r1, [r4, #4]
 800b00c:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800b010:	2300      	movs	r3, #0
 800b012:	9303      	str	r3, [sp, #12]
 800b014:	ab0a      	add	r3, sp, #40	; 0x28
 800b016:	e9cd b301 	strd	fp, r3, [sp, #4]
 800b01a:	ab09      	add	r3, sp, #36	; 0x24
 800b01c:	ec49 8b10 	vmov	d0, r8, r9
 800b020:	9300      	str	r3, [sp, #0]
 800b022:	6022      	str	r2, [r4, #0]
 800b024:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800b028:	4628      	mov	r0, r5
 800b02a:	f7ff fecd 	bl	800adc8 <__cvt>
 800b02e:	9b06      	ldr	r3, [sp, #24]
 800b030:	9909      	ldr	r1, [sp, #36]	; 0x24
 800b032:	2b47      	cmp	r3, #71	; 0x47
 800b034:	4680      	mov	r8, r0
 800b036:	d108      	bne.n	800b04a <_printf_float+0x142>
 800b038:	1cc8      	adds	r0, r1, #3
 800b03a:	db02      	blt.n	800b042 <_printf_float+0x13a>
 800b03c:	6863      	ldr	r3, [r4, #4]
 800b03e:	4299      	cmp	r1, r3
 800b040:	dd41      	ble.n	800b0c6 <_printf_float+0x1be>
 800b042:	f1ab 0b02 	sub.w	fp, fp, #2
 800b046:	fa5f fb8b 	uxtb.w	fp, fp
 800b04a:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800b04e:	d820      	bhi.n	800b092 <_printf_float+0x18a>
 800b050:	3901      	subs	r1, #1
 800b052:	465a      	mov	r2, fp
 800b054:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800b058:	9109      	str	r1, [sp, #36]	; 0x24
 800b05a:	f7ff ff17 	bl	800ae8c <__exponent>
 800b05e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b060:	1813      	adds	r3, r2, r0
 800b062:	2a01      	cmp	r2, #1
 800b064:	4681      	mov	r9, r0
 800b066:	6123      	str	r3, [r4, #16]
 800b068:	dc02      	bgt.n	800b070 <_printf_float+0x168>
 800b06a:	6822      	ldr	r2, [r4, #0]
 800b06c:	07d2      	lsls	r2, r2, #31
 800b06e:	d501      	bpl.n	800b074 <_printf_float+0x16c>
 800b070:	3301      	adds	r3, #1
 800b072:	6123      	str	r3, [r4, #16]
 800b074:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800b078:	2b00      	cmp	r3, #0
 800b07a:	d09c      	beq.n	800afb6 <_printf_float+0xae>
 800b07c:	232d      	movs	r3, #45	; 0x2d
 800b07e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b082:	e798      	b.n	800afb6 <_printf_float+0xae>
 800b084:	9a06      	ldr	r2, [sp, #24]
 800b086:	2a47      	cmp	r2, #71	; 0x47
 800b088:	d1be      	bne.n	800b008 <_printf_float+0x100>
 800b08a:	2b00      	cmp	r3, #0
 800b08c:	d1bc      	bne.n	800b008 <_printf_float+0x100>
 800b08e:	2301      	movs	r3, #1
 800b090:	e7b9      	b.n	800b006 <_printf_float+0xfe>
 800b092:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800b096:	d118      	bne.n	800b0ca <_printf_float+0x1c2>
 800b098:	2900      	cmp	r1, #0
 800b09a:	6863      	ldr	r3, [r4, #4]
 800b09c:	dd0b      	ble.n	800b0b6 <_printf_float+0x1ae>
 800b09e:	6121      	str	r1, [r4, #16]
 800b0a0:	b913      	cbnz	r3, 800b0a8 <_printf_float+0x1a0>
 800b0a2:	6822      	ldr	r2, [r4, #0]
 800b0a4:	07d0      	lsls	r0, r2, #31
 800b0a6:	d502      	bpl.n	800b0ae <_printf_float+0x1a6>
 800b0a8:	3301      	adds	r3, #1
 800b0aa:	440b      	add	r3, r1
 800b0ac:	6123      	str	r3, [r4, #16]
 800b0ae:	65a1      	str	r1, [r4, #88]	; 0x58
 800b0b0:	f04f 0900 	mov.w	r9, #0
 800b0b4:	e7de      	b.n	800b074 <_printf_float+0x16c>
 800b0b6:	b913      	cbnz	r3, 800b0be <_printf_float+0x1b6>
 800b0b8:	6822      	ldr	r2, [r4, #0]
 800b0ba:	07d2      	lsls	r2, r2, #31
 800b0bc:	d501      	bpl.n	800b0c2 <_printf_float+0x1ba>
 800b0be:	3302      	adds	r3, #2
 800b0c0:	e7f4      	b.n	800b0ac <_printf_float+0x1a4>
 800b0c2:	2301      	movs	r3, #1
 800b0c4:	e7f2      	b.n	800b0ac <_printf_float+0x1a4>
 800b0c6:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800b0ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b0cc:	4299      	cmp	r1, r3
 800b0ce:	db05      	blt.n	800b0dc <_printf_float+0x1d4>
 800b0d0:	6823      	ldr	r3, [r4, #0]
 800b0d2:	6121      	str	r1, [r4, #16]
 800b0d4:	07d8      	lsls	r0, r3, #31
 800b0d6:	d5ea      	bpl.n	800b0ae <_printf_float+0x1a6>
 800b0d8:	1c4b      	adds	r3, r1, #1
 800b0da:	e7e7      	b.n	800b0ac <_printf_float+0x1a4>
 800b0dc:	2900      	cmp	r1, #0
 800b0de:	bfd4      	ite	le
 800b0e0:	f1c1 0202 	rsble	r2, r1, #2
 800b0e4:	2201      	movgt	r2, #1
 800b0e6:	4413      	add	r3, r2
 800b0e8:	e7e0      	b.n	800b0ac <_printf_float+0x1a4>
 800b0ea:	6823      	ldr	r3, [r4, #0]
 800b0ec:	055a      	lsls	r2, r3, #21
 800b0ee:	d407      	bmi.n	800b100 <_printf_float+0x1f8>
 800b0f0:	6923      	ldr	r3, [r4, #16]
 800b0f2:	4642      	mov	r2, r8
 800b0f4:	4631      	mov	r1, r6
 800b0f6:	4628      	mov	r0, r5
 800b0f8:	47b8      	blx	r7
 800b0fa:	3001      	adds	r0, #1
 800b0fc:	d12c      	bne.n	800b158 <_printf_float+0x250>
 800b0fe:	e764      	b.n	800afca <_printf_float+0xc2>
 800b100:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800b104:	f240 80e0 	bls.w	800b2c8 <_printf_float+0x3c0>
 800b108:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800b10c:	2200      	movs	r2, #0
 800b10e:	2300      	movs	r3, #0
 800b110:	f7f5 fd4a 	bl	8000ba8 <__aeabi_dcmpeq>
 800b114:	2800      	cmp	r0, #0
 800b116:	d034      	beq.n	800b182 <_printf_float+0x27a>
 800b118:	4a37      	ldr	r2, [pc, #220]	; (800b1f8 <_printf_float+0x2f0>)
 800b11a:	2301      	movs	r3, #1
 800b11c:	4631      	mov	r1, r6
 800b11e:	4628      	mov	r0, r5
 800b120:	47b8      	blx	r7
 800b122:	3001      	adds	r0, #1
 800b124:	f43f af51 	beq.w	800afca <_printf_float+0xc2>
 800b128:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b12c:	429a      	cmp	r2, r3
 800b12e:	db02      	blt.n	800b136 <_printf_float+0x22e>
 800b130:	6823      	ldr	r3, [r4, #0]
 800b132:	07d8      	lsls	r0, r3, #31
 800b134:	d510      	bpl.n	800b158 <_printf_float+0x250>
 800b136:	ee18 3a10 	vmov	r3, s16
 800b13a:	4652      	mov	r2, sl
 800b13c:	4631      	mov	r1, r6
 800b13e:	4628      	mov	r0, r5
 800b140:	47b8      	blx	r7
 800b142:	3001      	adds	r0, #1
 800b144:	f43f af41 	beq.w	800afca <_printf_float+0xc2>
 800b148:	f04f 0800 	mov.w	r8, #0
 800b14c:	f104 091a 	add.w	r9, r4, #26
 800b150:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b152:	3b01      	subs	r3, #1
 800b154:	4543      	cmp	r3, r8
 800b156:	dc09      	bgt.n	800b16c <_printf_float+0x264>
 800b158:	6823      	ldr	r3, [r4, #0]
 800b15a:	079b      	lsls	r3, r3, #30
 800b15c:	f100 8105 	bmi.w	800b36a <_printf_float+0x462>
 800b160:	68e0      	ldr	r0, [r4, #12]
 800b162:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b164:	4298      	cmp	r0, r3
 800b166:	bfb8      	it	lt
 800b168:	4618      	movlt	r0, r3
 800b16a:	e730      	b.n	800afce <_printf_float+0xc6>
 800b16c:	2301      	movs	r3, #1
 800b16e:	464a      	mov	r2, r9
 800b170:	4631      	mov	r1, r6
 800b172:	4628      	mov	r0, r5
 800b174:	47b8      	blx	r7
 800b176:	3001      	adds	r0, #1
 800b178:	f43f af27 	beq.w	800afca <_printf_float+0xc2>
 800b17c:	f108 0801 	add.w	r8, r8, #1
 800b180:	e7e6      	b.n	800b150 <_printf_float+0x248>
 800b182:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b184:	2b00      	cmp	r3, #0
 800b186:	dc39      	bgt.n	800b1fc <_printf_float+0x2f4>
 800b188:	4a1b      	ldr	r2, [pc, #108]	; (800b1f8 <_printf_float+0x2f0>)
 800b18a:	2301      	movs	r3, #1
 800b18c:	4631      	mov	r1, r6
 800b18e:	4628      	mov	r0, r5
 800b190:	47b8      	blx	r7
 800b192:	3001      	adds	r0, #1
 800b194:	f43f af19 	beq.w	800afca <_printf_float+0xc2>
 800b198:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b19c:	4313      	orrs	r3, r2
 800b19e:	d102      	bne.n	800b1a6 <_printf_float+0x29e>
 800b1a0:	6823      	ldr	r3, [r4, #0]
 800b1a2:	07d9      	lsls	r1, r3, #31
 800b1a4:	d5d8      	bpl.n	800b158 <_printf_float+0x250>
 800b1a6:	ee18 3a10 	vmov	r3, s16
 800b1aa:	4652      	mov	r2, sl
 800b1ac:	4631      	mov	r1, r6
 800b1ae:	4628      	mov	r0, r5
 800b1b0:	47b8      	blx	r7
 800b1b2:	3001      	adds	r0, #1
 800b1b4:	f43f af09 	beq.w	800afca <_printf_float+0xc2>
 800b1b8:	f04f 0900 	mov.w	r9, #0
 800b1bc:	f104 0a1a 	add.w	sl, r4, #26
 800b1c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b1c2:	425b      	negs	r3, r3
 800b1c4:	454b      	cmp	r3, r9
 800b1c6:	dc01      	bgt.n	800b1cc <_printf_float+0x2c4>
 800b1c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b1ca:	e792      	b.n	800b0f2 <_printf_float+0x1ea>
 800b1cc:	2301      	movs	r3, #1
 800b1ce:	4652      	mov	r2, sl
 800b1d0:	4631      	mov	r1, r6
 800b1d2:	4628      	mov	r0, r5
 800b1d4:	47b8      	blx	r7
 800b1d6:	3001      	adds	r0, #1
 800b1d8:	f43f aef7 	beq.w	800afca <_printf_float+0xc2>
 800b1dc:	f109 0901 	add.w	r9, r9, #1
 800b1e0:	e7ee      	b.n	800b1c0 <_printf_float+0x2b8>
 800b1e2:	bf00      	nop
 800b1e4:	7fefffff 	.word	0x7fefffff
 800b1e8:	08028668 	.word	0x08028668
 800b1ec:	0802866c 	.word	0x0802866c
 800b1f0:	08028674 	.word	0x08028674
 800b1f4:	08028670 	.word	0x08028670
 800b1f8:	08028678 	.word	0x08028678
 800b1fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b1fe:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800b200:	429a      	cmp	r2, r3
 800b202:	bfa8      	it	ge
 800b204:	461a      	movge	r2, r3
 800b206:	2a00      	cmp	r2, #0
 800b208:	4691      	mov	r9, r2
 800b20a:	dc37      	bgt.n	800b27c <_printf_float+0x374>
 800b20c:	f04f 0b00 	mov.w	fp, #0
 800b210:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b214:	f104 021a 	add.w	r2, r4, #26
 800b218:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800b21a:	9305      	str	r3, [sp, #20]
 800b21c:	eba3 0309 	sub.w	r3, r3, r9
 800b220:	455b      	cmp	r3, fp
 800b222:	dc33      	bgt.n	800b28c <_printf_float+0x384>
 800b224:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b228:	429a      	cmp	r2, r3
 800b22a:	db3b      	blt.n	800b2a4 <_printf_float+0x39c>
 800b22c:	6823      	ldr	r3, [r4, #0]
 800b22e:	07da      	lsls	r2, r3, #31
 800b230:	d438      	bmi.n	800b2a4 <_printf_float+0x39c>
 800b232:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b234:	9a05      	ldr	r2, [sp, #20]
 800b236:	9909      	ldr	r1, [sp, #36]	; 0x24
 800b238:	1a9a      	subs	r2, r3, r2
 800b23a:	eba3 0901 	sub.w	r9, r3, r1
 800b23e:	4591      	cmp	r9, r2
 800b240:	bfa8      	it	ge
 800b242:	4691      	movge	r9, r2
 800b244:	f1b9 0f00 	cmp.w	r9, #0
 800b248:	dc35      	bgt.n	800b2b6 <_printf_float+0x3ae>
 800b24a:	f04f 0800 	mov.w	r8, #0
 800b24e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b252:	f104 0a1a 	add.w	sl, r4, #26
 800b256:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800b25a:	1a9b      	subs	r3, r3, r2
 800b25c:	eba3 0309 	sub.w	r3, r3, r9
 800b260:	4543      	cmp	r3, r8
 800b262:	f77f af79 	ble.w	800b158 <_printf_float+0x250>
 800b266:	2301      	movs	r3, #1
 800b268:	4652      	mov	r2, sl
 800b26a:	4631      	mov	r1, r6
 800b26c:	4628      	mov	r0, r5
 800b26e:	47b8      	blx	r7
 800b270:	3001      	adds	r0, #1
 800b272:	f43f aeaa 	beq.w	800afca <_printf_float+0xc2>
 800b276:	f108 0801 	add.w	r8, r8, #1
 800b27a:	e7ec      	b.n	800b256 <_printf_float+0x34e>
 800b27c:	4613      	mov	r3, r2
 800b27e:	4631      	mov	r1, r6
 800b280:	4642      	mov	r2, r8
 800b282:	4628      	mov	r0, r5
 800b284:	47b8      	blx	r7
 800b286:	3001      	adds	r0, #1
 800b288:	d1c0      	bne.n	800b20c <_printf_float+0x304>
 800b28a:	e69e      	b.n	800afca <_printf_float+0xc2>
 800b28c:	2301      	movs	r3, #1
 800b28e:	4631      	mov	r1, r6
 800b290:	4628      	mov	r0, r5
 800b292:	9205      	str	r2, [sp, #20]
 800b294:	47b8      	blx	r7
 800b296:	3001      	adds	r0, #1
 800b298:	f43f ae97 	beq.w	800afca <_printf_float+0xc2>
 800b29c:	9a05      	ldr	r2, [sp, #20]
 800b29e:	f10b 0b01 	add.w	fp, fp, #1
 800b2a2:	e7b9      	b.n	800b218 <_printf_float+0x310>
 800b2a4:	ee18 3a10 	vmov	r3, s16
 800b2a8:	4652      	mov	r2, sl
 800b2aa:	4631      	mov	r1, r6
 800b2ac:	4628      	mov	r0, r5
 800b2ae:	47b8      	blx	r7
 800b2b0:	3001      	adds	r0, #1
 800b2b2:	d1be      	bne.n	800b232 <_printf_float+0x32a>
 800b2b4:	e689      	b.n	800afca <_printf_float+0xc2>
 800b2b6:	9a05      	ldr	r2, [sp, #20]
 800b2b8:	464b      	mov	r3, r9
 800b2ba:	4442      	add	r2, r8
 800b2bc:	4631      	mov	r1, r6
 800b2be:	4628      	mov	r0, r5
 800b2c0:	47b8      	blx	r7
 800b2c2:	3001      	adds	r0, #1
 800b2c4:	d1c1      	bne.n	800b24a <_printf_float+0x342>
 800b2c6:	e680      	b.n	800afca <_printf_float+0xc2>
 800b2c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b2ca:	2a01      	cmp	r2, #1
 800b2cc:	dc01      	bgt.n	800b2d2 <_printf_float+0x3ca>
 800b2ce:	07db      	lsls	r3, r3, #31
 800b2d0:	d538      	bpl.n	800b344 <_printf_float+0x43c>
 800b2d2:	2301      	movs	r3, #1
 800b2d4:	4642      	mov	r2, r8
 800b2d6:	4631      	mov	r1, r6
 800b2d8:	4628      	mov	r0, r5
 800b2da:	47b8      	blx	r7
 800b2dc:	3001      	adds	r0, #1
 800b2de:	f43f ae74 	beq.w	800afca <_printf_float+0xc2>
 800b2e2:	ee18 3a10 	vmov	r3, s16
 800b2e6:	4652      	mov	r2, sl
 800b2e8:	4631      	mov	r1, r6
 800b2ea:	4628      	mov	r0, r5
 800b2ec:	47b8      	blx	r7
 800b2ee:	3001      	adds	r0, #1
 800b2f0:	f43f ae6b 	beq.w	800afca <_printf_float+0xc2>
 800b2f4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800b2f8:	2200      	movs	r2, #0
 800b2fa:	2300      	movs	r3, #0
 800b2fc:	f7f5 fc54 	bl	8000ba8 <__aeabi_dcmpeq>
 800b300:	b9d8      	cbnz	r0, 800b33a <_printf_float+0x432>
 800b302:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b304:	f108 0201 	add.w	r2, r8, #1
 800b308:	3b01      	subs	r3, #1
 800b30a:	4631      	mov	r1, r6
 800b30c:	4628      	mov	r0, r5
 800b30e:	47b8      	blx	r7
 800b310:	3001      	adds	r0, #1
 800b312:	d10e      	bne.n	800b332 <_printf_float+0x42a>
 800b314:	e659      	b.n	800afca <_printf_float+0xc2>
 800b316:	2301      	movs	r3, #1
 800b318:	4652      	mov	r2, sl
 800b31a:	4631      	mov	r1, r6
 800b31c:	4628      	mov	r0, r5
 800b31e:	47b8      	blx	r7
 800b320:	3001      	adds	r0, #1
 800b322:	f43f ae52 	beq.w	800afca <_printf_float+0xc2>
 800b326:	f108 0801 	add.w	r8, r8, #1
 800b32a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b32c:	3b01      	subs	r3, #1
 800b32e:	4543      	cmp	r3, r8
 800b330:	dcf1      	bgt.n	800b316 <_printf_float+0x40e>
 800b332:	464b      	mov	r3, r9
 800b334:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800b338:	e6dc      	b.n	800b0f4 <_printf_float+0x1ec>
 800b33a:	f04f 0800 	mov.w	r8, #0
 800b33e:	f104 0a1a 	add.w	sl, r4, #26
 800b342:	e7f2      	b.n	800b32a <_printf_float+0x422>
 800b344:	2301      	movs	r3, #1
 800b346:	4642      	mov	r2, r8
 800b348:	e7df      	b.n	800b30a <_printf_float+0x402>
 800b34a:	2301      	movs	r3, #1
 800b34c:	464a      	mov	r2, r9
 800b34e:	4631      	mov	r1, r6
 800b350:	4628      	mov	r0, r5
 800b352:	47b8      	blx	r7
 800b354:	3001      	adds	r0, #1
 800b356:	f43f ae38 	beq.w	800afca <_printf_float+0xc2>
 800b35a:	f108 0801 	add.w	r8, r8, #1
 800b35e:	68e3      	ldr	r3, [r4, #12]
 800b360:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b362:	1a5b      	subs	r3, r3, r1
 800b364:	4543      	cmp	r3, r8
 800b366:	dcf0      	bgt.n	800b34a <_printf_float+0x442>
 800b368:	e6fa      	b.n	800b160 <_printf_float+0x258>
 800b36a:	f04f 0800 	mov.w	r8, #0
 800b36e:	f104 0919 	add.w	r9, r4, #25
 800b372:	e7f4      	b.n	800b35e <_printf_float+0x456>

0800b374 <_printf_common>:
 800b374:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b378:	4616      	mov	r6, r2
 800b37a:	4699      	mov	r9, r3
 800b37c:	688a      	ldr	r2, [r1, #8]
 800b37e:	690b      	ldr	r3, [r1, #16]
 800b380:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800b384:	4293      	cmp	r3, r2
 800b386:	bfb8      	it	lt
 800b388:	4613      	movlt	r3, r2
 800b38a:	6033      	str	r3, [r6, #0]
 800b38c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800b390:	4607      	mov	r7, r0
 800b392:	460c      	mov	r4, r1
 800b394:	b10a      	cbz	r2, 800b39a <_printf_common+0x26>
 800b396:	3301      	adds	r3, #1
 800b398:	6033      	str	r3, [r6, #0]
 800b39a:	6823      	ldr	r3, [r4, #0]
 800b39c:	0699      	lsls	r1, r3, #26
 800b39e:	bf42      	ittt	mi
 800b3a0:	6833      	ldrmi	r3, [r6, #0]
 800b3a2:	3302      	addmi	r3, #2
 800b3a4:	6033      	strmi	r3, [r6, #0]
 800b3a6:	6825      	ldr	r5, [r4, #0]
 800b3a8:	f015 0506 	ands.w	r5, r5, #6
 800b3ac:	d106      	bne.n	800b3bc <_printf_common+0x48>
 800b3ae:	f104 0a19 	add.w	sl, r4, #25
 800b3b2:	68e3      	ldr	r3, [r4, #12]
 800b3b4:	6832      	ldr	r2, [r6, #0]
 800b3b6:	1a9b      	subs	r3, r3, r2
 800b3b8:	42ab      	cmp	r3, r5
 800b3ba:	dc26      	bgt.n	800b40a <_printf_common+0x96>
 800b3bc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800b3c0:	1e13      	subs	r3, r2, #0
 800b3c2:	6822      	ldr	r2, [r4, #0]
 800b3c4:	bf18      	it	ne
 800b3c6:	2301      	movne	r3, #1
 800b3c8:	0692      	lsls	r2, r2, #26
 800b3ca:	d42b      	bmi.n	800b424 <_printf_common+0xb0>
 800b3cc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800b3d0:	4649      	mov	r1, r9
 800b3d2:	4638      	mov	r0, r7
 800b3d4:	47c0      	blx	r8
 800b3d6:	3001      	adds	r0, #1
 800b3d8:	d01e      	beq.n	800b418 <_printf_common+0xa4>
 800b3da:	6823      	ldr	r3, [r4, #0]
 800b3dc:	68e5      	ldr	r5, [r4, #12]
 800b3de:	6832      	ldr	r2, [r6, #0]
 800b3e0:	f003 0306 	and.w	r3, r3, #6
 800b3e4:	2b04      	cmp	r3, #4
 800b3e6:	bf08      	it	eq
 800b3e8:	1aad      	subeq	r5, r5, r2
 800b3ea:	68a3      	ldr	r3, [r4, #8]
 800b3ec:	6922      	ldr	r2, [r4, #16]
 800b3ee:	bf0c      	ite	eq
 800b3f0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800b3f4:	2500      	movne	r5, #0
 800b3f6:	4293      	cmp	r3, r2
 800b3f8:	bfc4      	itt	gt
 800b3fa:	1a9b      	subgt	r3, r3, r2
 800b3fc:	18ed      	addgt	r5, r5, r3
 800b3fe:	2600      	movs	r6, #0
 800b400:	341a      	adds	r4, #26
 800b402:	42b5      	cmp	r5, r6
 800b404:	d11a      	bne.n	800b43c <_printf_common+0xc8>
 800b406:	2000      	movs	r0, #0
 800b408:	e008      	b.n	800b41c <_printf_common+0xa8>
 800b40a:	2301      	movs	r3, #1
 800b40c:	4652      	mov	r2, sl
 800b40e:	4649      	mov	r1, r9
 800b410:	4638      	mov	r0, r7
 800b412:	47c0      	blx	r8
 800b414:	3001      	adds	r0, #1
 800b416:	d103      	bne.n	800b420 <_printf_common+0xac>
 800b418:	f04f 30ff 	mov.w	r0, #4294967295
 800b41c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b420:	3501      	adds	r5, #1
 800b422:	e7c6      	b.n	800b3b2 <_printf_common+0x3e>
 800b424:	18e1      	adds	r1, r4, r3
 800b426:	1c5a      	adds	r2, r3, #1
 800b428:	2030      	movs	r0, #48	; 0x30
 800b42a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800b42e:	4422      	add	r2, r4
 800b430:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800b434:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800b438:	3302      	adds	r3, #2
 800b43a:	e7c7      	b.n	800b3cc <_printf_common+0x58>
 800b43c:	2301      	movs	r3, #1
 800b43e:	4622      	mov	r2, r4
 800b440:	4649      	mov	r1, r9
 800b442:	4638      	mov	r0, r7
 800b444:	47c0      	blx	r8
 800b446:	3001      	adds	r0, #1
 800b448:	d0e6      	beq.n	800b418 <_printf_common+0xa4>
 800b44a:	3601      	adds	r6, #1
 800b44c:	e7d9      	b.n	800b402 <_printf_common+0x8e>
	...

0800b450 <_printf_i>:
 800b450:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b454:	7e0f      	ldrb	r7, [r1, #24]
 800b456:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800b458:	2f78      	cmp	r7, #120	; 0x78
 800b45a:	4691      	mov	r9, r2
 800b45c:	4680      	mov	r8, r0
 800b45e:	460c      	mov	r4, r1
 800b460:	469a      	mov	sl, r3
 800b462:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800b466:	d807      	bhi.n	800b478 <_printf_i+0x28>
 800b468:	2f62      	cmp	r7, #98	; 0x62
 800b46a:	d80a      	bhi.n	800b482 <_printf_i+0x32>
 800b46c:	2f00      	cmp	r7, #0
 800b46e:	f000 80d8 	beq.w	800b622 <_printf_i+0x1d2>
 800b472:	2f58      	cmp	r7, #88	; 0x58
 800b474:	f000 80a3 	beq.w	800b5be <_printf_i+0x16e>
 800b478:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800b47c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800b480:	e03a      	b.n	800b4f8 <_printf_i+0xa8>
 800b482:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800b486:	2b15      	cmp	r3, #21
 800b488:	d8f6      	bhi.n	800b478 <_printf_i+0x28>
 800b48a:	a101      	add	r1, pc, #4	; (adr r1, 800b490 <_printf_i+0x40>)
 800b48c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800b490:	0800b4e9 	.word	0x0800b4e9
 800b494:	0800b4fd 	.word	0x0800b4fd
 800b498:	0800b479 	.word	0x0800b479
 800b49c:	0800b479 	.word	0x0800b479
 800b4a0:	0800b479 	.word	0x0800b479
 800b4a4:	0800b479 	.word	0x0800b479
 800b4a8:	0800b4fd 	.word	0x0800b4fd
 800b4ac:	0800b479 	.word	0x0800b479
 800b4b0:	0800b479 	.word	0x0800b479
 800b4b4:	0800b479 	.word	0x0800b479
 800b4b8:	0800b479 	.word	0x0800b479
 800b4bc:	0800b609 	.word	0x0800b609
 800b4c0:	0800b52d 	.word	0x0800b52d
 800b4c4:	0800b5eb 	.word	0x0800b5eb
 800b4c8:	0800b479 	.word	0x0800b479
 800b4cc:	0800b479 	.word	0x0800b479
 800b4d0:	0800b62b 	.word	0x0800b62b
 800b4d4:	0800b479 	.word	0x0800b479
 800b4d8:	0800b52d 	.word	0x0800b52d
 800b4dc:	0800b479 	.word	0x0800b479
 800b4e0:	0800b479 	.word	0x0800b479
 800b4e4:	0800b5f3 	.word	0x0800b5f3
 800b4e8:	682b      	ldr	r3, [r5, #0]
 800b4ea:	1d1a      	adds	r2, r3, #4
 800b4ec:	681b      	ldr	r3, [r3, #0]
 800b4ee:	602a      	str	r2, [r5, #0]
 800b4f0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800b4f4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800b4f8:	2301      	movs	r3, #1
 800b4fa:	e0a3      	b.n	800b644 <_printf_i+0x1f4>
 800b4fc:	6820      	ldr	r0, [r4, #0]
 800b4fe:	6829      	ldr	r1, [r5, #0]
 800b500:	0606      	lsls	r6, r0, #24
 800b502:	f101 0304 	add.w	r3, r1, #4
 800b506:	d50a      	bpl.n	800b51e <_printf_i+0xce>
 800b508:	680e      	ldr	r6, [r1, #0]
 800b50a:	602b      	str	r3, [r5, #0]
 800b50c:	2e00      	cmp	r6, #0
 800b50e:	da03      	bge.n	800b518 <_printf_i+0xc8>
 800b510:	232d      	movs	r3, #45	; 0x2d
 800b512:	4276      	negs	r6, r6
 800b514:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b518:	485e      	ldr	r0, [pc, #376]	; (800b694 <_printf_i+0x244>)
 800b51a:	230a      	movs	r3, #10
 800b51c:	e019      	b.n	800b552 <_printf_i+0x102>
 800b51e:	680e      	ldr	r6, [r1, #0]
 800b520:	602b      	str	r3, [r5, #0]
 800b522:	f010 0f40 	tst.w	r0, #64	; 0x40
 800b526:	bf18      	it	ne
 800b528:	b236      	sxthne	r6, r6
 800b52a:	e7ef      	b.n	800b50c <_printf_i+0xbc>
 800b52c:	682b      	ldr	r3, [r5, #0]
 800b52e:	6820      	ldr	r0, [r4, #0]
 800b530:	1d19      	adds	r1, r3, #4
 800b532:	6029      	str	r1, [r5, #0]
 800b534:	0601      	lsls	r1, r0, #24
 800b536:	d501      	bpl.n	800b53c <_printf_i+0xec>
 800b538:	681e      	ldr	r6, [r3, #0]
 800b53a:	e002      	b.n	800b542 <_printf_i+0xf2>
 800b53c:	0646      	lsls	r6, r0, #25
 800b53e:	d5fb      	bpl.n	800b538 <_printf_i+0xe8>
 800b540:	881e      	ldrh	r6, [r3, #0]
 800b542:	4854      	ldr	r0, [pc, #336]	; (800b694 <_printf_i+0x244>)
 800b544:	2f6f      	cmp	r7, #111	; 0x6f
 800b546:	bf0c      	ite	eq
 800b548:	2308      	moveq	r3, #8
 800b54a:	230a      	movne	r3, #10
 800b54c:	2100      	movs	r1, #0
 800b54e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800b552:	6865      	ldr	r5, [r4, #4]
 800b554:	60a5      	str	r5, [r4, #8]
 800b556:	2d00      	cmp	r5, #0
 800b558:	bfa2      	ittt	ge
 800b55a:	6821      	ldrge	r1, [r4, #0]
 800b55c:	f021 0104 	bicge.w	r1, r1, #4
 800b560:	6021      	strge	r1, [r4, #0]
 800b562:	b90e      	cbnz	r6, 800b568 <_printf_i+0x118>
 800b564:	2d00      	cmp	r5, #0
 800b566:	d04d      	beq.n	800b604 <_printf_i+0x1b4>
 800b568:	4615      	mov	r5, r2
 800b56a:	fbb6 f1f3 	udiv	r1, r6, r3
 800b56e:	fb03 6711 	mls	r7, r3, r1, r6
 800b572:	5dc7      	ldrb	r7, [r0, r7]
 800b574:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800b578:	4637      	mov	r7, r6
 800b57a:	42bb      	cmp	r3, r7
 800b57c:	460e      	mov	r6, r1
 800b57e:	d9f4      	bls.n	800b56a <_printf_i+0x11a>
 800b580:	2b08      	cmp	r3, #8
 800b582:	d10b      	bne.n	800b59c <_printf_i+0x14c>
 800b584:	6823      	ldr	r3, [r4, #0]
 800b586:	07de      	lsls	r6, r3, #31
 800b588:	d508      	bpl.n	800b59c <_printf_i+0x14c>
 800b58a:	6923      	ldr	r3, [r4, #16]
 800b58c:	6861      	ldr	r1, [r4, #4]
 800b58e:	4299      	cmp	r1, r3
 800b590:	bfde      	ittt	le
 800b592:	2330      	movle	r3, #48	; 0x30
 800b594:	f805 3c01 	strble.w	r3, [r5, #-1]
 800b598:	f105 35ff 	addle.w	r5, r5, #4294967295
 800b59c:	1b52      	subs	r2, r2, r5
 800b59e:	6122      	str	r2, [r4, #16]
 800b5a0:	f8cd a000 	str.w	sl, [sp]
 800b5a4:	464b      	mov	r3, r9
 800b5a6:	aa03      	add	r2, sp, #12
 800b5a8:	4621      	mov	r1, r4
 800b5aa:	4640      	mov	r0, r8
 800b5ac:	f7ff fee2 	bl	800b374 <_printf_common>
 800b5b0:	3001      	adds	r0, #1
 800b5b2:	d14c      	bne.n	800b64e <_printf_i+0x1fe>
 800b5b4:	f04f 30ff 	mov.w	r0, #4294967295
 800b5b8:	b004      	add	sp, #16
 800b5ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b5be:	4835      	ldr	r0, [pc, #212]	; (800b694 <_printf_i+0x244>)
 800b5c0:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800b5c4:	6829      	ldr	r1, [r5, #0]
 800b5c6:	6823      	ldr	r3, [r4, #0]
 800b5c8:	f851 6b04 	ldr.w	r6, [r1], #4
 800b5cc:	6029      	str	r1, [r5, #0]
 800b5ce:	061d      	lsls	r5, r3, #24
 800b5d0:	d514      	bpl.n	800b5fc <_printf_i+0x1ac>
 800b5d2:	07df      	lsls	r7, r3, #31
 800b5d4:	bf44      	itt	mi
 800b5d6:	f043 0320 	orrmi.w	r3, r3, #32
 800b5da:	6023      	strmi	r3, [r4, #0]
 800b5dc:	b91e      	cbnz	r6, 800b5e6 <_printf_i+0x196>
 800b5de:	6823      	ldr	r3, [r4, #0]
 800b5e0:	f023 0320 	bic.w	r3, r3, #32
 800b5e4:	6023      	str	r3, [r4, #0]
 800b5e6:	2310      	movs	r3, #16
 800b5e8:	e7b0      	b.n	800b54c <_printf_i+0xfc>
 800b5ea:	6823      	ldr	r3, [r4, #0]
 800b5ec:	f043 0320 	orr.w	r3, r3, #32
 800b5f0:	6023      	str	r3, [r4, #0]
 800b5f2:	2378      	movs	r3, #120	; 0x78
 800b5f4:	4828      	ldr	r0, [pc, #160]	; (800b698 <_printf_i+0x248>)
 800b5f6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b5fa:	e7e3      	b.n	800b5c4 <_printf_i+0x174>
 800b5fc:	0659      	lsls	r1, r3, #25
 800b5fe:	bf48      	it	mi
 800b600:	b2b6      	uxthmi	r6, r6
 800b602:	e7e6      	b.n	800b5d2 <_printf_i+0x182>
 800b604:	4615      	mov	r5, r2
 800b606:	e7bb      	b.n	800b580 <_printf_i+0x130>
 800b608:	682b      	ldr	r3, [r5, #0]
 800b60a:	6826      	ldr	r6, [r4, #0]
 800b60c:	6961      	ldr	r1, [r4, #20]
 800b60e:	1d18      	adds	r0, r3, #4
 800b610:	6028      	str	r0, [r5, #0]
 800b612:	0635      	lsls	r5, r6, #24
 800b614:	681b      	ldr	r3, [r3, #0]
 800b616:	d501      	bpl.n	800b61c <_printf_i+0x1cc>
 800b618:	6019      	str	r1, [r3, #0]
 800b61a:	e002      	b.n	800b622 <_printf_i+0x1d2>
 800b61c:	0670      	lsls	r0, r6, #25
 800b61e:	d5fb      	bpl.n	800b618 <_printf_i+0x1c8>
 800b620:	8019      	strh	r1, [r3, #0]
 800b622:	2300      	movs	r3, #0
 800b624:	6123      	str	r3, [r4, #16]
 800b626:	4615      	mov	r5, r2
 800b628:	e7ba      	b.n	800b5a0 <_printf_i+0x150>
 800b62a:	682b      	ldr	r3, [r5, #0]
 800b62c:	1d1a      	adds	r2, r3, #4
 800b62e:	602a      	str	r2, [r5, #0]
 800b630:	681d      	ldr	r5, [r3, #0]
 800b632:	6862      	ldr	r2, [r4, #4]
 800b634:	2100      	movs	r1, #0
 800b636:	4628      	mov	r0, r5
 800b638:	f7f4 fe42 	bl	80002c0 <memchr>
 800b63c:	b108      	cbz	r0, 800b642 <_printf_i+0x1f2>
 800b63e:	1b40      	subs	r0, r0, r5
 800b640:	6060      	str	r0, [r4, #4]
 800b642:	6863      	ldr	r3, [r4, #4]
 800b644:	6123      	str	r3, [r4, #16]
 800b646:	2300      	movs	r3, #0
 800b648:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800b64c:	e7a8      	b.n	800b5a0 <_printf_i+0x150>
 800b64e:	6923      	ldr	r3, [r4, #16]
 800b650:	462a      	mov	r2, r5
 800b652:	4649      	mov	r1, r9
 800b654:	4640      	mov	r0, r8
 800b656:	47d0      	blx	sl
 800b658:	3001      	adds	r0, #1
 800b65a:	d0ab      	beq.n	800b5b4 <_printf_i+0x164>
 800b65c:	6823      	ldr	r3, [r4, #0]
 800b65e:	079b      	lsls	r3, r3, #30
 800b660:	d413      	bmi.n	800b68a <_printf_i+0x23a>
 800b662:	68e0      	ldr	r0, [r4, #12]
 800b664:	9b03      	ldr	r3, [sp, #12]
 800b666:	4298      	cmp	r0, r3
 800b668:	bfb8      	it	lt
 800b66a:	4618      	movlt	r0, r3
 800b66c:	e7a4      	b.n	800b5b8 <_printf_i+0x168>
 800b66e:	2301      	movs	r3, #1
 800b670:	4632      	mov	r2, r6
 800b672:	4649      	mov	r1, r9
 800b674:	4640      	mov	r0, r8
 800b676:	47d0      	blx	sl
 800b678:	3001      	adds	r0, #1
 800b67a:	d09b      	beq.n	800b5b4 <_printf_i+0x164>
 800b67c:	3501      	adds	r5, #1
 800b67e:	68e3      	ldr	r3, [r4, #12]
 800b680:	9903      	ldr	r1, [sp, #12]
 800b682:	1a5b      	subs	r3, r3, r1
 800b684:	42ab      	cmp	r3, r5
 800b686:	dcf2      	bgt.n	800b66e <_printf_i+0x21e>
 800b688:	e7eb      	b.n	800b662 <_printf_i+0x212>
 800b68a:	2500      	movs	r5, #0
 800b68c:	f104 0619 	add.w	r6, r4, #25
 800b690:	e7f5      	b.n	800b67e <_printf_i+0x22e>
 800b692:	bf00      	nop
 800b694:	0802867a 	.word	0x0802867a
 800b698:	0802868b 	.word	0x0802868b

0800b69c <sniprintf>:
 800b69c:	b40c      	push	{r2, r3}
 800b69e:	b530      	push	{r4, r5, lr}
 800b6a0:	4b17      	ldr	r3, [pc, #92]	; (800b700 <sniprintf+0x64>)
 800b6a2:	1e0c      	subs	r4, r1, #0
 800b6a4:	681d      	ldr	r5, [r3, #0]
 800b6a6:	b09d      	sub	sp, #116	; 0x74
 800b6a8:	da08      	bge.n	800b6bc <sniprintf+0x20>
 800b6aa:	238b      	movs	r3, #139	; 0x8b
 800b6ac:	602b      	str	r3, [r5, #0]
 800b6ae:	f04f 30ff 	mov.w	r0, #4294967295
 800b6b2:	b01d      	add	sp, #116	; 0x74
 800b6b4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b6b8:	b002      	add	sp, #8
 800b6ba:	4770      	bx	lr
 800b6bc:	f44f 7302 	mov.w	r3, #520	; 0x208
 800b6c0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b6c4:	bf14      	ite	ne
 800b6c6:	f104 33ff 	addne.w	r3, r4, #4294967295
 800b6ca:	4623      	moveq	r3, r4
 800b6cc:	9304      	str	r3, [sp, #16]
 800b6ce:	9307      	str	r3, [sp, #28]
 800b6d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b6d4:	9002      	str	r0, [sp, #8]
 800b6d6:	9006      	str	r0, [sp, #24]
 800b6d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b6dc:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b6de:	ab21      	add	r3, sp, #132	; 0x84
 800b6e0:	a902      	add	r1, sp, #8
 800b6e2:	4628      	mov	r0, r5
 800b6e4:	9301      	str	r3, [sp, #4]
 800b6e6:	f001 fb79 	bl	800cddc <_svfiprintf_r>
 800b6ea:	1c43      	adds	r3, r0, #1
 800b6ec:	bfbc      	itt	lt
 800b6ee:	238b      	movlt	r3, #139	; 0x8b
 800b6f0:	602b      	strlt	r3, [r5, #0]
 800b6f2:	2c00      	cmp	r4, #0
 800b6f4:	d0dd      	beq.n	800b6b2 <sniprintf+0x16>
 800b6f6:	9b02      	ldr	r3, [sp, #8]
 800b6f8:	2200      	movs	r2, #0
 800b6fa:	701a      	strb	r2, [r3, #0]
 800b6fc:	e7d9      	b.n	800b6b2 <sniprintf+0x16>
 800b6fe:	bf00      	nop
 800b700:	200000fc 	.word	0x200000fc

0800b704 <quorem>:
 800b704:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b708:	6903      	ldr	r3, [r0, #16]
 800b70a:	690c      	ldr	r4, [r1, #16]
 800b70c:	42a3      	cmp	r3, r4
 800b70e:	4607      	mov	r7, r0
 800b710:	f2c0 8081 	blt.w	800b816 <quorem+0x112>
 800b714:	3c01      	subs	r4, #1
 800b716:	f101 0814 	add.w	r8, r1, #20
 800b71a:	f100 0514 	add.w	r5, r0, #20
 800b71e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800b722:	9301      	str	r3, [sp, #4]
 800b724:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800b728:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800b72c:	3301      	adds	r3, #1
 800b72e:	429a      	cmp	r2, r3
 800b730:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800b734:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800b738:	fbb2 f6f3 	udiv	r6, r2, r3
 800b73c:	d331      	bcc.n	800b7a2 <quorem+0x9e>
 800b73e:	f04f 0e00 	mov.w	lr, #0
 800b742:	4640      	mov	r0, r8
 800b744:	46ac      	mov	ip, r5
 800b746:	46f2      	mov	sl, lr
 800b748:	f850 2b04 	ldr.w	r2, [r0], #4
 800b74c:	b293      	uxth	r3, r2
 800b74e:	fb06 e303 	mla	r3, r6, r3, lr
 800b752:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800b756:	b29b      	uxth	r3, r3
 800b758:	ebaa 0303 	sub.w	r3, sl, r3
 800b75c:	f8dc a000 	ldr.w	sl, [ip]
 800b760:	0c12      	lsrs	r2, r2, #16
 800b762:	fa13 f38a 	uxtah	r3, r3, sl
 800b766:	fb06 e202 	mla	r2, r6, r2, lr
 800b76a:	9300      	str	r3, [sp, #0]
 800b76c:	9b00      	ldr	r3, [sp, #0]
 800b76e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800b772:	b292      	uxth	r2, r2
 800b774:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800b778:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800b77c:	f8bd 3000 	ldrh.w	r3, [sp]
 800b780:	4581      	cmp	r9, r0
 800b782:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800b786:	f84c 3b04 	str.w	r3, [ip], #4
 800b78a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800b78e:	d2db      	bcs.n	800b748 <quorem+0x44>
 800b790:	f855 300b 	ldr.w	r3, [r5, fp]
 800b794:	b92b      	cbnz	r3, 800b7a2 <quorem+0x9e>
 800b796:	9b01      	ldr	r3, [sp, #4]
 800b798:	3b04      	subs	r3, #4
 800b79a:	429d      	cmp	r5, r3
 800b79c:	461a      	mov	r2, r3
 800b79e:	d32e      	bcc.n	800b7fe <quorem+0xfa>
 800b7a0:	613c      	str	r4, [r7, #16]
 800b7a2:	4638      	mov	r0, r7
 800b7a4:	f001 f8c6 	bl	800c934 <__mcmp>
 800b7a8:	2800      	cmp	r0, #0
 800b7aa:	db24      	blt.n	800b7f6 <quorem+0xf2>
 800b7ac:	3601      	adds	r6, #1
 800b7ae:	4628      	mov	r0, r5
 800b7b0:	f04f 0c00 	mov.w	ip, #0
 800b7b4:	f858 2b04 	ldr.w	r2, [r8], #4
 800b7b8:	f8d0 e000 	ldr.w	lr, [r0]
 800b7bc:	b293      	uxth	r3, r2
 800b7be:	ebac 0303 	sub.w	r3, ip, r3
 800b7c2:	0c12      	lsrs	r2, r2, #16
 800b7c4:	fa13 f38e 	uxtah	r3, r3, lr
 800b7c8:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800b7cc:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800b7d0:	b29b      	uxth	r3, r3
 800b7d2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800b7d6:	45c1      	cmp	r9, r8
 800b7d8:	f840 3b04 	str.w	r3, [r0], #4
 800b7dc:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800b7e0:	d2e8      	bcs.n	800b7b4 <quorem+0xb0>
 800b7e2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800b7e6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800b7ea:	b922      	cbnz	r2, 800b7f6 <quorem+0xf2>
 800b7ec:	3b04      	subs	r3, #4
 800b7ee:	429d      	cmp	r5, r3
 800b7f0:	461a      	mov	r2, r3
 800b7f2:	d30a      	bcc.n	800b80a <quorem+0x106>
 800b7f4:	613c      	str	r4, [r7, #16]
 800b7f6:	4630      	mov	r0, r6
 800b7f8:	b003      	add	sp, #12
 800b7fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b7fe:	6812      	ldr	r2, [r2, #0]
 800b800:	3b04      	subs	r3, #4
 800b802:	2a00      	cmp	r2, #0
 800b804:	d1cc      	bne.n	800b7a0 <quorem+0x9c>
 800b806:	3c01      	subs	r4, #1
 800b808:	e7c7      	b.n	800b79a <quorem+0x96>
 800b80a:	6812      	ldr	r2, [r2, #0]
 800b80c:	3b04      	subs	r3, #4
 800b80e:	2a00      	cmp	r2, #0
 800b810:	d1f0      	bne.n	800b7f4 <quorem+0xf0>
 800b812:	3c01      	subs	r4, #1
 800b814:	e7eb      	b.n	800b7ee <quorem+0xea>
 800b816:	2000      	movs	r0, #0
 800b818:	e7ee      	b.n	800b7f8 <quorem+0xf4>
 800b81a:	0000      	movs	r0, r0
 800b81c:	0000      	movs	r0, r0
	...

0800b820 <_dtoa_r>:
 800b820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b824:	ed2d 8b04 	vpush	{d8-d9}
 800b828:	ec57 6b10 	vmov	r6, r7, d0
 800b82c:	b093      	sub	sp, #76	; 0x4c
 800b82e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800b830:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800b834:	9106      	str	r1, [sp, #24]
 800b836:	ee10 aa10 	vmov	sl, s0
 800b83a:	4604      	mov	r4, r0
 800b83c:	9209      	str	r2, [sp, #36]	; 0x24
 800b83e:	930c      	str	r3, [sp, #48]	; 0x30
 800b840:	46bb      	mov	fp, r7
 800b842:	b975      	cbnz	r5, 800b862 <_dtoa_r+0x42>
 800b844:	2010      	movs	r0, #16
 800b846:	f000 fddd 	bl	800c404 <malloc>
 800b84a:	4602      	mov	r2, r0
 800b84c:	6260      	str	r0, [r4, #36]	; 0x24
 800b84e:	b920      	cbnz	r0, 800b85a <_dtoa_r+0x3a>
 800b850:	4ba7      	ldr	r3, [pc, #668]	; (800baf0 <_dtoa_r+0x2d0>)
 800b852:	21ea      	movs	r1, #234	; 0xea
 800b854:	48a7      	ldr	r0, [pc, #668]	; (800baf4 <_dtoa_r+0x2d4>)
 800b856:	f001 fbd1 	bl	800cffc <__assert_func>
 800b85a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800b85e:	6005      	str	r5, [r0, #0]
 800b860:	60c5      	str	r5, [r0, #12]
 800b862:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b864:	6819      	ldr	r1, [r3, #0]
 800b866:	b151      	cbz	r1, 800b87e <_dtoa_r+0x5e>
 800b868:	685a      	ldr	r2, [r3, #4]
 800b86a:	604a      	str	r2, [r1, #4]
 800b86c:	2301      	movs	r3, #1
 800b86e:	4093      	lsls	r3, r2
 800b870:	608b      	str	r3, [r1, #8]
 800b872:	4620      	mov	r0, r4
 800b874:	f000 fe1c 	bl	800c4b0 <_Bfree>
 800b878:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b87a:	2200      	movs	r2, #0
 800b87c:	601a      	str	r2, [r3, #0]
 800b87e:	1e3b      	subs	r3, r7, #0
 800b880:	bfaa      	itet	ge
 800b882:	2300      	movge	r3, #0
 800b884:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800b888:	f8c8 3000 	strge.w	r3, [r8]
 800b88c:	4b9a      	ldr	r3, [pc, #616]	; (800baf8 <_dtoa_r+0x2d8>)
 800b88e:	bfbc      	itt	lt
 800b890:	2201      	movlt	r2, #1
 800b892:	f8c8 2000 	strlt.w	r2, [r8]
 800b896:	ea33 030b 	bics.w	r3, r3, fp
 800b89a:	d11b      	bne.n	800b8d4 <_dtoa_r+0xb4>
 800b89c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800b89e:	f242 730f 	movw	r3, #9999	; 0x270f
 800b8a2:	6013      	str	r3, [r2, #0]
 800b8a4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800b8a8:	4333      	orrs	r3, r6
 800b8aa:	f000 8592 	beq.w	800c3d2 <_dtoa_r+0xbb2>
 800b8ae:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800b8b0:	b963      	cbnz	r3, 800b8cc <_dtoa_r+0xac>
 800b8b2:	4b92      	ldr	r3, [pc, #584]	; (800bafc <_dtoa_r+0x2dc>)
 800b8b4:	e022      	b.n	800b8fc <_dtoa_r+0xdc>
 800b8b6:	4b92      	ldr	r3, [pc, #584]	; (800bb00 <_dtoa_r+0x2e0>)
 800b8b8:	9301      	str	r3, [sp, #4]
 800b8ba:	3308      	adds	r3, #8
 800b8bc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b8be:	6013      	str	r3, [r2, #0]
 800b8c0:	9801      	ldr	r0, [sp, #4]
 800b8c2:	b013      	add	sp, #76	; 0x4c
 800b8c4:	ecbd 8b04 	vpop	{d8-d9}
 800b8c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b8cc:	4b8b      	ldr	r3, [pc, #556]	; (800bafc <_dtoa_r+0x2dc>)
 800b8ce:	9301      	str	r3, [sp, #4]
 800b8d0:	3303      	adds	r3, #3
 800b8d2:	e7f3      	b.n	800b8bc <_dtoa_r+0x9c>
 800b8d4:	2200      	movs	r2, #0
 800b8d6:	2300      	movs	r3, #0
 800b8d8:	4650      	mov	r0, sl
 800b8da:	4659      	mov	r1, fp
 800b8dc:	f7f5 f964 	bl	8000ba8 <__aeabi_dcmpeq>
 800b8e0:	ec4b ab19 	vmov	d9, sl, fp
 800b8e4:	4680      	mov	r8, r0
 800b8e6:	b158      	cbz	r0, 800b900 <_dtoa_r+0xe0>
 800b8e8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800b8ea:	2301      	movs	r3, #1
 800b8ec:	6013      	str	r3, [r2, #0]
 800b8ee:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800b8f0:	2b00      	cmp	r3, #0
 800b8f2:	f000 856b 	beq.w	800c3cc <_dtoa_r+0xbac>
 800b8f6:	4883      	ldr	r0, [pc, #524]	; (800bb04 <_dtoa_r+0x2e4>)
 800b8f8:	6018      	str	r0, [r3, #0]
 800b8fa:	1e43      	subs	r3, r0, #1
 800b8fc:	9301      	str	r3, [sp, #4]
 800b8fe:	e7df      	b.n	800b8c0 <_dtoa_r+0xa0>
 800b900:	ec4b ab10 	vmov	d0, sl, fp
 800b904:	aa10      	add	r2, sp, #64	; 0x40
 800b906:	a911      	add	r1, sp, #68	; 0x44
 800b908:	4620      	mov	r0, r4
 800b90a:	f001 f8b9 	bl	800ca80 <__d2b>
 800b90e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800b912:	ee08 0a10 	vmov	s16, r0
 800b916:	2d00      	cmp	r5, #0
 800b918:	f000 8084 	beq.w	800ba24 <_dtoa_r+0x204>
 800b91c:	ee19 3a90 	vmov	r3, s19
 800b920:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800b924:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800b928:	4656      	mov	r6, sl
 800b92a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800b92e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800b932:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800b936:	4b74      	ldr	r3, [pc, #464]	; (800bb08 <_dtoa_r+0x2e8>)
 800b938:	2200      	movs	r2, #0
 800b93a:	4630      	mov	r0, r6
 800b93c:	4639      	mov	r1, r7
 800b93e:	f7f4 fd13 	bl	8000368 <__aeabi_dsub>
 800b942:	a365      	add	r3, pc, #404	; (adr r3, 800bad8 <_dtoa_r+0x2b8>)
 800b944:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b948:	f7f4 fec6 	bl	80006d8 <__aeabi_dmul>
 800b94c:	a364      	add	r3, pc, #400	; (adr r3, 800bae0 <_dtoa_r+0x2c0>)
 800b94e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b952:	f7f4 fd0b 	bl	800036c <__adddf3>
 800b956:	4606      	mov	r6, r0
 800b958:	4628      	mov	r0, r5
 800b95a:	460f      	mov	r7, r1
 800b95c:	f7f4 fe52 	bl	8000604 <__aeabi_i2d>
 800b960:	a361      	add	r3, pc, #388	; (adr r3, 800bae8 <_dtoa_r+0x2c8>)
 800b962:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b966:	f7f4 feb7 	bl	80006d8 <__aeabi_dmul>
 800b96a:	4602      	mov	r2, r0
 800b96c:	460b      	mov	r3, r1
 800b96e:	4630      	mov	r0, r6
 800b970:	4639      	mov	r1, r7
 800b972:	f7f4 fcfb 	bl	800036c <__adddf3>
 800b976:	4606      	mov	r6, r0
 800b978:	460f      	mov	r7, r1
 800b97a:	f7f5 f95d 	bl	8000c38 <__aeabi_d2iz>
 800b97e:	2200      	movs	r2, #0
 800b980:	9000      	str	r0, [sp, #0]
 800b982:	2300      	movs	r3, #0
 800b984:	4630      	mov	r0, r6
 800b986:	4639      	mov	r1, r7
 800b988:	f7f5 f918 	bl	8000bbc <__aeabi_dcmplt>
 800b98c:	b150      	cbz	r0, 800b9a4 <_dtoa_r+0x184>
 800b98e:	9800      	ldr	r0, [sp, #0]
 800b990:	f7f4 fe38 	bl	8000604 <__aeabi_i2d>
 800b994:	4632      	mov	r2, r6
 800b996:	463b      	mov	r3, r7
 800b998:	f7f5 f906 	bl	8000ba8 <__aeabi_dcmpeq>
 800b99c:	b910      	cbnz	r0, 800b9a4 <_dtoa_r+0x184>
 800b99e:	9b00      	ldr	r3, [sp, #0]
 800b9a0:	3b01      	subs	r3, #1
 800b9a2:	9300      	str	r3, [sp, #0]
 800b9a4:	9b00      	ldr	r3, [sp, #0]
 800b9a6:	2b16      	cmp	r3, #22
 800b9a8:	d85a      	bhi.n	800ba60 <_dtoa_r+0x240>
 800b9aa:	9a00      	ldr	r2, [sp, #0]
 800b9ac:	4b57      	ldr	r3, [pc, #348]	; (800bb0c <_dtoa_r+0x2ec>)
 800b9ae:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800b9b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b9b6:	ec51 0b19 	vmov	r0, r1, d9
 800b9ba:	f7f5 f8ff 	bl	8000bbc <__aeabi_dcmplt>
 800b9be:	2800      	cmp	r0, #0
 800b9c0:	d050      	beq.n	800ba64 <_dtoa_r+0x244>
 800b9c2:	9b00      	ldr	r3, [sp, #0]
 800b9c4:	3b01      	subs	r3, #1
 800b9c6:	9300      	str	r3, [sp, #0]
 800b9c8:	2300      	movs	r3, #0
 800b9ca:	930b      	str	r3, [sp, #44]	; 0x2c
 800b9cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b9ce:	1b5d      	subs	r5, r3, r5
 800b9d0:	1e6b      	subs	r3, r5, #1
 800b9d2:	9305      	str	r3, [sp, #20]
 800b9d4:	bf45      	ittet	mi
 800b9d6:	f1c5 0301 	rsbmi	r3, r5, #1
 800b9da:	9304      	strmi	r3, [sp, #16]
 800b9dc:	2300      	movpl	r3, #0
 800b9de:	2300      	movmi	r3, #0
 800b9e0:	bf4c      	ite	mi
 800b9e2:	9305      	strmi	r3, [sp, #20]
 800b9e4:	9304      	strpl	r3, [sp, #16]
 800b9e6:	9b00      	ldr	r3, [sp, #0]
 800b9e8:	2b00      	cmp	r3, #0
 800b9ea:	db3d      	blt.n	800ba68 <_dtoa_r+0x248>
 800b9ec:	9b05      	ldr	r3, [sp, #20]
 800b9ee:	9a00      	ldr	r2, [sp, #0]
 800b9f0:	920a      	str	r2, [sp, #40]	; 0x28
 800b9f2:	4413      	add	r3, r2
 800b9f4:	9305      	str	r3, [sp, #20]
 800b9f6:	2300      	movs	r3, #0
 800b9f8:	9307      	str	r3, [sp, #28]
 800b9fa:	9b06      	ldr	r3, [sp, #24]
 800b9fc:	2b09      	cmp	r3, #9
 800b9fe:	f200 8089 	bhi.w	800bb14 <_dtoa_r+0x2f4>
 800ba02:	2b05      	cmp	r3, #5
 800ba04:	bfc4      	itt	gt
 800ba06:	3b04      	subgt	r3, #4
 800ba08:	9306      	strgt	r3, [sp, #24]
 800ba0a:	9b06      	ldr	r3, [sp, #24]
 800ba0c:	f1a3 0302 	sub.w	r3, r3, #2
 800ba10:	bfcc      	ite	gt
 800ba12:	2500      	movgt	r5, #0
 800ba14:	2501      	movle	r5, #1
 800ba16:	2b03      	cmp	r3, #3
 800ba18:	f200 8087 	bhi.w	800bb2a <_dtoa_r+0x30a>
 800ba1c:	e8df f003 	tbb	[pc, r3]
 800ba20:	59383a2d 	.word	0x59383a2d
 800ba24:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800ba28:	441d      	add	r5, r3
 800ba2a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800ba2e:	2b20      	cmp	r3, #32
 800ba30:	bfc1      	itttt	gt
 800ba32:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800ba36:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800ba3a:	fa0b f303 	lslgt.w	r3, fp, r3
 800ba3e:	fa26 f000 	lsrgt.w	r0, r6, r0
 800ba42:	bfda      	itte	le
 800ba44:	f1c3 0320 	rsble	r3, r3, #32
 800ba48:	fa06 f003 	lslle.w	r0, r6, r3
 800ba4c:	4318      	orrgt	r0, r3
 800ba4e:	f7f4 fdc9 	bl	80005e4 <__aeabi_ui2d>
 800ba52:	2301      	movs	r3, #1
 800ba54:	4606      	mov	r6, r0
 800ba56:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800ba5a:	3d01      	subs	r5, #1
 800ba5c:	930e      	str	r3, [sp, #56]	; 0x38
 800ba5e:	e76a      	b.n	800b936 <_dtoa_r+0x116>
 800ba60:	2301      	movs	r3, #1
 800ba62:	e7b2      	b.n	800b9ca <_dtoa_r+0x1aa>
 800ba64:	900b      	str	r0, [sp, #44]	; 0x2c
 800ba66:	e7b1      	b.n	800b9cc <_dtoa_r+0x1ac>
 800ba68:	9b04      	ldr	r3, [sp, #16]
 800ba6a:	9a00      	ldr	r2, [sp, #0]
 800ba6c:	1a9b      	subs	r3, r3, r2
 800ba6e:	9304      	str	r3, [sp, #16]
 800ba70:	4253      	negs	r3, r2
 800ba72:	9307      	str	r3, [sp, #28]
 800ba74:	2300      	movs	r3, #0
 800ba76:	930a      	str	r3, [sp, #40]	; 0x28
 800ba78:	e7bf      	b.n	800b9fa <_dtoa_r+0x1da>
 800ba7a:	2300      	movs	r3, #0
 800ba7c:	9308      	str	r3, [sp, #32]
 800ba7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ba80:	2b00      	cmp	r3, #0
 800ba82:	dc55      	bgt.n	800bb30 <_dtoa_r+0x310>
 800ba84:	2301      	movs	r3, #1
 800ba86:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800ba8a:	461a      	mov	r2, r3
 800ba8c:	9209      	str	r2, [sp, #36]	; 0x24
 800ba8e:	e00c      	b.n	800baaa <_dtoa_r+0x28a>
 800ba90:	2301      	movs	r3, #1
 800ba92:	e7f3      	b.n	800ba7c <_dtoa_r+0x25c>
 800ba94:	2300      	movs	r3, #0
 800ba96:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ba98:	9308      	str	r3, [sp, #32]
 800ba9a:	9b00      	ldr	r3, [sp, #0]
 800ba9c:	4413      	add	r3, r2
 800ba9e:	9302      	str	r3, [sp, #8]
 800baa0:	3301      	adds	r3, #1
 800baa2:	2b01      	cmp	r3, #1
 800baa4:	9303      	str	r3, [sp, #12]
 800baa6:	bfb8      	it	lt
 800baa8:	2301      	movlt	r3, #1
 800baaa:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800baac:	2200      	movs	r2, #0
 800baae:	6042      	str	r2, [r0, #4]
 800bab0:	2204      	movs	r2, #4
 800bab2:	f102 0614 	add.w	r6, r2, #20
 800bab6:	429e      	cmp	r6, r3
 800bab8:	6841      	ldr	r1, [r0, #4]
 800baba:	d93d      	bls.n	800bb38 <_dtoa_r+0x318>
 800babc:	4620      	mov	r0, r4
 800babe:	f000 fcb7 	bl	800c430 <_Balloc>
 800bac2:	9001      	str	r0, [sp, #4]
 800bac4:	2800      	cmp	r0, #0
 800bac6:	d13b      	bne.n	800bb40 <_dtoa_r+0x320>
 800bac8:	4b11      	ldr	r3, [pc, #68]	; (800bb10 <_dtoa_r+0x2f0>)
 800baca:	4602      	mov	r2, r0
 800bacc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800bad0:	e6c0      	b.n	800b854 <_dtoa_r+0x34>
 800bad2:	2301      	movs	r3, #1
 800bad4:	e7df      	b.n	800ba96 <_dtoa_r+0x276>
 800bad6:	bf00      	nop
 800bad8:	636f4361 	.word	0x636f4361
 800badc:	3fd287a7 	.word	0x3fd287a7
 800bae0:	8b60c8b3 	.word	0x8b60c8b3
 800bae4:	3fc68a28 	.word	0x3fc68a28
 800bae8:	509f79fb 	.word	0x509f79fb
 800baec:	3fd34413 	.word	0x3fd34413
 800baf0:	080286a9 	.word	0x080286a9
 800baf4:	080286c0 	.word	0x080286c0
 800baf8:	7ff00000 	.word	0x7ff00000
 800bafc:	080286a5 	.word	0x080286a5
 800bb00:	0802869c 	.word	0x0802869c
 800bb04:	08028679 	.word	0x08028679
 800bb08:	3ff80000 	.word	0x3ff80000
 800bb0c:	080287b0 	.word	0x080287b0
 800bb10:	0802871b 	.word	0x0802871b
 800bb14:	2501      	movs	r5, #1
 800bb16:	2300      	movs	r3, #0
 800bb18:	9306      	str	r3, [sp, #24]
 800bb1a:	9508      	str	r5, [sp, #32]
 800bb1c:	f04f 33ff 	mov.w	r3, #4294967295
 800bb20:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800bb24:	2200      	movs	r2, #0
 800bb26:	2312      	movs	r3, #18
 800bb28:	e7b0      	b.n	800ba8c <_dtoa_r+0x26c>
 800bb2a:	2301      	movs	r3, #1
 800bb2c:	9308      	str	r3, [sp, #32]
 800bb2e:	e7f5      	b.n	800bb1c <_dtoa_r+0x2fc>
 800bb30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bb32:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800bb36:	e7b8      	b.n	800baaa <_dtoa_r+0x28a>
 800bb38:	3101      	adds	r1, #1
 800bb3a:	6041      	str	r1, [r0, #4]
 800bb3c:	0052      	lsls	r2, r2, #1
 800bb3e:	e7b8      	b.n	800bab2 <_dtoa_r+0x292>
 800bb40:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800bb42:	9a01      	ldr	r2, [sp, #4]
 800bb44:	601a      	str	r2, [r3, #0]
 800bb46:	9b03      	ldr	r3, [sp, #12]
 800bb48:	2b0e      	cmp	r3, #14
 800bb4a:	f200 809d 	bhi.w	800bc88 <_dtoa_r+0x468>
 800bb4e:	2d00      	cmp	r5, #0
 800bb50:	f000 809a 	beq.w	800bc88 <_dtoa_r+0x468>
 800bb54:	9b00      	ldr	r3, [sp, #0]
 800bb56:	2b00      	cmp	r3, #0
 800bb58:	dd32      	ble.n	800bbc0 <_dtoa_r+0x3a0>
 800bb5a:	4ab7      	ldr	r2, [pc, #732]	; (800be38 <_dtoa_r+0x618>)
 800bb5c:	f003 030f 	and.w	r3, r3, #15
 800bb60:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800bb64:	e9d3 8900 	ldrd	r8, r9, [r3]
 800bb68:	9b00      	ldr	r3, [sp, #0]
 800bb6a:	05d8      	lsls	r0, r3, #23
 800bb6c:	ea4f 1723 	mov.w	r7, r3, asr #4
 800bb70:	d516      	bpl.n	800bba0 <_dtoa_r+0x380>
 800bb72:	4bb2      	ldr	r3, [pc, #712]	; (800be3c <_dtoa_r+0x61c>)
 800bb74:	ec51 0b19 	vmov	r0, r1, d9
 800bb78:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800bb7c:	f7f4 fed6 	bl	800092c <__aeabi_ddiv>
 800bb80:	f007 070f 	and.w	r7, r7, #15
 800bb84:	4682      	mov	sl, r0
 800bb86:	468b      	mov	fp, r1
 800bb88:	2503      	movs	r5, #3
 800bb8a:	4eac      	ldr	r6, [pc, #688]	; (800be3c <_dtoa_r+0x61c>)
 800bb8c:	b957      	cbnz	r7, 800bba4 <_dtoa_r+0x384>
 800bb8e:	4642      	mov	r2, r8
 800bb90:	464b      	mov	r3, r9
 800bb92:	4650      	mov	r0, sl
 800bb94:	4659      	mov	r1, fp
 800bb96:	f7f4 fec9 	bl	800092c <__aeabi_ddiv>
 800bb9a:	4682      	mov	sl, r0
 800bb9c:	468b      	mov	fp, r1
 800bb9e:	e028      	b.n	800bbf2 <_dtoa_r+0x3d2>
 800bba0:	2502      	movs	r5, #2
 800bba2:	e7f2      	b.n	800bb8a <_dtoa_r+0x36a>
 800bba4:	07f9      	lsls	r1, r7, #31
 800bba6:	d508      	bpl.n	800bbba <_dtoa_r+0x39a>
 800bba8:	4640      	mov	r0, r8
 800bbaa:	4649      	mov	r1, r9
 800bbac:	e9d6 2300 	ldrd	r2, r3, [r6]
 800bbb0:	f7f4 fd92 	bl	80006d8 <__aeabi_dmul>
 800bbb4:	3501      	adds	r5, #1
 800bbb6:	4680      	mov	r8, r0
 800bbb8:	4689      	mov	r9, r1
 800bbba:	107f      	asrs	r7, r7, #1
 800bbbc:	3608      	adds	r6, #8
 800bbbe:	e7e5      	b.n	800bb8c <_dtoa_r+0x36c>
 800bbc0:	f000 809b 	beq.w	800bcfa <_dtoa_r+0x4da>
 800bbc4:	9b00      	ldr	r3, [sp, #0]
 800bbc6:	4f9d      	ldr	r7, [pc, #628]	; (800be3c <_dtoa_r+0x61c>)
 800bbc8:	425e      	negs	r6, r3
 800bbca:	4b9b      	ldr	r3, [pc, #620]	; (800be38 <_dtoa_r+0x618>)
 800bbcc:	f006 020f 	and.w	r2, r6, #15
 800bbd0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800bbd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800bbd8:	ec51 0b19 	vmov	r0, r1, d9
 800bbdc:	f7f4 fd7c 	bl	80006d8 <__aeabi_dmul>
 800bbe0:	1136      	asrs	r6, r6, #4
 800bbe2:	4682      	mov	sl, r0
 800bbe4:	468b      	mov	fp, r1
 800bbe6:	2300      	movs	r3, #0
 800bbe8:	2502      	movs	r5, #2
 800bbea:	2e00      	cmp	r6, #0
 800bbec:	d17a      	bne.n	800bce4 <_dtoa_r+0x4c4>
 800bbee:	2b00      	cmp	r3, #0
 800bbf0:	d1d3      	bne.n	800bb9a <_dtoa_r+0x37a>
 800bbf2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bbf4:	2b00      	cmp	r3, #0
 800bbf6:	f000 8082 	beq.w	800bcfe <_dtoa_r+0x4de>
 800bbfa:	4b91      	ldr	r3, [pc, #580]	; (800be40 <_dtoa_r+0x620>)
 800bbfc:	2200      	movs	r2, #0
 800bbfe:	4650      	mov	r0, sl
 800bc00:	4659      	mov	r1, fp
 800bc02:	f7f4 ffdb 	bl	8000bbc <__aeabi_dcmplt>
 800bc06:	2800      	cmp	r0, #0
 800bc08:	d079      	beq.n	800bcfe <_dtoa_r+0x4de>
 800bc0a:	9b03      	ldr	r3, [sp, #12]
 800bc0c:	2b00      	cmp	r3, #0
 800bc0e:	d076      	beq.n	800bcfe <_dtoa_r+0x4de>
 800bc10:	9b02      	ldr	r3, [sp, #8]
 800bc12:	2b00      	cmp	r3, #0
 800bc14:	dd36      	ble.n	800bc84 <_dtoa_r+0x464>
 800bc16:	9b00      	ldr	r3, [sp, #0]
 800bc18:	4650      	mov	r0, sl
 800bc1a:	4659      	mov	r1, fp
 800bc1c:	1e5f      	subs	r7, r3, #1
 800bc1e:	2200      	movs	r2, #0
 800bc20:	4b88      	ldr	r3, [pc, #544]	; (800be44 <_dtoa_r+0x624>)
 800bc22:	f7f4 fd59 	bl	80006d8 <__aeabi_dmul>
 800bc26:	9e02      	ldr	r6, [sp, #8]
 800bc28:	4682      	mov	sl, r0
 800bc2a:	468b      	mov	fp, r1
 800bc2c:	3501      	adds	r5, #1
 800bc2e:	4628      	mov	r0, r5
 800bc30:	f7f4 fce8 	bl	8000604 <__aeabi_i2d>
 800bc34:	4652      	mov	r2, sl
 800bc36:	465b      	mov	r3, fp
 800bc38:	f7f4 fd4e 	bl	80006d8 <__aeabi_dmul>
 800bc3c:	4b82      	ldr	r3, [pc, #520]	; (800be48 <_dtoa_r+0x628>)
 800bc3e:	2200      	movs	r2, #0
 800bc40:	f7f4 fb94 	bl	800036c <__adddf3>
 800bc44:	46d0      	mov	r8, sl
 800bc46:	46d9      	mov	r9, fp
 800bc48:	4682      	mov	sl, r0
 800bc4a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800bc4e:	2e00      	cmp	r6, #0
 800bc50:	d158      	bne.n	800bd04 <_dtoa_r+0x4e4>
 800bc52:	4b7e      	ldr	r3, [pc, #504]	; (800be4c <_dtoa_r+0x62c>)
 800bc54:	2200      	movs	r2, #0
 800bc56:	4640      	mov	r0, r8
 800bc58:	4649      	mov	r1, r9
 800bc5a:	f7f4 fb85 	bl	8000368 <__aeabi_dsub>
 800bc5e:	4652      	mov	r2, sl
 800bc60:	465b      	mov	r3, fp
 800bc62:	4680      	mov	r8, r0
 800bc64:	4689      	mov	r9, r1
 800bc66:	f7f4 ffc7 	bl	8000bf8 <__aeabi_dcmpgt>
 800bc6a:	2800      	cmp	r0, #0
 800bc6c:	f040 8295 	bne.w	800c19a <_dtoa_r+0x97a>
 800bc70:	4652      	mov	r2, sl
 800bc72:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800bc76:	4640      	mov	r0, r8
 800bc78:	4649      	mov	r1, r9
 800bc7a:	f7f4 ff9f 	bl	8000bbc <__aeabi_dcmplt>
 800bc7e:	2800      	cmp	r0, #0
 800bc80:	f040 8289 	bne.w	800c196 <_dtoa_r+0x976>
 800bc84:	ec5b ab19 	vmov	sl, fp, d9
 800bc88:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bc8a:	2b00      	cmp	r3, #0
 800bc8c:	f2c0 8148 	blt.w	800bf20 <_dtoa_r+0x700>
 800bc90:	9a00      	ldr	r2, [sp, #0]
 800bc92:	2a0e      	cmp	r2, #14
 800bc94:	f300 8144 	bgt.w	800bf20 <_dtoa_r+0x700>
 800bc98:	4b67      	ldr	r3, [pc, #412]	; (800be38 <_dtoa_r+0x618>)
 800bc9a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800bc9e:	e9d3 8900 	ldrd	r8, r9, [r3]
 800bca2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bca4:	2b00      	cmp	r3, #0
 800bca6:	f280 80d5 	bge.w	800be54 <_dtoa_r+0x634>
 800bcaa:	9b03      	ldr	r3, [sp, #12]
 800bcac:	2b00      	cmp	r3, #0
 800bcae:	f300 80d1 	bgt.w	800be54 <_dtoa_r+0x634>
 800bcb2:	f040 826f 	bne.w	800c194 <_dtoa_r+0x974>
 800bcb6:	4b65      	ldr	r3, [pc, #404]	; (800be4c <_dtoa_r+0x62c>)
 800bcb8:	2200      	movs	r2, #0
 800bcba:	4640      	mov	r0, r8
 800bcbc:	4649      	mov	r1, r9
 800bcbe:	f7f4 fd0b 	bl	80006d8 <__aeabi_dmul>
 800bcc2:	4652      	mov	r2, sl
 800bcc4:	465b      	mov	r3, fp
 800bcc6:	f7f4 ff8d 	bl	8000be4 <__aeabi_dcmpge>
 800bcca:	9e03      	ldr	r6, [sp, #12]
 800bccc:	4637      	mov	r7, r6
 800bcce:	2800      	cmp	r0, #0
 800bcd0:	f040 8245 	bne.w	800c15e <_dtoa_r+0x93e>
 800bcd4:	9d01      	ldr	r5, [sp, #4]
 800bcd6:	2331      	movs	r3, #49	; 0x31
 800bcd8:	f805 3b01 	strb.w	r3, [r5], #1
 800bcdc:	9b00      	ldr	r3, [sp, #0]
 800bcde:	3301      	adds	r3, #1
 800bce0:	9300      	str	r3, [sp, #0]
 800bce2:	e240      	b.n	800c166 <_dtoa_r+0x946>
 800bce4:	07f2      	lsls	r2, r6, #31
 800bce6:	d505      	bpl.n	800bcf4 <_dtoa_r+0x4d4>
 800bce8:	e9d7 2300 	ldrd	r2, r3, [r7]
 800bcec:	f7f4 fcf4 	bl	80006d8 <__aeabi_dmul>
 800bcf0:	3501      	adds	r5, #1
 800bcf2:	2301      	movs	r3, #1
 800bcf4:	1076      	asrs	r6, r6, #1
 800bcf6:	3708      	adds	r7, #8
 800bcf8:	e777      	b.n	800bbea <_dtoa_r+0x3ca>
 800bcfa:	2502      	movs	r5, #2
 800bcfc:	e779      	b.n	800bbf2 <_dtoa_r+0x3d2>
 800bcfe:	9f00      	ldr	r7, [sp, #0]
 800bd00:	9e03      	ldr	r6, [sp, #12]
 800bd02:	e794      	b.n	800bc2e <_dtoa_r+0x40e>
 800bd04:	9901      	ldr	r1, [sp, #4]
 800bd06:	4b4c      	ldr	r3, [pc, #304]	; (800be38 <_dtoa_r+0x618>)
 800bd08:	4431      	add	r1, r6
 800bd0a:	910d      	str	r1, [sp, #52]	; 0x34
 800bd0c:	9908      	ldr	r1, [sp, #32]
 800bd0e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800bd12:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800bd16:	2900      	cmp	r1, #0
 800bd18:	d043      	beq.n	800bda2 <_dtoa_r+0x582>
 800bd1a:	494d      	ldr	r1, [pc, #308]	; (800be50 <_dtoa_r+0x630>)
 800bd1c:	2000      	movs	r0, #0
 800bd1e:	f7f4 fe05 	bl	800092c <__aeabi_ddiv>
 800bd22:	4652      	mov	r2, sl
 800bd24:	465b      	mov	r3, fp
 800bd26:	f7f4 fb1f 	bl	8000368 <__aeabi_dsub>
 800bd2a:	9d01      	ldr	r5, [sp, #4]
 800bd2c:	4682      	mov	sl, r0
 800bd2e:	468b      	mov	fp, r1
 800bd30:	4649      	mov	r1, r9
 800bd32:	4640      	mov	r0, r8
 800bd34:	f7f4 ff80 	bl	8000c38 <__aeabi_d2iz>
 800bd38:	4606      	mov	r6, r0
 800bd3a:	f7f4 fc63 	bl	8000604 <__aeabi_i2d>
 800bd3e:	4602      	mov	r2, r0
 800bd40:	460b      	mov	r3, r1
 800bd42:	4640      	mov	r0, r8
 800bd44:	4649      	mov	r1, r9
 800bd46:	f7f4 fb0f 	bl	8000368 <__aeabi_dsub>
 800bd4a:	3630      	adds	r6, #48	; 0x30
 800bd4c:	f805 6b01 	strb.w	r6, [r5], #1
 800bd50:	4652      	mov	r2, sl
 800bd52:	465b      	mov	r3, fp
 800bd54:	4680      	mov	r8, r0
 800bd56:	4689      	mov	r9, r1
 800bd58:	f7f4 ff30 	bl	8000bbc <__aeabi_dcmplt>
 800bd5c:	2800      	cmp	r0, #0
 800bd5e:	d163      	bne.n	800be28 <_dtoa_r+0x608>
 800bd60:	4642      	mov	r2, r8
 800bd62:	464b      	mov	r3, r9
 800bd64:	4936      	ldr	r1, [pc, #216]	; (800be40 <_dtoa_r+0x620>)
 800bd66:	2000      	movs	r0, #0
 800bd68:	f7f4 fafe 	bl	8000368 <__aeabi_dsub>
 800bd6c:	4652      	mov	r2, sl
 800bd6e:	465b      	mov	r3, fp
 800bd70:	f7f4 ff24 	bl	8000bbc <__aeabi_dcmplt>
 800bd74:	2800      	cmp	r0, #0
 800bd76:	f040 80b5 	bne.w	800bee4 <_dtoa_r+0x6c4>
 800bd7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bd7c:	429d      	cmp	r5, r3
 800bd7e:	d081      	beq.n	800bc84 <_dtoa_r+0x464>
 800bd80:	4b30      	ldr	r3, [pc, #192]	; (800be44 <_dtoa_r+0x624>)
 800bd82:	2200      	movs	r2, #0
 800bd84:	4650      	mov	r0, sl
 800bd86:	4659      	mov	r1, fp
 800bd88:	f7f4 fca6 	bl	80006d8 <__aeabi_dmul>
 800bd8c:	4b2d      	ldr	r3, [pc, #180]	; (800be44 <_dtoa_r+0x624>)
 800bd8e:	4682      	mov	sl, r0
 800bd90:	468b      	mov	fp, r1
 800bd92:	4640      	mov	r0, r8
 800bd94:	4649      	mov	r1, r9
 800bd96:	2200      	movs	r2, #0
 800bd98:	f7f4 fc9e 	bl	80006d8 <__aeabi_dmul>
 800bd9c:	4680      	mov	r8, r0
 800bd9e:	4689      	mov	r9, r1
 800bda0:	e7c6      	b.n	800bd30 <_dtoa_r+0x510>
 800bda2:	4650      	mov	r0, sl
 800bda4:	4659      	mov	r1, fp
 800bda6:	f7f4 fc97 	bl	80006d8 <__aeabi_dmul>
 800bdaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bdac:	9d01      	ldr	r5, [sp, #4]
 800bdae:	930f      	str	r3, [sp, #60]	; 0x3c
 800bdb0:	4682      	mov	sl, r0
 800bdb2:	468b      	mov	fp, r1
 800bdb4:	4649      	mov	r1, r9
 800bdb6:	4640      	mov	r0, r8
 800bdb8:	f7f4 ff3e 	bl	8000c38 <__aeabi_d2iz>
 800bdbc:	4606      	mov	r6, r0
 800bdbe:	f7f4 fc21 	bl	8000604 <__aeabi_i2d>
 800bdc2:	3630      	adds	r6, #48	; 0x30
 800bdc4:	4602      	mov	r2, r0
 800bdc6:	460b      	mov	r3, r1
 800bdc8:	4640      	mov	r0, r8
 800bdca:	4649      	mov	r1, r9
 800bdcc:	f7f4 facc 	bl	8000368 <__aeabi_dsub>
 800bdd0:	f805 6b01 	strb.w	r6, [r5], #1
 800bdd4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bdd6:	429d      	cmp	r5, r3
 800bdd8:	4680      	mov	r8, r0
 800bdda:	4689      	mov	r9, r1
 800bddc:	f04f 0200 	mov.w	r2, #0
 800bde0:	d124      	bne.n	800be2c <_dtoa_r+0x60c>
 800bde2:	4b1b      	ldr	r3, [pc, #108]	; (800be50 <_dtoa_r+0x630>)
 800bde4:	4650      	mov	r0, sl
 800bde6:	4659      	mov	r1, fp
 800bde8:	f7f4 fac0 	bl	800036c <__adddf3>
 800bdec:	4602      	mov	r2, r0
 800bdee:	460b      	mov	r3, r1
 800bdf0:	4640      	mov	r0, r8
 800bdf2:	4649      	mov	r1, r9
 800bdf4:	f7f4 ff00 	bl	8000bf8 <__aeabi_dcmpgt>
 800bdf8:	2800      	cmp	r0, #0
 800bdfa:	d173      	bne.n	800bee4 <_dtoa_r+0x6c4>
 800bdfc:	4652      	mov	r2, sl
 800bdfe:	465b      	mov	r3, fp
 800be00:	4913      	ldr	r1, [pc, #76]	; (800be50 <_dtoa_r+0x630>)
 800be02:	2000      	movs	r0, #0
 800be04:	f7f4 fab0 	bl	8000368 <__aeabi_dsub>
 800be08:	4602      	mov	r2, r0
 800be0a:	460b      	mov	r3, r1
 800be0c:	4640      	mov	r0, r8
 800be0e:	4649      	mov	r1, r9
 800be10:	f7f4 fed4 	bl	8000bbc <__aeabi_dcmplt>
 800be14:	2800      	cmp	r0, #0
 800be16:	f43f af35 	beq.w	800bc84 <_dtoa_r+0x464>
 800be1a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800be1c:	1e6b      	subs	r3, r5, #1
 800be1e:	930f      	str	r3, [sp, #60]	; 0x3c
 800be20:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800be24:	2b30      	cmp	r3, #48	; 0x30
 800be26:	d0f8      	beq.n	800be1a <_dtoa_r+0x5fa>
 800be28:	9700      	str	r7, [sp, #0]
 800be2a:	e049      	b.n	800bec0 <_dtoa_r+0x6a0>
 800be2c:	4b05      	ldr	r3, [pc, #20]	; (800be44 <_dtoa_r+0x624>)
 800be2e:	f7f4 fc53 	bl	80006d8 <__aeabi_dmul>
 800be32:	4680      	mov	r8, r0
 800be34:	4689      	mov	r9, r1
 800be36:	e7bd      	b.n	800bdb4 <_dtoa_r+0x594>
 800be38:	080287b0 	.word	0x080287b0
 800be3c:	08028788 	.word	0x08028788
 800be40:	3ff00000 	.word	0x3ff00000
 800be44:	40240000 	.word	0x40240000
 800be48:	401c0000 	.word	0x401c0000
 800be4c:	40140000 	.word	0x40140000
 800be50:	3fe00000 	.word	0x3fe00000
 800be54:	9d01      	ldr	r5, [sp, #4]
 800be56:	4656      	mov	r6, sl
 800be58:	465f      	mov	r7, fp
 800be5a:	4642      	mov	r2, r8
 800be5c:	464b      	mov	r3, r9
 800be5e:	4630      	mov	r0, r6
 800be60:	4639      	mov	r1, r7
 800be62:	f7f4 fd63 	bl	800092c <__aeabi_ddiv>
 800be66:	f7f4 fee7 	bl	8000c38 <__aeabi_d2iz>
 800be6a:	4682      	mov	sl, r0
 800be6c:	f7f4 fbca 	bl	8000604 <__aeabi_i2d>
 800be70:	4642      	mov	r2, r8
 800be72:	464b      	mov	r3, r9
 800be74:	f7f4 fc30 	bl	80006d8 <__aeabi_dmul>
 800be78:	4602      	mov	r2, r0
 800be7a:	460b      	mov	r3, r1
 800be7c:	4630      	mov	r0, r6
 800be7e:	4639      	mov	r1, r7
 800be80:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800be84:	f7f4 fa70 	bl	8000368 <__aeabi_dsub>
 800be88:	f805 6b01 	strb.w	r6, [r5], #1
 800be8c:	9e01      	ldr	r6, [sp, #4]
 800be8e:	9f03      	ldr	r7, [sp, #12]
 800be90:	1bae      	subs	r6, r5, r6
 800be92:	42b7      	cmp	r7, r6
 800be94:	4602      	mov	r2, r0
 800be96:	460b      	mov	r3, r1
 800be98:	d135      	bne.n	800bf06 <_dtoa_r+0x6e6>
 800be9a:	f7f4 fa67 	bl	800036c <__adddf3>
 800be9e:	4642      	mov	r2, r8
 800bea0:	464b      	mov	r3, r9
 800bea2:	4606      	mov	r6, r0
 800bea4:	460f      	mov	r7, r1
 800bea6:	f7f4 fea7 	bl	8000bf8 <__aeabi_dcmpgt>
 800beaa:	b9d0      	cbnz	r0, 800bee2 <_dtoa_r+0x6c2>
 800beac:	4642      	mov	r2, r8
 800beae:	464b      	mov	r3, r9
 800beb0:	4630      	mov	r0, r6
 800beb2:	4639      	mov	r1, r7
 800beb4:	f7f4 fe78 	bl	8000ba8 <__aeabi_dcmpeq>
 800beb8:	b110      	cbz	r0, 800bec0 <_dtoa_r+0x6a0>
 800beba:	f01a 0f01 	tst.w	sl, #1
 800bebe:	d110      	bne.n	800bee2 <_dtoa_r+0x6c2>
 800bec0:	4620      	mov	r0, r4
 800bec2:	ee18 1a10 	vmov	r1, s16
 800bec6:	f000 faf3 	bl	800c4b0 <_Bfree>
 800beca:	2300      	movs	r3, #0
 800becc:	9800      	ldr	r0, [sp, #0]
 800bece:	702b      	strb	r3, [r5, #0]
 800bed0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bed2:	3001      	adds	r0, #1
 800bed4:	6018      	str	r0, [r3, #0]
 800bed6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800bed8:	2b00      	cmp	r3, #0
 800beda:	f43f acf1 	beq.w	800b8c0 <_dtoa_r+0xa0>
 800bede:	601d      	str	r5, [r3, #0]
 800bee0:	e4ee      	b.n	800b8c0 <_dtoa_r+0xa0>
 800bee2:	9f00      	ldr	r7, [sp, #0]
 800bee4:	462b      	mov	r3, r5
 800bee6:	461d      	mov	r5, r3
 800bee8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800beec:	2a39      	cmp	r2, #57	; 0x39
 800beee:	d106      	bne.n	800befe <_dtoa_r+0x6de>
 800bef0:	9a01      	ldr	r2, [sp, #4]
 800bef2:	429a      	cmp	r2, r3
 800bef4:	d1f7      	bne.n	800bee6 <_dtoa_r+0x6c6>
 800bef6:	9901      	ldr	r1, [sp, #4]
 800bef8:	2230      	movs	r2, #48	; 0x30
 800befa:	3701      	adds	r7, #1
 800befc:	700a      	strb	r2, [r1, #0]
 800befe:	781a      	ldrb	r2, [r3, #0]
 800bf00:	3201      	adds	r2, #1
 800bf02:	701a      	strb	r2, [r3, #0]
 800bf04:	e790      	b.n	800be28 <_dtoa_r+0x608>
 800bf06:	4ba6      	ldr	r3, [pc, #664]	; (800c1a0 <_dtoa_r+0x980>)
 800bf08:	2200      	movs	r2, #0
 800bf0a:	f7f4 fbe5 	bl	80006d8 <__aeabi_dmul>
 800bf0e:	2200      	movs	r2, #0
 800bf10:	2300      	movs	r3, #0
 800bf12:	4606      	mov	r6, r0
 800bf14:	460f      	mov	r7, r1
 800bf16:	f7f4 fe47 	bl	8000ba8 <__aeabi_dcmpeq>
 800bf1a:	2800      	cmp	r0, #0
 800bf1c:	d09d      	beq.n	800be5a <_dtoa_r+0x63a>
 800bf1e:	e7cf      	b.n	800bec0 <_dtoa_r+0x6a0>
 800bf20:	9a08      	ldr	r2, [sp, #32]
 800bf22:	2a00      	cmp	r2, #0
 800bf24:	f000 80d7 	beq.w	800c0d6 <_dtoa_r+0x8b6>
 800bf28:	9a06      	ldr	r2, [sp, #24]
 800bf2a:	2a01      	cmp	r2, #1
 800bf2c:	f300 80ba 	bgt.w	800c0a4 <_dtoa_r+0x884>
 800bf30:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800bf32:	2a00      	cmp	r2, #0
 800bf34:	f000 80b2 	beq.w	800c09c <_dtoa_r+0x87c>
 800bf38:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800bf3c:	9e07      	ldr	r6, [sp, #28]
 800bf3e:	9d04      	ldr	r5, [sp, #16]
 800bf40:	9a04      	ldr	r2, [sp, #16]
 800bf42:	441a      	add	r2, r3
 800bf44:	9204      	str	r2, [sp, #16]
 800bf46:	9a05      	ldr	r2, [sp, #20]
 800bf48:	2101      	movs	r1, #1
 800bf4a:	441a      	add	r2, r3
 800bf4c:	4620      	mov	r0, r4
 800bf4e:	9205      	str	r2, [sp, #20]
 800bf50:	f000 fb66 	bl	800c620 <__i2b>
 800bf54:	4607      	mov	r7, r0
 800bf56:	2d00      	cmp	r5, #0
 800bf58:	dd0c      	ble.n	800bf74 <_dtoa_r+0x754>
 800bf5a:	9b05      	ldr	r3, [sp, #20]
 800bf5c:	2b00      	cmp	r3, #0
 800bf5e:	dd09      	ble.n	800bf74 <_dtoa_r+0x754>
 800bf60:	42ab      	cmp	r3, r5
 800bf62:	9a04      	ldr	r2, [sp, #16]
 800bf64:	bfa8      	it	ge
 800bf66:	462b      	movge	r3, r5
 800bf68:	1ad2      	subs	r2, r2, r3
 800bf6a:	9204      	str	r2, [sp, #16]
 800bf6c:	9a05      	ldr	r2, [sp, #20]
 800bf6e:	1aed      	subs	r5, r5, r3
 800bf70:	1ad3      	subs	r3, r2, r3
 800bf72:	9305      	str	r3, [sp, #20]
 800bf74:	9b07      	ldr	r3, [sp, #28]
 800bf76:	b31b      	cbz	r3, 800bfc0 <_dtoa_r+0x7a0>
 800bf78:	9b08      	ldr	r3, [sp, #32]
 800bf7a:	2b00      	cmp	r3, #0
 800bf7c:	f000 80af 	beq.w	800c0de <_dtoa_r+0x8be>
 800bf80:	2e00      	cmp	r6, #0
 800bf82:	dd13      	ble.n	800bfac <_dtoa_r+0x78c>
 800bf84:	4639      	mov	r1, r7
 800bf86:	4632      	mov	r2, r6
 800bf88:	4620      	mov	r0, r4
 800bf8a:	f000 fc09 	bl	800c7a0 <__pow5mult>
 800bf8e:	ee18 2a10 	vmov	r2, s16
 800bf92:	4601      	mov	r1, r0
 800bf94:	4607      	mov	r7, r0
 800bf96:	4620      	mov	r0, r4
 800bf98:	f000 fb58 	bl	800c64c <__multiply>
 800bf9c:	ee18 1a10 	vmov	r1, s16
 800bfa0:	4680      	mov	r8, r0
 800bfa2:	4620      	mov	r0, r4
 800bfa4:	f000 fa84 	bl	800c4b0 <_Bfree>
 800bfa8:	ee08 8a10 	vmov	s16, r8
 800bfac:	9b07      	ldr	r3, [sp, #28]
 800bfae:	1b9a      	subs	r2, r3, r6
 800bfb0:	d006      	beq.n	800bfc0 <_dtoa_r+0x7a0>
 800bfb2:	ee18 1a10 	vmov	r1, s16
 800bfb6:	4620      	mov	r0, r4
 800bfb8:	f000 fbf2 	bl	800c7a0 <__pow5mult>
 800bfbc:	ee08 0a10 	vmov	s16, r0
 800bfc0:	2101      	movs	r1, #1
 800bfc2:	4620      	mov	r0, r4
 800bfc4:	f000 fb2c 	bl	800c620 <__i2b>
 800bfc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bfca:	2b00      	cmp	r3, #0
 800bfcc:	4606      	mov	r6, r0
 800bfce:	f340 8088 	ble.w	800c0e2 <_dtoa_r+0x8c2>
 800bfd2:	461a      	mov	r2, r3
 800bfd4:	4601      	mov	r1, r0
 800bfd6:	4620      	mov	r0, r4
 800bfd8:	f000 fbe2 	bl	800c7a0 <__pow5mult>
 800bfdc:	9b06      	ldr	r3, [sp, #24]
 800bfde:	2b01      	cmp	r3, #1
 800bfe0:	4606      	mov	r6, r0
 800bfe2:	f340 8081 	ble.w	800c0e8 <_dtoa_r+0x8c8>
 800bfe6:	f04f 0800 	mov.w	r8, #0
 800bfea:	6933      	ldr	r3, [r6, #16]
 800bfec:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800bff0:	6918      	ldr	r0, [r3, #16]
 800bff2:	f000 fac5 	bl	800c580 <__hi0bits>
 800bff6:	f1c0 0020 	rsb	r0, r0, #32
 800bffa:	9b05      	ldr	r3, [sp, #20]
 800bffc:	4418      	add	r0, r3
 800bffe:	f010 001f 	ands.w	r0, r0, #31
 800c002:	f000 8092 	beq.w	800c12a <_dtoa_r+0x90a>
 800c006:	f1c0 0320 	rsb	r3, r0, #32
 800c00a:	2b04      	cmp	r3, #4
 800c00c:	f340 808a 	ble.w	800c124 <_dtoa_r+0x904>
 800c010:	f1c0 001c 	rsb	r0, r0, #28
 800c014:	9b04      	ldr	r3, [sp, #16]
 800c016:	4403      	add	r3, r0
 800c018:	9304      	str	r3, [sp, #16]
 800c01a:	9b05      	ldr	r3, [sp, #20]
 800c01c:	4403      	add	r3, r0
 800c01e:	4405      	add	r5, r0
 800c020:	9305      	str	r3, [sp, #20]
 800c022:	9b04      	ldr	r3, [sp, #16]
 800c024:	2b00      	cmp	r3, #0
 800c026:	dd07      	ble.n	800c038 <_dtoa_r+0x818>
 800c028:	ee18 1a10 	vmov	r1, s16
 800c02c:	461a      	mov	r2, r3
 800c02e:	4620      	mov	r0, r4
 800c030:	f000 fc10 	bl	800c854 <__lshift>
 800c034:	ee08 0a10 	vmov	s16, r0
 800c038:	9b05      	ldr	r3, [sp, #20]
 800c03a:	2b00      	cmp	r3, #0
 800c03c:	dd05      	ble.n	800c04a <_dtoa_r+0x82a>
 800c03e:	4631      	mov	r1, r6
 800c040:	461a      	mov	r2, r3
 800c042:	4620      	mov	r0, r4
 800c044:	f000 fc06 	bl	800c854 <__lshift>
 800c048:	4606      	mov	r6, r0
 800c04a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c04c:	2b00      	cmp	r3, #0
 800c04e:	d06e      	beq.n	800c12e <_dtoa_r+0x90e>
 800c050:	ee18 0a10 	vmov	r0, s16
 800c054:	4631      	mov	r1, r6
 800c056:	f000 fc6d 	bl	800c934 <__mcmp>
 800c05a:	2800      	cmp	r0, #0
 800c05c:	da67      	bge.n	800c12e <_dtoa_r+0x90e>
 800c05e:	9b00      	ldr	r3, [sp, #0]
 800c060:	3b01      	subs	r3, #1
 800c062:	ee18 1a10 	vmov	r1, s16
 800c066:	9300      	str	r3, [sp, #0]
 800c068:	220a      	movs	r2, #10
 800c06a:	2300      	movs	r3, #0
 800c06c:	4620      	mov	r0, r4
 800c06e:	f000 fa41 	bl	800c4f4 <__multadd>
 800c072:	9b08      	ldr	r3, [sp, #32]
 800c074:	ee08 0a10 	vmov	s16, r0
 800c078:	2b00      	cmp	r3, #0
 800c07a:	f000 81b1 	beq.w	800c3e0 <_dtoa_r+0xbc0>
 800c07e:	2300      	movs	r3, #0
 800c080:	4639      	mov	r1, r7
 800c082:	220a      	movs	r2, #10
 800c084:	4620      	mov	r0, r4
 800c086:	f000 fa35 	bl	800c4f4 <__multadd>
 800c08a:	9b02      	ldr	r3, [sp, #8]
 800c08c:	2b00      	cmp	r3, #0
 800c08e:	4607      	mov	r7, r0
 800c090:	f300 808e 	bgt.w	800c1b0 <_dtoa_r+0x990>
 800c094:	9b06      	ldr	r3, [sp, #24]
 800c096:	2b02      	cmp	r3, #2
 800c098:	dc51      	bgt.n	800c13e <_dtoa_r+0x91e>
 800c09a:	e089      	b.n	800c1b0 <_dtoa_r+0x990>
 800c09c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c09e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800c0a2:	e74b      	b.n	800bf3c <_dtoa_r+0x71c>
 800c0a4:	9b03      	ldr	r3, [sp, #12]
 800c0a6:	1e5e      	subs	r6, r3, #1
 800c0a8:	9b07      	ldr	r3, [sp, #28]
 800c0aa:	42b3      	cmp	r3, r6
 800c0ac:	bfbf      	itttt	lt
 800c0ae:	9b07      	ldrlt	r3, [sp, #28]
 800c0b0:	9607      	strlt	r6, [sp, #28]
 800c0b2:	1af2      	sublt	r2, r6, r3
 800c0b4:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800c0b6:	bfb6      	itet	lt
 800c0b8:	189b      	addlt	r3, r3, r2
 800c0ba:	1b9e      	subge	r6, r3, r6
 800c0bc:	930a      	strlt	r3, [sp, #40]	; 0x28
 800c0be:	9b03      	ldr	r3, [sp, #12]
 800c0c0:	bfb8      	it	lt
 800c0c2:	2600      	movlt	r6, #0
 800c0c4:	2b00      	cmp	r3, #0
 800c0c6:	bfb7      	itett	lt
 800c0c8:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800c0cc:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800c0d0:	1a9d      	sublt	r5, r3, r2
 800c0d2:	2300      	movlt	r3, #0
 800c0d4:	e734      	b.n	800bf40 <_dtoa_r+0x720>
 800c0d6:	9e07      	ldr	r6, [sp, #28]
 800c0d8:	9d04      	ldr	r5, [sp, #16]
 800c0da:	9f08      	ldr	r7, [sp, #32]
 800c0dc:	e73b      	b.n	800bf56 <_dtoa_r+0x736>
 800c0de:	9a07      	ldr	r2, [sp, #28]
 800c0e0:	e767      	b.n	800bfb2 <_dtoa_r+0x792>
 800c0e2:	9b06      	ldr	r3, [sp, #24]
 800c0e4:	2b01      	cmp	r3, #1
 800c0e6:	dc18      	bgt.n	800c11a <_dtoa_r+0x8fa>
 800c0e8:	f1ba 0f00 	cmp.w	sl, #0
 800c0ec:	d115      	bne.n	800c11a <_dtoa_r+0x8fa>
 800c0ee:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800c0f2:	b993      	cbnz	r3, 800c11a <_dtoa_r+0x8fa>
 800c0f4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800c0f8:	0d1b      	lsrs	r3, r3, #20
 800c0fa:	051b      	lsls	r3, r3, #20
 800c0fc:	b183      	cbz	r3, 800c120 <_dtoa_r+0x900>
 800c0fe:	9b04      	ldr	r3, [sp, #16]
 800c100:	3301      	adds	r3, #1
 800c102:	9304      	str	r3, [sp, #16]
 800c104:	9b05      	ldr	r3, [sp, #20]
 800c106:	3301      	adds	r3, #1
 800c108:	9305      	str	r3, [sp, #20]
 800c10a:	f04f 0801 	mov.w	r8, #1
 800c10e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c110:	2b00      	cmp	r3, #0
 800c112:	f47f af6a 	bne.w	800bfea <_dtoa_r+0x7ca>
 800c116:	2001      	movs	r0, #1
 800c118:	e76f      	b.n	800bffa <_dtoa_r+0x7da>
 800c11a:	f04f 0800 	mov.w	r8, #0
 800c11e:	e7f6      	b.n	800c10e <_dtoa_r+0x8ee>
 800c120:	4698      	mov	r8, r3
 800c122:	e7f4      	b.n	800c10e <_dtoa_r+0x8ee>
 800c124:	f43f af7d 	beq.w	800c022 <_dtoa_r+0x802>
 800c128:	4618      	mov	r0, r3
 800c12a:	301c      	adds	r0, #28
 800c12c:	e772      	b.n	800c014 <_dtoa_r+0x7f4>
 800c12e:	9b03      	ldr	r3, [sp, #12]
 800c130:	2b00      	cmp	r3, #0
 800c132:	dc37      	bgt.n	800c1a4 <_dtoa_r+0x984>
 800c134:	9b06      	ldr	r3, [sp, #24]
 800c136:	2b02      	cmp	r3, #2
 800c138:	dd34      	ble.n	800c1a4 <_dtoa_r+0x984>
 800c13a:	9b03      	ldr	r3, [sp, #12]
 800c13c:	9302      	str	r3, [sp, #8]
 800c13e:	9b02      	ldr	r3, [sp, #8]
 800c140:	b96b      	cbnz	r3, 800c15e <_dtoa_r+0x93e>
 800c142:	4631      	mov	r1, r6
 800c144:	2205      	movs	r2, #5
 800c146:	4620      	mov	r0, r4
 800c148:	f000 f9d4 	bl	800c4f4 <__multadd>
 800c14c:	4601      	mov	r1, r0
 800c14e:	4606      	mov	r6, r0
 800c150:	ee18 0a10 	vmov	r0, s16
 800c154:	f000 fbee 	bl	800c934 <__mcmp>
 800c158:	2800      	cmp	r0, #0
 800c15a:	f73f adbb 	bgt.w	800bcd4 <_dtoa_r+0x4b4>
 800c15e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c160:	9d01      	ldr	r5, [sp, #4]
 800c162:	43db      	mvns	r3, r3
 800c164:	9300      	str	r3, [sp, #0]
 800c166:	f04f 0800 	mov.w	r8, #0
 800c16a:	4631      	mov	r1, r6
 800c16c:	4620      	mov	r0, r4
 800c16e:	f000 f99f 	bl	800c4b0 <_Bfree>
 800c172:	2f00      	cmp	r7, #0
 800c174:	f43f aea4 	beq.w	800bec0 <_dtoa_r+0x6a0>
 800c178:	f1b8 0f00 	cmp.w	r8, #0
 800c17c:	d005      	beq.n	800c18a <_dtoa_r+0x96a>
 800c17e:	45b8      	cmp	r8, r7
 800c180:	d003      	beq.n	800c18a <_dtoa_r+0x96a>
 800c182:	4641      	mov	r1, r8
 800c184:	4620      	mov	r0, r4
 800c186:	f000 f993 	bl	800c4b0 <_Bfree>
 800c18a:	4639      	mov	r1, r7
 800c18c:	4620      	mov	r0, r4
 800c18e:	f000 f98f 	bl	800c4b0 <_Bfree>
 800c192:	e695      	b.n	800bec0 <_dtoa_r+0x6a0>
 800c194:	2600      	movs	r6, #0
 800c196:	4637      	mov	r7, r6
 800c198:	e7e1      	b.n	800c15e <_dtoa_r+0x93e>
 800c19a:	9700      	str	r7, [sp, #0]
 800c19c:	4637      	mov	r7, r6
 800c19e:	e599      	b.n	800bcd4 <_dtoa_r+0x4b4>
 800c1a0:	40240000 	.word	0x40240000
 800c1a4:	9b08      	ldr	r3, [sp, #32]
 800c1a6:	2b00      	cmp	r3, #0
 800c1a8:	f000 80ca 	beq.w	800c340 <_dtoa_r+0xb20>
 800c1ac:	9b03      	ldr	r3, [sp, #12]
 800c1ae:	9302      	str	r3, [sp, #8]
 800c1b0:	2d00      	cmp	r5, #0
 800c1b2:	dd05      	ble.n	800c1c0 <_dtoa_r+0x9a0>
 800c1b4:	4639      	mov	r1, r7
 800c1b6:	462a      	mov	r2, r5
 800c1b8:	4620      	mov	r0, r4
 800c1ba:	f000 fb4b 	bl	800c854 <__lshift>
 800c1be:	4607      	mov	r7, r0
 800c1c0:	f1b8 0f00 	cmp.w	r8, #0
 800c1c4:	d05b      	beq.n	800c27e <_dtoa_r+0xa5e>
 800c1c6:	6879      	ldr	r1, [r7, #4]
 800c1c8:	4620      	mov	r0, r4
 800c1ca:	f000 f931 	bl	800c430 <_Balloc>
 800c1ce:	4605      	mov	r5, r0
 800c1d0:	b928      	cbnz	r0, 800c1de <_dtoa_r+0x9be>
 800c1d2:	4b87      	ldr	r3, [pc, #540]	; (800c3f0 <_dtoa_r+0xbd0>)
 800c1d4:	4602      	mov	r2, r0
 800c1d6:	f240 21ea 	movw	r1, #746	; 0x2ea
 800c1da:	f7ff bb3b 	b.w	800b854 <_dtoa_r+0x34>
 800c1de:	693a      	ldr	r2, [r7, #16]
 800c1e0:	3202      	adds	r2, #2
 800c1e2:	0092      	lsls	r2, r2, #2
 800c1e4:	f107 010c 	add.w	r1, r7, #12
 800c1e8:	300c      	adds	r0, #12
 800c1ea:	f000 f913 	bl	800c414 <memcpy>
 800c1ee:	2201      	movs	r2, #1
 800c1f0:	4629      	mov	r1, r5
 800c1f2:	4620      	mov	r0, r4
 800c1f4:	f000 fb2e 	bl	800c854 <__lshift>
 800c1f8:	9b01      	ldr	r3, [sp, #4]
 800c1fa:	f103 0901 	add.w	r9, r3, #1
 800c1fe:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800c202:	4413      	add	r3, r2
 800c204:	9305      	str	r3, [sp, #20]
 800c206:	f00a 0301 	and.w	r3, sl, #1
 800c20a:	46b8      	mov	r8, r7
 800c20c:	9304      	str	r3, [sp, #16]
 800c20e:	4607      	mov	r7, r0
 800c210:	4631      	mov	r1, r6
 800c212:	ee18 0a10 	vmov	r0, s16
 800c216:	f7ff fa75 	bl	800b704 <quorem>
 800c21a:	4641      	mov	r1, r8
 800c21c:	9002      	str	r0, [sp, #8]
 800c21e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800c222:	ee18 0a10 	vmov	r0, s16
 800c226:	f000 fb85 	bl	800c934 <__mcmp>
 800c22a:	463a      	mov	r2, r7
 800c22c:	9003      	str	r0, [sp, #12]
 800c22e:	4631      	mov	r1, r6
 800c230:	4620      	mov	r0, r4
 800c232:	f000 fb9b 	bl	800c96c <__mdiff>
 800c236:	68c2      	ldr	r2, [r0, #12]
 800c238:	f109 3bff 	add.w	fp, r9, #4294967295
 800c23c:	4605      	mov	r5, r0
 800c23e:	bb02      	cbnz	r2, 800c282 <_dtoa_r+0xa62>
 800c240:	4601      	mov	r1, r0
 800c242:	ee18 0a10 	vmov	r0, s16
 800c246:	f000 fb75 	bl	800c934 <__mcmp>
 800c24a:	4602      	mov	r2, r0
 800c24c:	4629      	mov	r1, r5
 800c24e:	4620      	mov	r0, r4
 800c250:	9207      	str	r2, [sp, #28]
 800c252:	f000 f92d 	bl	800c4b0 <_Bfree>
 800c256:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800c25a:	ea43 0102 	orr.w	r1, r3, r2
 800c25e:	9b04      	ldr	r3, [sp, #16]
 800c260:	430b      	orrs	r3, r1
 800c262:	464d      	mov	r5, r9
 800c264:	d10f      	bne.n	800c286 <_dtoa_r+0xa66>
 800c266:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800c26a:	d02a      	beq.n	800c2c2 <_dtoa_r+0xaa2>
 800c26c:	9b03      	ldr	r3, [sp, #12]
 800c26e:	2b00      	cmp	r3, #0
 800c270:	dd02      	ble.n	800c278 <_dtoa_r+0xa58>
 800c272:	9b02      	ldr	r3, [sp, #8]
 800c274:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800c278:	f88b a000 	strb.w	sl, [fp]
 800c27c:	e775      	b.n	800c16a <_dtoa_r+0x94a>
 800c27e:	4638      	mov	r0, r7
 800c280:	e7ba      	b.n	800c1f8 <_dtoa_r+0x9d8>
 800c282:	2201      	movs	r2, #1
 800c284:	e7e2      	b.n	800c24c <_dtoa_r+0xa2c>
 800c286:	9b03      	ldr	r3, [sp, #12]
 800c288:	2b00      	cmp	r3, #0
 800c28a:	db04      	blt.n	800c296 <_dtoa_r+0xa76>
 800c28c:	9906      	ldr	r1, [sp, #24]
 800c28e:	430b      	orrs	r3, r1
 800c290:	9904      	ldr	r1, [sp, #16]
 800c292:	430b      	orrs	r3, r1
 800c294:	d122      	bne.n	800c2dc <_dtoa_r+0xabc>
 800c296:	2a00      	cmp	r2, #0
 800c298:	ddee      	ble.n	800c278 <_dtoa_r+0xa58>
 800c29a:	ee18 1a10 	vmov	r1, s16
 800c29e:	2201      	movs	r2, #1
 800c2a0:	4620      	mov	r0, r4
 800c2a2:	f000 fad7 	bl	800c854 <__lshift>
 800c2a6:	4631      	mov	r1, r6
 800c2a8:	ee08 0a10 	vmov	s16, r0
 800c2ac:	f000 fb42 	bl	800c934 <__mcmp>
 800c2b0:	2800      	cmp	r0, #0
 800c2b2:	dc03      	bgt.n	800c2bc <_dtoa_r+0xa9c>
 800c2b4:	d1e0      	bne.n	800c278 <_dtoa_r+0xa58>
 800c2b6:	f01a 0f01 	tst.w	sl, #1
 800c2ba:	d0dd      	beq.n	800c278 <_dtoa_r+0xa58>
 800c2bc:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800c2c0:	d1d7      	bne.n	800c272 <_dtoa_r+0xa52>
 800c2c2:	2339      	movs	r3, #57	; 0x39
 800c2c4:	f88b 3000 	strb.w	r3, [fp]
 800c2c8:	462b      	mov	r3, r5
 800c2ca:	461d      	mov	r5, r3
 800c2cc:	3b01      	subs	r3, #1
 800c2ce:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800c2d2:	2a39      	cmp	r2, #57	; 0x39
 800c2d4:	d071      	beq.n	800c3ba <_dtoa_r+0xb9a>
 800c2d6:	3201      	adds	r2, #1
 800c2d8:	701a      	strb	r2, [r3, #0]
 800c2da:	e746      	b.n	800c16a <_dtoa_r+0x94a>
 800c2dc:	2a00      	cmp	r2, #0
 800c2de:	dd07      	ble.n	800c2f0 <_dtoa_r+0xad0>
 800c2e0:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800c2e4:	d0ed      	beq.n	800c2c2 <_dtoa_r+0xaa2>
 800c2e6:	f10a 0301 	add.w	r3, sl, #1
 800c2ea:	f88b 3000 	strb.w	r3, [fp]
 800c2ee:	e73c      	b.n	800c16a <_dtoa_r+0x94a>
 800c2f0:	9b05      	ldr	r3, [sp, #20]
 800c2f2:	f809 ac01 	strb.w	sl, [r9, #-1]
 800c2f6:	4599      	cmp	r9, r3
 800c2f8:	d047      	beq.n	800c38a <_dtoa_r+0xb6a>
 800c2fa:	ee18 1a10 	vmov	r1, s16
 800c2fe:	2300      	movs	r3, #0
 800c300:	220a      	movs	r2, #10
 800c302:	4620      	mov	r0, r4
 800c304:	f000 f8f6 	bl	800c4f4 <__multadd>
 800c308:	45b8      	cmp	r8, r7
 800c30a:	ee08 0a10 	vmov	s16, r0
 800c30e:	f04f 0300 	mov.w	r3, #0
 800c312:	f04f 020a 	mov.w	r2, #10
 800c316:	4641      	mov	r1, r8
 800c318:	4620      	mov	r0, r4
 800c31a:	d106      	bne.n	800c32a <_dtoa_r+0xb0a>
 800c31c:	f000 f8ea 	bl	800c4f4 <__multadd>
 800c320:	4680      	mov	r8, r0
 800c322:	4607      	mov	r7, r0
 800c324:	f109 0901 	add.w	r9, r9, #1
 800c328:	e772      	b.n	800c210 <_dtoa_r+0x9f0>
 800c32a:	f000 f8e3 	bl	800c4f4 <__multadd>
 800c32e:	4639      	mov	r1, r7
 800c330:	4680      	mov	r8, r0
 800c332:	2300      	movs	r3, #0
 800c334:	220a      	movs	r2, #10
 800c336:	4620      	mov	r0, r4
 800c338:	f000 f8dc 	bl	800c4f4 <__multadd>
 800c33c:	4607      	mov	r7, r0
 800c33e:	e7f1      	b.n	800c324 <_dtoa_r+0xb04>
 800c340:	9b03      	ldr	r3, [sp, #12]
 800c342:	9302      	str	r3, [sp, #8]
 800c344:	9d01      	ldr	r5, [sp, #4]
 800c346:	ee18 0a10 	vmov	r0, s16
 800c34a:	4631      	mov	r1, r6
 800c34c:	f7ff f9da 	bl	800b704 <quorem>
 800c350:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800c354:	9b01      	ldr	r3, [sp, #4]
 800c356:	f805 ab01 	strb.w	sl, [r5], #1
 800c35a:	1aea      	subs	r2, r5, r3
 800c35c:	9b02      	ldr	r3, [sp, #8]
 800c35e:	4293      	cmp	r3, r2
 800c360:	dd09      	ble.n	800c376 <_dtoa_r+0xb56>
 800c362:	ee18 1a10 	vmov	r1, s16
 800c366:	2300      	movs	r3, #0
 800c368:	220a      	movs	r2, #10
 800c36a:	4620      	mov	r0, r4
 800c36c:	f000 f8c2 	bl	800c4f4 <__multadd>
 800c370:	ee08 0a10 	vmov	s16, r0
 800c374:	e7e7      	b.n	800c346 <_dtoa_r+0xb26>
 800c376:	9b02      	ldr	r3, [sp, #8]
 800c378:	2b00      	cmp	r3, #0
 800c37a:	bfc8      	it	gt
 800c37c:	461d      	movgt	r5, r3
 800c37e:	9b01      	ldr	r3, [sp, #4]
 800c380:	bfd8      	it	le
 800c382:	2501      	movle	r5, #1
 800c384:	441d      	add	r5, r3
 800c386:	f04f 0800 	mov.w	r8, #0
 800c38a:	ee18 1a10 	vmov	r1, s16
 800c38e:	2201      	movs	r2, #1
 800c390:	4620      	mov	r0, r4
 800c392:	f000 fa5f 	bl	800c854 <__lshift>
 800c396:	4631      	mov	r1, r6
 800c398:	ee08 0a10 	vmov	s16, r0
 800c39c:	f000 faca 	bl	800c934 <__mcmp>
 800c3a0:	2800      	cmp	r0, #0
 800c3a2:	dc91      	bgt.n	800c2c8 <_dtoa_r+0xaa8>
 800c3a4:	d102      	bne.n	800c3ac <_dtoa_r+0xb8c>
 800c3a6:	f01a 0f01 	tst.w	sl, #1
 800c3aa:	d18d      	bne.n	800c2c8 <_dtoa_r+0xaa8>
 800c3ac:	462b      	mov	r3, r5
 800c3ae:	461d      	mov	r5, r3
 800c3b0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800c3b4:	2a30      	cmp	r2, #48	; 0x30
 800c3b6:	d0fa      	beq.n	800c3ae <_dtoa_r+0xb8e>
 800c3b8:	e6d7      	b.n	800c16a <_dtoa_r+0x94a>
 800c3ba:	9a01      	ldr	r2, [sp, #4]
 800c3bc:	429a      	cmp	r2, r3
 800c3be:	d184      	bne.n	800c2ca <_dtoa_r+0xaaa>
 800c3c0:	9b00      	ldr	r3, [sp, #0]
 800c3c2:	3301      	adds	r3, #1
 800c3c4:	9300      	str	r3, [sp, #0]
 800c3c6:	2331      	movs	r3, #49	; 0x31
 800c3c8:	7013      	strb	r3, [r2, #0]
 800c3ca:	e6ce      	b.n	800c16a <_dtoa_r+0x94a>
 800c3cc:	4b09      	ldr	r3, [pc, #36]	; (800c3f4 <_dtoa_r+0xbd4>)
 800c3ce:	f7ff ba95 	b.w	800b8fc <_dtoa_r+0xdc>
 800c3d2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c3d4:	2b00      	cmp	r3, #0
 800c3d6:	f47f aa6e 	bne.w	800b8b6 <_dtoa_r+0x96>
 800c3da:	4b07      	ldr	r3, [pc, #28]	; (800c3f8 <_dtoa_r+0xbd8>)
 800c3dc:	f7ff ba8e 	b.w	800b8fc <_dtoa_r+0xdc>
 800c3e0:	9b02      	ldr	r3, [sp, #8]
 800c3e2:	2b00      	cmp	r3, #0
 800c3e4:	dcae      	bgt.n	800c344 <_dtoa_r+0xb24>
 800c3e6:	9b06      	ldr	r3, [sp, #24]
 800c3e8:	2b02      	cmp	r3, #2
 800c3ea:	f73f aea8 	bgt.w	800c13e <_dtoa_r+0x91e>
 800c3ee:	e7a9      	b.n	800c344 <_dtoa_r+0xb24>
 800c3f0:	0802871b 	.word	0x0802871b
 800c3f4:	08028678 	.word	0x08028678
 800c3f8:	0802869c 	.word	0x0802869c

0800c3fc <_localeconv_r>:
 800c3fc:	4800      	ldr	r0, [pc, #0]	; (800c400 <_localeconv_r+0x4>)
 800c3fe:	4770      	bx	lr
 800c400:	20000250 	.word	0x20000250

0800c404 <malloc>:
 800c404:	4b02      	ldr	r3, [pc, #8]	; (800c410 <malloc+0xc>)
 800c406:	4601      	mov	r1, r0
 800c408:	6818      	ldr	r0, [r3, #0]
 800c40a:	f000 bc17 	b.w	800cc3c <_malloc_r>
 800c40e:	bf00      	nop
 800c410:	200000fc 	.word	0x200000fc

0800c414 <memcpy>:
 800c414:	440a      	add	r2, r1
 800c416:	4291      	cmp	r1, r2
 800c418:	f100 33ff 	add.w	r3, r0, #4294967295
 800c41c:	d100      	bne.n	800c420 <memcpy+0xc>
 800c41e:	4770      	bx	lr
 800c420:	b510      	push	{r4, lr}
 800c422:	f811 4b01 	ldrb.w	r4, [r1], #1
 800c426:	f803 4f01 	strb.w	r4, [r3, #1]!
 800c42a:	4291      	cmp	r1, r2
 800c42c:	d1f9      	bne.n	800c422 <memcpy+0xe>
 800c42e:	bd10      	pop	{r4, pc}

0800c430 <_Balloc>:
 800c430:	b570      	push	{r4, r5, r6, lr}
 800c432:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800c434:	4604      	mov	r4, r0
 800c436:	460d      	mov	r5, r1
 800c438:	b976      	cbnz	r6, 800c458 <_Balloc+0x28>
 800c43a:	2010      	movs	r0, #16
 800c43c:	f7ff ffe2 	bl	800c404 <malloc>
 800c440:	4602      	mov	r2, r0
 800c442:	6260      	str	r0, [r4, #36]	; 0x24
 800c444:	b920      	cbnz	r0, 800c450 <_Balloc+0x20>
 800c446:	4b18      	ldr	r3, [pc, #96]	; (800c4a8 <_Balloc+0x78>)
 800c448:	4818      	ldr	r0, [pc, #96]	; (800c4ac <_Balloc+0x7c>)
 800c44a:	2166      	movs	r1, #102	; 0x66
 800c44c:	f000 fdd6 	bl	800cffc <__assert_func>
 800c450:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800c454:	6006      	str	r6, [r0, #0]
 800c456:	60c6      	str	r6, [r0, #12]
 800c458:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800c45a:	68f3      	ldr	r3, [r6, #12]
 800c45c:	b183      	cbz	r3, 800c480 <_Balloc+0x50>
 800c45e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c460:	68db      	ldr	r3, [r3, #12]
 800c462:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800c466:	b9b8      	cbnz	r0, 800c498 <_Balloc+0x68>
 800c468:	2101      	movs	r1, #1
 800c46a:	fa01 f605 	lsl.w	r6, r1, r5
 800c46e:	1d72      	adds	r2, r6, #5
 800c470:	0092      	lsls	r2, r2, #2
 800c472:	4620      	mov	r0, r4
 800c474:	f000 fb60 	bl	800cb38 <_calloc_r>
 800c478:	b160      	cbz	r0, 800c494 <_Balloc+0x64>
 800c47a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800c47e:	e00e      	b.n	800c49e <_Balloc+0x6e>
 800c480:	2221      	movs	r2, #33	; 0x21
 800c482:	2104      	movs	r1, #4
 800c484:	4620      	mov	r0, r4
 800c486:	f000 fb57 	bl	800cb38 <_calloc_r>
 800c48a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c48c:	60f0      	str	r0, [r6, #12]
 800c48e:	68db      	ldr	r3, [r3, #12]
 800c490:	2b00      	cmp	r3, #0
 800c492:	d1e4      	bne.n	800c45e <_Balloc+0x2e>
 800c494:	2000      	movs	r0, #0
 800c496:	bd70      	pop	{r4, r5, r6, pc}
 800c498:	6802      	ldr	r2, [r0, #0]
 800c49a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800c49e:	2300      	movs	r3, #0
 800c4a0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800c4a4:	e7f7      	b.n	800c496 <_Balloc+0x66>
 800c4a6:	bf00      	nop
 800c4a8:	080286a9 	.word	0x080286a9
 800c4ac:	0802872c 	.word	0x0802872c

0800c4b0 <_Bfree>:
 800c4b0:	b570      	push	{r4, r5, r6, lr}
 800c4b2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800c4b4:	4605      	mov	r5, r0
 800c4b6:	460c      	mov	r4, r1
 800c4b8:	b976      	cbnz	r6, 800c4d8 <_Bfree+0x28>
 800c4ba:	2010      	movs	r0, #16
 800c4bc:	f7ff ffa2 	bl	800c404 <malloc>
 800c4c0:	4602      	mov	r2, r0
 800c4c2:	6268      	str	r0, [r5, #36]	; 0x24
 800c4c4:	b920      	cbnz	r0, 800c4d0 <_Bfree+0x20>
 800c4c6:	4b09      	ldr	r3, [pc, #36]	; (800c4ec <_Bfree+0x3c>)
 800c4c8:	4809      	ldr	r0, [pc, #36]	; (800c4f0 <_Bfree+0x40>)
 800c4ca:	218a      	movs	r1, #138	; 0x8a
 800c4cc:	f000 fd96 	bl	800cffc <__assert_func>
 800c4d0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800c4d4:	6006      	str	r6, [r0, #0]
 800c4d6:	60c6      	str	r6, [r0, #12]
 800c4d8:	b13c      	cbz	r4, 800c4ea <_Bfree+0x3a>
 800c4da:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800c4dc:	6862      	ldr	r2, [r4, #4]
 800c4de:	68db      	ldr	r3, [r3, #12]
 800c4e0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800c4e4:	6021      	str	r1, [r4, #0]
 800c4e6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800c4ea:	bd70      	pop	{r4, r5, r6, pc}
 800c4ec:	080286a9 	.word	0x080286a9
 800c4f0:	0802872c 	.word	0x0802872c

0800c4f4 <__multadd>:
 800c4f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c4f8:	690d      	ldr	r5, [r1, #16]
 800c4fa:	4607      	mov	r7, r0
 800c4fc:	460c      	mov	r4, r1
 800c4fe:	461e      	mov	r6, r3
 800c500:	f101 0c14 	add.w	ip, r1, #20
 800c504:	2000      	movs	r0, #0
 800c506:	f8dc 3000 	ldr.w	r3, [ip]
 800c50a:	b299      	uxth	r1, r3
 800c50c:	fb02 6101 	mla	r1, r2, r1, r6
 800c510:	0c1e      	lsrs	r6, r3, #16
 800c512:	0c0b      	lsrs	r3, r1, #16
 800c514:	fb02 3306 	mla	r3, r2, r6, r3
 800c518:	b289      	uxth	r1, r1
 800c51a:	3001      	adds	r0, #1
 800c51c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800c520:	4285      	cmp	r5, r0
 800c522:	f84c 1b04 	str.w	r1, [ip], #4
 800c526:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800c52a:	dcec      	bgt.n	800c506 <__multadd+0x12>
 800c52c:	b30e      	cbz	r6, 800c572 <__multadd+0x7e>
 800c52e:	68a3      	ldr	r3, [r4, #8]
 800c530:	42ab      	cmp	r3, r5
 800c532:	dc19      	bgt.n	800c568 <__multadd+0x74>
 800c534:	6861      	ldr	r1, [r4, #4]
 800c536:	4638      	mov	r0, r7
 800c538:	3101      	adds	r1, #1
 800c53a:	f7ff ff79 	bl	800c430 <_Balloc>
 800c53e:	4680      	mov	r8, r0
 800c540:	b928      	cbnz	r0, 800c54e <__multadd+0x5a>
 800c542:	4602      	mov	r2, r0
 800c544:	4b0c      	ldr	r3, [pc, #48]	; (800c578 <__multadd+0x84>)
 800c546:	480d      	ldr	r0, [pc, #52]	; (800c57c <__multadd+0x88>)
 800c548:	21b5      	movs	r1, #181	; 0xb5
 800c54a:	f000 fd57 	bl	800cffc <__assert_func>
 800c54e:	6922      	ldr	r2, [r4, #16]
 800c550:	3202      	adds	r2, #2
 800c552:	f104 010c 	add.w	r1, r4, #12
 800c556:	0092      	lsls	r2, r2, #2
 800c558:	300c      	adds	r0, #12
 800c55a:	f7ff ff5b 	bl	800c414 <memcpy>
 800c55e:	4621      	mov	r1, r4
 800c560:	4638      	mov	r0, r7
 800c562:	f7ff ffa5 	bl	800c4b0 <_Bfree>
 800c566:	4644      	mov	r4, r8
 800c568:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800c56c:	3501      	adds	r5, #1
 800c56e:	615e      	str	r6, [r3, #20]
 800c570:	6125      	str	r5, [r4, #16]
 800c572:	4620      	mov	r0, r4
 800c574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c578:	0802871b 	.word	0x0802871b
 800c57c:	0802872c 	.word	0x0802872c

0800c580 <__hi0bits>:
 800c580:	0c03      	lsrs	r3, r0, #16
 800c582:	041b      	lsls	r3, r3, #16
 800c584:	b9d3      	cbnz	r3, 800c5bc <__hi0bits+0x3c>
 800c586:	0400      	lsls	r0, r0, #16
 800c588:	2310      	movs	r3, #16
 800c58a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800c58e:	bf04      	itt	eq
 800c590:	0200      	lsleq	r0, r0, #8
 800c592:	3308      	addeq	r3, #8
 800c594:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800c598:	bf04      	itt	eq
 800c59a:	0100      	lsleq	r0, r0, #4
 800c59c:	3304      	addeq	r3, #4
 800c59e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800c5a2:	bf04      	itt	eq
 800c5a4:	0080      	lsleq	r0, r0, #2
 800c5a6:	3302      	addeq	r3, #2
 800c5a8:	2800      	cmp	r0, #0
 800c5aa:	db05      	blt.n	800c5b8 <__hi0bits+0x38>
 800c5ac:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800c5b0:	f103 0301 	add.w	r3, r3, #1
 800c5b4:	bf08      	it	eq
 800c5b6:	2320      	moveq	r3, #32
 800c5b8:	4618      	mov	r0, r3
 800c5ba:	4770      	bx	lr
 800c5bc:	2300      	movs	r3, #0
 800c5be:	e7e4      	b.n	800c58a <__hi0bits+0xa>

0800c5c0 <__lo0bits>:
 800c5c0:	6803      	ldr	r3, [r0, #0]
 800c5c2:	f013 0207 	ands.w	r2, r3, #7
 800c5c6:	4601      	mov	r1, r0
 800c5c8:	d00b      	beq.n	800c5e2 <__lo0bits+0x22>
 800c5ca:	07da      	lsls	r2, r3, #31
 800c5cc:	d423      	bmi.n	800c616 <__lo0bits+0x56>
 800c5ce:	0798      	lsls	r0, r3, #30
 800c5d0:	bf49      	itett	mi
 800c5d2:	085b      	lsrmi	r3, r3, #1
 800c5d4:	089b      	lsrpl	r3, r3, #2
 800c5d6:	2001      	movmi	r0, #1
 800c5d8:	600b      	strmi	r3, [r1, #0]
 800c5da:	bf5c      	itt	pl
 800c5dc:	600b      	strpl	r3, [r1, #0]
 800c5de:	2002      	movpl	r0, #2
 800c5e0:	4770      	bx	lr
 800c5e2:	b298      	uxth	r0, r3
 800c5e4:	b9a8      	cbnz	r0, 800c612 <__lo0bits+0x52>
 800c5e6:	0c1b      	lsrs	r3, r3, #16
 800c5e8:	2010      	movs	r0, #16
 800c5ea:	b2da      	uxtb	r2, r3
 800c5ec:	b90a      	cbnz	r2, 800c5f2 <__lo0bits+0x32>
 800c5ee:	3008      	adds	r0, #8
 800c5f0:	0a1b      	lsrs	r3, r3, #8
 800c5f2:	071a      	lsls	r2, r3, #28
 800c5f4:	bf04      	itt	eq
 800c5f6:	091b      	lsreq	r3, r3, #4
 800c5f8:	3004      	addeq	r0, #4
 800c5fa:	079a      	lsls	r2, r3, #30
 800c5fc:	bf04      	itt	eq
 800c5fe:	089b      	lsreq	r3, r3, #2
 800c600:	3002      	addeq	r0, #2
 800c602:	07da      	lsls	r2, r3, #31
 800c604:	d403      	bmi.n	800c60e <__lo0bits+0x4e>
 800c606:	085b      	lsrs	r3, r3, #1
 800c608:	f100 0001 	add.w	r0, r0, #1
 800c60c:	d005      	beq.n	800c61a <__lo0bits+0x5a>
 800c60e:	600b      	str	r3, [r1, #0]
 800c610:	4770      	bx	lr
 800c612:	4610      	mov	r0, r2
 800c614:	e7e9      	b.n	800c5ea <__lo0bits+0x2a>
 800c616:	2000      	movs	r0, #0
 800c618:	4770      	bx	lr
 800c61a:	2020      	movs	r0, #32
 800c61c:	4770      	bx	lr
	...

0800c620 <__i2b>:
 800c620:	b510      	push	{r4, lr}
 800c622:	460c      	mov	r4, r1
 800c624:	2101      	movs	r1, #1
 800c626:	f7ff ff03 	bl	800c430 <_Balloc>
 800c62a:	4602      	mov	r2, r0
 800c62c:	b928      	cbnz	r0, 800c63a <__i2b+0x1a>
 800c62e:	4b05      	ldr	r3, [pc, #20]	; (800c644 <__i2b+0x24>)
 800c630:	4805      	ldr	r0, [pc, #20]	; (800c648 <__i2b+0x28>)
 800c632:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800c636:	f000 fce1 	bl	800cffc <__assert_func>
 800c63a:	2301      	movs	r3, #1
 800c63c:	6144      	str	r4, [r0, #20]
 800c63e:	6103      	str	r3, [r0, #16]
 800c640:	bd10      	pop	{r4, pc}
 800c642:	bf00      	nop
 800c644:	0802871b 	.word	0x0802871b
 800c648:	0802872c 	.word	0x0802872c

0800c64c <__multiply>:
 800c64c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c650:	4691      	mov	r9, r2
 800c652:	690a      	ldr	r2, [r1, #16]
 800c654:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800c658:	429a      	cmp	r2, r3
 800c65a:	bfb8      	it	lt
 800c65c:	460b      	movlt	r3, r1
 800c65e:	460c      	mov	r4, r1
 800c660:	bfbc      	itt	lt
 800c662:	464c      	movlt	r4, r9
 800c664:	4699      	movlt	r9, r3
 800c666:	6927      	ldr	r7, [r4, #16]
 800c668:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800c66c:	68a3      	ldr	r3, [r4, #8]
 800c66e:	6861      	ldr	r1, [r4, #4]
 800c670:	eb07 060a 	add.w	r6, r7, sl
 800c674:	42b3      	cmp	r3, r6
 800c676:	b085      	sub	sp, #20
 800c678:	bfb8      	it	lt
 800c67a:	3101      	addlt	r1, #1
 800c67c:	f7ff fed8 	bl	800c430 <_Balloc>
 800c680:	b930      	cbnz	r0, 800c690 <__multiply+0x44>
 800c682:	4602      	mov	r2, r0
 800c684:	4b44      	ldr	r3, [pc, #272]	; (800c798 <__multiply+0x14c>)
 800c686:	4845      	ldr	r0, [pc, #276]	; (800c79c <__multiply+0x150>)
 800c688:	f240 115d 	movw	r1, #349	; 0x15d
 800c68c:	f000 fcb6 	bl	800cffc <__assert_func>
 800c690:	f100 0514 	add.w	r5, r0, #20
 800c694:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800c698:	462b      	mov	r3, r5
 800c69a:	2200      	movs	r2, #0
 800c69c:	4543      	cmp	r3, r8
 800c69e:	d321      	bcc.n	800c6e4 <__multiply+0x98>
 800c6a0:	f104 0314 	add.w	r3, r4, #20
 800c6a4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800c6a8:	f109 0314 	add.w	r3, r9, #20
 800c6ac:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800c6b0:	9202      	str	r2, [sp, #8]
 800c6b2:	1b3a      	subs	r2, r7, r4
 800c6b4:	3a15      	subs	r2, #21
 800c6b6:	f022 0203 	bic.w	r2, r2, #3
 800c6ba:	3204      	adds	r2, #4
 800c6bc:	f104 0115 	add.w	r1, r4, #21
 800c6c0:	428f      	cmp	r7, r1
 800c6c2:	bf38      	it	cc
 800c6c4:	2204      	movcc	r2, #4
 800c6c6:	9201      	str	r2, [sp, #4]
 800c6c8:	9a02      	ldr	r2, [sp, #8]
 800c6ca:	9303      	str	r3, [sp, #12]
 800c6cc:	429a      	cmp	r2, r3
 800c6ce:	d80c      	bhi.n	800c6ea <__multiply+0x9e>
 800c6d0:	2e00      	cmp	r6, #0
 800c6d2:	dd03      	ble.n	800c6dc <__multiply+0x90>
 800c6d4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800c6d8:	2b00      	cmp	r3, #0
 800c6da:	d05a      	beq.n	800c792 <__multiply+0x146>
 800c6dc:	6106      	str	r6, [r0, #16]
 800c6de:	b005      	add	sp, #20
 800c6e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6e4:	f843 2b04 	str.w	r2, [r3], #4
 800c6e8:	e7d8      	b.n	800c69c <__multiply+0x50>
 800c6ea:	f8b3 a000 	ldrh.w	sl, [r3]
 800c6ee:	f1ba 0f00 	cmp.w	sl, #0
 800c6f2:	d024      	beq.n	800c73e <__multiply+0xf2>
 800c6f4:	f104 0e14 	add.w	lr, r4, #20
 800c6f8:	46a9      	mov	r9, r5
 800c6fa:	f04f 0c00 	mov.w	ip, #0
 800c6fe:	f85e 2b04 	ldr.w	r2, [lr], #4
 800c702:	f8d9 1000 	ldr.w	r1, [r9]
 800c706:	fa1f fb82 	uxth.w	fp, r2
 800c70a:	b289      	uxth	r1, r1
 800c70c:	fb0a 110b 	mla	r1, sl, fp, r1
 800c710:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800c714:	f8d9 2000 	ldr.w	r2, [r9]
 800c718:	4461      	add	r1, ip
 800c71a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800c71e:	fb0a c20b 	mla	r2, sl, fp, ip
 800c722:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800c726:	b289      	uxth	r1, r1
 800c728:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800c72c:	4577      	cmp	r7, lr
 800c72e:	f849 1b04 	str.w	r1, [r9], #4
 800c732:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800c736:	d8e2      	bhi.n	800c6fe <__multiply+0xb2>
 800c738:	9a01      	ldr	r2, [sp, #4]
 800c73a:	f845 c002 	str.w	ip, [r5, r2]
 800c73e:	9a03      	ldr	r2, [sp, #12]
 800c740:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800c744:	3304      	adds	r3, #4
 800c746:	f1b9 0f00 	cmp.w	r9, #0
 800c74a:	d020      	beq.n	800c78e <__multiply+0x142>
 800c74c:	6829      	ldr	r1, [r5, #0]
 800c74e:	f104 0c14 	add.w	ip, r4, #20
 800c752:	46ae      	mov	lr, r5
 800c754:	f04f 0a00 	mov.w	sl, #0
 800c758:	f8bc b000 	ldrh.w	fp, [ip]
 800c75c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800c760:	fb09 220b 	mla	r2, r9, fp, r2
 800c764:	4492      	add	sl, r2
 800c766:	b289      	uxth	r1, r1
 800c768:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800c76c:	f84e 1b04 	str.w	r1, [lr], #4
 800c770:	f85c 2b04 	ldr.w	r2, [ip], #4
 800c774:	f8be 1000 	ldrh.w	r1, [lr]
 800c778:	0c12      	lsrs	r2, r2, #16
 800c77a:	fb09 1102 	mla	r1, r9, r2, r1
 800c77e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800c782:	4567      	cmp	r7, ip
 800c784:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800c788:	d8e6      	bhi.n	800c758 <__multiply+0x10c>
 800c78a:	9a01      	ldr	r2, [sp, #4]
 800c78c:	50a9      	str	r1, [r5, r2]
 800c78e:	3504      	adds	r5, #4
 800c790:	e79a      	b.n	800c6c8 <__multiply+0x7c>
 800c792:	3e01      	subs	r6, #1
 800c794:	e79c      	b.n	800c6d0 <__multiply+0x84>
 800c796:	bf00      	nop
 800c798:	0802871b 	.word	0x0802871b
 800c79c:	0802872c 	.word	0x0802872c

0800c7a0 <__pow5mult>:
 800c7a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c7a4:	4615      	mov	r5, r2
 800c7a6:	f012 0203 	ands.w	r2, r2, #3
 800c7aa:	4606      	mov	r6, r0
 800c7ac:	460f      	mov	r7, r1
 800c7ae:	d007      	beq.n	800c7c0 <__pow5mult+0x20>
 800c7b0:	4c25      	ldr	r4, [pc, #148]	; (800c848 <__pow5mult+0xa8>)
 800c7b2:	3a01      	subs	r2, #1
 800c7b4:	2300      	movs	r3, #0
 800c7b6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800c7ba:	f7ff fe9b 	bl	800c4f4 <__multadd>
 800c7be:	4607      	mov	r7, r0
 800c7c0:	10ad      	asrs	r5, r5, #2
 800c7c2:	d03d      	beq.n	800c840 <__pow5mult+0xa0>
 800c7c4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800c7c6:	b97c      	cbnz	r4, 800c7e8 <__pow5mult+0x48>
 800c7c8:	2010      	movs	r0, #16
 800c7ca:	f7ff fe1b 	bl	800c404 <malloc>
 800c7ce:	4602      	mov	r2, r0
 800c7d0:	6270      	str	r0, [r6, #36]	; 0x24
 800c7d2:	b928      	cbnz	r0, 800c7e0 <__pow5mult+0x40>
 800c7d4:	4b1d      	ldr	r3, [pc, #116]	; (800c84c <__pow5mult+0xac>)
 800c7d6:	481e      	ldr	r0, [pc, #120]	; (800c850 <__pow5mult+0xb0>)
 800c7d8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800c7dc:	f000 fc0e 	bl	800cffc <__assert_func>
 800c7e0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800c7e4:	6004      	str	r4, [r0, #0]
 800c7e6:	60c4      	str	r4, [r0, #12]
 800c7e8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800c7ec:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800c7f0:	b94c      	cbnz	r4, 800c806 <__pow5mult+0x66>
 800c7f2:	f240 2171 	movw	r1, #625	; 0x271
 800c7f6:	4630      	mov	r0, r6
 800c7f8:	f7ff ff12 	bl	800c620 <__i2b>
 800c7fc:	2300      	movs	r3, #0
 800c7fe:	f8c8 0008 	str.w	r0, [r8, #8]
 800c802:	4604      	mov	r4, r0
 800c804:	6003      	str	r3, [r0, #0]
 800c806:	f04f 0900 	mov.w	r9, #0
 800c80a:	07eb      	lsls	r3, r5, #31
 800c80c:	d50a      	bpl.n	800c824 <__pow5mult+0x84>
 800c80e:	4639      	mov	r1, r7
 800c810:	4622      	mov	r2, r4
 800c812:	4630      	mov	r0, r6
 800c814:	f7ff ff1a 	bl	800c64c <__multiply>
 800c818:	4639      	mov	r1, r7
 800c81a:	4680      	mov	r8, r0
 800c81c:	4630      	mov	r0, r6
 800c81e:	f7ff fe47 	bl	800c4b0 <_Bfree>
 800c822:	4647      	mov	r7, r8
 800c824:	106d      	asrs	r5, r5, #1
 800c826:	d00b      	beq.n	800c840 <__pow5mult+0xa0>
 800c828:	6820      	ldr	r0, [r4, #0]
 800c82a:	b938      	cbnz	r0, 800c83c <__pow5mult+0x9c>
 800c82c:	4622      	mov	r2, r4
 800c82e:	4621      	mov	r1, r4
 800c830:	4630      	mov	r0, r6
 800c832:	f7ff ff0b 	bl	800c64c <__multiply>
 800c836:	6020      	str	r0, [r4, #0]
 800c838:	f8c0 9000 	str.w	r9, [r0]
 800c83c:	4604      	mov	r4, r0
 800c83e:	e7e4      	b.n	800c80a <__pow5mult+0x6a>
 800c840:	4638      	mov	r0, r7
 800c842:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c846:	bf00      	nop
 800c848:	08028878 	.word	0x08028878
 800c84c:	080286a9 	.word	0x080286a9
 800c850:	0802872c 	.word	0x0802872c

0800c854 <__lshift>:
 800c854:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c858:	460c      	mov	r4, r1
 800c85a:	6849      	ldr	r1, [r1, #4]
 800c85c:	6923      	ldr	r3, [r4, #16]
 800c85e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800c862:	68a3      	ldr	r3, [r4, #8]
 800c864:	4607      	mov	r7, r0
 800c866:	4691      	mov	r9, r2
 800c868:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800c86c:	f108 0601 	add.w	r6, r8, #1
 800c870:	42b3      	cmp	r3, r6
 800c872:	db0b      	blt.n	800c88c <__lshift+0x38>
 800c874:	4638      	mov	r0, r7
 800c876:	f7ff fddb 	bl	800c430 <_Balloc>
 800c87a:	4605      	mov	r5, r0
 800c87c:	b948      	cbnz	r0, 800c892 <__lshift+0x3e>
 800c87e:	4602      	mov	r2, r0
 800c880:	4b2a      	ldr	r3, [pc, #168]	; (800c92c <__lshift+0xd8>)
 800c882:	482b      	ldr	r0, [pc, #172]	; (800c930 <__lshift+0xdc>)
 800c884:	f240 11d9 	movw	r1, #473	; 0x1d9
 800c888:	f000 fbb8 	bl	800cffc <__assert_func>
 800c88c:	3101      	adds	r1, #1
 800c88e:	005b      	lsls	r3, r3, #1
 800c890:	e7ee      	b.n	800c870 <__lshift+0x1c>
 800c892:	2300      	movs	r3, #0
 800c894:	f100 0114 	add.w	r1, r0, #20
 800c898:	f100 0210 	add.w	r2, r0, #16
 800c89c:	4618      	mov	r0, r3
 800c89e:	4553      	cmp	r3, sl
 800c8a0:	db37      	blt.n	800c912 <__lshift+0xbe>
 800c8a2:	6920      	ldr	r0, [r4, #16]
 800c8a4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800c8a8:	f104 0314 	add.w	r3, r4, #20
 800c8ac:	f019 091f 	ands.w	r9, r9, #31
 800c8b0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800c8b4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800c8b8:	d02f      	beq.n	800c91a <__lshift+0xc6>
 800c8ba:	f1c9 0e20 	rsb	lr, r9, #32
 800c8be:	468a      	mov	sl, r1
 800c8c0:	f04f 0c00 	mov.w	ip, #0
 800c8c4:	681a      	ldr	r2, [r3, #0]
 800c8c6:	fa02 f209 	lsl.w	r2, r2, r9
 800c8ca:	ea42 020c 	orr.w	r2, r2, ip
 800c8ce:	f84a 2b04 	str.w	r2, [sl], #4
 800c8d2:	f853 2b04 	ldr.w	r2, [r3], #4
 800c8d6:	4298      	cmp	r0, r3
 800c8d8:	fa22 fc0e 	lsr.w	ip, r2, lr
 800c8dc:	d8f2      	bhi.n	800c8c4 <__lshift+0x70>
 800c8de:	1b03      	subs	r3, r0, r4
 800c8e0:	3b15      	subs	r3, #21
 800c8e2:	f023 0303 	bic.w	r3, r3, #3
 800c8e6:	3304      	adds	r3, #4
 800c8e8:	f104 0215 	add.w	r2, r4, #21
 800c8ec:	4290      	cmp	r0, r2
 800c8ee:	bf38      	it	cc
 800c8f0:	2304      	movcc	r3, #4
 800c8f2:	f841 c003 	str.w	ip, [r1, r3]
 800c8f6:	f1bc 0f00 	cmp.w	ip, #0
 800c8fa:	d001      	beq.n	800c900 <__lshift+0xac>
 800c8fc:	f108 0602 	add.w	r6, r8, #2
 800c900:	3e01      	subs	r6, #1
 800c902:	4638      	mov	r0, r7
 800c904:	612e      	str	r6, [r5, #16]
 800c906:	4621      	mov	r1, r4
 800c908:	f7ff fdd2 	bl	800c4b0 <_Bfree>
 800c90c:	4628      	mov	r0, r5
 800c90e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c912:	f842 0f04 	str.w	r0, [r2, #4]!
 800c916:	3301      	adds	r3, #1
 800c918:	e7c1      	b.n	800c89e <__lshift+0x4a>
 800c91a:	3904      	subs	r1, #4
 800c91c:	f853 2b04 	ldr.w	r2, [r3], #4
 800c920:	f841 2f04 	str.w	r2, [r1, #4]!
 800c924:	4298      	cmp	r0, r3
 800c926:	d8f9      	bhi.n	800c91c <__lshift+0xc8>
 800c928:	e7ea      	b.n	800c900 <__lshift+0xac>
 800c92a:	bf00      	nop
 800c92c:	0802871b 	.word	0x0802871b
 800c930:	0802872c 	.word	0x0802872c

0800c934 <__mcmp>:
 800c934:	b530      	push	{r4, r5, lr}
 800c936:	6902      	ldr	r2, [r0, #16]
 800c938:	690c      	ldr	r4, [r1, #16]
 800c93a:	1b12      	subs	r2, r2, r4
 800c93c:	d10e      	bne.n	800c95c <__mcmp+0x28>
 800c93e:	f100 0314 	add.w	r3, r0, #20
 800c942:	3114      	adds	r1, #20
 800c944:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800c948:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800c94c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800c950:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800c954:	42a5      	cmp	r5, r4
 800c956:	d003      	beq.n	800c960 <__mcmp+0x2c>
 800c958:	d305      	bcc.n	800c966 <__mcmp+0x32>
 800c95a:	2201      	movs	r2, #1
 800c95c:	4610      	mov	r0, r2
 800c95e:	bd30      	pop	{r4, r5, pc}
 800c960:	4283      	cmp	r3, r0
 800c962:	d3f3      	bcc.n	800c94c <__mcmp+0x18>
 800c964:	e7fa      	b.n	800c95c <__mcmp+0x28>
 800c966:	f04f 32ff 	mov.w	r2, #4294967295
 800c96a:	e7f7      	b.n	800c95c <__mcmp+0x28>

0800c96c <__mdiff>:
 800c96c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c970:	460c      	mov	r4, r1
 800c972:	4606      	mov	r6, r0
 800c974:	4611      	mov	r1, r2
 800c976:	4620      	mov	r0, r4
 800c978:	4690      	mov	r8, r2
 800c97a:	f7ff ffdb 	bl	800c934 <__mcmp>
 800c97e:	1e05      	subs	r5, r0, #0
 800c980:	d110      	bne.n	800c9a4 <__mdiff+0x38>
 800c982:	4629      	mov	r1, r5
 800c984:	4630      	mov	r0, r6
 800c986:	f7ff fd53 	bl	800c430 <_Balloc>
 800c98a:	b930      	cbnz	r0, 800c99a <__mdiff+0x2e>
 800c98c:	4b3a      	ldr	r3, [pc, #232]	; (800ca78 <__mdiff+0x10c>)
 800c98e:	4602      	mov	r2, r0
 800c990:	f240 2132 	movw	r1, #562	; 0x232
 800c994:	4839      	ldr	r0, [pc, #228]	; (800ca7c <__mdiff+0x110>)
 800c996:	f000 fb31 	bl	800cffc <__assert_func>
 800c99a:	2301      	movs	r3, #1
 800c99c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800c9a0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9a4:	bfa4      	itt	ge
 800c9a6:	4643      	movge	r3, r8
 800c9a8:	46a0      	movge	r8, r4
 800c9aa:	4630      	mov	r0, r6
 800c9ac:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800c9b0:	bfa6      	itte	ge
 800c9b2:	461c      	movge	r4, r3
 800c9b4:	2500      	movge	r5, #0
 800c9b6:	2501      	movlt	r5, #1
 800c9b8:	f7ff fd3a 	bl	800c430 <_Balloc>
 800c9bc:	b920      	cbnz	r0, 800c9c8 <__mdiff+0x5c>
 800c9be:	4b2e      	ldr	r3, [pc, #184]	; (800ca78 <__mdiff+0x10c>)
 800c9c0:	4602      	mov	r2, r0
 800c9c2:	f44f 7110 	mov.w	r1, #576	; 0x240
 800c9c6:	e7e5      	b.n	800c994 <__mdiff+0x28>
 800c9c8:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800c9cc:	6926      	ldr	r6, [r4, #16]
 800c9ce:	60c5      	str	r5, [r0, #12]
 800c9d0:	f104 0914 	add.w	r9, r4, #20
 800c9d4:	f108 0514 	add.w	r5, r8, #20
 800c9d8:	f100 0e14 	add.w	lr, r0, #20
 800c9dc:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800c9e0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800c9e4:	f108 0210 	add.w	r2, r8, #16
 800c9e8:	46f2      	mov	sl, lr
 800c9ea:	2100      	movs	r1, #0
 800c9ec:	f859 3b04 	ldr.w	r3, [r9], #4
 800c9f0:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800c9f4:	fa1f f883 	uxth.w	r8, r3
 800c9f8:	fa11 f18b 	uxtah	r1, r1, fp
 800c9fc:	0c1b      	lsrs	r3, r3, #16
 800c9fe:	eba1 0808 	sub.w	r8, r1, r8
 800ca02:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800ca06:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800ca0a:	fa1f f888 	uxth.w	r8, r8
 800ca0e:	1419      	asrs	r1, r3, #16
 800ca10:	454e      	cmp	r6, r9
 800ca12:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800ca16:	f84a 3b04 	str.w	r3, [sl], #4
 800ca1a:	d8e7      	bhi.n	800c9ec <__mdiff+0x80>
 800ca1c:	1b33      	subs	r3, r6, r4
 800ca1e:	3b15      	subs	r3, #21
 800ca20:	f023 0303 	bic.w	r3, r3, #3
 800ca24:	3304      	adds	r3, #4
 800ca26:	3415      	adds	r4, #21
 800ca28:	42a6      	cmp	r6, r4
 800ca2a:	bf38      	it	cc
 800ca2c:	2304      	movcc	r3, #4
 800ca2e:	441d      	add	r5, r3
 800ca30:	4473      	add	r3, lr
 800ca32:	469e      	mov	lr, r3
 800ca34:	462e      	mov	r6, r5
 800ca36:	4566      	cmp	r6, ip
 800ca38:	d30e      	bcc.n	800ca58 <__mdiff+0xec>
 800ca3a:	f10c 0203 	add.w	r2, ip, #3
 800ca3e:	1b52      	subs	r2, r2, r5
 800ca40:	f022 0203 	bic.w	r2, r2, #3
 800ca44:	3d03      	subs	r5, #3
 800ca46:	45ac      	cmp	ip, r5
 800ca48:	bf38      	it	cc
 800ca4a:	2200      	movcc	r2, #0
 800ca4c:	441a      	add	r2, r3
 800ca4e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800ca52:	b17b      	cbz	r3, 800ca74 <__mdiff+0x108>
 800ca54:	6107      	str	r7, [r0, #16]
 800ca56:	e7a3      	b.n	800c9a0 <__mdiff+0x34>
 800ca58:	f856 8b04 	ldr.w	r8, [r6], #4
 800ca5c:	fa11 f288 	uxtah	r2, r1, r8
 800ca60:	1414      	asrs	r4, r2, #16
 800ca62:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800ca66:	b292      	uxth	r2, r2
 800ca68:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800ca6c:	f84e 2b04 	str.w	r2, [lr], #4
 800ca70:	1421      	asrs	r1, r4, #16
 800ca72:	e7e0      	b.n	800ca36 <__mdiff+0xca>
 800ca74:	3f01      	subs	r7, #1
 800ca76:	e7ea      	b.n	800ca4e <__mdiff+0xe2>
 800ca78:	0802871b 	.word	0x0802871b
 800ca7c:	0802872c 	.word	0x0802872c

0800ca80 <__d2b>:
 800ca80:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ca84:	4689      	mov	r9, r1
 800ca86:	2101      	movs	r1, #1
 800ca88:	ec57 6b10 	vmov	r6, r7, d0
 800ca8c:	4690      	mov	r8, r2
 800ca8e:	f7ff fccf 	bl	800c430 <_Balloc>
 800ca92:	4604      	mov	r4, r0
 800ca94:	b930      	cbnz	r0, 800caa4 <__d2b+0x24>
 800ca96:	4602      	mov	r2, r0
 800ca98:	4b25      	ldr	r3, [pc, #148]	; (800cb30 <__d2b+0xb0>)
 800ca9a:	4826      	ldr	r0, [pc, #152]	; (800cb34 <__d2b+0xb4>)
 800ca9c:	f240 310a 	movw	r1, #778	; 0x30a
 800caa0:	f000 faac 	bl	800cffc <__assert_func>
 800caa4:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800caa8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800caac:	bb35      	cbnz	r5, 800cafc <__d2b+0x7c>
 800caae:	2e00      	cmp	r6, #0
 800cab0:	9301      	str	r3, [sp, #4]
 800cab2:	d028      	beq.n	800cb06 <__d2b+0x86>
 800cab4:	4668      	mov	r0, sp
 800cab6:	9600      	str	r6, [sp, #0]
 800cab8:	f7ff fd82 	bl	800c5c0 <__lo0bits>
 800cabc:	9900      	ldr	r1, [sp, #0]
 800cabe:	b300      	cbz	r0, 800cb02 <__d2b+0x82>
 800cac0:	9a01      	ldr	r2, [sp, #4]
 800cac2:	f1c0 0320 	rsb	r3, r0, #32
 800cac6:	fa02 f303 	lsl.w	r3, r2, r3
 800caca:	430b      	orrs	r3, r1
 800cacc:	40c2      	lsrs	r2, r0
 800cace:	6163      	str	r3, [r4, #20]
 800cad0:	9201      	str	r2, [sp, #4]
 800cad2:	9b01      	ldr	r3, [sp, #4]
 800cad4:	61a3      	str	r3, [r4, #24]
 800cad6:	2b00      	cmp	r3, #0
 800cad8:	bf14      	ite	ne
 800cada:	2202      	movne	r2, #2
 800cadc:	2201      	moveq	r2, #1
 800cade:	6122      	str	r2, [r4, #16]
 800cae0:	b1d5      	cbz	r5, 800cb18 <__d2b+0x98>
 800cae2:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800cae6:	4405      	add	r5, r0
 800cae8:	f8c9 5000 	str.w	r5, [r9]
 800caec:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800caf0:	f8c8 0000 	str.w	r0, [r8]
 800caf4:	4620      	mov	r0, r4
 800caf6:	b003      	add	sp, #12
 800caf8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cafc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800cb00:	e7d5      	b.n	800caae <__d2b+0x2e>
 800cb02:	6161      	str	r1, [r4, #20]
 800cb04:	e7e5      	b.n	800cad2 <__d2b+0x52>
 800cb06:	a801      	add	r0, sp, #4
 800cb08:	f7ff fd5a 	bl	800c5c0 <__lo0bits>
 800cb0c:	9b01      	ldr	r3, [sp, #4]
 800cb0e:	6163      	str	r3, [r4, #20]
 800cb10:	2201      	movs	r2, #1
 800cb12:	6122      	str	r2, [r4, #16]
 800cb14:	3020      	adds	r0, #32
 800cb16:	e7e3      	b.n	800cae0 <__d2b+0x60>
 800cb18:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800cb1c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800cb20:	f8c9 0000 	str.w	r0, [r9]
 800cb24:	6918      	ldr	r0, [r3, #16]
 800cb26:	f7ff fd2b 	bl	800c580 <__hi0bits>
 800cb2a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800cb2e:	e7df      	b.n	800caf0 <__d2b+0x70>
 800cb30:	0802871b 	.word	0x0802871b
 800cb34:	0802872c 	.word	0x0802872c

0800cb38 <_calloc_r>:
 800cb38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cb3a:	fba1 2402 	umull	r2, r4, r1, r2
 800cb3e:	b94c      	cbnz	r4, 800cb54 <_calloc_r+0x1c>
 800cb40:	4611      	mov	r1, r2
 800cb42:	9201      	str	r2, [sp, #4]
 800cb44:	f000 f87a 	bl	800cc3c <_malloc_r>
 800cb48:	9a01      	ldr	r2, [sp, #4]
 800cb4a:	4605      	mov	r5, r0
 800cb4c:	b930      	cbnz	r0, 800cb5c <_calloc_r+0x24>
 800cb4e:	4628      	mov	r0, r5
 800cb50:	b003      	add	sp, #12
 800cb52:	bd30      	pop	{r4, r5, pc}
 800cb54:	220c      	movs	r2, #12
 800cb56:	6002      	str	r2, [r0, #0]
 800cb58:	2500      	movs	r5, #0
 800cb5a:	e7f8      	b.n	800cb4e <_calloc_r+0x16>
 800cb5c:	4621      	mov	r1, r4
 800cb5e:	f7fe f92b 	bl	800adb8 <memset>
 800cb62:	e7f4      	b.n	800cb4e <_calloc_r+0x16>

0800cb64 <_free_r>:
 800cb64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cb66:	2900      	cmp	r1, #0
 800cb68:	d044      	beq.n	800cbf4 <_free_r+0x90>
 800cb6a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800cb6e:	9001      	str	r0, [sp, #4]
 800cb70:	2b00      	cmp	r3, #0
 800cb72:	f1a1 0404 	sub.w	r4, r1, #4
 800cb76:	bfb8      	it	lt
 800cb78:	18e4      	addlt	r4, r4, r3
 800cb7a:	f000 fa9b 	bl	800d0b4 <__malloc_lock>
 800cb7e:	4a1e      	ldr	r2, [pc, #120]	; (800cbf8 <_free_r+0x94>)
 800cb80:	9801      	ldr	r0, [sp, #4]
 800cb82:	6813      	ldr	r3, [r2, #0]
 800cb84:	b933      	cbnz	r3, 800cb94 <_free_r+0x30>
 800cb86:	6063      	str	r3, [r4, #4]
 800cb88:	6014      	str	r4, [r2, #0]
 800cb8a:	b003      	add	sp, #12
 800cb8c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800cb90:	f000 ba96 	b.w	800d0c0 <__malloc_unlock>
 800cb94:	42a3      	cmp	r3, r4
 800cb96:	d908      	bls.n	800cbaa <_free_r+0x46>
 800cb98:	6825      	ldr	r5, [r4, #0]
 800cb9a:	1961      	adds	r1, r4, r5
 800cb9c:	428b      	cmp	r3, r1
 800cb9e:	bf01      	itttt	eq
 800cba0:	6819      	ldreq	r1, [r3, #0]
 800cba2:	685b      	ldreq	r3, [r3, #4]
 800cba4:	1949      	addeq	r1, r1, r5
 800cba6:	6021      	streq	r1, [r4, #0]
 800cba8:	e7ed      	b.n	800cb86 <_free_r+0x22>
 800cbaa:	461a      	mov	r2, r3
 800cbac:	685b      	ldr	r3, [r3, #4]
 800cbae:	b10b      	cbz	r3, 800cbb4 <_free_r+0x50>
 800cbb0:	42a3      	cmp	r3, r4
 800cbb2:	d9fa      	bls.n	800cbaa <_free_r+0x46>
 800cbb4:	6811      	ldr	r1, [r2, #0]
 800cbb6:	1855      	adds	r5, r2, r1
 800cbb8:	42a5      	cmp	r5, r4
 800cbba:	d10b      	bne.n	800cbd4 <_free_r+0x70>
 800cbbc:	6824      	ldr	r4, [r4, #0]
 800cbbe:	4421      	add	r1, r4
 800cbc0:	1854      	adds	r4, r2, r1
 800cbc2:	42a3      	cmp	r3, r4
 800cbc4:	6011      	str	r1, [r2, #0]
 800cbc6:	d1e0      	bne.n	800cb8a <_free_r+0x26>
 800cbc8:	681c      	ldr	r4, [r3, #0]
 800cbca:	685b      	ldr	r3, [r3, #4]
 800cbcc:	6053      	str	r3, [r2, #4]
 800cbce:	4421      	add	r1, r4
 800cbd0:	6011      	str	r1, [r2, #0]
 800cbd2:	e7da      	b.n	800cb8a <_free_r+0x26>
 800cbd4:	d902      	bls.n	800cbdc <_free_r+0x78>
 800cbd6:	230c      	movs	r3, #12
 800cbd8:	6003      	str	r3, [r0, #0]
 800cbda:	e7d6      	b.n	800cb8a <_free_r+0x26>
 800cbdc:	6825      	ldr	r5, [r4, #0]
 800cbde:	1961      	adds	r1, r4, r5
 800cbe0:	428b      	cmp	r3, r1
 800cbe2:	bf04      	itt	eq
 800cbe4:	6819      	ldreq	r1, [r3, #0]
 800cbe6:	685b      	ldreq	r3, [r3, #4]
 800cbe8:	6063      	str	r3, [r4, #4]
 800cbea:	bf04      	itt	eq
 800cbec:	1949      	addeq	r1, r1, r5
 800cbee:	6021      	streq	r1, [r4, #0]
 800cbf0:	6054      	str	r4, [r2, #4]
 800cbf2:	e7ca      	b.n	800cb8a <_free_r+0x26>
 800cbf4:	b003      	add	sp, #12
 800cbf6:	bd30      	pop	{r4, r5, pc}
 800cbf8:	20001240 	.word	0x20001240

0800cbfc <sbrk_aligned>:
 800cbfc:	b570      	push	{r4, r5, r6, lr}
 800cbfe:	4e0e      	ldr	r6, [pc, #56]	; (800cc38 <sbrk_aligned+0x3c>)
 800cc00:	460c      	mov	r4, r1
 800cc02:	6831      	ldr	r1, [r6, #0]
 800cc04:	4605      	mov	r5, r0
 800cc06:	b911      	cbnz	r1, 800cc0e <sbrk_aligned+0x12>
 800cc08:	f000 f9e8 	bl	800cfdc <_sbrk_r>
 800cc0c:	6030      	str	r0, [r6, #0]
 800cc0e:	4621      	mov	r1, r4
 800cc10:	4628      	mov	r0, r5
 800cc12:	f000 f9e3 	bl	800cfdc <_sbrk_r>
 800cc16:	1c43      	adds	r3, r0, #1
 800cc18:	d00a      	beq.n	800cc30 <sbrk_aligned+0x34>
 800cc1a:	1cc4      	adds	r4, r0, #3
 800cc1c:	f024 0403 	bic.w	r4, r4, #3
 800cc20:	42a0      	cmp	r0, r4
 800cc22:	d007      	beq.n	800cc34 <sbrk_aligned+0x38>
 800cc24:	1a21      	subs	r1, r4, r0
 800cc26:	4628      	mov	r0, r5
 800cc28:	f000 f9d8 	bl	800cfdc <_sbrk_r>
 800cc2c:	3001      	adds	r0, #1
 800cc2e:	d101      	bne.n	800cc34 <sbrk_aligned+0x38>
 800cc30:	f04f 34ff 	mov.w	r4, #4294967295
 800cc34:	4620      	mov	r0, r4
 800cc36:	bd70      	pop	{r4, r5, r6, pc}
 800cc38:	20001244 	.word	0x20001244

0800cc3c <_malloc_r>:
 800cc3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc40:	1ccd      	adds	r5, r1, #3
 800cc42:	f025 0503 	bic.w	r5, r5, #3
 800cc46:	3508      	adds	r5, #8
 800cc48:	2d0c      	cmp	r5, #12
 800cc4a:	bf38      	it	cc
 800cc4c:	250c      	movcc	r5, #12
 800cc4e:	2d00      	cmp	r5, #0
 800cc50:	4607      	mov	r7, r0
 800cc52:	db01      	blt.n	800cc58 <_malloc_r+0x1c>
 800cc54:	42a9      	cmp	r1, r5
 800cc56:	d905      	bls.n	800cc64 <_malloc_r+0x28>
 800cc58:	230c      	movs	r3, #12
 800cc5a:	603b      	str	r3, [r7, #0]
 800cc5c:	2600      	movs	r6, #0
 800cc5e:	4630      	mov	r0, r6
 800cc60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cc64:	4e2e      	ldr	r6, [pc, #184]	; (800cd20 <_malloc_r+0xe4>)
 800cc66:	f000 fa25 	bl	800d0b4 <__malloc_lock>
 800cc6a:	6833      	ldr	r3, [r6, #0]
 800cc6c:	461c      	mov	r4, r3
 800cc6e:	bb34      	cbnz	r4, 800ccbe <_malloc_r+0x82>
 800cc70:	4629      	mov	r1, r5
 800cc72:	4638      	mov	r0, r7
 800cc74:	f7ff ffc2 	bl	800cbfc <sbrk_aligned>
 800cc78:	1c43      	adds	r3, r0, #1
 800cc7a:	4604      	mov	r4, r0
 800cc7c:	d14d      	bne.n	800cd1a <_malloc_r+0xde>
 800cc7e:	6834      	ldr	r4, [r6, #0]
 800cc80:	4626      	mov	r6, r4
 800cc82:	2e00      	cmp	r6, #0
 800cc84:	d140      	bne.n	800cd08 <_malloc_r+0xcc>
 800cc86:	6823      	ldr	r3, [r4, #0]
 800cc88:	4631      	mov	r1, r6
 800cc8a:	4638      	mov	r0, r7
 800cc8c:	eb04 0803 	add.w	r8, r4, r3
 800cc90:	f000 f9a4 	bl	800cfdc <_sbrk_r>
 800cc94:	4580      	cmp	r8, r0
 800cc96:	d13a      	bne.n	800cd0e <_malloc_r+0xd2>
 800cc98:	6821      	ldr	r1, [r4, #0]
 800cc9a:	3503      	adds	r5, #3
 800cc9c:	1a6d      	subs	r5, r5, r1
 800cc9e:	f025 0503 	bic.w	r5, r5, #3
 800cca2:	3508      	adds	r5, #8
 800cca4:	2d0c      	cmp	r5, #12
 800cca6:	bf38      	it	cc
 800cca8:	250c      	movcc	r5, #12
 800ccaa:	4629      	mov	r1, r5
 800ccac:	4638      	mov	r0, r7
 800ccae:	f7ff ffa5 	bl	800cbfc <sbrk_aligned>
 800ccb2:	3001      	adds	r0, #1
 800ccb4:	d02b      	beq.n	800cd0e <_malloc_r+0xd2>
 800ccb6:	6823      	ldr	r3, [r4, #0]
 800ccb8:	442b      	add	r3, r5
 800ccba:	6023      	str	r3, [r4, #0]
 800ccbc:	e00e      	b.n	800ccdc <_malloc_r+0xa0>
 800ccbe:	6822      	ldr	r2, [r4, #0]
 800ccc0:	1b52      	subs	r2, r2, r5
 800ccc2:	d41e      	bmi.n	800cd02 <_malloc_r+0xc6>
 800ccc4:	2a0b      	cmp	r2, #11
 800ccc6:	d916      	bls.n	800ccf6 <_malloc_r+0xba>
 800ccc8:	1961      	adds	r1, r4, r5
 800ccca:	42a3      	cmp	r3, r4
 800cccc:	6025      	str	r5, [r4, #0]
 800ccce:	bf18      	it	ne
 800ccd0:	6059      	strne	r1, [r3, #4]
 800ccd2:	6863      	ldr	r3, [r4, #4]
 800ccd4:	bf08      	it	eq
 800ccd6:	6031      	streq	r1, [r6, #0]
 800ccd8:	5162      	str	r2, [r4, r5]
 800ccda:	604b      	str	r3, [r1, #4]
 800ccdc:	4638      	mov	r0, r7
 800ccde:	f104 060b 	add.w	r6, r4, #11
 800cce2:	f000 f9ed 	bl	800d0c0 <__malloc_unlock>
 800cce6:	f026 0607 	bic.w	r6, r6, #7
 800ccea:	1d23      	adds	r3, r4, #4
 800ccec:	1af2      	subs	r2, r6, r3
 800ccee:	d0b6      	beq.n	800cc5e <_malloc_r+0x22>
 800ccf0:	1b9b      	subs	r3, r3, r6
 800ccf2:	50a3      	str	r3, [r4, r2]
 800ccf4:	e7b3      	b.n	800cc5e <_malloc_r+0x22>
 800ccf6:	6862      	ldr	r2, [r4, #4]
 800ccf8:	42a3      	cmp	r3, r4
 800ccfa:	bf0c      	ite	eq
 800ccfc:	6032      	streq	r2, [r6, #0]
 800ccfe:	605a      	strne	r2, [r3, #4]
 800cd00:	e7ec      	b.n	800ccdc <_malloc_r+0xa0>
 800cd02:	4623      	mov	r3, r4
 800cd04:	6864      	ldr	r4, [r4, #4]
 800cd06:	e7b2      	b.n	800cc6e <_malloc_r+0x32>
 800cd08:	4634      	mov	r4, r6
 800cd0a:	6876      	ldr	r6, [r6, #4]
 800cd0c:	e7b9      	b.n	800cc82 <_malloc_r+0x46>
 800cd0e:	230c      	movs	r3, #12
 800cd10:	603b      	str	r3, [r7, #0]
 800cd12:	4638      	mov	r0, r7
 800cd14:	f000 f9d4 	bl	800d0c0 <__malloc_unlock>
 800cd18:	e7a1      	b.n	800cc5e <_malloc_r+0x22>
 800cd1a:	6025      	str	r5, [r4, #0]
 800cd1c:	e7de      	b.n	800ccdc <_malloc_r+0xa0>
 800cd1e:	bf00      	nop
 800cd20:	20001240 	.word	0x20001240

0800cd24 <__ssputs_r>:
 800cd24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cd28:	688e      	ldr	r6, [r1, #8]
 800cd2a:	429e      	cmp	r6, r3
 800cd2c:	4682      	mov	sl, r0
 800cd2e:	460c      	mov	r4, r1
 800cd30:	4690      	mov	r8, r2
 800cd32:	461f      	mov	r7, r3
 800cd34:	d838      	bhi.n	800cda8 <__ssputs_r+0x84>
 800cd36:	898a      	ldrh	r2, [r1, #12]
 800cd38:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800cd3c:	d032      	beq.n	800cda4 <__ssputs_r+0x80>
 800cd3e:	6825      	ldr	r5, [r4, #0]
 800cd40:	6909      	ldr	r1, [r1, #16]
 800cd42:	eba5 0901 	sub.w	r9, r5, r1
 800cd46:	6965      	ldr	r5, [r4, #20]
 800cd48:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800cd4c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800cd50:	3301      	adds	r3, #1
 800cd52:	444b      	add	r3, r9
 800cd54:	106d      	asrs	r5, r5, #1
 800cd56:	429d      	cmp	r5, r3
 800cd58:	bf38      	it	cc
 800cd5a:	461d      	movcc	r5, r3
 800cd5c:	0553      	lsls	r3, r2, #21
 800cd5e:	d531      	bpl.n	800cdc4 <__ssputs_r+0xa0>
 800cd60:	4629      	mov	r1, r5
 800cd62:	f7ff ff6b 	bl	800cc3c <_malloc_r>
 800cd66:	4606      	mov	r6, r0
 800cd68:	b950      	cbnz	r0, 800cd80 <__ssputs_r+0x5c>
 800cd6a:	230c      	movs	r3, #12
 800cd6c:	f8ca 3000 	str.w	r3, [sl]
 800cd70:	89a3      	ldrh	r3, [r4, #12]
 800cd72:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cd76:	81a3      	strh	r3, [r4, #12]
 800cd78:	f04f 30ff 	mov.w	r0, #4294967295
 800cd7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cd80:	6921      	ldr	r1, [r4, #16]
 800cd82:	464a      	mov	r2, r9
 800cd84:	f7ff fb46 	bl	800c414 <memcpy>
 800cd88:	89a3      	ldrh	r3, [r4, #12]
 800cd8a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800cd8e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800cd92:	81a3      	strh	r3, [r4, #12]
 800cd94:	6126      	str	r6, [r4, #16]
 800cd96:	6165      	str	r5, [r4, #20]
 800cd98:	444e      	add	r6, r9
 800cd9a:	eba5 0509 	sub.w	r5, r5, r9
 800cd9e:	6026      	str	r6, [r4, #0]
 800cda0:	60a5      	str	r5, [r4, #8]
 800cda2:	463e      	mov	r6, r7
 800cda4:	42be      	cmp	r6, r7
 800cda6:	d900      	bls.n	800cdaa <__ssputs_r+0x86>
 800cda8:	463e      	mov	r6, r7
 800cdaa:	6820      	ldr	r0, [r4, #0]
 800cdac:	4632      	mov	r2, r6
 800cdae:	4641      	mov	r1, r8
 800cdb0:	f000 f966 	bl	800d080 <memmove>
 800cdb4:	68a3      	ldr	r3, [r4, #8]
 800cdb6:	1b9b      	subs	r3, r3, r6
 800cdb8:	60a3      	str	r3, [r4, #8]
 800cdba:	6823      	ldr	r3, [r4, #0]
 800cdbc:	4433      	add	r3, r6
 800cdbe:	6023      	str	r3, [r4, #0]
 800cdc0:	2000      	movs	r0, #0
 800cdc2:	e7db      	b.n	800cd7c <__ssputs_r+0x58>
 800cdc4:	462a      	mov	r2, r5
 800cdc6:	f000 f981 	bl	800d0cc <_realloc_r>
 800cdca:	4606      	mov	r6, r0
 800cdcc:	2800      	cmp	r0, #0
 800cdce:	d1e1      	bne.n	800cd94 <__ssputs_r+0x70>
 800cdd0:	6921      	ldr	r1, [r4, #16]
 800cdd2:	4650      	mov	r0, sl
 800cdd4:	f7ff fec6 	bl	800cb64 <_free_r>
 800cdd8:	e7c7      	b.n	800cd6a <__ssputs_r+0x46>
	...

0800cddc <_svfiprintf_r>:
 800cddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cde0:	4698      	mov	r8, r3
 800cde2:	898b      	ldrh	r3, [r1, #12]
 800cde4:	061b      	lsls	r3, r3, #24
 800cde6:	b09d      	sub	sp, #116	; 0x74
 800cde8:	4607      	mov	r7, r0
 800cdea:	460d      	mov	r5, r1
 800cdec:	4614      	mov	r4, r2
 800cdee:	d50e      	bpl.n	800ce0e <_svfiprintf_r+0x32>
 800cdf0:	690b      	ldr	r3, [r1, #16]
 800cdf2:	b963      	cbnz	r3, 800ce0e <_svfiprintf_r+0x32>
 800cdf4:	2140      	movs	r1, #64	; 0x40
 800cdf6:	f7ff ff21 	bl	800cc3c <_malloc_r>
 800cdfa:	6028      	str	r0, [r5, #0]
 800cdfc:	6128      	str	r0, [r5, #16]
 800cdfe:	b920      	cbnz	r0, 800ce0a <_svfiprintf_r+0x2e>
 800ce00:	230c      	movs	r3, #12
 800ce02:	603b      	str	r3, [r7, #0]
 800ce04:	f04f 30ff 	mov.w	r0, #4294967295
 800ce08:	e0d1      	b.n	800cfae <_svfiprintf_r+0x1d2>
 800ce0a:	2340      	movs	r3, #64	; 0x40
 800ce0c:	616b      	str	r3, [r5, #20]
 800ce0e:	2300      	movs	r3, #0
 800ce10:	9309      	str	r3, [sp, #36]	; 0x24
 800ce12:	2320      	movs	r3, #32
 800ce14:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800ce18:	f8cd 800c 	str.w	r8, [sp, #12]
 800ce1c:	2330      	movs	r3, #48	; 0x30
 800ce1e:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800cfc8 <_svfiprintf_r+0x1ec>
 800ce22:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800ce26:	f04f 0901 	mov.w	r9, #1
 800ce2a:	4623      	mov	r3, r4
 800ce2c:	469a      	mov	sl, r3
 800ce2e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ce32:	b10a      	cbz	r2, 800ce38 <_svfiprintf_r+0x5c>
 800ce34:	2a25      	cmp	r2, #37	; 0x25
 800ce36:	d1f9      	bne.n	800ce2c <_svfiprintf_r+0x50>
 800ce38:	ebba 0b04 	subs.w	fp, sl, r4
 800ce3c:	d00b      	beq.n	800ce56 <_svfiprintf_r+0x7a>
 800ce3e:	465b      	mov	r3, fp
 800ce40:	4622      	mov	r2, r4
 800ce42:	4629      	mov	r1, r5
 800ce44:	4638      	mov	r0, r7
 800ce46:	f7ff ff6d 	bl	800cd24 <__ssputs_r>
 800ce4a:	3001      	adds	r0, #1
 800ce4c:	f000 80aa 	beq.w	800cfa4 <_svfiprintf_r+0x1c8>
 800ce50:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ce52:	445a      	add	r2, fp
 800ce54:	9209      	str	r2, [sp, #36]	; 0x24
 800ce56:	f89a 3000 	ldrb.w	r3, [sl]
 800ce5a:	2b00      	cmp	r3, #0
 800ce5c:	f000 80a2 	beq.w	800cfa4 <_svfiprintf_r+0x1c8>
 800ce60:	2300      	movs	r3, #0
 800ce62:	f04f 32ff 	mov.w	r2, #4294967295
 800ce66:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800ce6a:	f10a 0a01 	add.w	sl, sl, #1
 800ce6e:	9304      	str	r3, [sp, #16]
 800ce70:	9307      	str	r3, [sp, #28]
 800ce72:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800ce76:	931a      	str	r3, [sp, #104]	; 0x68
 800ce78:	4654      	mov	r4, sl
 800ce7a:	2205      	movs	r2, #5
 800ce7c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ce80:	4851      	ldr	r0, [pc, #324]	; (800cfc8 <_svfiprintf_r+0x1ec>)
 800ce82:	f7f3 fa1d 	bl	80002c0 <memchr>
 800ce86:	9a04      	ldr	r2, [sp, #16]
 800ce88:	b9d8      	cbnz	r0, 800cec2 <_svfiprintf_r+0xe6>
 800ce8a:	06d0      	lsls	r0, r2, #27
 800ce8c:	bf44      	itt	mi
 800ce8e:	2320      	movmi	r3, #32
 800ce90:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800ce94:	0711      	lsls	r1, r2, #28
 800ce96:	bf44      	itt	mi
 800ce98:	232b      	movmi	r3, #43	; 0x2b
 800ce9a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800ce9e:	f89a 3000 	ldrb.w	r3, [sl]
 800cea2:	2b2a      	cmp	r3, #42	; 0x2a
 800cea4:	d015      	beq.n	800ced2 <_svfiprintf_r+0xf6>
 800cea6:	9a07      	ldr	r2, [sp, #28]
 800cea8:	4654      	mov	r4, sl
 800ceaa:	2000      	movs	r0, #0
 800ceac:	f04f 0c0a 	mov.w	ip, #10
 800ceb0:	4621      	mov	r1, r4
 800ceb2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ceb6:	3b30      	subs	r3, #48	; 0x30
 800ceb8:	2b09      	cmp	r3, #9
 800ceba:	d94e      	bls.n	800cf5a <_svfiprintf_r+0x17e>
 800cebc:	b1b0      	cbz	r0, 800ceec <_svfiprintf_r+0x110>
 800cebe:	9207      	str	r2, [sp, #28]
 800cec0:	e014      	b.n	800ceec <_svfiprintf_r+0x110>
 800cec2:	eba0 0308 	sub.w	r3, r0, r8
 800cec6:	fa09 f303 	lsl.w	r3, r9, r3
 800ceca:	4313      	orrs	r3, r2
 800cecc:	9304      	str	r3, [sp, #16]
 800cece:	46a2      	mov	sl, r4
 800ced0:	e7d2      	b.n	800ce78 <_svfiprintf_r+0x9c>
 800ced2:	9b03      	ldr	r3, [sp, #12]
 800ced4:	1d19      	adds	r1, r3, #4
 800ced6:	681b      	ldr	r3, [r3, #0]
 800ced8:	9103      	str	r1, [sp, #12]
 800ceda:	2b00      	cmp	r3, #0
 800cedc:	bfbb      	ittet	lt
 800cede:	425b      	neglt	r3, r3
 800cee0:	f042 0202 	orrlt.w	r2, r2, #2
 800cee4:	9307      	strge	r3, [sp, #28]
 800cee6:	9307      	strlt	r3, [sp, #28]
 800cee8:	bfb8      	it	lt
 800ceea:	9204      	strlt	r2, [sp, #16]
 800ceec:	7823      	ldrb	r3, [r4, #0]
 800ceee:	2b2e      	cmp	r3, #46	; 0x2e
 800cef0:	d10c      	bne.n	800cf0c <_svfiprintf_r+0x130>
 800cef2:	7863      	ldrb	r3, [r4, #1]
 800cef4:	2b2a      	cmp	r3, #42	; 0x2a
 800cef6:	d135      	bne.n	800cf64 <_svfiprintf_r+0x188>
 800cef8:	9b03      	ldr	r3, [sp, #12]
 800cefa:	1d1a      	adds	r2, r3, #4
 800cefc:	681b      	ldr	r3, [r3, #0]
 800cefe:	9203      	str	r2, [sp, #12]
 800cf00:	2b00      	cmp	r3, #0
 800cf02:	bfb8      	it	lt
 800cf04:	f04f 33ff 	movlt.w	r3, #4294967295
 800cf08:	3402      	adds	r4, #2
 800cf0a:	9305      	str	r3, [sp, #20]
 800cf0c:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800cfd8 <_svfiprintf_r+0x1fc>
 800cf10:	7821      	ldrb	r1, [r4, #0]
 800cf12:	2203      	movs	r2, #3
 800cf14:	4650      	mov	r0, sl
 800cf16:	f7f3 f9d3 	bl	80002c0 <memchr>
 800cf1a:	b140      	cbz	r0, 800cf2e <_svfiprintf_r+0x152>
 800cf1c:	2340      	movs	r3, #64	; 0x40
 800cf1e:	eba0 000a 	sub.w	r0, r0, sl
 800cf22:	fa03 f000 	lsl.w	r0, r3, r0
 800cf26:	9b04      	ldr	r3, [sp, #16]
 800cf28:	4303      	orrs	r3, r0
 800cf2a:	3401      	adds	r4, #1
 800cf2c:	9304      	str	r3, [sp, #16]
 800cf2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800cf32:	4826      	ldr	r0, [pc, #152]	; (800cfcc <_svfiprintf_r+0x1f0>)
 800cf34:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800cf38:	2206      	movs	r2, #6
 800cf3a:	f7f3 f9c1 	bl	80002c0 <memchr>
 800cf3e:	2800      	cmp	r0, #0
 800cf40:	d038      	beq.n	800cfb4 <_svfiprintf_r+0x1d8>
 800cf42:	4b23      	ldr	r3, [pc, #140]	; (800cfd0 <_svfiprintf_r+0x1f4>)
 800cf44:	bb1b      	cbnz	r3, 800cf8e <_svfiprintf_r+0x1b2>
 800cf46:	9b03      	ldr	r3, [sp, #12]
 800cf48:	3307      	adds	r3, #7
 800cf4a:	f023 0307 	bic.w	r3, r3, #7
 800cf4e:	3308      	adds	r3, #8
 800cf50:	9303      	str	r3, [sp, #12]
 800cf52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf54:	4433      	add	r3, r6
 800cf56:	9309      	str	r3, [sp, #36]	; 0x24
 800cf58:	e767      	b.n	800ce2a <_svfiprintf_r+0x4e>
 800cf5a:	fb0c 3202 	mla	r2, ip, r2, r3
 800cf5e:	460c      	mov	r4, r1
 800cf60:	2001      	movs	r0, #1
 800cf62:	e7a5      	b.n	800ceb0 <_svfiprintf_r+0xd4>
 800cf64:	2300      	movs	r3, #0
 800cf66:	3401      	adds	r4, #1
 800cf68:	9305      	str	r3, [sp, #20]
 800cf6a:	4619      	mov	r1, r3
 800cf6c:	f04f 0c0a 	mov.w	ip, #10
 800cf70:	4620      	mov	r0, r4
 800cf72:	f810 2b01 	ldrb.w	r2, [r0], #1
 800cf76:	3a30      	subs	r2, #48	; 0x30
 800cf78:	2a09      	cmp	r2, #9
 800cf7a:	d903      	bls.n	800cf84 <_svfiprintf_r+0x1a8>
 800cf7c:	2b00      	cmp	r3, #0
 800cf7e:	d0c5      	beq.n	800cf0c <_svfiprintf_r+0x130>
 800cf80:	9105      	str	r1, [sp, #20]
 800cf82:	e7c3      	b.n	800cf0c <_svfiprintf_r+0x130>
 800cf84:	fb0c 2101 	mla	r1, ip, r1, r2
 800cf88:	4604      	mov	r4, r0
 800cf8a:	2301      	movs	r3, #1
 800cf8c:	e7f0      	b.n	800cf70 <_svfiprintf_r+0x194>
 800cf8e:	ab03      	add	r3, sp, #12
 800cf90:	9300      	str	r3, [sp, #0]
 800cf92:	462a      	mov	r2, r5
 800cf94:	4b0f      	ldr	r3, [pc, #60]	; (800cfd4 <_svfiprintf_r+0x1f8>)
 800cf96:	a904      	add	r1, sp, #16
 800cf98:	4638      	mov	r0, r7
 800cf9a:	f7fd ffb5 	bl	800af08 <_printf_float>
 800cf9e:	1c42      	adds	r2, r0, #1
 800cfa0:	4606      	mov	r6, r0
 800cfa2:	d1d6      	bne.n	800cf52 <_svfiprintf_r+0x176>
 800cfa4:	89ab      	ldrh	r3, [r5, #12]
 800cfa6:	065b      	lsls	r3, r3, #25
 800cfa8:	f53f af2c 	bmi.w	800ce04 <_svfiprintf_r+0x28>
 800cfac:	9809      	ldr	r0, [sp, #36]	; 0x24
 800cfae:	b01d      	add	sp, #116	; 0x74
 800cfb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfb4:	ab03      	add	r3, sp, #12
 800cfb6:	9300      	str	r3, [sp, #0]
 800cfb8:	462a      	mov	r2, r5
 800cfba:	4b06      	ldr	r3, [pc, #24]	; (800cfd4 <_svfiprintf_r+0x1f8>)
 800cfbc:	a904      	add	r1, sp, #16
 800cfbe:	4638      	mov	r0, r7
 800cfc0:	f7fe fa46 	bl	800b450 <_printf_i>
 800cfc4:	e7eb      	b.n	800cf9e <_svfiprintf_r+0x1c2>
 800cfc6:	bf00      	nop
 800cfc8:	08028884 	.word	0x08028884
 800cfcc:	0802888e 	.word	0x0802888e
 800cfd0:	0800af09 	.word	0x0800af09
 800cfd4:	0800cd25 	.word	0x0800cd25
 800cfd8:	0802888a 	.word	0x0802888a

0800cfdc <_sbrk_r>:
 800cfdc:	b538      	push	{r3, r4, r5, lr}
 800cfde:	4d06      	ldr	r5, [pc, #24]	; (800cff8 <_sbrk_r+0x1c>)
 800cfe0:	2300      	movs	r3, #0
 800cfe2:	4604      	mov	r4, r0
 800cfe4:	4608      	mov	r0, r1
 800cfe6:	602b      	str	r3, [r5, #0]
 800cfe8:	f002 fde2 	bl	800fbb0 <_sbrk>
 800cfec:	1c43      	adds	r3, r0, #1
 800cfee:	d102      	bne.n	800cff6 <_sbrk_r+0x1a>
 800cff0:	682b      	ldr	r3, [r5, #0]
 800cff2:	b103      	cbz	r3, 800cff6 <_sbrk_r+0x1a>
 800cff4:	6023      	str	r3, [r4, #0]
 800cff6:	bd38      	pop	{r3, r4, r5, pc}
 800cff8:	20001248 	.word	0x20001248

0800cffc <__assert_func>:
 800cffc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cffe:	4614      	mov	r4, r2
 800d000:	461a      	mov	r2, r3
 800d002:	4b09      	ldr	r3, [pc, #36]	; (800d028 <__assert_func+0x2c>)
 800d004:	681b      	ldr	r3, [r3, #0]
 800d006:	4605      	mov	r5, r0
 800d008:	68d8      	ldr	r0, [r3, #12]
 800d00a:	b14c      	cbz	r4, 800d020 <__assert_func+0x24>
 800d00c:	4b07      	ldr	r3, [pc, #28]	; (800d02c <__assert_func+0x30>)
 800d00e:	9100      	str	r1, [sp, #0]
 800d010:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d014:	4906      	ldr	r1, [pc, #24]	; (800d030 <__assert_func+0x34>)
 800d016:	462b      	mov	r3, r5
 800d018:	f000 f80e 	bl	800d038 <fiprintf>
 800d01c:	f000 faac 	bl	800d578 <abort>
 800d020:	4b04      	ldr	r3, [pc, #16]	; (800d034 <__assert_func+0x38>)
 800d022:	461c      	mov	r4, r3
 800d024:	e7f3      	b.n	800d00e <__assert_func+0x12>
 800d026:	bf00      	nop
 800d028:	200000fc 	.word	0x200000fc
 800d02c:	08028895 	.word	0x08028895
 800d030:	080288a2 	.word	0x080288a2
 800d034:	080288d0 	.word	0x080288d0

0800d038 <fiprintf>:
 800d038:	b40e      	push	{r1, r2, r3}
 800d03a:	b503      	push	{r0, r1, lr}
 800d03c:	4601      	mov	r1, r0
 800d03e:	ab03      	add	r3, sp, #12
 800d040:	4805      	ldr	r0, [pc, #20]	; (800d058 <fiprintf+0x20>)
 800d042:	f853 2b04 	ldr.w	r2, [r3], #4
 800d046:	6800      	ldr	r0, [r0, #0]
 800d048:	9301      	str	r3, [sp, #4]
 800d04a:	f000 f897 	bl	800d17c <_vfiprintf_r>
 800d04e:	b002      	add	sp, #8
 800d050:	f85d eb04 	ldr.w	lr, [sp], #4
 800d054:	b003      	add	sp, #12
 800d056:	4770      	bx	lr
 800d058:	200000fc 	.word	0x200000fc

0800d05c <__ascii_mbtowc>:
 800d05c:	b082      	sub	sp, #8
 800d05e:	b901      	cbnz	r1, 800d062 <__ascii_mbtowc+0x6>
 800d060:	a901      	add	r1, sp, #4
 800d062:	b142      	cbz	r2, 800d076 <__ascii_mbtowc+0x1a>
 800d064:	b14b      	cbz	r3, 800d07a <__ascii_mbtowc+0x1e>
 800d066:	7813      	ldrb	r3, [r2, #0]
 800d068:	600b      	str	r3, [r1, #0]
 800d06a:	7812      	ldrb	r2, [r2, #0]
 800d06c:	1e10      	subs	r0, r2, #0
 800d06e:	bf18      	it	ne
 800d070:	2001      	movne	r0, #1
 800d072:	b002      	add	sp, #8
 800d074:	4770      	bx	lr
 800d076:	4610      	mov	r0, r2
 800d078:	e7fb      	b.n	800d072 <__ascii_mbtowc+0x16>
 800d07a:	f06f 0001 	mvn.w	r0, #1
 800d07e:	e7f8      	b.n	800d072 <__ascii_mbtowc+0x16>

0800d080 <memmove>:
 800d080:	4288      	cmp	r0, r1
 800d082:	b510      	push	{r4, lr}
 800d084:	eb01 0402 	add.w	r4, r1, r2
 800d088:	d902      	bls.n	800d090 <memmove+0x10>
 800d08a:	4284      	cmp	r4, r0
 800d08c:	4623      	mov	r3, r4
 800d08e:	d807      	bhi.n	800d0a0 <memmove+0x20>
 800d090:	1e43      	subs	r3, r0, #1
 800d092:	42a1      	cmp	r1, r4
 800d094:	d008      	beq.n	800d0a8 <memmove+0x28>
 800d096:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d09a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800d09e:	e7f8      	b.n	800d092 <memmove+0x12>
 800d0a0:	4402      	add	r2, r0
 800d0a2:	4601      	mov	r1, r0
 800d0a4:	428a      	cmp	r2, r1
 800d0a6:	d100      	bne.n	800d0aa <memmove+0x2a>
 800d0a8:	bd10      	pop	{r4, pc}
 800d0aa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800d0ae:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800d0b2:	e7f7      	b.n	800d0a4 <memmove+0x24>

0800d0b4 <__malloc_lock>:
 800d0b4:	4801      	ldr	r0, [pc, #4]	; (800d0bc <__malloc_lock+0x8>)
 800d0b6:	f000 bc1f 	b.w	800d8f8 <__retarget_lock_acquire_recursive>
 800d0ba:	bf00      	nop
 800d0bc:	2000124c 	.word	0x2000124c

0800d0c0 <__malloc_unlock>:
 800d0c0:	4801      	ldr	r0, [pc, #4]	; (800d0c8 <__malloc_unlock+0x8>)
 800d0c2:	f000 bc1a 	b.w	800d8fa <__retarget_lock_release_recursive>
 800d0c6:	bf00      	nop
 800d0c8:	2000124c 	.word	0x2000124c

0800d0cc <_realloc_r>:
 800d0cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d0d0:	4680      	mov	r8, r0
 800d0d2:	4614      	mov	r4, r2
 800d0d4:	460e      	mov	r6, r1
 800d0d6:	b921      	cbnz	r1, 800d0e2 <_realloc_r+0x16>
 800d0d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d0dc:	4611      	mov	r1, r2
 800d0de:	f7ff bdad 	b.w	800cc3c <_malloc_r>
 800d0e2:	b92a      	cbnz	r2, 800d0f0 <_realloc_r+0x24>
 800d0e4:	f7ff fd3e 	bl	800cb64 <_free_r>
 800d0e8:	4625      	mov	r5, r4
 800d0ea:	4628      	mov	r0, r5
 800d0ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d0f0:	f000 fc6a 	bl	800d9c8 <_malloc_usable_size_r>
 800d0f4:	4284      	cmp	r4, r0
 800d0f6:	4607      	mov	r7, r0
 800d0f8:	d802      	bhi.n	800d100 <_realloc_r+0x34>
 800d0fa:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800d0fe:	d812      	bhi.n	800d126 <_realloc_r+0x5a>
 800d100:	4621      	mov	r1, r4
 800d102:	4640      	mov	r0, r8
 800d104:	f7ff fd9a 	bl	800cc3c <_malloc_r>
 800d108:	4605      	mov	r5, r0
 800d10a:	2800      	cmp	r0, #0
 800d10c:	d0ed      	beq.n	800d0ea <_realloc_r+0x1e>
 800d10e:	42bc      	cmp	r4, r7
 800d110:	4622      	mov	r2, r4
 800d112:	4631      	mov	r1, r6
 800d114:	bf28      	it	cs
 800d116:	463a      	movcs	r2, r7
 800d118:	f7ff f97c 	bl	800c414 <memcpy>
 800d11c:	4631      	mov	r1, r6
 800d11e:	4640      	mov	r0, r8
 800d120:	f7ff fd20 	bl	800cb64 <_free_r>
 800d124:	e7e1      	b.n	800d0ea <_realloc_r+0x1e>
 800d126:	4635      	mov	r5, r6
 800d128:	e7df      	b.n	800d0ea <_realloc_r+0x1e>

0800d12a <__sfputc_r>:
 800d12a:	6893      	ldr	r3, [r2, #8]
 800d12c:	3b01      	subs	r3, #1
 800d12e:	2b00      	cmp	r3, #0
 800d130:	b410      	push	{r4}
 800d132:	6093      	str	r3, [r2, #8]
 800d134:	da08      	bge.n	800d148 <__sfputc_r+0x1e>
 800d136:	6994      	ldr	r4, [r2, #24]
 800d138:	42a3      	cmp	r3, r4
 800d13a:	db01      	blt.n	800d140 <__sfputc_r+0x16>
 800d13c:	290a      	cmp	r1, #10
 800d13e:	d103      	bne.n	800d148 <__sfputc_r+0x1e>
 800d140:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d144:	f000 b94a 	b.w	800d3dc <__swbuf_r>
 800d148:	6813      	ldr	r3, [r2, #0]
 800d14a:	1c58      	adds	r0, r3, #1
 800d14c:	6010      	str	r0, [r2, #0]
 800d14e:	7019      	strb	r1, [r3, #0]
 800d150:	4608      	mov	r0, r1
 800d152:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d156:	4770      	bx	lr

0800d158 <__sfputs_r>:
 800d158:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d15a:	4606      	mov	r6, r0
 800d15c:	460f      	mov	r7, r1
 800d15e:	4614      	mov	r4, r2
 800d160:	18d5      	adds	r5, r2, r3
 800d162:	42ac      	cmp	r4, r5
 800d164:	d101      	bne.n	800d16a <__sfputs_r+0x12>
 800d166:	2000      	movs	r0, #0
 800d168:	e007      	b.n	800d17a <__sfputs_r+0x22>
 800d16a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d16e:	463a      	mov	r2, r7
 800d170:	4630      	mov	r0, r6
 800d172:	f7ff ffda 	bl	800d12a <__sfputc_r>
 800d176:	1c43      	adds	r3, r0, #1
 800d178:	d1f3      	bne.n	800d162 <__sfputs_r+0xa>
 800d17a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d17c <_vfiprintf_r>:
 800d17c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d180:	460d      	mov	r5, r1
 800d182:	b09d      	sub	sp, #116	; 0x74
 800d184:	4614      	mov	r4, r2
 800d186:	4698      	mov	r8, r3
 800d188:	4606      	mov	r6, r0
 800d18a:	b118      	cbz	r0, 800d194 <_vfiprintf_r+0x18>
 800d18c:	6983      	ldr	r3, [r0, #24]
 800d18e:	b90b      	cbnz	r3, 800d194 <_vfiprintf_r+0x18>
 800d190:	f000 fb14 	bl	800d7bc <__sinit>
 800d194:	4b89      	ldr	r3, [pc, #548]	; (800d3bc <_vfiprintf_r+0x240>)
 800d196:	429d      	cmp	r5, r3
 800d198:	d11b      	bne.n	800d1d2 <_vfiprintf_r+0x56>
 800d19a:	6875      	ldr	r5, [r6, #4]
 800d19c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800d19e:	07d9      	lsls	r1, r3, #31
 800d1a0:	d405      	bmi.n	800d1ae <_vfiprintf_r+0x32>
 800d1a2:	89ab      	ldrh	r3, [r5, #12]
 800d1a4:	059a      	lsls	r2, r3, #22
 800d1a6:	d402      	bmi.n	800d1ae <_vfiprintf_r+0x32>
 800d1a8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800d1aa:	f000 fba5 	bl	800d8f8 <__retarget_lock_acquire_recursive>
 800d1ae:	89ab      	ldrh	r3, [r5, #12]
 800d1b0:	071b      	lsls	r3, r3, #28
 800d1b2:	d501      	bpl.n	800d1b8 <_vfiprintf_r+0x3c>
 800d1b4:	692b      	ldr	r3, [r5, #16]
 800d1b6:	b9eb      	cbnz	r3, 800d1f4 <_vfiprintf_r+0x78>
 800d1b8:	4629      	mov	r1, r5
 800d1ba:	4630      	mov	r0, r6
 800d1bc:	f000 f96e 	bl	800d49c <__swsetup_r>
 800d1c0:	b1c0      	cbz	r0, 800d1f4 <_vfiprintf_r+0x78>
 800d1c2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800d1c4:	07dc      	lsls	r4, r3, #31
 800d1c6:	d50e      	bpl.n	800d1e6 <_vfiprintf_r+0x6a>
 800d1c8:	f04f 30ff 	mov.w	r0, #4294967295
 800d1cc:	b01d      	add	sp, #116	; 0x74
 800d1ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d1d2:	4b7b      	ldr	r3, [pc, #492]	; (800d3c0 <_vfiprintf_r+0x244>)
 800d1d4:	429d      	cmp	r5, r3
 800d1d6:	d101      	bne.n	800d1dc <_vfiprintf_r+0x60>
 800d1d8:	68b5      	ldr	r5, [r6, #8]
 800d1da:	e7df      	b.n	800d19c <_vfiprintf_r+0x20>
 800d1dc:	4b79      	ldr	r3, [pc, #484]	; (800d3c4 <_vfiprintf_r+0x248>)
 800d1de:	429d      	cmp	r5, r3
 800d1e0:	bf08      	it	eq
 800d1e2:	68f5      	ldreq	r5, [r6, #12]
 800d1e4:	e7da      	b.n	800d19c <_vfiprintf_r+0x20>
 800d1e6:	89ab      	ldrh	r3, [r5, #12]
 800d1e8:	0598      	lsls	r0, r3, #22
 800d1ea:	d4ed      	bmi.n	800d1c8 <_vfiprintf_r+0x4c>
 800d1ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800d1ee:	f000 fb84 	bl	800d8fa <__retarget_lock_release_recursive>
 800d1f2:	e7e9      	b.n	800d1c8 <_vfiprintf_r+0x4c>
 800d1f4:	2300      	movs	r3, #0
 800d1f6:	9309      	str	r3, [sp, #36]	; 0x24
 800d1f8:	2320      	movs	r3, #32
 800d1fa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d1fe:	f8cd 800c 	str.w	r8, [sp, #12]
 800d202:	2330      	movs	r3, #48	; 0x30
 800d204:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800d3c8 <_vfiprintf_r+0x24c>
 800d208:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800d20c:	f04f 0901 	mov.w	r9, #1
 800d210:	4623      	mov	r3, r4
 800d212:	469a      	mov	sl, r3
 800d214:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d218:	b10a      	cbz	r2, 800d21e <_vfiprintf_r+0xa2>
 800d21a:	2a25      	cmp	r2, #37	; 0x25
 800d21c:	d1f9      	bne.n	800d212 <_vfiprintf_r+0x96>
 800d21e:	ebba 0b04 	subs.w	fp, sl, r4
 800d222:	d00b      	beq.n	800d23c <_vfiprintf_r+0xc0>
 800d224:	465b      	mov	r3, fp
 800d226:	4622      	mov	r2, r4
 800d228:	4629      	mov	r1, r5
 800d22a:	4630      	mov	r0, r6
 800d22c:	f7ff ff94 	bl	800d158 <__sfputs_r>
 800d230:	3001      	adds	r0, #1
 800d232:	f000 80aa 	beq.w	800d38a <_vfiprintf_r+0x20e>
 800d236:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d238:	445a      	add	r2, fp
 800d23a:	9209      	str	r2, [sp, #36]	; 0x24
 800d23c:	f89a 3000 	ldrb.w	r3, [sl]
 800d240:	2b00      	cmp	r3, #0
 800d242:	f000 80a2 	beq.w	800d38a <_vfiprintf_r+0x20e>
 800d246:	2300      	movs	r3, #0
 800d248:	f04f 32ff 	mov.w	r2, #4294967295
 800d24c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800d250:	f10a 0a01 	add.w	sl, sl, #1
 800d254:	9304      	str	r3, [sp, #16]
 800d256:	9307      	str	r3, [sp, #28]
 800d258:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800d25c:	931a      	str	r3, [sp, #104]	; 0x68
 800d25e:	4654      	mov	r4, sl
 800d260:	2205      	movs	r2, #5
 800d262:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d266:	4858      	ldr	r0, [pc, #352]	; (800d3c8 <_vfiprintf_r+0x24c>)
 800d268:	f7f3 f82a 	bl	80002c0 <memchr>
 800d26c:	9a04      	ldr	r2, [sp, #16]
 800d26e:	b9d8      	cbnz	r0, 800d2a8 <_vfiprintf_r+0x12c>
 800d270:	06d1      	lsls	r1, r2, #27
 800d272:	bf44      	itt	mi
 800d274:	2320      	movmi	r3, #32
 800d276:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800d27a:	0713      	lsls	r3, r2, #28
 800d27c:	bf44      	itt	mi
 800d27e:	232b      	movmi	r3, #43	; 0x2b
 800d280:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800d284:	f89a 3000 	ldrb.w	r3, [sl]
 800d288:	2b2a      	cmp	r3, #42	; 0x2a
 800d28a:	d015      	beq.n	800d2b8 <_vfiprintf_r+0x13c>
 800d28c:	9a07      	ldr	r2, [sp, #28]
 800d28e:	4654      	mov	r4, sl
 800d290:	2000      	movs	r0, #0
 800d292:	f04f 0c0a 	mov.w	ip, #10
 800d296:	4621      	mov	r1, r4
 800d298:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d29c:	3b30      	subs	r3, #48	; 0x30
 800d29e:	2b09      	cmp	r3, #9
 800d2a0:	d94e      	bls.n	800d340 <_vfiprintf_r+0x1c4>
 800d2a2:	b1b0      	cbz	r0, 800d2d2 <_vfiprintf_r+0x156>
 800d2a4:	9207      	str	r2, [sp, #28]
 800d2a6:	e014      	b.n	800d2d2 <_vfiprintf_r+0x156>
 800d2a8:	eba0 0308 	sub.w	r3, r0, r8
 800d2ac:	fa09 f303 	lsl.w	r3, r9, r3
 800d2b0:	4313      	orrs	r3, r2
 800d2b2:	9304      	str	r3, [sp, #16]
 800d2b4:	46a2      	mov	sl, r4
 800d2b6:	e7d2      	b.n	800d25e <_vfiprintf_r+0xe2>
 800d2b8:	9b03      	ldr	r3, [sp, #12]
 800d2ba:	1d19      	adds	r1, r3, #4
 800d2bc:	681b      	ldr	r3, [r3, #0]
 800d2be:	9103      	str	r1, [sp, #12]
 800d2c0:	2b00      	cmp	r3, #0
 800d2c2:	bfbb      	ittet	lt
 800d2c4:	425b      	neglt	r3, r3
 800d2c6:	f042 0202 	orrlt.w	r2, r2, #2
 800d2ca:	9307      	strge	r3, [sp, #28]
 800d2cc:	9307      	strlt	r3, [sp, #28]
 800d2ce:	bfb8      	it	lt
 800d2d0:	9204      	strlt	r2, [sp, #16]
 800d2d2:	7823      	ldrb	r3, [r4, #0]
 800d2d4:	2b2e      	cmp	r3, #46	; 0x2e
 800d2d6:	d10c      	bne.n	800d2f2 <_vfiprintf_r+0x176>
 800d2d8:	7863      	ldrb	r3, [r4, #1]
 800d2da:	2b2a      	cmp	r3, #42	; 0x2a
 800d2dc:	d135      	bne.n	800d34a <_vfiprintf_r+0x1ce>
 800d2de:	9b03      	ldr	r3, [sp, #12]
 800d2e0:	1d1a      	adds	r2, r3, #4
 800d2e2:	681b      	ldr	r3, [r3, #0]
 800d2e4:	9203      	str	r2, [sp, #12]
 800d2e6:	2b00      	cmp	r3, #0
 800d2e8:	bfb8      	it	lt
 800d2ea:	f04f 33ff 	movlt.w	r3, #4294967295
 800d2ee:	3402      	adds	r4, #2
 800d2f0:	9305      	str	r3, [sp, #20]
 800d2f2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800d3d8 <_vfiprintf_r+0x25c>
 800d2f6:	7821      	ldrb	r1, [r4, #0]
 800d2f8:	2203      	movs	r2, #3
 800d2fa:	4650      	mov	r0, sl
 800d2fc:	f7f2 ffe0 	bl	80002c0 <memchr>
 800d300:	b140      	cbz	r0, 800d314 <_vfiprintf_r+0x198>
 800d302:	2340      	movs	r3, #64	; 0x40
 800d304:	eba0 000a 	sub.w	r0, r0, sl
 800d308:	fa03 f000 	lsl.w	r0, r3, r0
 800d30c:	9b04      	ldr	r3, [sp, #16]
 800d30e:	4303      	orrs	r3, r0
 800d310:	3401      	adds	r4, #1
 800d312:	9304      	str	r3, [sp, #16]
 800d314:	f814 1b01 	ldrb.w	r1, [r4], #1
 800d318:	482c      	ldr	r0, [pc, #176]	; (800d3cc <_vfiprintf_r+0x250>)
 800d31a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800d31e:	2206      	movs	r2, #6
 800d320:	f7f2 ffce 	bl	80002c0 <memchr>
 800d324:	2800      	cmp	r0, #0
 800d326:	d03f      	beq.n	800d3a8 <_vfiprintf_r+0x22c>
 800d328:	4b29      	ldr	r3, [pc, #164]	; (800d3d0 <_vfiprintf_r+0x254>)
 800d32a:	bb1b      	cbnz	r3, 800d374 <_vfiprintf_r+0x1f8>
 800d32c:	9b03      	ldr	r3, [sp, #12]
 800d32e:	3307      	adds	r3, #7
 800d330:	f023 0307 	bic.w	r3, r3, #7
 800d334:	3308      	adds	r3, #8
 800d336:	9303      	str	r3, [sp, #12]
 800d338:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d33a:	443b      	add	r3, r7
 800d33c:	9309      	str	r3, [sp, #36]	; 0x24
 800d33e:	e767      	b.n	800d210 <_vfiprintf_r+0x94>
 800d340:	fb0c 3202 	mla	r2, ip, r2, r3
 800d344:	460c      	mov	r4, r1
 800d346:	2001      	movs	r0, #1
 800d348:	e7a5      	b.n	800d296 <_vfiprintf_r+0x11a>
 800d34a:	2300      	movs	r3, #0
 800d34c:	3401      	adds	r4, #1
 800d34e:	9305      	str	r3, [sp, #20]
 800d350:	4619      	mov	r1, r3
 800d352:	f04f 0c0a 	mov.w	ip, #10
 800d356:	4620      	mov	r0, r4
 800d358:	f810 2b01 	ldrb.w	r2, [r0], #1
 800d35c:	3a30      	subs	r2, #48	; 0x30
 800d35e:	2a09      	cmp	r2, #9
 800d360:	d903      	bls.n	800d36a <_vfiprintf_r+0x1ee>
 800d362:	2b00      	cmp	r3, #0
 800d364:	d0c5      	beq.n	800d2f2 <_vfiprintf_r+0x176>
 800d366:	9105      	str	r1, [sp, #20]
 800d368:	e7c3      	b.n	800d2f2 <_vfiprintf_r+0x176>
 800d36a:	fb0c 2101 	mla	r1, ip, r1, r2
 800d36e:	4604      	mov	r4, r0
 800d370:	2301      	movs	r3, #1
 800d372:	e7f0      	b.n	800d356 <_vfiprintf_r+0x1da>
 800d374:	ab03      	add	r3, sp, #12
 800d376:	9300      	str	r3, [sp, #0]
 800d378:	462a      	mov	r2, r5
 800d37a:	4b16      	ldr	r3, [pc, #88]	; (800d3d4 <_vfiprintf_r+0x258>)
 800d37c:	a904      	add	r1, sp, #16
 800d37e:	4630      	mov	r0, r6
 800d380:	f7fd fdc2 	bl	800af08 <_printf_float>
 800d384:	4607      	mov	r7, r0
 800d386:	1c78      	adds	r0, r7, #1
 800d388:	d1d6      	bne.n	800d338 <_vfiprintf_r+0x1bc>
 800d38a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800d38c:	07d9      	lsls	r1, r3, #31
 800d38e:	d405      	bmi.n	800d39c <_vfiprintf_r+0x220>
 800d390:	89ab      	ldrh	r3, [r5, #12]
 800d392:	059a      	lsls	r2, r3, #22
 800d394:	d402      	bmi.n	800d39c <_vfiprintf_r+0x220>
 800d396:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800d398:	f000 faaf 	bl	800d8fa <__retarget_lock_release_recursive>
 800d39c:	89ab      	ldrh	r3, [r5, #12]
 800d39e:	065b      	lsls	r3, r3, #25
 800d3a0:	f53f af12 	bmi.w	800d1c8 <_vfiprintf_r+0x4c>
 800d3a4:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d3a6:	e711      	b.n	800d1cc <_vfiprintf_r+0x50>
 800d3a8:	ab03      	add	r3, sp, #12
 800d3aa:	9300      	str	r3, [sp, #0]
 800d3ac:	462a      	mov	r2, r5
 800d3ae:	4b09      	ldr	r3, [pc, #36]	; (800d3d4 <_vfiprintf_r+0x258>)
 800d3b0:	a904      	add	r1, sp, #16
 800d3b2:	4630      	mov	r0, r6
 800d3b4:	f7fe f84c 	bl	800b450 <_printf_i>
 800d3b8:	e7e4      	b.n	800d384 <_vfiprintf_r+0x208>
 800d3ba:	bf00      	nop
 800d3bc:	080289fc 	.word	0x080289fc
 800d3c0:	08028a1c 	.word	0x08028a1c
 800d3c4:	080289dc 	.word	0x080289dc
 800d3c8:	08028884 	.word	0x08028884
 800d3cc:	0802888e 	.word	0x0802888e
 800d3d0:	0800af09 	.word	0x0800af09
 800d3d4:	0800d159 	.word	0x0800d159
 800d3d8:	0802888a 	.word	0x0802888a

0800d3dc <__swbuf_r>:
 800d3dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d3de:	460e      	mov	r6, r1
 800d3e0:	4614      	mov	r4, r2
 800d3e2:	4605      	mov	r5, r0
 800d3e4:	b118      	cbz	r0, 800d3ee <__swbuf_r+0x12>
 800d3e6:	6983      	ldr	r3, [r0, #24]
 800d3e8:	b90b      	cbnz	r3, 800d3ee <__swbuf_r+0x12>
 800d3ea:	f000 f9e7 	bl	800d7bc <__sinit>
 800d3ee:	4b21      	ldr	r3, [pc, #132]	; (800d474 <__swbuf_r+0x98>)
 800d3f0:	429c      	cmp	r4, r3
 800d3f2:	d12b      	bne.n	800d44c <__swbuf_r+0x70>
 800d3f4:	686c      	ldr	r4, [r5, #4]
 800d3f6:	69a3      	ldr	r3, [r4, #24]
 800d3f8:	60a3      	str	r3, [r4, #8]
 800d3fa:	89a3      	ldrh	r3, [r4, #12]
 800d3fc:	071a      	lsls	r2, r3, #28
 800d3fe:	d52f      	bpl.n	800d460 <__swbuf_r+0x84>
 800d400:	6923      	ldr	r3, [r4, #16]
 800d402:	b36b      	cbz	r3, 800d460 <__swbuf_r+0x84>
 800d404:	6923      	ldr	r3, [r4, #16]
 800d406:	6820      	ldr	r0, [r4, #0]
 800d408:	1ac0      	subs	r0, r0, r3
 800d40a:	6963      	ldr	r3, [r4, #20]
 800d40c:	b2f6      	uxtb	r6, r6
 800d40e:	4283      	cmp	r3, r0
 800d410:	4637      	mov	r7, r6
 800d412:	dc04      	bgt.n	800d41e <__swbuf_r+0x42>
 800d414:	4621      	mov	r1, r4
 800d416:	4628      	mov	r0, r5
 800d418:	f000 f93c 	bl	800d694 <_fflush_r>
 800d41c:	bb30      	cbnz	r0, 800d46c <__swbuf_r+0x90>
 800d41e:	68a3      	ldr	r3, [r4, #8]
 800d420:	3b01      	subs	r3, #1
 800d422:	60a3      	str	r3, [r4, #8]
 800d424:	6823      	ldr	r3, [r4, #0]
 800d426:	1c5a      	adds	r2, r3, #1
 800d428:	6022      	str	r2, [r4, #0]
 800d42a:	701e      	strb	r6, [r3, #0]
 800d42c:	6963      	ldr	r3, [r4, #20]
 800d42e:	3001      	adds	r0, #1
 800d430:	4283      	cmp	r3, r0
 800d432:	d004      	beq.n	800d43e <__swbuf_r+0x62>
 800d434:	89a3      	ldrh	r3, [r4, #12]
 800d436:	07db      	lsls	r3, r3, #31
 800d438:	d506      	bpl.n	800d448 <__swbuf_r+0x6c>
 800d43a:	2e0a      	cmp	r6, #10
 800d43c:	d104      	bne.n	800d448 <__swbuf_r+0x6c>
 800d43e:	4621      	mov	r1, r4
 800d440:	4628      	mov	r0, r5
 800d442:	f000 f927 	bl	800d694 <_fflush_r>
 800d446:	b988      	cbnz	r0, 800d46c <__swbuf_r+0x90>
 800d448:	4638      	mov	r0, r7
 800d44a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d44c:	4b0a      	ldr	r3, [pc, #40]	; (800d478 <__swbuf_r+0x9c>)
 800d44e:	429c      	cmp	r4, r3
 800d450:	d101      	bne.n	800d456 <__swbuf_r+0x7a>
 800d452:	68ac      	ldr	r4, [r5, #8]
 800d454:	e7cf      	b.n	800d3f6 <__swbuf_r+0x1a>
 800d456:	4b09      	ldr	r3, [pc, #36]	; (800d47c <__swbuf_r+0xa0>)
 800d458:	429c      	cmp	r4, r3
 800d45a:	bf08      	it	eq
 800d45c:	68ec      	ldreq	r4, [r5, #12]
 800d45e:	e7ca      	b.n	800d3f6 <__swbuf_r+0x1a>
 800d460:	4621      	mov	r1, r4
 800d462:	4628      	mov	r0, r5
 800d464:	f000 f81a 	bl	800d49c <__swsetup_r>
 800d468:	2800      	cmp	r0, #0
 800d46a:	d0cb      	beq.n	800d404 <__swbuf_r+0x28>
 800d46c:	f04f 37ff 	mov.w	r7, #4294967295
 800d470:	e7ea      	b.n	800d448 <__swbuf_r+0x6c>
 800d472:	bf00      	nop
 800d474:	080289fc 	.word	0x080289fc
 800d478:	08028a1c 	.word	0x08028a1c
 800d47c:	080289dc 	.word	0x080289dc

0800d480 <__ascii_wctomb>:
 800d480:	b149      	cbz	r1, 800d496 <__ascii_wctomb+0x16>
 800d482:	2aff      	cmp	r2, #255	; 0xff
 800d484:	bf85      	ittet	hi
 800d486:	238a      	movhi	r3, #138	; 0x8a
 800d488:	6003      	strhi	r3, [r0, #0]
 800d48a:	700a      	strbls	r2, [r1, #0]
 800d48c:	f04f 30ff 	movhi.w	r0, #4294967295
 800d490:	bf98      	it	ls
 800d492:	2001      	movls	r0, #1
 800d494:	4770      	bx	lr
 800d496:	4608      	mov	r0, r1
 800d498:	4770      	bx	lr
	...

0800d49c <__swsetup_r>:
 800d49c:	4b32      	ldr	r3, [pc, #200]	; (800d568 <__swsetup_r+0xcc>)
 800d49e:	b570      	push	{r4, r5, r6, lr}
 800d4a0:	681d      	ldr	r5, [r3, #0]
 800d4a2:	4606      	mov	r6, r0
 800d4a4:	460c      	mov	r4, r1
 800d4a6:	b125      	cbz	r5, 800d4b2 <__swsetup_r+0x16>
 800d4a8:	69ab      	ldr	r3, [r5, #24]
 800d4aa:	b913      	cbnz	r3, 800d4b2 <__swsetup_r+0x16>
 800d4ac:	4628      	mov	r0, r5
 800d4ae:	f000 f985 	bl	800d7bc <__sinit>
 800d4b2:	4b2e      	ldr	r3, [pc, #184]	; (800d56c <__swsetup_r+0xd0>)
 800d4b4:	429c      	cmp	r4, r3
 800d4b6:	d10f      	bne.n	800d4d8 <__swsetup_r+0x3c>
 800d4b8:	686c      	ldr	r4, [r5, #4]
 800d4ba:	89a3      	ldrh	r3, [r4, #12]
 800d4bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800d4c0:	0719      	lsls	r1, r3, #28
 800d4c2:	d42c      	bmi.n	800d51e <__swsetup_r+0x82>
 800d4c4:	06dd      	lsls	r5, r3, #27
 800d4c6:	d411      	bmi.n	800d4ec <__swsetup_r+0x50>
 800d4c8:	2309      	movs	r3, #9
 800d4ca:	6033      	str	r3, [r6, #0]
 800d4cc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800d4d0:	81a3      	strh	r3, [r4, #12]
 800d4d2:	f04f 30ff 	mov.w	r0, #4294967295
 800d4d6:	e03e      	b.n	800d556 <__swsetup_r+0xba>
 800d4d8:	4b25      	ldr	r3, [pc, #148]	; (800d570 <__swsetup_r+0xd4>)
 800d4da:	429c      	cmp	r4, r3
 800d4dc:	d101      	bne.n	800d4e2 <__swsetup_r+0x46>
 800d4de:	68ac      	ldr	r4, [r5, #8]
 800d4e0:	e7eb      	b.n	800d4ba <__swsetup_r+0x1e>
 800d4e2:	4b24      	ldr	r3, [pc, #144]	; (800d574 <__swsetup_r+0xd8>)
 800d4e4:	429c      	cmp	r4, r3
 800d4e6:	bf08      	it	eq
 800d4e8:	68ec      	ldreq	r4, [r5, #12]
 800d4ea:	e7e6      	b.n	800d4ba <__swsetup_r+0x1e>
 800d4ec:	0758      	lsls	r0, r3, #29
 800d4ee:	d512      	bpl.n	800d516 <__swsetup_r+0x7a>
 800d4f0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800d4f2:	b141      	cbz	r1, 800d506 <__swsetup_r+0x6a>
 800d4f4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800d4f8:	4299      	cmp	r1, r3
 800d4fa:	d002      	beq.n	800d502 <__swsetup_r+0x66>
 800d4fc:	4630      	mov	r0, r6
 800d4fe:	f7ff fb31 	bl	800cb64 <_free_r>
 800d502:	2300      	movs	r3, #0
 800d504:	6363      	str	r3, [r4, #52]	; 0x34
 800d506:	89a3      	ldrh	r3, [r4, #12]
 800d508:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800d50c:	81a3      	strh	r3, [r4, #12]
 800d50e:	2300      	movs	r3, #0
 800d510:	6063      	str	r3, [r4, #4]
 800d512:	6923      	ldr	r3, [r4, #16]
 800d514:	6023      	str	r3, [r4, #0]
 800d516:	89a3      	ldrh	r3, [r4, #12]
 800d518:	f043 0308 	orr.w	r3, r3, #8
 800d51c:	81a3      	strh	r3, [r4, #12]
 800d51e:	6923      	ldr	r3, [r4, #16]
 800d520:	b94b      	cbnz	r3, 800d536 <__swsetup_r+0x9a>
 800d522:	89a3      	ldrh	r3, [r4, #12]
 800d524:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800d528:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d52c:	d003      	beq.n	800d536 <__swsetup_r+0x9a>
 800d52e:	4621      	mov	r1, r4
 800d530:	4630      	mov	r0, r6
 800d532:	f000 fa09 	bl	800d948 <__smakebuf_r>
 800d536:	89a0      	ldrh	r0, [r4, #12]
 800d538:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800d53c:	f010 0301 	ands.w	r3, r0, #1
 800d540:	d00a      	beq.n	800d558 <__swsetup_r+0xbc>
 800d542:	2300      	movs	r3, #0
 800d544:	60a3      	str	r3, [r4, #8]
 800d546:	6963      	ldr	r3, [r4, #20]
 800d548:	425b      	negs	r3, r3
 800d54a:	61a3      	str	r3, [r4, #24]
 800d54c:	6923      	ldr	r3, [r4, #16]
 800d54e:	b943      	cbnz	r3, 800d562 <__swsetup_r+0xc6>
 800d550:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800d554:	d1ba      	bne.n	800d4cc <__swsetup_r+0x30>
 800d556:	bd70      	pop	{r4, r5, r6, pc}
 800d558:	0781      	lsls	r1, r0, #30
 800d55a:	bf58      	it	pl
 800d55c:	6963      	ldrpl	r3, [r4, #20]
 800d55e:	60a3      	str	r3, [r4, #8]
 800d560:	e7f4      	b.n	800d54c <__swsetup_r+0xb0>
 800d562:	2000      	movs	r0, #0
 800d564:	e7f7      	b.n	800d556 <__swsetup_r+0xba>
 800d566:	bf00      	nop
 800d568:	200000fc 	.word	0x200000fc
 800d56c:	080289fc 	.word	0x080289fc
 800d570:	08028a1c 	.word	0x08028a1c
 800d574:	080289dc 	.word	0x080289dc

0800d578 <abort>:
 800d578:	b508      	push	{r3, lr}
 800d57a:	2006      	movs	r0, #6
 800d57c:	f000 fa54 	bl	800da28 <raise>
 800d580:	2001      	movs	r0, #1
 800d582:	f002 fb2b 	bl	800fbdc <_exit>
	...

0800d588 <__sflush_r>:
 800d588:	898a      	ldrh	r2, [r1, #12]
 800d58a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d58e:	4605      	mov	r5, r0
 800d590:	0710      	lsls	r0, r2, #28
 800d592:	460c      	mov	r4, r1
 800d594:	d458      	bmi.n	800d648 <__sflush_r+0xc0>
 800d596:	684b      	ldr	r3, [r1, #4]
 800d598:	2b00      	cmp	r3, #0
 800d59a:	dc05      	bgt.n	800d5a8 <__sflush_r+0x20>
 800d59c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800d59e:	2b00      	cmp	r3, #0
 800d5a0:	dc02      	bgt.n	800d5a8 <__sflush_r+0x20>
 800d5a2:	2000      	movs	r0, #0
 800d5a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d5a8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800d5aa:	2e00      	cmp	r6, #0
 800d5ac:	d0f9      	beq.n	800d5a2 <__sflush_r+0x1a>
 800d5ae:	2300      	movs	r3, #0
 800d5b0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800d5b4:	682f      	ldr	r7, [r5, #0]
 800d5b6:	602b      	str	r3, [r5, #0]
 800d5b8:	d032      	beq.n	800d620 <__sflush_r+0x98>
 800d5ba:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800d5bc:	89a3      	ldrh	r3, [r4, #12]
 800d5be:	075a      	lsls	r2, r3, #29
 800d5c0:	d505      	bpl.n	800d5ce <__sflush_r+0x46>
 800d5c2:	6863      	ldr	r3, [r4, #4]
 800d5c4:	1ac0      	subs	r0, r0, r3
 800d5c6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d5c8:	b10b      	cbz	r3, 800d5ce <__sflush_r+0x46>
 800d5ca:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d5cc:	1ac0      	subs	r0, r0, r3
 800d5ce:	2300      	movs	r3, #0
 800d5d0:	4602      	mov	r2, r0
 800d5d2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800d5d4:	6a21      	ldr	r1, [r4, #32]
 800d5d6:	4628      	mov	r0, r5
 800d5d8:	47b0      	blx	r6
 800d5da:	1c43      	adds	r3, r0, #1
 800d5dc:	89a3      	ldrh	r3, [r4, #12]
 800d5de:	d106      	bne.n	800d5ee <__sflush_r+0x66>
 800d5e0:	6829      	ldr	r1, [r5, #0]
 800d5e2:	291d      	cmp	r1, #29
 800d5e4:	d82c      	bhi.n	800d640 <__sflush_r+0xb8>
 800d5e6:	4a2a      	ldr	r2, [pc, #168]	; (800d690 <__sflush_r+0x108>)
 800d5e8:	40ca      	lsrs	r2, r1
 800d5ea:	07d6      	lsls	r6, r2, #31
 800d5ec:	d528      	bpl.n	800d640 <__sflush_r+0xb8>
 800d5ee:	2200      	movs	r2, #0
 800d5f0:	6062      	str	r2, [r4, #4]
 800d5f2:	04d9      	lsls	r1, r3, #19
 800d5f4:	6922      	ldr	r2, [r4, #16]
 800d5f6:	6022      	str	r2, [r4, #0]
 800d5f8:	d504      	bpl.n	800d604 <__sflush_r+0x7c>
 800d5fa:	1c42      	adds	r2, r0, #1
 800d5fc:	d101      	bne.n	800d602 <__sflush_r+0x7a>
 800d5fe:	682b      	ldr	r3, [r5, #0]
 800d600:	b903      	cbnz	r3, 800d604 <__sflush_r+0x7c>
 800d602:	6560      	str	r0, [r4, #84]	; 0x54
 800d604:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800d606:	602f      	str	r7, [r5, #0]
 800d608:	2900      	cmp	r1, #0
 800d60a:	d0ca      	beq.n	800d5a2 <__sflush_r+0x1a>
 800d60c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800d610:	4299      	cmp	r1, r3
 800d612:	d002      	beq.n	800d61a <__sflush_r+0x92>
 800d614:	4628      	mov	r0, r5
 800d616:	f7ff faa5 	bl	800cb64 <_free_r>
 800d61a:	2000      	movs	r0, #0
 800d61c:	6360      	str	r0, [r4, #52]	; 0x34
 800d61e:	e7c1      	b.n	800d5a4 <__sflush_r+0x1c>
 800d620:	6a21      	ldr	r1, [r4, #32]
 800d622:	2301      	movs	r3, #1
 800d624:	4628      	mov	r0, r5
 800d626:	47b0      	blx	r6
 800d628:	1c41      	adds	r1, r0, #1
 800d62a:	d1c7      	bne.n	800d5bc <__sflush_r+0x34>
 800d62c:	682b      	ldr	r3, [r5, #0]
 800d62e:	2b00      	cmp	r3, #0
 800d630:	d0c4      	beq.n	800d5bc <__sflush_r+0x34>
 800d632:	2b1d      	cmp	r3, #29
 800d634:	d001      	beq.n	800d63a <__sflush_r+0xb2>
 800d636:	2b16      	cmp	r3, #22
 800d638:	d101      	bne.n	800d63e <__sflush_r+0xb6>
 800d63a:	602f      	str	r7, [r5, #0]
 800d63c:	e7b1      	b.n	800d5a2 <__sflush_r+0x1a>
 800d63e:	89a3      	ldrh	r3, [r4, #12]
 800d640:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d644:	81a3      	strh	r3, [r4, #12]
 800d646:	e7ad      	b.n	800d5a4 <__sflush_r+0x1c>
 800d648:	690f      	ldr	r7, [r1, #16]
 800d64a:	2f00      	cmp	r7, #0
 800d64c:	d0a9      	beq.n	800d5a2 <__sflush_r+0x1a>
 800d64e:	0793      	lsls	r3, r2, #30
 800d650:	680e      	ldr	r6, [r1, #0]
 800d652:	bf08      	it	eq
 800d654:	694b      	ldreq	r3, [r1, #20]
 800d656:	600f      	str	r7, [r1, #0]
 800d658:	bf18      	it	ne
 800d65a:	2300      	movne	r3, #0
 800d65c:	eba6 0807 	sub.w	r8, r6, r7
 800d660:	608b      	str	r3, [r1, #8]
 800d662:	f1b8 0f00 	cmp.w	r8, #0
 800d666:	dd9c      	ble.n	800d5a2 <__sflush_r+0x1a>
 800d668:	6a21      	ldr	r1, [r4, #32]
 800d66a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800d66c:	4643      	mov	r3, r8
 800d66e:	463a      	mov	r2, r7
 800d670:	4628      	mov	r0, r5
 800d672:	47b0      	blx	r6
 800d674:	2800      	cmp	r0, #0
 800d676:	dc06      	bgt.n	800d686 <__sflush_r+0xfe>
 800d678:	89a3      	ldrh	r3, [r4, #12]
 800d67a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d67e:	81a3      	strh	r3, [r4, #12]
 800d680:	f04f 30ff 	mov.w	r0, #4294967295
 800d684:	e78e      	b.n	800d5a4 <__sflush_r+0x1c>
 800d686:	4407      	add	r7, r0
 800d688:	eba8 0800 	sub.w	r8, r8, r0
 800d68c:	e7e9      	b.n	800d662 <__sflush_r+0xda>
 800d68e:	bf00      	nop
 800d690:	20400001 	.word	0x20400001

0800d694 <_fflush_r>:
 800d694:	b538      	push	{r3, r4, r5, lr}
 800d696:	690b      	ldr	r3, [r1, #16]
 800d698:	4605      	mov	r5, r0
 800d69a:	460c      	mov	r4, r1
 800d69c:	b913      	cbnz	r3, 800d6a4 <_fflush_r+0x10>
 800d69e:	2500      	movs	r5, #0
 800d6a0:	4628      	mov	r0, r5
 800d6a2:	bd38      	pop	{r3, r4, r5, pc}
 800d6a4:	b118      	cbz	r0, 800d6ae <_fflush_r+0x1a>
 800d6a6:	6983      	ldr	r3, [r0, #24]
 800d6a8:	b90b      	cbnz	r3, 800d6ae <_fflush_r+0x1a>
 800d6aa:	f000 f887 	bl	800d7bc <__sinit>
 800d6ae:	4b14      	ldr	r3, [pc, #80]	; (800d700 <_fflush_r+0x6c>)
 800d6b0:	429c      	cmp	r4, r3
 800d6b2:	d11b      	bne.n	800d6ec <_fflush_r+0x58>
 800d6b4:	686c      	ldr	r4, [r5, #4]
 800d6b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d6ba:	2b00      	cmp	r3, #0
 800d6bc:	d0ef      	beq.n	800d69e <_fflush_r+0xa>
 800d6be:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800d6c0:	07d0      	lsls	r0, r2, #31
 800d6c2:	d404      	bmi.n	800d6ce <_fflush_r+0x3a>
 800d6c4:	0599      	lsls	r1, r3, #22
 800d6c6:	d402      	bmi.n	800d6ce <_fflush_r+0x3a>
 800d6c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d6ca:	f000 f915 	bl	800d8f8 <__retarget_lock_acquire_recursive>
 800d6ce:	4628      	mov	r0, r5
 800d6d0:	4621      	mov	r1, r4
 800d6d2:	f7ff ff59 	bl	800d588 <__sflush_r>
 800d6d6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d6d8:	07da      	lsls	r2, r3, #31
 800d6da:	4605      	mov	r5, r0
 800d6dc:	d4e0      	bmi.n	800d6a0 <_fflush_r+0xc>
 800d6de:	89a3      	ldrh	r3, [r4, #12]
 800d6e0:	059b      	lsls	r3, r3, #22
 800d6e2:	d4dd      	bmi.n	800d6a0 <_fflush_r+0xc>
 800d6e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d6e6:	f000 f908 	bl	800d8fa <__retarget_lock_release_recursive>
 800d6ea:	e7d9      	b.n	800d6a0 <_fflush_r+0xc>
 800d6ec:	4b05      	ldr	r3, [pc, #20]	; (800d704 <_fflush_r+0x70>)
 800d6ee:	429c      	cmp	r4, r3
 800d6f0:	d101      	bne.n	800d6f6 <_fflush_r+0x62>
 800d6f2:	68ac      	ldr	r4, [r5, #8]
 800d6f4:	e7df      	b.n	800d6b6 <_fflush_r+0x22>
 800d6f6:	4b04      	ldr	r3, [pc, #16]	; (800d708 <_fflush_r+0x74>)
 800d6f8:	429c      	cmp	r4, r3
 800d6fa:	bf08      	it	eq
 800d6fc:	68ec      	ldreq	r4, [r5, #12]
 800d6fe:	e7da      	b.n	800d6b6 <_fflush_r+0x22>
 800d700:	080289fc 	.word	0x080289fc
 800d704:	08028a1c 	.word	0x08028a1c
 800d708:	080289dc 	.word	0x080289dc

0800d70c <std>:
 800d70c:	2300      	movs	r3, #0
 800d70e:	b510      	push	{r4, lr}
 800d710:	4604      	mov	r4, r0
 800d712:	e9c0 3300 	strd	r3, r3, [r0]
 800d716:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d71a:	6083      	str	r3, [r0, #8]
 800d71c:	8181      	strh	r1, [r0, #12]
 800d71e:	6643      	str	r3, [r0, #100]	; 0x64
 800d720:	81c2      	strh	r2, [r0, #14]
 800d722:	6183      	str	r3, [r0, #24]
 800d724:	4619      	mov	r1, r3
 800d726:	2208      	movs	r2, #8
 800d728:	305c      	adds	r0, #92	; 0x5c
 800d72a:	f7fd fb45 	bl	800adb8 <memset>
 800d72e:	4b05      	ldr	r3, [pc, #20]	; (800d744 <std+0x38>)
 800d730:	6263      	str	r3, [r4, #36]	; 0x24
 800d732:	4b05      	ldr	r3, [pc, #20]	; (800d748 <std+0x3c>)
 800d734:	62a3      	str	r3, [r4, #40]	; 0x28
 800d736:	4b05      	ldr	r3, [pc, #20]	; (800d74c <std+0x40>)
 800d738:	62e3      	str	r3, [r4, #44]	; 0x2c
 800d73a:	4b05      	ldr	r3, [pc, #20]	; (800d750 <std+0x44>)
 800d73c:	6224      	str	r4, [r4, #32]
 800d73e:	6323      	str	r3, [r4, #48]	; 0x30
 800d740:	bd10      	pop	{r4, pc}
 800d742:	bf00      	nop
 800d744:	0800da61 	.word	0x0800da61
 800d748:	0800da83 	.word	0x0800da83
 800d74c:	0800dabb 	.word	0x0800dabb
 800d750:	0800dadf 	.word	0x0800dadf

0800d754 <_cleanup_r>:
 800d754:	4901      	ldr	r1, [pc, #4]	; (800d75c <_cleanup_r+0x8>)
 800d756:	f000 b8af 	b.w	800d8b8 <_fwalk_reent>
 800d75a:	bf00      	nop
 800d75c:	0800d695 	.word	0x0800d695

0800d760 <__sfmoreglue>:
 800d760:	b570      	push	{r4, r5, r6, lr}
 800d762:	2268      	movs	r2, #104	; 0x68
 800d764:	1e4d      	subs	r5, r1, #1
 800d766:	4355      	muls	r5, r2
 800d768:	460e      	mov	r6, r1
 800d76a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800d76e:	f7ff fa65 	bl	800cc3c <_malloc_r>
 800d772:	4604      	mov	r4, r0
 800d774:	b140      	cbz	r0, 800d788 <__sfmoreglue+0x28>
 800d776:	2100      	movs	r1, #0
 800d778:	e9c0 1600 	strd	r1, r6, [r0]
 800d77c:	300c      	adds	r0, #12
 800d77e:	60a0      	str	r0, [r4, #8]
 800d780:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800d784:	f7fd fb18 	bl	800adb8 <memset>
 800d788:	4620      	mov	r0, r4
 800d78a:	bd70      	pop	{r4, r5, r6, pc}

0800d78c <__sfp_lock_acquire>:
 800d78c:	4801      	ldr	r0, [pc, #4]	; (800d794 <__sfp_lock_acquire+0x8>)
 800d78e:	f000 b8b3 	b.w	800d8f8 <__retarget_lock_acquire_recursive>
 800d792:	bf00      	nop
 800d794:	2000124d 	.word	0x2000124d

0800d798 <__sfp_lock_release>:
 800d798:	4801      	ldr	r0, [pc, #4]	; (800d7a0 <__sfp_lock_release+0x8>)
 800d79a:	f000 b8ae 	b.w	800d8fa <__retarget_lock_release_recursive>
 800d79e:	bf00      	nop
 800d7a0:	2000124d 	.word	0x2000124d

0800d7a4 <__sinit_lock_acquire>:
 800d7a4:	4801      	ldr	r0, [pc, #4]	; (800d7ac <__sinit_lock_acquire+0x8>)
 800d7a6:	f000 b8a7 	b.w	800d8f8 <__retarget_lock_acquire_recursive>
 800d7aa:	bf00      	nop
 800d7ac:	2000124e 	.word	0x2000124e

0800d7b0 <__sinit_lock_release>:
 800d7b0:	4801      	ldr	r0, [pc, #4]	; (800d7b8 <__sinit_lock_release+0x8>)
 800d7b2:	f000 b8a2 	b.w	800d8fa <__retarget_lock_release_recursive>
 800d7b6:	bf00      	nop
 800d7b8:	2000124e 	.word	0x2000124e

0800d7bc <__sinit>:
 800d7bc:	b510      	push	{r4, lr}
 800d7be:	4604      	mov	r4, r0
 800d7c0:	f7ff fff0 	bl	800d7a4 <__sinit_lock_acquire>
 800d7c4:	69a3      	ldr	r3, [r4, #24]
 800d7c6:	b11b      	cbz	r3, 800d7d0 <__sinit+0x14>
 800d7c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d7cc:	f7ff bff0 	b.w	800d7b0 <__sinit_lock_release>
 800d7d0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800d7d4:	6523      	str	r3, [r4, #80]	; 0x50
 800d7d6:	4b13      	ldr	r3, [pc, #76]	; (800d824 <__sinit+0x68>)
 800d7d8:	4a13      	ldr	r2, [pc, #76]	; (800d828 <__sinit+0x6c>)
 800d7da:	681b      	ldr	r3, [r3, #0]
 800d7dc:	62a2      	str	r2, [r4, #40]	; 0x28
 800d7de:	42a3      	cmp	r3, r4
 800d7e0:	bf04      	itt	eq
 800d7e2:	2301      	moveq	r3, #1
 800d7e4:	61a3      	streq	r3, [r4, #24]
 800d7e6:	4620      	mov	r0, r4
 800d7e8:	f000 f820 	bl	800d82c <__sfp>
 800d7ec:	6060      	str	r0, [r4, #4]
 800d7ee:	4620      	mov	r0, r4
 800d7f0:	f000 f81c 	bl	800d82c <__sfp>
 800d7f4:	60a0      	str	r0, [r4, #8]
 800d7f6:	4620      	mov	r0, r4
 800d7f8:	f000 f818 	bl	800d82c <__sfp>
 800d7fc:	2200      	movs	r2, #0
 800d7fe:	60e0      	str	r0, [r4, #12]
 800d800:	2104      	movs	r1, #4
 800d802:	6860      	ldr	r0, [r4, #4]
 800d804:	f7ff ff82 	bl	800d70c <std>
 800d808:	68a0      	ldr	r0, [r4, #8]
 800d80a:	2201      	movs	r2, #1
 800d80c:	2109      	movs	r1, #9
 800d80e:	f7ff ff7d 	bl	800d70c <std>
 800d812:	68e0      	ldr	r0, [r4, #12]
 800d814:	2202      	movs	r2, #2
 800d816:	2112      	movs	r1, #18
 800d818:	f7ff ff78 	bl	800d70c <std>
 800d81c:	2301      	movs	r3, #1
 800d81e:	61a3      	str	r3, [r4, #24]
 800d820:	e7d2      	b.n	800d7c8 <__sinit+0xc>
 800d822:	bf00      	nop
 800d824:	08028664 	.word	0x08028664
 800d828:	0800d755 	.word	0x0800d755

0800d82c <__sfp>:
 800d82c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d82e:	4607      	mov	r7, r0
 800d830:	f7ff ffac 	bl	800d78c <__sfp_lock_acquire>
 800d834:	4b1e      	ldr	r3, [pc, #120]	; (800d8b0 <__sfp+0x84>)
 800d836:	681e      	ldr	r6, [r3, #0]
 800d838:	69b3      	ldr	r3, [r6, #24]
 800d83a:	b913      	cbnz	r3, 800d842 <__sfp+0x16>
 800d83c:	4630      	mov	r0, r6
 800d83e:	f7ff ffbd 	bl	800d7bc <__sinit>
 800d842:	3648      	adds	r6, #72	; 0x48
 800d844:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800d848:	3b01      	subs	r3, #1
 800d84a:	d503      	bpl.n	800d854 <__sfp+0x28>
 800d84c:	6833      	ldr	r3, [r6, #0]
 800d84e:	b30b      	cbz	r3, 800d894 <__sfp+0x68>
 800d850:	6836      	ldr	r6, [r6, #0]
 800d852:	e7f7      	b.n	800d844 <__sfp+0x18>
 800d854:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800d858:	b9d5      	cbnz	r5, 800d890 <__sfp+0x64>
 800d85a:	4b16      	ldr	r3, [pc, #88]	; (800d8b4 <__sfp+0x88>)
 800d85c:	60e3      	str	r3, [r4, #12]
 800d85e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800d862:	6665      	str	r5, [r4, #100]	; 0x64
 800d864:	f000 f847 	bl	800d8f6 <__retarget_lock_init_recursive>
 800d868:	f7ff ff96 	bl	800d798 <__sfp_lock_release>
 800d86c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800d870:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800d874:	6025      	str	r5, [r4, #0]
 800d876:	61a5      	str	r5, [r4, #24]
 800d878:	2208      	movs	r2, #8
 800d87a:	4629      	mov	r1, r5
 800d87c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800d880:	f7fd fa9a 	bl	800adb8 <memset>
 800d884:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800d888:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800d88c:	4620      	mov	r0, r4
 800d88e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d890:	3468      	adds	r4, #104	; 0x68
 800d892:	e7d9      	b.n	800d848 <__sfp+0x1c>
 800d894:	2104      	movs	r1, #4
 800d896:	4638      	mov	r0, r7
 800d898:	f7ff ff62 	bl	800d760 <__sfmoreglue>
 800d89c:	4604      	mov	r4, r0
 800d89e:	6030      	str	r0, [r6, #0]
 800d8a0:	2800      	cmp	r0, #0
 800d8a2:	d1d5      	bne.n	800d850 <__sfp+0x24>
 800d8a4:	f7ff ff78 	bl	800d798 <__sfp_lock_release>
 800d8a8:	230c      	movs	r3, #12
 800d8aa:	603b      	str	r3, [r7, #0]
 800d8ac:	e7ee      	b.n	800d88c <__sfp+0x60>
 800d8ae:	bf00      	nop
 800d8b0:	08028664 	.word	0x08028664
 800d8b4:	ffff0001 	.word	0xffff0001

0800d8b8 <_fwalk_reent>:
 800d8b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d8bc:	4606      	mov	r6, r0
 800d8be:	4688      	mov	r8, r1
 800d8c0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800d8c4:	2700      	movs	r7, #0
 800d8c6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800d8ca:	f1b9 0901 	subs.w	r9, r9, #1
 800d8ce:	d505      	bpl.n	800d8dc <_fwalk_reent+0x24>
 800d8d0:	6824      	ldr	r4, [r4, #0]
 800d8d2:	2c00      	cmp	r4, #0
 800d8d4:	d1f7      	bne.n	800d8c6 <_fwalk_reent+0xe>
 800d8d6:	4638      	mov	r0, r7
 800d8d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d8dc:	89ab      	ldrh	r3, [r5, #12]
 800d8de:	2b01      	cmp	r3, #1
 800d8e0:	d907      	bls.n	800d8f2 <_fwalk_reent+0x3a>
 800d8e2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800d8e6:	3301      	adds	r3, #1
 800d8e8:	d003      	beq.n	800d8f2 <_fwalk_reent+0x3a>
 800d8ea:	4629      	mov	r1, r5
 800d8ec:	4630      	mov	r0, r6
 800d8ee:	47c0      	blx	r8
 800d8f0:	4307      	orrs	r7, r0
 800d8f2:	3568      	adds	r5, #104	; 0x68
 800d8f4:	e7e9      	b.n	800d8ca <_fwalk_reent+0x12>

0800d8f6 <__retarget_lock_init_recursive>:
 800d8f6:	4770      	bx	lr

0800d8f8 <__retarget_lock_acquire_recursive>:
 800d8f8:	4770      	bx	lr

0800d8fa <__retarget_lock_release_recursive>:
 800d8fa:	4770      	bx	lr

0800d8fc <__swhatbuf_r>:
 800d8fc:	b570      	push	{r4, r5, r6, lr}
 800d8fe:	460e      	mov	r6, r1
 800d900:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d904:	2900      	cmp	r1, #0
 800d906:	b096      	sub	sp, #88	; 0x58
 800d908:	4614      	mov	r4, r2
 800d90a:	461d      	mov	r5, r3
 800d90c:	da08      	bge.n	800d920 <__swhatbuf_r+0x24>
 800d90e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800d912:	2200      	movs	r2, #0
 800d914:	602a      	str	r2, [r5, #0]
 800d916:	061a      	lsls	r2, r3, #24
 800d918:	d410      	bmi.n	800d93c <__swhatbuf_r+0x40>
 800d91a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800d91e:	e00e      	b.n	800d93e <__swhatbuf_r+0x42>
 800d920:	466a      	mov	r2, sp
 800d922:	f000 f903 	bl	800db2c <_fstat_r>
 800d926:	2800      	cmp	r0, #0
 800d928:	dbf1      	blt.n	800d90e <__swhatbuf_r+0x12>
 800d92a:	9a01      	ldr	r2, [sp, #4]
 800d92c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800d930:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800d934:	425a      	negs	r2, r3
 800d936:	415a      	adcs	r2, r3
 800d938:	602a      	str	r2, [r5, #0]
 800d93a:	e7ee      	b.n	800d91a <__swhatbuf_r+0x1e>
 800d93c:	2340      	movs	r3, #64	; 0x40
 800d93e:	2000      	movs	r0, #0
 800d940:	6023      	str	r3, [r4, #0]
 800d942:	b016      	add	sp, #88	; 0x58
 800d944:	bd70      	pop	{r4, r5, r6, pc}
	...

0800d948 <__smakebuf_r>:
 800d948:	898b      	ldrh	r3, [r1, #12]
 800d94a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d94c:	079d      	lsls	r5, r3, #30
 800d94e:	4606      	mov	r6, r0
 800d950:	460c      	mov	r4, r1
 800d952:	d507      	bpl.n	800d964 <__smakebuf_r+0x1c>
 800d954:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800d958:	6023      	str	r3, [r4, #0]
 800d95a:	6123      	str	r3, [r4, #16]
 800d95c:	2301      	movs	r3, #1
 800d95e:	6163      	str	r3, [r4, #20]
 800d960:	b002      	add	sp, #8
 800d962:	bd70      	pop	{r4, r5, r6, pc}
 800d964:	ab01      	add	r3, sp, #4
 800d966:	466a      	mov	r2, sp
 800d968:	f7ff ffc8 	bl	800d8fc <__swhatbuf_r>
 800d96c:	9900      	ldr	r1, [sp, #0]
 800d96e:	4605      	mov	r5, r0
 800d970:	4630      	mov	r0, r6
 800d972:	f7ff f963 	bl	800cc3c <_malloc_r>
 800d976:	b948      	cbnz	r0, 800d98c <__smakebuf_r+0x44>
 800d978:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d97c:	059a      	lsls	r2, r3, #22
 800d97e:	d4ef      	bmi.n	800d960 <__smakebuf_r+0x18>
 800d980:	f023 0303 	bic.w	r3, r3, #3
 800d984:	f043 0302 	orr.w	r3, r3, #2
 800d988:	81a3      	strh	r3, [r4, #12]
 800d98a:	e7e3      	b.n	800d954 <__smakebuf_r+0xc>
 800d98c:	4b0d      	ldr	r3, [pc, #52]	; (800d9c4 <__smakebuf_r+0x7c>)
 800d98e:	62b3      	str	r3, [r6, #40]	; 0x28
 800d990:	89a3      	ldrh	r3, [r4, #12]
 800d992:	6020      	str	r0, [r4, #0]
 800d994:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800d998:	81a3      	strh	r3, [r4, #12]
 800d99a:	9b00      	ldr	r3, [sp, #0]
 800d99c:	6163      	str	r3, [r4, #20]
 800d99e:	9b01      	ldr	r3, [sp, #4]
 800d9a0:	6120      	str	r0, [r4, #16]
 800d9a2:	b15b      	cbz	r3, 800d9bc <__smakebuf_r+0x74>
 800d9a4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800d9a8:	4630      	mov	r0, r6
 800d9aa:	f000 f8d1 	bl	800db50 <_isatty_r>
 800d9ae:	b128      	cbz	r0, 800d9bc <__smakebuf_r+0x74>
 800d9b0:	89a3      	ldrh	r3, [r4, #12]
 800d9b2:	f023 0303 	bic.w	r3, r3, #3
 800d9b6:	f043 0301 	orr.w	r3, r3, #1
 800d9ba:	81a3      	strh	r3, [r4, #12]
 800d9bc:	89a0      	ldrh	r0, [r4, #12]
 800d9be:	4305      	orrs	r5, r0
 800d9c0:	81a5      	strh	r5, [r4, #12]
 800d9c2:	e7cd      	b.n	800d960 <__smakebuf_r+0x18>
 800d9c4:	0800d755 	.word	0x0800d755

0800d9c8 <_malloc_usable_size_r>:
 800d9c8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800d9cc:	1f18      	subs	r0, r3, #4
 800d9ce:	2b00      	cmp	r3, #0
 800d9d0:	bfbc      	itt	lt
 800d9d2:	580b      	ldrlt	r3, [r1, r0]
 800d9d4:	18c0      	addlt	r0, r0, r3
 800d9d6:	4770      	bx	lr

0800d9d8 <_raise_r>:
 800d9d8:	291f      	cmp	r1, #31
 800d9da:	b538      	push	{r3, r4, r5, lr}
 800d9dc:	4604      	mov	r4, r0
 800d9de:	460d      	mov	r5, r1
 800d9e0:	d904      	bls.n	800d9ec <_raise_r+0x14>
 800d9e2:	2316      	movs	r3, #22
 800d9e4:	6003      	str	r3, [r0, #0]
 800d9e6:	f04f 30ff 	mov.w	r0, #4294967295
 800d9ea:	bd38      	pop	{r3, r4, r5, pc}
 800d9ec:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800d9ee:	b112      	cbz	r2, 800d9f6 <_raise_r+0x1e>
 800d9f0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800d9f4:	b94b      	cbnz	r3, 800da0a <_raise_r+0x32>
 800d9f6:	4620      	mov	r0, r4
 800d9f8:	f000 f830 	bl	800da5c <_getpid_r>
 800d9fc:	462a      	mov	r2, r5
 800d9fe:	4601      	mov	r1, r0
 800da00:	4620      	mov	r0, r4
 800da02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800da06:	f000 b817 	b.w	800da38 <_kill_r>
 800da0a:	2b01      	cmp	r3, #1
 800da0c:	d00a      	beq.n	800da24 <_raise_r+0x4c>
 800da0e:	1c59      	adds	r1, r3, #1
 800da10:	d103      	bne.n	800da1a <_raise_r+0x42>
 800da12:	2316      	movs	r3, #22
 800da14:	6003      	str	r3, [r0, #0]
 800da16:	2001      	movs	r0, #1
 800da18:	e7e7      	b.n	800d9ea <_raise_r+0x12>
 800da1a:	2400      	movs	r4, #0
 800da1c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800da20:	4628      	mov	r0, r5
 800da22:	4798      	blx	r3
 800da24:	2000      	movs	r0, #0
 800da26:	e7e0      	b.n	800d9ea <_raise_r+0x12>

0800da28 <raise>:
 800da28:	4b02      	ldr	r3, [pc, #8]	; (800da34 <raise+0xc>)
 800da2a:	4601      	mov	r1, r0
 800da2c:	6818      	ldr	r0, [r3, #0]
 800da2e:	f7ff bfd3 	b.w	800d9d8 <_raise_r>
 800da32:	bf00      	nop
 800da34:	200000fc 	.word	0x200000fc

0800da38 <_kill_r>:
 800da38:	b538      	push	{r3, r4, r5, lr}
 800da3a:	4d07      	ldr	r5, [pc, #28]	; (800da58 <_kill_r+0x20>)
 800da3c:	2300      	movs	r3, #0
 800da3e:	4604      	mov	r4, r0
 800da40:	4608      	mov	r0, r1
 800da42:	4611      	mov	r1, r2
 800da44:	602b      	str	r3, [r5, #0]
 800da46:	f002 f89b 	bl	800fb80 <_kill>
 800da4a:	1c43      	adds	r3, r0, #1
 800da4c:	d102      	bne.n	800da54 <_kill_r+0x1c>
 800da4e:	682b      	ldr	r3, [r5, #0]
 800da50:	b103      	cbz	r3, 800da54 <_kill_r+0x1c>
 800da52:	6023      	str	r3, [r4, #0]
 800da54:	bd38      	pop	{r3, r4, r5, pc}
 800da56:	bf00      	nop
 800da58:	20001248 	.word	0x20001248

0800da5c <_getpid_r>:
 800da5c:	f002 b880 	b.w	800fb60 <_getpid>

0800da60 <__sread>:
 800da60:	b510      	push	{r4, lr}
 800da62:	460c      	mov	r4, r1
 800da64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800da68:	f000 f894 	bl	800db94 <_read_r>
 800da6c:	2800      	cmp	r0, #0
 800da6e:	bfab      	itete	ge
 800da70:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800da72:	89a3      	ldrhlt	r3, [r4, #12]
 800da74:	181b      	addge	r3, r3, r0
 800da76:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800da7a:	bfac      	ite	ge
 800da7c:	6563      	strge	r3, [r4, #84]	; 0x54
 800da7e:	81a3      	strhlt	r3, [r4, #12]
 800da80:	bd10      	pop	{r4, pc}

0800da82 <__swrite>:
 800da82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da86:	461f      	mov	r7, r3
 800da88:	898b      	ldrh	r3, [r1, #12]
 800da8a:	05db      	lsls	r3, r3, #23
 800da8c:	4605      	mov	r5, r0
 800da8e:	460c      	mov	r4, r1
 800da90:	4616      	mov	r6, r2
 800da92:	d505      	bpl.n	800daa0 <__swrite+0x1e>
 800da94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800da98:	2302      	movs	r3, #2
 800da9a:	2200      	movs	r2, #0
 800da9c:	f000 f868 	bl	800db70 <_lseek_r>
 800daa0:	89a3      	ldrh	r3, [r4, #12]
 800daa2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800daa6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800daaa:	81a3      	strh	r3, [r4, #12]
 800daac:	4632      	mov	r2, r6
 800daae:	463b      	mov	r3, r7
 800dab0:	4628      	mov	r0, r5
 800dab2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dab6:	f000 b817 	b.w	800dae8 <_write_r>

0800daba <__sseek>:
 800daba:	b510      	push	{r4, lr}
 800dabc:	460c      	mov	r4, r1
 800dabe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800dac2:	f000 f855 	bl	800db70 <_lseek_r>
 800dac6:	1c43      	adds	r3, r0, #1
 800dac8:	89a3      	ldrh	r3, [r4, #12]
 800daca:	bf15      	itete	ne
 800dacc:	6560      	strne	r0, [r4, #84]	; 0x54
 800dace:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800dad2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800dad6:	81a3      	strheq	r3, [r4, #12]
 800dad8:	bf18      	it	ne
 800dada:	81a3      	strhne	r3, [r4, #12]
 800dadc:	bd10      	pop	{r4, pc}

0800dade <__sclose>:
 800dade:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800dae2:	f000 b813 	b.w	800db0c <_close_r>
	...

0800dae8 <_write_r>:
 800dae8:	b538      	push	{r3, r4, r5, lr}
 800daea:	4d07      	ldr	r5, [pc, #28]	; (800db08 <_write_r+0x20>)
 800daec:	4604      	mov	r4, r0
 800daee:	4608      	mov	r0, r1
 800daf0:	4611      	mov	r1, r2
 800daf2:	2200      	movs	r2, #0
 800daf4:	602a      	str	r2, [r5, #0]
 800daf6:	461a      	mov	r2, r3
 800daf8:	f002 f868 	bl	800fbcc <_write>
 800dafc:	1c43      	adds	r3, r0, #1
 800dafe:	d102      	bne.n	800db06 <_write_r+0x1e>
 800db00:	682b      	ldr	r3, [r5, #0]
 800db02:	b103      	cbz	r3, 800db06 <_write_r+0x1e>
 800db04:	6023      	str	r3, [r4, #0]
 800db06:	bd38      	pop	{r3, r4, r5, pc}
 800db08:	20001248 	.word	0x20001248

0800db0c <_close_r>:
 800db0c:	b538      	push	{r3, r4, r5, lr}
 800db0e:	4d06      	ldr	r5, [pc, #24]	; (800db28 <_close_r+0x1c>)
 800db10:	2300      	movs	r3, #0
 800db12:	4604      	mov	r4, r0
 800db14:	4608      	mov	r0, r1
 800db16:	602b      	str	r3, [r5, #0]
 800db18:	f002 f812 	bl	800fb40 <_close>
 800db1c:	1c43      	adds	r3, r0, #1
 800db1e:	d102      	bne.n	800db26 <_close_r+0x1a>
 800db20:	682b      	ldr	r3, [r5, #0]
 800db22:	b103      	cbz	r3, 800db26 <_close_r+0x1a>
 800db24:	6023      	str	r3, [r4, #0]
 800db26:	bd38      	pop	{r3, r4, r5, pc}
 800db28:	20001248 	.word	0x20001248

0800db2c <_fstat_r>:
 800db2c:	b538      	push	{r3, r4, r5, lr}
 800db2e:	4d07      	ldr	r5, [pc, #28]	; (800db4c <_fstat_r+0x20>)
 800db30:	2300      	movs	r3, #0
 800db32:	4604      	mov	r4, r0
 800db34:	4608      	mov	r0, r1
 800db36:	4611      	mov	r1, r2
 800db38:	602b      	str	r3, [r5, #0]
 800db3a:	f002 f809 	bl	800fb50 <_fstat>
 800db3e:	1c43      	adds	r3, r0, #1
 800db40:	d102      	bne.n	800db48 <_fstat_r+0x1c>
 800db42:	682b      	ldr	r3, [r5, #0]
 800db44:	b103      	cbz	r3, 800db48 <_fstat_r+0x1c>
 800db46:	6023      	str	r3, [r4, #0]
 800db48:	bd38      	pop	{r3, r4, r5, pc}
 800db4a:	bf00      	nop
 800db4c:	20001248 	.word	0x20001248

0800db50 <_isatty_r>:
 800db50:	b538      	push	{r3, r4, r5, lr}
 800db52:	4d06      	ldr	r5, [pc, #24]	; (800db6c <_isatty_r+0x1c>)
 800db54:	2300      	movs	r3, #0
 800db56:	4604      	mov	r4, r0
 800db58:	4608      	mov	r0, r1
 800db5a:	602b      	str	r3, [r5, #0]
 800db5c:	f002 f808 	bl	800fb70 <_isatty>
 800db60:	1c43      	adds	r3, r0, #1
 800db62:	d102      	bne.n	800db6a <_isatty_r+0x1a>
 800db64:	682b      	ldr	r3, [r5, #0]
 800db66:	b103      	cbz	r3, 800db6a <_isatty_r+0x1a>
 800db68:	6023      	str	r3, [r4, #0]
 800db6a:	bd38      	pop	{r3, r4, r5, pc}
 800db6c:	20001248 	.word	0x20001248

0800db70 <_lseek_r>:
 800db70:	b538      	push	{r3, r4, r5, lr}
 800db72:	4d07      	ldr	r5, [pc, #28]	; (800db90 <_lseek_r+0x20>)
 800db74:	4604      	mov	r4, r0
 800db76:	4608      	mov	r0, r1
 800db78:	4611      	mov	r1, r2
 800db7a:	2200      	movs	r2, #0
 800db7c:	602a      	str	r2, [r5, #0]
 800db7e:	461a      	mov	r2, r3
 800db80:	f002 f806 	bl	800fb90 <_lseek>
 800db84:	1c43      	adds	r3, r0, #1
 800db86:	d102      	bne.n	800db8e <_lseek_r+0x1e>
 800db88:	682b      	ldr	r3, [r5, #0]
 800db8a:	b103      	cbz	r3, 800db8e <_lseek_r+0x1e>
 800db8c:	6023      	str	r3, [r4, #0]
 800db8e:	bd38      	pop	{r3, r4, r5, pc}
 800db90:	20001248 	.word	0x20001248

0800db94 <_read_r>:
 800db94:	b538      	push	{r3, r4, r5, lr}
 800db96:	4d07      	ldr	r5, [pc, #28]	; (800dbb4 <_read_r+0x20>)
 800db98:	4604      	mov	r4, r0
 800db9a:	4608      	mov	r0, r1
 800db9c:	4611      	mov	r1, r2
 800db9e:	2200      	movs	r2, #0
 800dba0:	602a      	str	r2, [r5, #0]
 800dba2:	461a      	mov	r2, r3
 800dba4:	f001 fffc 	bl	800fba0 <_read>
 800dba8:	1c43      	adds	r3, r0, #1
 800dbaa:	d102      	bne.n	800dbb2 <_read_r+0x1e>
 800dbac:	682b      	ldr	r3, [r5, #0]
 800dbae:	b103      	cbz	r3, 800dbb2 <_read_r+0x1e>
 800dbb0:	6023      	str	r3, [r4, #0]
 800dbb2:	bd38      	pop	{r3, r4, r5, pc}
 800dbb4:	20001248 	.word	0x20001248

0800dbb8 <cos>:
 800dbb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dbba:	ec53 2b10 	vmov	r2, r3, d0
 800dbbe:	4826      	ldr	r0, [pc, #152]	; (800dc58 <cos+0xa0>)
 800dbc0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800dbc4:	4281      	cmp	r1, r0
 800dbc6:	dc06      	bgt.n	800dbd6 <cos+0x1e>
 800dbc8:	ed9f 1b21 	vldr	d1, [pc, #132]	; 800dc50 <cos+0x98>
 800dbcc:	b005      	add	sp, #20
 800dbce:	f85d eb04 	ldr.w	lr, [sp], #4
 800dbd2:	f001 b815 	b.w	800ec00 <__kernel_cos>
 800dbd6:	4821      	ldr	r0, [pc, #132]	; (800dc5c <cos+0xa4>)
 800dbd8:	4281      	cmp	r1, r0
 800dbda:	dd09      	ble.n	800dbf0 <cos+0x38>
 800dbdc:	ee10 0a10 	vmov	r0, s0
 800dbe0:	4619      	mov	r1, r3
 800dbe2:	f7f2 fbc1 	bl	8000368 <__aeabi_dsub>
 800dbe6:	ec41 0b10 	vmov	d0, r0, r1
 800dbea:	b005      	add	sp, #20
 800dbec:	f85d fb04 	ldr.w	pc, [sp], #4
 800dbf0:	4668      	mov	r0, sp
 800dbf2:	f000 fd45 	bl	800e680 <__ieee754_rem_pio2>
 800dbf6:	f000 0003 	and.w	r0, r0, #3
 800dbfa:	2801      	cmp	r0, #1
 800dbfc:	d00b      	beq.n	800dc16 <cos+0x5e>
 800dbfe:	2802      	cmp	r0, #2
 800dc00:	d016      	beq.n	800dc30 <cos+0x78>
 800dc02:	b9e0      	cbnz	r0, 800dc3e <cos+0x86>
 800dc04:	ed9d 1b02 	vldr	d1, [sp, #8]
 800dc08:	ed9d 0b00 	vldr	d0, [sp]
 800dc0c:	f000 fff8 	bl	800ec00 <__kernel_cos>
 800dc10:	ec51 0b10 	vmov	r0, r1, d0
 800dc14:	e7e7      	b.n	800dbe6 <cos+0x2e>
 800dc16:	ed9d 1b02 	vldr	d1, [sp, #8]
 800dc1a:	ed9d 0b00 	vldr	d0, [sp]
 800dc1e:	f001 fc07 	bl	800f430 <__kernel_sin>
 800dc22:	ec53 2b10 	vmov	r2, r3, d0
 800dc26:	ee10 0a10 	vmov	r0, s0
 800dc2a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800dc2e:	e7da      	b.n	800dbe6 <cos+0x2e>
 800dc30:	ed9d 1b02 	vldr	d1, [sp, #8]
 800dc34:	ed9d 0b00 	vldr	d0, [sp]
 800dc38:	f000 ffe2 	bl	800ec00 <__kernel_cos>
 800dc3c:	e7f1      	b.n	800dc22 <cos+0x6a>
 800dc3e:	ed9d 1b02 	vldr	d1, [sp, #8]
 800dc42:	ed9d 0b00 	vldr	d0, [sp]
 800dc46:	2001      	movs	r0, #1
 800dc48:	f001 fbf2 	bl	800f430 <__kernel_sin>
 800dc4c:	e7e0      	b.n	800dc10 <cos+0x58>
 800dc4e:	bf00      	nop
	...
 800dc58:	3fe921fb 	.word	0x3fe921fb
 800dc5c:	7fefffff 	.word	0x7fefffff

0800dc60 <sin>:
 800dc60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dc62:	ec53 2b10 	vmov	r2, r3, d0
 800dc66:	4828      	ldr	r0, [pc, #160]	; (800dd08 <sin+0xa8>)
 800dc68:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800dc6c:	4281      	cmp	r1, r0
 800dc6e:	dc07      	bgt.n	800dc80 <sin+0x20>
 800dc70:	ed9f 1b23 	vldr	d1, [pc, #140]	; 800dd00 <sin+0xa0>
 800dc74:	2000      	movs	r0, #0
 800dc76:	b005      	add	sp, #20
 800dc78:	f85d eb04 	ldr.w	lr, [sp], #4
 800dc7c:	f001 bbd8 	b.w	800f430 <__kernel_sin>
 800dc80:	4822      	ldr	r0, [pc, #136]	; (800dd0c <sin+0xac>)
 800dc82:	4281      	cmp	r1, r0
 800dc84:	dd09      	ble.n	800dc9a <sin+0x3a>
 800dc86:	ee10 0a10 	vmov	r0, s0
 800dc8a:	4619      	mov	r1, r3
 800dc8c:	f7f2 fb6c 	bl	8000368 <__aeabi_dsub>
 800dc90:	ec41 0b10 	vmov	d0, r0, r1
 800dc94:	b005      	add	sp, #20
 800dc96:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc9a:	4668      	mov	r0, sp
 800dc9c:	f000 fcf0 	bl	800e680 <__ieee754_rem_pio2>
 800dca0:	f000 0003 	and.w	r0, r0, #3
 800dca4:	2801      	cmp	r0, #1
 800dca6:	d00c      	beq.n	800dcc2 <sin+0x62>
 800dca8:	2802      	cmp	r0, #2
 800dcaa:	d011      	beq.n	800dcd0 <sin+0x70>
 800dcac:	b9f0      	cbnz	r0, 800dcec <sin+0x8c>
 800dcae:	ed9d 1b02 	vldr	d1, [sp, #8]
 800dcb2:	ed9d 0b00 	vldr	d0, [sp]
 800dcb6:	2001      	movs	r0, #1
 800dcb8:	f001 fbba 	bl	800f430 <__kernel_sin>
 800dcbc:	ec51 0b10 	vmov	r0, r1, d0
 800dcc0:	e7e6      	b.n	800dc90 <sin+0x30>
 800dcc2:	ed9d 1b02 	vldr	d1, [sp, #8]
 800dcc6:	ed9d 0b00 	vldr	d0, [sp]
 800dcca:	f000 ff99 	bl	800ec00 <__kernel_cos>
 800dcce:	e7f5      	b.n	800dcbc <sin+0x5c>
 800dcd0:	ed9d 1b02 	vldr	d1, [sp, #8]
 800dcd4:	ed9d 0b00 	vldr	d0, [sp]
 800dcd8:	2001      	movs	r0, #1
 800dcda:	f001 fba9 	bl	800f430 <__kernel_sin>
 800dcde:	ec53 2b10 	vmov	r2, r3, d0
 800dce2:	ee10 0a10 	vmov	r0, s0
 800dce6:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800dcea:	e7d1      	b.n	800dc90 <sin+0x30>
 800dcec:	ed9d 1b02 	vldr	d1, [sp, #8]
 800dcf0:	ed9d 0b00 	vldr	d0, [sp]
 800dcf4:	f000 ff84 	bl	800ec00 <__kernel_cos>
 800dcf8:	e7f1      	b.n	800dcde <sin+0x7e>
 800dcfa:	bf00      	nop
 800dcfc:	f3af 8000 	nop.w
	...
 800dd08:	3fe921fb 	.word	0x3fe921fb
 800dd0c:	7fefffff 	.word	0x7fefffff

0800dd10 <acos>:
 800dd10:	b538      	push	{r3, r4, r5, lr}
 800dd12:	ed2d 8b02 	vpush	{d8}
 800dd16:	ec55 4b10 	vmov	r4, r5, d0
 800dd1a:	f000 f865 	bl	800dde8 <__ieee754_acos>
 800dd1e:	4622      	mov	r2, r4
 800dd20:	462b      	mov	r3, r5
 800dd22:	4620      	mov	r0, r4
 800dd24:	4629      	mov	r1, r5
 800dd26:	eeb0 8a40 	vmov.f32	s16, s0
 800dd2a:	eef0 8a60 	vmov.f32	s17, s1
 800dd2e:	f7f2 ff6d 	bl	8000c0c <__aeabi_dcmpun>
 800dd32:	b9a8      	cbnz	r0, 800dd60 <acos+0x50>
 800dd34:	ec45 4b10 	vmov	d0, r4, r5
 800dd38:	f001 fdda 	bl	800f8f0 <fabs>
 800dd3c:	4b0c      	ldr	r3, [pc, #48]	; (800dd70 <acos+0x60>)
 800dd3e:	ec51 0b10 	vmov	r0, r1, d0
 800dd42:	2200      	movs	r2, #0
 800dd44:	f7f2 ff58 	bl	8000bf8 <__aeabi_dcmpgt>
 800dd48:	b150      	cbz	r0, 800dd60 <acos+0x50>
 800dd4a:	f001 fef3 	bl	800fb34 <__errno>
 800dd4e:	ecbd 8b02 	vpop	{d8}
 800dd52:	2321      	movs	r3, #33	; 0x21
 800dd54:	6003      	str	r3, [r0, #0]
 800dd56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dd5a:	4806      	ldr	r0, [pc, #24]	; (800dd74 <acos+0x64>)
 800dd5c:	f001 be5c 	b.w	800fa18 <nan>
 800dd60:	eeb0 0a48 	vmov.f32	s0, s16
 800dd64:	eef0 0a68 	vmov.f32	s1, s17
 800dd68:	ecbd 8b02 	vpop	{d8}
 800dd6c:	bd38      	pop	{r3, r4, r5, pc}
 800dd6e:	bf00      	nop
 800dd70:	3ff00000 	.word	0x3ff00000
 800dd74:	080288d0 	.word	0x080288d0

0800dd78 <atan2>:
 800dd78:	f000 ba96 	b.w	800e2a8 <__ieee754_atan2>
 800dd7c:	0000      	movs	r0, r0
	...

0800dd80 <hypot>:
 800dd80:	b508      	push	{r3, lr}
 800dd82:	ed2d 8b06 	vpush	{d8-d10}
 800dd86:	eeb0 aa40 	vmov.f32	s20, s0
 800dd8a:	eef0 aa60 	vmov.f32	s21, s1
 800dd8e:	eeb0 9a41 	vmov.f32	s18, s2
 800dd92:	eef0 9a61 	vmov.f32	s19, s3
 800dd96:	f000 fb51 	bl	800e43c <__ieee754_hypot>
 800dd9a:	eeb0 8a40 	vmov.f32	s16, s0
 800dd9e:	eef0 8a60 	vmov.f32	s17, s1
 800dda2:	f001 fdae 	bl	800f902 <finite>
 800dda6:	b998      	cbnz	r0, 800ddd0 <hypot+0x50>
 800dda8:	eeb0 0a4a 	vmov.f32	s0, s20
 800ddac:	eef0 0a6a 	vmov.f32	s1, s21
 800ddb0:	f001 fda7 	bl	800f902 <finite>
 800ddb4:	b160      	cbz	r0, 800ddd0 <hypot+0x50>
 800ddb6:	eeb0 0a49 	vmov.f32	s0, s18
 800ddba:	eef0 0a69 	vmov.f32	s1, s19
 800ddbe:	f001 fda0 	bl	800f902 <finite>
 800ddc2:	b128      	cbz	r0, 800ddd0 <hypot+0x50>
 800ddc4:	f001 feb6 	bl	800fb34 <__errno>
 800ddc8:	ed9f 8b05 	vldr	d8, [pc, #20]	; 800dde0 <hypot+0x60>
 800ddcc:	2322      	movs	r3, #34	; 0x22
 800ddce:	6003      	str	r3, [r0, #0]
 800ddd0:	eeb0 0a48 	vmov.f32	s0, s16
 800ddd4:	eef0 0a68 	vmov.f32	s1, s17
 800ddd8:	ecbd 8b06 	vpop	{d8-d10}
 800dddc:	bd08      	pop	{r3, pc}
 800ddde:	bf00      	nop
 800dde0:	00000000 	.word	0x00000000
 800dde4:	7ff00000 	.word	0x7ff00000

0800dde8 <__ieee754_acos>:
 800dde8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ddec:	ec55 4b10 	vmov	r4, r5, d0
 800ddf0:	49b7      	ldr	r1, [pc, #732]	; (800e0d0 <__ieee754_acos+0x2e8>)
 800ddf2:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800ddf6:	428b      	cmp	r3, r1
 800ddf8:	dd1b      	ble.n	800de32 <__ieee754_acos+0x4a>
 800ddfa:	f103 4340 	add.w	r3, r3, #3221225472	; 0xc0000000
 800ddfe:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 800de02:	4323      	orrs	r3, r4
 800de04:	d106      	bne.n	800de14 <__ieee754_acos+0x2c>
 800de06:	2d00      	cmp	r5, #0
 800de08:	f300 8211 	bgt.w	800e22e <__ieee754_acos+0x446>
 800de0c:	ed9f 0b96 	vldr	d0, [pc, #600]	; 800e068 <__ieee754_acos+0x280>
 800de10:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de14:	ee10 2a10 	vmov	r2, s0
 800de18:	462b      	mov	r3, r5
 800de1a:	ee10 0a10 	vmov	r0, s0
 800de1e:	4629      	mov	r1, r5
 800de20:	f7f2 faa2 	bl	8000368 <__aeabi_dsub>
 800de24:	4602      	mov	r2, r0
 800de26:	460b      	mov	r3, r1
 800de28:	f7f2 fd80 	bl	800092c <__aeabi_ddiv>
 800de2c:	ec41 0b10 	vmov	d0, r0, r1
 800de30:	e7ee      	b.n	800de10 <__ieee754_acos+0x28>
 800de32:	49a8      	ldr	r1, [pc, #672]	; (800e0d4 <__ieee754_acos+0x2ec>)
 800de34:	428b      	cmp	r3, r1
 800de36:	f300 8087 	bgt.w	800df48 <__ieee754_acos+0x160>
 800de3a:	4aa7      	ldr	r2, [pc, #668]	; (800e0d8 <__ieee754_acos+0x2f0>)
 800de3c:	4293      	cmp	r3, r2
 800de3e:	f340 81f9 	ble.w	800e234 <__ieee754_acos+0x44c>
 800de42:	ee10 2a10 	vmov	r2, s0
 800de46:	ee10 0a10 	vmov	r0, s0
 800de4a:	462b      	mov	r3, r5
 800de4c:	4629      	mov	r1, r5
 800de4e:	f7f2 fc43 	bl	80006d8 <__aeabi_dmul>
 800de52:	a387      	add	r3, pc, #540	; (adr r3, 800e070 <__ieee754_acos+0x288>)
 800de54:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de58:	4606      	mov	r6, r0
 800de5a:	460f      	mov	r7, r1
 800de5c:	f7f2 fc3c 	bl	80006d8 <__aeabi_dmul>
 800de60:	a385      	add	r3, pc, #532	; (adr r3, 800e078 <__ieee754_acos+0x290>)
 800de62:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de66:	f7f2 fa81 	bl	800036c <__adddf3>
 800de6a:	4632      	mov	r2, r6
 800de6c:	463b      	mov	r3, r7
 800de6e:	f7f2 fc33 	bl	80006d8 <__aeabi_dmul>
 800de72:	a383      	add	r3, pc, #524	; (adr r3, 800e080 <__ieee754_acos+0x298>)
 800de74:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de78:	f7f2 fa76 	bl	8000368 <__aeabi_dsub>
 800de7c:	4632      	mov	r2, r6
 800de7e:	463b      	mov	r3, r7
 800de80:	f7f2 fc2a 	bl	80006d8 <__aeabi_dmul>
 800de84:	a380      	add	r3, pc, #512	; (adr r3, 800e088 <__ieee754_acos+0x2a0>)
 800de86:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de8a:	f7f2 fa6f 	bl	800036c <__adddf3>
 800de8e:	4632      	mov	r2, r6
 800de90:	463b      	mov	r3, r7
 800de92:	f7f2 fc21 	bl	80006d8 <__aeabi_dmul>
 800de96:	a37e      	add	r3, pc, #504	; (adr r3, 800e090 <__ieee754_acos+0x2a8>)
 800de98:	e9d3 2300 	ldrd	r2, r3, [r3]
 800de9c:	f7f2 fa64 	bl	8000368 <__aeabi_dsub>
 800dea0:	4632      	mov	r2, r6
 800dea2:	463b      	mov	r3, r7
 800dea4:	f7f2 fc18 	bl	80006d8 <__aeabi_dmul>
 800dea8:	a37b      	add	r3, pc, #492	; (adr r3, 800e098 <__ieee754_acos+0x2b0>)
 800deaa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800deae:	f7f2 fa5d 	bl	800036c <__adddf3>
 800deb2:	4632      	mov	r2, r6
 800deb4:	463b      	mov	r3, r7
 800deb6:	f7f2 fc0f 	bl	80006d8 <__aeabi_dmul>
 800deba:	a379      	add	r3, pc, #484	; (adr r3, 800e0a0 <__ieee754_acos+0x2b8>)
 800debc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dec0:	4680      	mov	r8, r0
 800dec2:	4689      	mov	r9, r1
 800dec4:	4630      	mov	r0, r6
 800dec6:	4639      	mov	r1, r7
 800dec8:	f7f2 fc06 	bl	80006d8 <__aeabi_dmul>
 800decc:	a376      	add	r3, pc, #472	; (adr r3, 800e0a8 <__ieee754_acos+0x2c0>)
 800dece:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ded2:	f7f2 fa49 	bl	8000368 <__aeabi_dsub>
 800ded6:	4632      	mov	r2, r6
 800ded8:	463b      	mov	r3, r7
 800deda:	f7f2 fbfd 	bl	80006d8 <__aeabi_dmul>
 800dede:	a374      	add	r3, pc, #464	; (adr r3, 800e0b0 <__ieee754_acos+0x2c8>)
 800dee0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dee4:	f7f2 fa42 	bl	800036c <__adddf3>
 800dee8:	4632      	mov	r2, r6
 800deea:	463b      	mov	r3, r7
 800deec:	f7f2 fbf4 	bl	80006d8 <__aeabi_dmul>
 800def0:	a371      	add	r3, pc, #452	; (adr r3, 800e0b8 <__ieee754_acos+0x2d0>)
 800def2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800def6:	f7f2 fa37 	bl	8000368 <__aeabi_dsub>
 800defa:	4632      	mov	r2, r6
 800defc:	463b      	mov	r3, r7
 800defe:	f7f2 fbeb 	bl	80006d8 <__aeabi_dmul>
 800df02:	4b76      	ldr	r3, [pc, #472]	; (800e0dc <__ieee754_acos+0x2f4>)
 800df04:	2200      	movs	r2, #0
 800df06:	f7f2 fa31 	bl	800036c <__adddf3>
 800df0a:	4602      	mov	r2, r0
 800df0c:	460b      	mov	r3, r1
 800df0e:	4640      	mov	r0, r8
 800df10:	4649      	mov	r1, r9
 800df12:	f7f2 fd0b 	bl	800092c <__aeabi_ddiv>
 800df16:	4622      	mov	r2, r4
 800df18:	462b      	mov	r3, r5
 800df1a:	f7f2 fbdd 	bl	80006d8 <__aeabi_dmul>
 800df1e:	4602      	mov	r2, r0
 800df20:	460b      	mov	r3, r1
 800df22:	a167      	add	r1, pc, #412	; (adr r1, 800e0c0 <__ieee754_acos+0x2d8>)
 800df24:	e9d1 0100 	ldrd	r0, r1, [r1]
 800df28:	f7f2 fa1e 	bl	8000368 <__aeabi_dsub>
 800df2c:	4602      	mov	r2, r0
 800df2e:	460b      	mov	r3, r1
 800df30:	4620      	mov	r0, r4
 800df32:	4629      	mov	r1, r5
 800df34:	f7f2 fa18 	bl	8000368 <__aeabi_dsub>
 800df38:	4602      	mov	r2, r0
 800df3a:	460b      	mov	r3, r1
 800df3c:	a162      	add	r1, pc, #392	; (adr r1, 800e0c8 <__ieee754_acos+0x2e0>)
 800df3e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800df42:	f7f2 fa11 	bl	8000368 <__aeabi_dsub>
 800df46:	e771      	b.n	800de2c <__ieee754_acos+0x44>
 800df48:	2d00      	cmp	r5, #0
 800df4a:	f280 80cb 	bge.w	800e0e4 <__ieee754_acos+0x2fc>
 800df4e:	ee10 0a10 	vmov	r0, s0
 800df52:	4b62      	ldr	r3, [pc, #392]	; (800e0dc <__ieee754_acos+0x2f4>)
 800df54:	2200      	movs	r2, #0
 800df56:	4629      	mov	r1, r5
 800df58:	f7f2 fa08 	bl	800036c <__adddf3>
 800df5c:	4b60      	ldr	r3, [pc, #384]	; (800e0e0 <__ieee754_acos+0x2f8>)
 800df5e:	2200      	movs	r2, #0
 800df60:	f7f2 fbba 	bl	80006d8 <__aeabi_dmul>
 800df64:	a342      	add	r3, pc, #264	; (adr r3, 800e070 <__ieee754_acos+0x288>)
 800df66:	e9d3 2300 	ldrd	r2, r3, [r3]
 800df6a:	4604      	mov	r4, r0
 800df6c:	460d      	mov	r5, r1
 800df6e:	f7f2 fbb3 	bl	80006d8 <__aeabi_dmul>
 800df72:	a341      	add	r3, pc, #260	; (adr r3, 800e078 <__ieee754_acos+0x290>)
 800df74:	e9d3 2300 	ldrd	r2, r3, [r3]
 800df78:	f7f2 f9f8 	bl	800036c <__adddf3>
 800df7c:	4622      	mov	r2, r4
 800df7e:	462b      	mov	r3, r5
 800df80:	f7f2 fbaa 	bl	80006d8 <__aeabi_dmul>
 800df84:	a33e      	add	r3, pc, #248	; (adr r3, 800e080 <__ieee754_acos+0x298>)
 800df86:	e9d3 2300 	ldrd	r2, r3, [r3]
 800df8a:	f7f2 f9ed 	bl	8000368 <__aeabi_dsub>
 800df8e:	4622      	mov	r2, r4
 800df90:	462b      	mov	r3, r5
 800df92:	f7f2 fba1 	bl	80006d8 <__aeabi_dmul>
 800df96:	a33c      	add	r3, pc, #240	; (adr r3, 800e088 <__ieee754_acos+0x2a0>)
 800df98:	e9d3 2300 	ldrd	r2, r3, [r3]
 800df9c:	f7f2 f9e6 	bl	800036c <__adddf3>
 800dfa0:	4622      	mov	r2, r4
 800dfa2:	462b      	mov	r3, r5
 800dfa4:	f7f2 fb98 	bl	80006d8 <__aeabi_dmul>
 800dfa8:	a339      	add	r3, pc, #228	; (adr r3, 800e090 <__ieee754_acos+0x2a8>)
 800dfaa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dfae:	f7f2 f9db 	bl	8000368 <__aeabi_dsub>
 800dfb2:	4622      	mov	r2, r4
 800dfb4:	462b      	mov	r3, r5
 800dfb6:	f7f2 fb8f 	bl	80006d8 <__aeabi_dmul>
 800dfba:	a337      	add	r3, pc, #220	; (adr r3, 800e098 <__ieee754_acos+0x2b0>)
 800dfbc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dfc0:	f7f2 f9d4 	bl	800036c <__adddf3>
 800dfc4:	4622      	mov	r2, r4
 800dfc6:	462b      	mov	r3, r5
 800dfc8:	f7f2 fb86 	bl	80006d8 <__aeabi_dmul>
 800dfcc:	ec45 4b10 	vmov	d0, r4, r5
 800dfd0:	4680      	mov	r8, r0
 800dfd2:	4689      	mov	r9, r1
 800dfd4:	f000 fd60 	bl	800ea98 <__ieee754_sqrt>
 800dfd8:	a331      	add	r3, pc, #196	; (adr r3, 800e0a0 <__ieee754_acos+0x2b8>)
 800dfda:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dfde:	4620      	mov	r0, r4
 800dfe0:	4629      	mov	r1, r5
 800dfe2:	ec57 6b10 	vmov	r6, r7, d0
 800dfe6:	f7f2 fb77 	bl	80006d8 <__aeabi_dmul>
 800dfea:	a32f      	add	r3, pc, #188	; (adr r3, 800e0a8 <__ieee754_acos+0x2c0>)
 800dfec:	e9d3 2300 	ldrd	r2, r3, [r3]
 800dff0:	f7f2 f9ba 	bl	8000368 <__aeabi_dsub>
 800dff4:	4622      	mov	r2, r4
 800dff6:	462b      	mov	r3, r5
 800dff8:	f7f2 fb6e 	bl	80006d8 <__aeabi_dmul>
 800dffc:	a32c      	add	r3, pc, #176	; (adr r3, 800e0b0 <__ieee754_acos+0x2c8>)
 800dffe:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e002:	f7f2 f9b3 	bl	800036c <__adddf3>
 800e006:	4622      	mov	r2, r4
 800e008:	462b      	mov	r3, r5
 800e00a:	f7f2 fb65 	bl	80006d8 <__aeabi_dmul>
 800e00e:	a32a      	add	r3, pc, #168	; (adr r3, 800e0b8 <__ieee754_acos+0x2d0>)
 800e010:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e014:	f7f2 f9a8 	bl	8000368 <__aeabi_dsub>
 800e018:	4622      	mov	r2, r4
 800e01a:	462b      	mov	r3, r5
 800e01c:	f7f2 fb5c 	bl	80006d8 <__aeabi_dmul>
 800e020:	4b2e      	ldr	r3, [pc, #184]	; (800e0dc <__ieee754_acos+0x2f4>)
 800e022:	2200      	movs	r2, #0
 800e024:	f7f2 f9a2 	bl	800036c <__adddf3>
 800e028:	4602      	mov	r2, r0
 800e02a:	460b      	mov	r3, r1
 800e02c:	4640      	mov	r0, r8
 800e02e:	4649      	mov	r1, r9
 800e030:	f7f2 fc7c 	bl	800092c <__aeabi_ddiv>
 800e034:	4632      	mov	r2, r6
 800e036:	463b      	mov	r3, r7
 800e038:	f7f2 fb4e 	bl	80006d8 <__aeabi_dmul>
 800e03c:	a320      	add	r3, pc, #128	; (adr r3, 800e0c0 <__ieee754_acos+0x2d8>)
 800e03e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e042:	f7f2 f991 	bl	8000368 <__aeabi_dsub>
 800e046:	4632      	mov	r2, r6
 800e048:	463b      	mov	r3, r7
 800e04a:	f7f2 f98f 	bl	800036c <__adddf3>
 800e04e:	4602      	mov	r2, r0
 800e050:	460b      	mov	r3, r1
 800e052:	f7f2 f98b 	bl	800036c <__adddf3>
 800e056:	4602      	mov	r2, r0
 800e058:	460b      	mov	r3, r1
 800e05a:	a103      	add	r1, pc, #12	; (adr r1, 800e068 <__ieee754_acos+0x280>)
 800e05c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e060:	e76f      	b.n	800df42 <__ieee754_acos+0x15a>
 800e062:	bf00      	nop
 800e064:	f3af 8000 	nop.w
 800e068:	54442d18 	.word	0x54442d18
 800e06c:	400921fb 	.word	0x400921fb
 800e070:	0dfdf709 	.word	0x0dfdf709
 800e074:	3f023de1 	.word	0x3f023de1
 800e078:	7501b288 	.word	0x7501b288
 800e07c:	3f49efe0 	.word	0x3f49efe0
 800e080:	b5688f3b 	.word	0xb5688f3b
 800e084:	3fa48228 	.word	0x3fa48228
 800e088:	0e884455 	.word	0x0e884455
 800e08c:	3fc9c155 	.word	0x3fc9c155
 800e090:	03eb6f7d 	.word	0x03eb6f7d
 800e094:	3fd4d612 	.word	0x3fd4d612
 800e098:	55555555 	.word	0x55555555
 800e09c:	3fc55555 	.word	0x3fc55555
 800e0a0:	b12e9282 	.word	0xb12e9282
 800e0a4:	3fb3b8c5 	.word	0x3fb3b8c5
 800e0a8:	1b8d0159 	.word	0x1b8d0159
 800e0ac:	3fe6066c 	.word	0x3fe6066c
 800e0b0:	9c598ac8 	.word	0x9c598ac8
 800e0b4:	40002ae5 	.word	0x40002ae5
 800e0b8:	1c8a2d4b 	.word	0x1c8a2d4b
 800e0bc:	40033a27 	.word	0x40033a27
 800e0c0:	33145c07 	.word	0x33145c07
 800e0c4:	3c91a626 	.word	0x3c91a626
 800e0c8:	54442d18 	.word	0x54442d18
 800e0cc:	3ff921fb 	.word	0x3ff921fb
 800e0d0:	3fefffff 	.word	0x3fefffff
 800e0d4:	3fdfffff 	.word	0x3fdfffff
 800e0d8:	3c600000 	.word	0x3c600000
 800e0dc:	3ff00000 	.word	0x3ff00000
 800e0e0:	3fe00000 	.word	0x3fe00000
 800e0e4:	ee10 2a10 	vmov	r2, s0
 800e0e8:	462b      	mov	r3, r5
 800e0ea:	496d      	ldr	r1, [pc, #436]	; (800e2a0 <__ieee754_acos+0x4b8>)
 800e0ec:	2000      	movs	r0, #0
 800e0ee:	f7f2 f93b 	bl	8000368 <__aeabi_dsub>
 800e0f2:	4b6c      	ldr	r3, [pc, #432]	; (800e2a4 <__ieee754_acos+0x4bc>)
 800e0f4:	2200      	movs	r2, #0
 800e0f6:	f7f2 faef 	bl	80006d8 <__aeabi_dmul>
 800e0fa:	4604      	mov	r4, r0
 800e0fc:	460d      	mov	r5, r1
 800e0fe:	ec45 4b10 	vmov	d0, r4, r5
 800e102:	f000 fcc9 	bl	800ea98 <__ieee754_sqrt>
 800e106:	a34e      	add	r3, pc, #312	; (adr r3, 800e240 <__ieee754_acos+0x458>)
 800e108:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e10c:	4620      	mov	r0, r4
 800e10e:	4629      	mov	r1, r5
 800e110:	ec59 8b10 	vmov	r8, r9, d0
 800e114:	f7f2 fae0 	bl	80006d8 <__aeabi_dmul>
 800e118:	a34b      	add	r3, pc, #300	; (adr r3, 800e248 <__ieee754_acos+0x460>)
 800e11a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e11e:	f7f2 f925 	bl	800036c <__adddf3>
 800e122:	4622      	mov	r2, r4
 800e124:	462b      	mov	r3, r5
 800e126:	f7f2 fad7 	bl	80006d8 <__aeabi_dmul>
 800e12a:	a349      	add	r3, pc, #292	; (adr r3, 800e250 <__ieee754_acos+0x468>)
 800e12c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e130:	f7f2 f91a 	bl	8000368 <__aeabi_dsub>
 800e134:	4622      	mov	r2, r4
 800e136:	462b      	mov	r3, r5
 800e138:	f7f2 face 	bl	80006d8 <__aeabi_dmul>
 800e13c:	a346      	add	r3, pc, #280	; (adr r3, 800e258 <__ieee754_acos+0x470>)
 800e13e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e142:	f7f2 f913 	bl	800036c <__adddf3>
 800e146:	4622      	mov	r2, r4
 800e148:	462b      	mov	r3, r5
 800e14a:	f7f2 fac5 	bl	80006d8 <__aeabi_dmul>
 800e14e:	a344      	add	r3, pc, #272	; (adr r3, 800e260 <__ieee754_acos+0x478>)
 800e150:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e154:	f7f2 f908 	bl	8000368 <__aeabi_dsub>
 800e158:	4622      	mov	r2, r4
 800e15a:	462b      	mov	r3, r5
 800e15c:	f7f2 fabc 	bl	80006d8 <__aeabi_dmul>
 800e160:	a341      	add	r3, pc, #260	; (adr r3, 800e268 <__ieee754_acos+0x480>)
 800e162:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e166:	f7f2 f901 	bl	800036c <__adddf3>
 800e16a:	4622      	mov	r2, r4
 800e16c:	462b      	mov	r3, r5
 800e16e:	f7f2 fab3 	bl	80006d8 <__aeabi_dmul>
 800e172:	a33f      	add	r3, pc, #252	; (adr r3, 800e270 <__ieee754_acos+0x488>)
 800e174:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e178:	4682      	mov	sl, r0
 800e17a:	468b      	mov	fp, r1
 800e17c:	4620      	mov	r0, r4
 800e17e:	4629      	mov	r1, r5
 800e180:	f7f2 faaa 	bl	80006d8 <__aeabi_dmul>
 800e184:	a33c      	add	r3, pc, #240	; (adr r3, 800e278 <__ieee754_acos+0x490>)
 800e186:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e18a:	f7f2 f8ed 	bl	8000368 <__aeabi_dsub>
 800e18e:	4622      	mov	r2, r4
 800e190:	462b      	mov	r3, r5
 800e192:	f7f2 faa1 	bl	80006d8 <__aeabi_dmul>
 800e196:	a33a      	add	r3, pc, #232	; (adr r3, 800e280 <__ieee754_acos+0x498>)
 800e198:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e19c:	f7f2 f8e6 	bl	800036c <__adddf3>
 800e1a0:	4622      	mov	r2, r4
 800e1a2:	462b      	mov	r3, r5
 800e1a4:	f7f2 fa98 	bl	80006d8 <__aeabi_dmul>
 800e1a8:	a337      	add	r3, pc, #220	; (adr r3, 800e288 <__ieee754_acos+0x4a0>)
 800e1aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e1ae:	f7f2 f8db 	bl	8000368 <__aeabi_dsub>
 800e1b2:	4622      	mov	r2, r4
 800e1b4:	462b      	mov	r3, r5
 800e1b6:	f7f2 fa8f 	bl	80006d8 <__aeabi_dmul>
 800e1ba:	4b39      	ldr	r3, [pc, #228]	; (800e2a0 <__ieee754_acos+0x4b8>)
 800e1bc:	2200      	movs	r2, #0
 800e1be:	f7f2 f8d5 	bl	800036c <__adddf3>
 800e1c2:	4602      	mov	r2, r0
 800e1c4:	460b      	mov	r3, r1
 800e1c6:	4650      	mov	r0, sl
 800e1c8:	4659      	mov	r1, fp
 800e1ca:	f7f2 fbaf 	bl	800092c <__aeabi_ddiv>
 800e1ce:	4642      	mov	r2, r8
 800e1d0:	464b      	mov	r3, r9
 800e1d2:	f7f2 fa81 	bl	80006d8 <__aeabi_dmul>
 800e1d6:	2600      	movs	r6, #0
 800e1d8:	4682      	mov	sl, r0
 800e1da:	468b      	mov	fp, r1
 800e1dc:	4632      	mov	r2, r6
 800e1de:	464b      	mov	r3, r9
 800e1e0:	4630      	mov	r0, r6
 800e1e2:	4649      	mov	r1, r9
 800e1e4:	f7f2 fa78 	bl	80006d8 <__aeabi_dmul>
 800e1e8:	4602      	mov	r2, r0
 800e1ea:	460b      	mov	r3, r1
 800e1ec:	4620      	mov	r0, r4
 800e1ee:	4629      	mov	r1, r5
 800e1f0:	f7f2 f8ba 	bl	8000368 <__aeabi_dsub>
 800e1f4:	4632      	mov	r2, r6
 800e1f6:	4604      	mov	r4, r0
 800e1f8:	460d      	mov	r5, r1
 800e1fa:	464b      	mov	r3, r9
 800e1fc:	4640      	mov	r0, r8
 800e1fe:	4649      	mov	r1, r9
 800e200:	f7f2 f8b4 	bl	800036c <__adddf3>
 800e204:	4602      	mov	r2, r0
 800e206:	460b      	mov	r3, r1
 800e208:	4620      	mov	r0, r4
 800e20a:	4629      	mov	r1, r5
 800e20c:	f7f2 fb8e 	bl	800092c <__aeabi_ddiv>
 800e210:	4602      	mov	r2, r0
 800e212:	460b      	mov	r3, r1
 800e214:	4650      	mov	r0, sl
 800e216:	4659      	mov	r1, fp
 800e218:	f7f2 f8a8 	bl	800036c <__adddf3>
 800e21c:	4632      	mov	r2, r6
 800e21e:	464b      	mov	r3, r9
 800e220:	f7f2 f8a4 	bl	800036c <__adddf3>
 800e224:	4602      	mov	r2, r0
 800e226:	460b      	mov	r3, r1
 800e228:	f7f2 f8a0 	bl	800036c <__adddf3>
 800e22c:	e5fe      	b.n	800de2c <__ieee754_acos+0x44>
 800e22e:	ed9f 0b18 	vldr	d0, [pc, #96]	; 800e290 <__ieee754_acos+0x4a8>
 800e232:	e5ed      	b.n	800de10 <__ieee754_acos+0x28>
 800e234:	ed9f 0b18 	vldr	d0, [pc, #96]	; 800e298 <__ieee754_acos+0x4b0>
 800e238:	e5ea      	b.n	800de10 <__ieee754_acos+0x28>
 800e23a:	bf00      	nop
 800e23c:	f3af 8000 	nop.w
 800e240:	0dfdf709 	.word	0x0dfdf709
 800e244:	3f023de1 	.word	0x3f023de1
 800e248:	7501b288 	.word	0x7501b288
 800e24c:	3f49efe0 	.word	0x3f49efe0
 800e250:	b5688f3b 	.word	0xb5688f3b
 800e254:	3fa48228 	.word	0x3fa48228
 800e258:	0e884455 	.word	0x0e884455
 800e25c:	3fc9c155 	.word	0x3fc9c155
 800e260:	03eb6f7d 	.word	0x03eb6f7d
 800e264:	3fd4d612 	.word	0x3fd4d612
 800e268:	55555555 	.word	0x55555555
 800e26c:	3fc55555 	.word	0x3fc55555
 800e270:	b12e9282 	.word	0xb12e9282
 800e274:	3fb3b8c5 	.word	0x3fb3b8c5
 800e278:	1b8d0159 	.word	0x1b8d0159
 800e27c:	3fe6066c 	.word	0x3fe6066c
 800e280:	9c598ac8 	.word	0x9c598ac8
 800e284:	40002ae5 	.word	0x40002ae5
 800e288:	1c8a2d4b 	.word	0x1c8a2d4b
 800e28c:	40033a27 	.word	0x40033a27
	...
 800e298:	54442d18 	.word	0x54442d18
 800e29c:	3ff921fb 	.word	0x3ff921fb
 800e2a0:	3ff00000 	.word	0x3ff00000
 800e2a4:	3fe00000 	.word	0x3fe00000

0800e2a8 <__ieee754_atan2>:
 800e2a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e2ac:	ec57 6b11 	vmov	r6, r7, d1
 800e2b0:	4273      	negs	r3, r6
 800e2b2:	f8df e184 	ldr.w	lr, [pc, #388]	; 800e438 <__ieee754_atan2+0x190>
 800e2b6:	f027 4200 	bic.w	r2, r7, #2147483648	; 0x80000000
 800e2ba:	4333      	orrs	r3, r6
 800e2bc:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 800e2c0:	4573      	cmp	r3, lr
 800e2c2:	ec51 0b10 	vmov	r0, r1, d0
 800e2c6:	ee11 8a10 	vmov	r8, s2
 800e2ca:	d80a      	bhi.n	800e2e2 <__ieee754_atan2+0x3a>
 800e2cc:	4244      	negs	r4, r0
 800e2ce:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800e2d2:	4304      	orrs	r4, r0
 800e2d4:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 800e2d8:	4574      	cmp	r4, lr
 800e2da:	ee10 9a10 	vmov	r9, s0
 800e2de:	468c      	mov	ip, r1
 800e2e0:	d907      	bls.n	800e2f2 <__ieee754_atan2+0x4a>
 800e2e2:	4632      	mov	r2, r6
 800e2e4:	463b      	mov	r3, r7
 800e2e6:	f7f2 f841 	bl	800036c <__adddf3>
 800e2ea:	ec41 0b10 	vmov	d0, r0, r1
 800e2ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e2f2:	f107 4440 	add.w	r4, r7, #3221225472	; 0xc0000000
 800e2f6:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 800e2fa:	4334      	orrs	r4, r6
 800e2fc:	d103      	bne.n	800e306 <__ieee754_atan2+0x5e>
 800e2fe:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e302:	f001 b955 	b.w	800f5b0 <atan>
 800e306:	17bc      	asrs	r4, r7, #30
 800e308:	f004 0402 	and.w	r4, r4, #2
 800e30c:	ea53 0909 	orrs.w	r9, r3, r9
 800e310:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 800e314:	d107      	bne.n	800e326 <__ieee754_atan2+0x7e>
 800e316:	2c02      	cmp	r4, #2
 800e318:	d060      	beq.n	800e3dc <__ieee754_atan2+0x134>
 800e31a:	2c03      	cmp	r4, #3
 800e31c:	d1e5      	bne.n	800e2ea <__ieee754_atan2+0x42>
 800e31e:	a142      	add	r1, pc, #264	; (adr r1, 800e428 <__ieee754_atan2+0x180>)
 800e320:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e324:	e7e1      	b.n	800e2ea <__ieee754_atan2+0x42>
 800e326:	ea52 0808 	orrs.w	r8, r2, r8
 800e32a:	d106      	bne.n	800e33a <__ieee754_atan2+0x92>
 800e32c:	f1bc 0f00 	cmp.w	ip, #0
 800e330:	da5f      	bge.n	800e3f2 <__ieee754_atan2+0x14a>
 800e332:	a13f      	add	r1, pc, #252	; (adr r1, 800e430 <__ieee754_atan2+0x188>)
 800e334:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e338:	e7d7      	b.n	800e2ea <__ieee754_atan2+0x42>
 800e33a:	4572      	cmp	r2, lr
 800e33c:	d10f      	bne.n	800e35e <__ieee754_atan2+0xb6>
 800e33e:	4293      	cmp	r3, r2
 800e340:	f104 34ff 	add.w	r4, r4, #4294967295
 800e344:	d107      	bne.n	800e356 <__ieee754_atan2+0xae>
 800e346:	2c02      	cmp	r4, #2
 800e348:	d84c      	bhi.n	800e3e4 <__ieee754_atan2+0x13c>
 800e34a:	4b35      	ldr	r3, [pc, #212]	; (800e420 <__ieee754_atan2+0x178>)
 800e34c:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 800e350:	e9d4 0100 	ldrd	r0, r1, [r4]
 800e354:	e7c9      	b.n	800e2ea <__ieee754_atan2+0x42>
 800e356:	2c02      	cmp	r4, #2
 800e358:	d848      	bhi.n	800e3ec <__ieee754_atan2+0x144>
 800e35a:	4b32      	ldr	r3, [pc, #200]	; (800e424 <__ieee754_atan2+0x17c>)
 800e35c:	e7f6      	b.n	800e34c <__ieee754_atan2+0xa4>
 800e35e:	4573      	cmp	r3, lr
 800e360:	d0e4      	beq.n	800e32c <__ieee754_atan2+0x84>
 800e362:	1a9b      	subs	r3, r3, r2
 800e364:	f1b3 7f74 	cmp.w	r3, #63963136	; 0x3d00000
 800e368:	ea4f 5223 	mov.w	r2, r3, asr #20
 800e36c:	da1e      	bge.n	800e3ac <__ieee754_atan2+0x104>
 800e36e:	2f00      	cmp	r7, #0
 800e370:	da01      	bge.n	800e376 <__ieee754_atan2+0xce>
 800e372:	323c      	adds	r2, #60	; 0x3c
 800e374:	db1e      	blt.n	800e3b4 <__ieee754_atan2+0x10c>
 800e376:	4632      	mov	r2, r6
 800e378:	463b      	mov	r3, r7
 800e37a:	f7f2 fad7 	bl	800092c <__aeabi_ddiv>
 800e37e:	ec41 0b10 	vmov	d0, r0, r1
 800e382:	f001 fab5 	bl	800f8f0 <fabs>
 800e386:	f001 f913 	bl	800f5b0 <atan>
 800e38a:	ec51 0b10 	vmov	r0, r1, d0
 800e38e:	2c01      	cmp	r4, #1
 800e390:	d013      	beq.n	800e3ba <__ieee754_atan2+0x112>
 800e392:	2c02      	cmp	r4, #2
 800e394:	d015      	beq.n	800e3c2 <__ieee754_atan2+0x11a>
 800e396:	2c00      	cmp	r4, #0
 800e398:	d0a7      	beq.n	800e2ea <__ieee754_atan2+0x42>
 800e39a:	a319      	add	r3, pc, #100	; (adr r3, 800e400 <__ieee754_atan2+0x158>)
 800e39c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e3a0:	f7f1 ffe2 	bl	8000368 <__aeabi_dsub>
 800e3a4:	a318      	add	r3, pc, #96	; (adr r3, 800e408 <__ieee754_atan2+0x160>)
 800e3a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e3aa:	e014      	b.n	800e3d6 <__ieee754_atan2+0x12e>
 800e3ac:	a118      	add	r1, pc, #96	; (adr r1, 800e410 <__ieee754_atan2+0x168>)
 800e3ae:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e3b2:	e7ec      	b.n	800e38e <__ieee754_atan2+0xe6>
 800e3b4:	2000      	movs	r0, #0
 800e3b6:	2100      	movs	r1, #0
 800e3b8:	e7e9      	b.n	800e38e <__ieee754_atan2+0xe6>
 800e3ba:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800e3be:	4619      	mov	r1, r3
 800e3c0:	e793      	b.n	800e2ea <__ieee754_atan2+0x42>
 800e3c2:	a30f      	add	r3, pc, #60	; (adr r3, 800e400 <__ieee754_atan2+0x158>)
 800e3c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e3c8:	f7f1 ffce 	bl	8000368 <__aeabi_dsub>
 800e3cc:	4602      	mov	r2, r0
 800e3ce:	460b      	mov	r3, r1
 800e3d0:	a10d      	add	r1, pc, #52	; (adr r1, 800e408 <__ieee754_atan2+0x160>)
 800e3d2:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e3d6:	f7f1 ffc7 	bl	8000368 <__aeabi_dsub>
 800e3da:	e786      	b.n	800e2ea <__ieee754_atan2+0x42>
 800e3dc:	a10a      	add	r1, pc, #40	; (adr r1, 800e408 <__ieee754_atan2+0x160>)
 800e3de:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e3e2:	e782      	b.n	800e2ea <__ieee754_atan2+0x42>
 800e3e4:	a10c      	add	r1, pc, #48	; (adr r1, 800e418 <__ieee754_atan2+0x170>)
 800e3e6:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e3ea:	e77e      	b.n	800e2ea <__ieee754_atan2+0x42>
 800e3ec:	2000      	movs	r0, #0
 800e3ee:	2100      	movs	r1, #0
 800e3f0:	e77b      	b.n	800e2ea <__ieee754_atan2+0x42>
 800e3f2:	a107      	add	r1, pc, #28	; (adr r1, 800e410 <__ieee754_atan2+0x168>)
 800e3f4:	e9d1 0100 	ldrd	r0, r1, [r1]
 800e3f8:	e777      	b.n	800e2ea <__ieee754_atan2+0x42>
 800e3fa:	bf00      	nop
 800e3fc:	f3af 8000 	nop.w
 800e400:	33145c07 	.word	0x33145c07
 800e404:	3ca1a626 	.word	0x3ca1a626
 800e408:	54442d18 	.word	0x54442d18
 800e40c:	400921fb 	.word	0x400921fb
 800e410:	54442d18 	.word	0x54442d18
 800e414:	3ff921fb 	.word	0x3ff921fb
 800e418:	54442d18 	.word	0x54442d18
 800e41c:	3fe921fb 	.word	0x3fe921fb
 800e420:	08028a40 	.word	0x08028a40
 800e424:	08028a58 	.word	0x08028a58
 800e428:	54442d18 	.word	0x54442d18
 800e42c:	c00921fb 	.word	0xc00921fb
 800e430:	54442d18 	.word	0x54442d18
 800e434:	bff921fb 	.word	0xbff921fb
 800e438:	7ff00000 	.word	0x7ff00000

0800e43c <__ieee754_hypot>:
 800e43c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e440:	ec51 0b10 	vmov	r0, r1, d0
 800e444:	ec57 6b11 	vmov	r6, r7, d1
 800e448:	ed2d 8b06 	vpush	{d8-d10}
 800e44c:	f021 4500 	bic.w	r5, r1, #2147483648	; 0x80000000
 800e450:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 800e454:	42a5      	cmp	r5, r4
 800e456:	b085      	sub	sp, #20
 800e458:	da06      	bge.n	800e468 <__ieee754_hypot+0x2c>
 800e45a:	462b      	mov	r3, r5
 800e45c:	ee11 0a10 	vmov	r0, s2
 800e460:	ee10 6a10 	vmov	r6, s0
 800e464:	4625      	mov	r5, r4
 800e466:	461c      	mov	r4, r3
 800e468:	1b2b      	subs	r3, r5, r4
 800e46a:	f1b3 7f70 	cmp.w	r3, #62914560	; 0x3c00000
 800e46e:	4629      	mov	r1, r5
 800e470:	4680      	mov	r8, r0
 800e472:	46a9      	mov	r9, r5
 800e474:	4627      	mov	r7, r4
 800e476:	dd06      	ble.n	800e486 <__ieee754_hypot+0x4a>
 800e478:	4632      	mov	r2, r6
 800e47a:	4623      	mov	r3, r4
 800e47c:	f7f1 ff76 	bl	800036c <__adddf3>
 800e480:	4680      	mov	r8, r0
 800e482:	4689      	mov	r9, r1
 800e484:	e01a      	b.n	800e4bc <__ieee754_hypot+0x80>
 800e486:	4b79      	ldr	r3, [pc, #484]	; (800e66c <__ieee754_hypot+0x230>)
 800e488:	429d      	cmp	r5, r3
 800e48a:	f340 809d 	ble.w	800e5c8 <__ieee754_hypot+0x18c>
 800e48e:	4b78      	ldr	r3, [pc, #480]	; (800e670 <__ieee754_hypot+0x234>)
 800e490:	429d      	cmp	r5, r3
 800e492:	dd1a      	ble.n	800e4ca <__ieee754_hypot+0x8e>
 800e494:	f3c5 0513 	ubfx	r5, r5, #0, #20
 800e498:	4603      	mov	r3, r0
 800e49a:	432b      	orrs	r3, r5
 800e49c:	d005      	beq.n	800e4aa <__ieee754_hypot+0x6e>
 800e49e:	4632      	mov	r2, r6
 800e4a0:	4623      	mov	r3, r4
 800e4a2:	f7f1 ff63 	bl	800036c <__adddf3>
 800e4a6:	4680      	mov	r8, r0
 800e4a8:	4689      	mov	r9, r1
 800e4aa:	f084 44ff 	eor.w	r4, r4, #2139095040	; 0x7f800000
 800e4ae:	f484 04e0 	eor.w	r4, r4, #7340032	; 0x700000
 800e4b2:	4633      	mov	r3, r6
 800e4b4:	4323      	orrs	r3, r4
 800e4b6:	d101      	bne.n	800e4bc <__ieee754_hypot+0x80>
 800e4b8:	46b0      	mov	r8, r6
 800e4ba:	46b9      	mov	r9, r7
 800e4bc:	ec49 8b10 	vmov	d0, r8, r9
 800e4c0:	b005      	add	sp, #20
 800e4c2:	ecbd 8b06 	vpop	{d8-d10}
 800e4c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e4ca:	f1a5 5516 	sub.w	r5, r5, #629145600	; 0x25800000
 800e4ce:	f1a4 5416 	sub.w	r4, r4, #629145600	; 0x25800000
 800e4d2:	46a9      	mov	r9, r5
 800e4d4:	4627      	mov	r7, r4
 800e4d6:	f44f 7316 	mov.w	r3, #600	; 0x258
 800e4da:	9301      	str	r3, [sp, #4]
 800e4dc:	4b65      	ldr	r3, [pc, #404]	; (800e674 <__ieee754_hypot+0x238>)
 800e4de:	429c      	cmp	r4, r3
 800e4e0:	dc19      	bgt.n	800e516 <__ieee754_hypot+0xda>
 800e4e2:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 800e4e6:	da71      	bge.n	800e5cc <__ieee754_hypot+0x190>
 800e4e8:	4633      	mov	r3, r6
 800e4ea:	4323      	orrs	r3, r4
 800e4ec:	d0e6      	beq.n	800e4bc <__ieee754_hypot+0x80>
 800e4ee:	4b62      	ldr	r3, [pc, #392]	; (800e678 <__ieee754_hypot+0x23c>)
 800e4f0:	2200      	movs	r2, #0
 800e4f2:	4630      	mov	r0, r6
 800e4f4:	4639      	mov	r1, r7
 800e4f6:	f7f2 f8ef 	bl	80006d8 <__aeabi_dmul>
 800e4fa:	4b5f      	ldr	r3, [pc, #380]	; (800e678 <__ieee754_hypot+0x23c>)
 800e4fc:	4606      	mov	r6, r0
 800e4fe:	460f      	mov	r7, r1
 800e500:	4640      	mov	r0, r8
 800e502:	4649      	mov	r1, r9
 800e504:	2200      	movs	r2, #0
 800e506:	f7f2 f8e7 	bl	80006d8 <__aeabi_dmul>
 800e50a:	9b01      	ldr	r3, [sp, #4]
 800e50c:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 800e510:	4680      	mov	r8, r0
 800e512:	4689      	mov	r9, r1
 800e514:	9301      	str	r3, [sp, #4]
 800e516:	4632      	mov	r2, r6
 800e518:	463b      	mov	r3, r7
 800e51a:	4640      	mov	r0, r8
 800e51c:	4649      	mov	r1, r9
 800e51e:	f7f1 ff23 	bl	8000368 <__aeabi_dsub>
 800e522:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800e526:	4602      	mov	r2, r0
 800e528:	460b      	mov	r3, r1
 800e52a:	4630      	mov	r0, r6
 800e52c:	4639      	mov	r1, r7
 800e52e:	f7f2 fb45 	bl	8000bbc <__aeabi_dcmplt>
 800e532:	2200      	movs	r2, #0
 800e534:	2800      	cmp	r0, #0
 800e536:	d054      	beq.n	800e5e2 <__ieee754_hypot+0x1a6>
 800e538:	462b      	mov	r3, r5
 800e53a:	4610      	mov	r0, r2
 800e53c:	4629      	mov	r1, r5
 800e53e:	4614      	mov	r4, r2
 800e540:	f7f2 f8ca 	bl	80006d8 <__aeabi_dmul>
 800e544:	4632      	mov	r2, r6
 800e546:	463b      	mov	r3, r7
 800e548:	4682      	mov	sl, r0
 800e54a:	468b      	mov	fp, r1
 800e54c:	4630      	mov	r0, r6
 800e54e:	f107 4100 	add.w	r1, r7, #2147483648	; 0x80000000
 800e552:	f7f2 f8c1 	bl	80006d8 <__aeabi_dmul>
 800e556:	4622      	mov	r2, r4
 800e558:	4606      	mov	r6, r0
 800e55a:	460f      	mov	r7, r1
 800e55c:	462b      	mov	r3, r5
 800e55e:	4640      	mov	r0, r8
 800e560:	4649      	mov	r1, r9
 800e562:	f7f1 ff03 	bl	800036c <__adddf3>
 800e566:	4622      	mov	r2, r4
 800e568:	ec41 0b18 	vmov	d8, r0, r1
 800e56c:	462b      	mov	r3, r5
 800e56e:	4640      	mov	r0, r8
 800e570:	4649      	mov	r1, r9
 800e572:	f7f1 fef9 	bl	8000368 <__aeabi_dsub>
 800e576:	4602      	mov	r2, r0
 800e578:	460b      	mov	r3, r1
 800e57a:	ec51 0b18 	vmov	r0, r1, d8
 800e57e:	f7f2 f8ab 	bl	80006d8 <__aeabi_dmul>
 800e582:	4602      	mov	r2, r0
 800e584:	460b      	mov	r3, r1
 800e586:	4630      	mov	r0, r6
 800e588:	4639      	mov	r1, r7
 800e58a:	f7f1 feed 	bl	8000368 <__aeabi_dsub>
 800e58e:	4602      	mov	r2, r0
 800e590:	460b      	mov	r3, r1
 800e592:	4650      	mov	r0, sl
 800e594:	4659      	mov	r1, fp
 800e596:	f7f1 fee7 	bl	8000368 <__aeabi_dsub>
 800e59a:	ec41 0b10 	vmov	d0, r0, r1
 800e59e:	f000 fa7b 	bl	800ea98 <__ieee754_sqrt>
 800e5a2:	9b01      	ldr	r3, [sp, #4]
 800e5a4:	ec59 8b10 	vmov	r8, r9, d0
 800e5a8:	2b00      	cmp	r3, #0
 800e5aa:	d087      	beq.n	800e4bc <__ieee754_hypot+0x80>
 800e5ac:	051b      	lsls	r3, r3, #20
 800e5ae:	f103 517f 	add.w	r1, r3, #1069547520	; 0x3fc00000
 800e5b2:	2000      	movs	r0, #0
 800e5b4:	f501 1140 	add.w	r1, r1, #3145728	; 0x300000
 800e5b8:	4602      	mov	r2, r0
 800e5ba:	460b      	mov	r3, r1
 800e5bc:	ee10 0a10 	vmov	r0, s0
 800e5c0:	4649      	mov	r1, r9
 800e5c2:	f7f2 f889 	bl	80006d8 <__aeabi_dmul>
 800e5c6:	e75b      	b.n	800e480 <__ieee754_hypot+0x44>
 800e5c8:	2300      	movs	r3, #0
 800e5ca:	e786      	b.n	800e4da <__ieee754_hypot+0x9e>
 800e5cc:	9b01      	ldr	r3, [sp, #4]
 800e5ce:	f105 5516 	add.w	r5, r5, #629145600	; 0x25800000
 800e5d2:	f104 5416 	add.w	r4, r4, #629145600	; 0x25800000
 800e5d6:	f5a3 7316 	sub.w	r3, r3, #600	; 0x258
 800e5da:	9301      	str	r3, [sp, #4]
 800e5dc:	46a9      	mov	r9, r5
 800e5de:	4627      	mov	r7, r4
 800e5e0:	e799      	b.n	800e516 <__ieee754_hypot+0xda>
 800e5e2:	4623      	mov	r3, r4
 800e5e4:	ec43 2b18 	vmov	d8, r2, r3
 800e5e8:	f505 1b80 	add.w	fp, r5, #1048576	; 0x100000
 800e5ec:	f04f 0a00 	mov.w	sl, #0
 800e5f0:	4652      	mov	r2, sl
 800e5f2:	465b      	mov	r3, fp
 800e5f4:	ec51 0b18 	vmov	r0, r1, d8
 800e5f8:	f7f2 f86e 	bl	80006d8 <__aeabi_dmul>
 800e5fc:	ec41 0b19 	vmov	d9, r0, r1
 800e600:	e9dd 0302 	ldrd	r0, r3, [sp, #8]
 800e604:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800e608:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800e60c:	f7f2 f864 	bl	80006d8 <__aeabi_dmul>
 800e610:	4642      	mov	r2, r8
 800e612:	ec41 0b1a 	vmov	d10, r0, r1
 800e616:	464b      	mov	r3, r9
 800e618:	4640      	mov	r0, r8
 800e61a:	4649      	mov	r1, r9
 800e61c:	f7f1 fea6 	bl	800036c <__adddf3>
 800e620:	4652      	mov	r2, sl
 800e622:	465b      	mov	r3, fp
 800e624:	f7f1 fea0 	bl	8000368 <__aeabi_dsub>
 800e628:	4632      	mov	r2, r6
 800e62a:	463b      	mov	r3, r7
 800e62c:	f7f2 f854 	bl	80006d8 <__aeabi_dmul>
 800e630:	ec53 2b18 	vmov	r2, r3, d8
 800e634:	4604      	mov	r4, r0
 800e636:	460d      	mov	r5, r1
 800e638:	4630      	mov	r0, r6
 800e63a:	4639      	mov	r1, r7
 800e63c:	f7f1 fe94 	bl	8000368 <__aeabi_dsub>
 800e640:	4652      	mov	r2, sl
 800e642:	465b      	mov	r3, fp
 800e644:	f7f2 f848 	bl	80006d8 <__aeabi_dmul>
 800e648:	4602      	mov	r2, r0
 800e64a:	460b      	mov	r3, r1
 800e64c:	4620      	mov	r0, r4
 800e64e:	4629      	mov	r1, r5
 800e650:	f7f1 fe8c 	bl	800036c <__adddf3>
 800e654:	4602      	mov	r2, r0
 800e656:	460b      	mov	r3, r1
 800e658:	ec51 0b1a 	vmov	r0, r1, d10
 800e65c:	f7f1 fe84 	bl	8000368 <__aeabi_dsub>
 800e660:	4602      	mov	r2, r0
 800e662:	460b      	mov	r3, r1
 800e664:	ec51 0b19 	vmov	r0, r1, d9
 800e668:	e795      	b.n	800e596 <__ieee754_hypot+0x15a>
 800e66a:	bf00      	nop
 800e66c:	5f300000 	.word	0x5f300000
 800e670:	7fefffff 	.word	0x7fefffff
 800e674:	20afffff 	.word	0x20afffff
 800e678:	7fd00000 	.word	0x7fd00000
 800e67c:	00000000 	.word	0x00000000

0800e680 <__ieee754_rem_pio2>:
 800e680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e684:	ed2d 8b02 	vpush	{d8}
 800e688:	ec55 4b10 	vmov	r4, r5, d0
 800e68c:	4bca      	ldr	r3, [pc, #808]	; (800e9b8 <__ieee754_rem_pio2+0x338>)
 800e68e:	b08b      	sub	sp, #44	; 0x2c
 800e690:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 800e694:	4598      	cmp	r8, r3
 800e696:	4682      	mov	sl, r0
 800e698:	9502      	str	r5, [sp, #8]
 800e69a:	dc08      	bgt.n	800e6ae <__ieee754_rem_pio2+0x2e>
 800e69c:	2200      	movs	r2, #0
 800e69e:	2300      	movs	r3, #0
 800e6a0:	ed80 0b00 	vstr	d0, [r0]
 800e6a4:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800e6a8:	f04f 0b00 	mov.w	fp, #0
 800e6ac:	e028      	b.n	800e700 <__ieee754_rem_pio2+0x80>
 800e6ae:	4bc3      	ldr	r3, [pc, #780]	; (800e9bc <__ieee754_rem_pio2+0x33c>)
 800e6b0:	4598      	cmp	r8, r3
 800e6b2:	dc78      	bgt.n	800e7a6 <__ieee754_rem_pio2+0x126>
 800e6b4:	9b02      	ldr	r3, [sp, #8]
 800e6b6:	4ec2      	ldr	r6, [pc, #776]	; (800e9c0 <__ieee754_rem_pio2+0x340>)
 800e6b8:	2b00      	cmp	r3, #0
 800e6ba:	ee10 0a10 	vmov	r0, s0
 800e6be:	a3b0      	add	r3, pc, #704	; (adr r3, 800e980 <__ieee754_rem_pio2+0x300>)
 800e6c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e6c4:	4629      	mov	r1, r5
 800e6c6:	dd39      	ble.n	800e73c <__ieee754_rem_pio2+0xbc>
 800e6c8:	f7f1 fe4e 	bl	8000368 <__aeabi_dsub>
 800e6cc:	45b0      	cmp	r8, r6
 800e6ce:	4604      	mov	r4, r0
 800e6d0:	460d      	mov	r5, r1
 800e6d2:	d01b      	beq.n	800e70c <__ieee754_rem_pio2+0x8c>
 800e6d4:	a3ac      	add	r3, pc, #688	; (adr r3, 800e988 <__ieee754_rem_pio2+0x308>)
 800e6d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e6da:	f7f1 fe45 	bl	8000368 <__aeabi_dsub>
 800e6de:	4602      	mov	r2, r0
 800e6e0:	460b      	mov	r3, r1
 800e6e2:	e9ca 2300 	strd	r2, r3, [sl]
 800e6e6:	4620      	mov	r0, r4
 800e6e8:	4629      	mov	r1, r5
 800e6ea:	f7f1 fe3d 	bl	8000368 <__aeabi_dsub>
 800e6ee:	a3a6      	add	r3, pc, #664	; (adr r3, 800e988 <__ieee754_rem_pio2+0x308>)
 800e6f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e6f4:	f7f1 fe38 	bl	8000368 <__aeabi_dsub>
 800e6f8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800e6fc:	f04f 0b01 	mov.w	fp, #1
 800e700:	4658      	mov	r0, fp
 800e702:	b00b      	add	sp, #44	; 0x2c
 800e704:	ecbd 8b02 	vpop	{d8}
 800e708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e70c:	a3a0      	add	r3, pc, #640	; (adr r3, 800e990 <__ieee754_rem_pio2+0x310>)
 800e70e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e712:	f7f1 fe29 	bl	8000368 <__aeabi_dsub>
 800e716:	a3a0      	add	r3, pc, #640	; (adr r3, 800e998 <__ieee754_rem_pio2+0x318>)
 800e718:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e71c:	4604      	mov	r4, r0
 800e71e:	460d      	mov	r5, r1
 800e720:	f7f1 fe22 	bl	8000368 <__aeabi_dsub>
 800e724:	4602      	mov	r2, r0
 800e726:	460b      	mov	r3, r1
 800e728:	e9ca 2300 	strd	r2, r3, [sl]
 800e72c:	4620      	mov	r0, r4
 800e72e:	4629      	mov	r1, r5
 800e730:	f7f1 fe1a 	bl	8000368 <__aeabi_dsub>
 800e734:	a398      	add	r3, pc, #608	; (adr r3, 800e998 <__ieee754_rem_pio2+0x318>)
 800e736:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e73a:	e7db      	b.n	800e6f4 <__ieee754_rem_pio2+0x74>
 800e73c:	f7f1 fe16 	bl	800036c <__adddf3>
 800e740:	45b0      	cmp	r8, r6
 800e742:	4604      	mov	r4, r0
 800e744:	460d      	mov	r5, r1
 800e746:	d016      	beq.n	800e776 <__ieee754_rem_pio2+0xf6>
 800e748:	a38f      	add	r3, pc, #572	; (adr r3, 800e988 <__ieee754_rem_pio2+0x308>)
 800e74a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e74e:	f7f1 fe0d 	bl	800036c <__adddf3>
 800e752:	4602      	mov	r2, r0
 800e754:	460b      	mov	r3, r1
 800e756:	e9ca 2300 	strd	r2, r3, [sl]
 800e75a:	4620      	mov	r0, r4
 800e75c:	4629      	mov	r1, r5
 800e75e:	f7f1 fe03 	bl	8000368 <__aeabi_dsub>
 800e762:	a389      	add	r3, pc, #548	; (adr r3, 800e988 <__ieee754_rem_pio2+0x308>)
 800e764:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e768:	f7f1 fe00 	bl	800036c <__adddf3>
 800e76c:	f04f 3bff 	mov.w	fp, #4294967295
 800e770:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800e774:	e7c4      	b.n	800e700 <__ieee754_rem_pio2+0x80>
 800e776:	a386      	add	r3, pc, #536	; (adr r3, 800e990 <__ieee754_rem_pio2+0x310>)
 800e778:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e77c:	f7f1 fdf6 	bl	800036c <__adddf3>
 800e780:	a385      	add	r3, pc, #532	; (adr r3, 800e998 <__ieee754_rem_pio2+0x318>)
 800e782:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e786:	4604      	mov	r4, r0
 800e788:	460d      	mov	r5, r1
 800e78a:	f7f1 fdef 	bl	800036c <__adddf3>
 800e78e:	4602      	mov	r2, r0
 800e790:	460b      	mov	r3, r1
 800e792:	e9ca 2300 	strd	r2, r3, [sl]
 800e796:	4620      	mov	r0, r4
 800e798:	4629      	mov	r1, r5
 800e79a:	f7f1 fde5 	bl	8000368 <__aeabi_dsub>
 800e79e:	a37e      	add	r3, pc, #504	; (adr r3, 800e998 <__ieee754_rem_pio2+0x318>)
 800e7a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e7a4:	e7e0      	b.n	800e768 <__ieee754_rem_pio2+0xe8>
 800e7a6:	4b87      	ldr	r3, [pc, #540]	; (800e9c4 <__ieee754_rem_pio2+0x344>)
 800e7a8:	4598      	cmp	r8, r3
 800e7aa:	f300 80d9 	bgt.w	800e960 <__ieee754_rem_pio2+0x2e0>
 800e7ae:	f001 f89f 	bl	800f8f0 <fabs>
 800e7b2:	ec55 4b10 	vmov	r4, r5, d0
 800e7b6:	ee10 0a10 	vmov	r0, s0
 800e7ba:	a379      	add	r3, pc, #484	; (adr r3, 800e9a0 <__ieee754_rem_pio2+0x320>)
 800e7bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e7c0:	4629      	mov	r1, r5
 800e7c2:	f7f1 ff89 	bl	80006d8 <__aeabi_dmul>
 800e7c6:	4b80      	ldr	r3, [pc, #512]	; (800e9c8 <__ieee754_rem_pio2+0x348>)
 800e7c8:	2200      	movs	r2, #0
 800e7ca:	f7f1 fdcf 	bl	800036c <__adddf3>
 800e7ce:	f7f2 fa33 	bl	8000c38 <__aeabi_d2iz>
 800e7d2:	4683      	mov	fp, r0
 800e7d4:	f7f1 ff16 	bl	8000604 <__aeabi_i2d>
 800e7d8:	4602      	mov	r2, r0
 800e7da:	460b      	mov	r3, r1
 800e7dc:	ec43 2b18 	vmov	d8, r2, r3
 800e7e0:	a367      	add	r3, pc, #412	; (adr r3, 800e980 <__ieee754_rem_pio2+0x300>)
 800e7e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e7e6:	f7f1 ff77 	bl	80006d8 <__aeabi_dmul>
 800e7ea:	4602      	mov	r2, r0
 800e7ec:	460b      	mov	r3, r1
 800e7ee:	4620      	mov	r0, r4
 800e7f0:	4629      	mov	r1, r5
 800e7f2:	f7f1 fdb9 	bl	8000368 <__aeabi_dsub>
 800e7f6:	a364      	add	r3, pc, #400	; (adr r3, 800e988 <__ieee754_rem_pio2+0x308>)
 800e7f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e7fc:	4606      	mov	r6, r0
 800e7fe:	460f      	mov	r7, r1
 800e800:	ec51 0b18 	vmov	r0, r1, d8
 800e804:	f7f1 ff68 	bl	80006d8 <__aeabi_dmul>
 800e808:	f1bb 0f1f 	cmp.w	fp, #31
 800e80c:	4604      	mov	r4, r0
 800e80e:	460d      	mov	r5, r1
 800e810:	dc0d      	bgt.n	800e82e <__ieee754_rem_pio2+0x1ae>
 800e812:	4b6e      	ldr	r3, [pc, #440]	; (800e9cc <__ieee754_rem_pio2+0x34c>)
 800e814:	f10b 32ff 	add.w	r2, fp, #4294967295
 800e818:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e81c:	4543      	cmp	r3, r8
 800e81e:	d006      	beq.n	800e82e <__ieee754_rem_pio2+0x1ae>
 800e820:	4622      	mov	r2, r4
 800e822:	462b      	mov	r3, r5
 800e824:	4630      	mov	r0, r6
 800e826:	4639      	mov	r1, r7
 800e828:	f7f1 fd9e 	bl	8000368 <__aeabi_dsub>
 800e82c:	e00f      	b.n	800e84e <__ieee754_rem_pio2+0x1ce>
 800e82e:	462b      	mov	r3, r5
 800e830:	4622      	mov	r2, r4
 800e832:	4630      	mov	r0, r6
 800e834:	4639      	mov	r1, r7
 800e836:	f7f1 fd97 	bl	8000368 <__aeabi_dsub>
 800e83a:	ea4f 5328 	mov.w	r3, r8, asr #20
 800e83e:	9303      	str	r3, [sp, #12]
 800e840:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800e844:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 800e848:	f1b8 0f10 	cmp.w	r8, #16
 800e84c:	dc02      	bgt.n	800e854 <__ieee754_rem_pio2+0x1d4>
 800e84e:	e9ca 0100 	strd	r0, r1, [sl]
 800e852:	e039      	b.n	800e8c8 <__ieee754_rem_pio2+0x248>
 800e854:	a34e      	add	r3, pc, #312	; (adr r3, 800e990 <__ieee754_rem_pio2+0x310>)
 800e856:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e85a:	ec51 0b18 	vmov	r0, r1, d8
 800e85e:	f7f1 ff3b 	bl	80006d8 <__aeabi_dmul>
 800e862:	4604      	mov	r4, r0
 800e864:	460d      	mov	r5, r1
 800e866:	4602      	mov	r2, r0
 800e868:	460b      	mov	r3, r1
 800e86a:	4630      	mov	r0, r6
 800e86c:	4639      	mov	r1, r7
 800e86e:	f7f1 fd7b 	bl	8000368 <__aeabi_dsub>
 800e872:	4602      	mov	r2, r0
 800e874:	460b      	mov	r3, r1
 800e876:	4680      	mov	r8, r0
 800e878:	4689      	mov	r9, r1
 800e87a:	4630      	mov	r0, r6
 800e87c:	4639      	mov	r1, r7
 800e87e:	f7f1 fd73 	bl	8000368 <__aeabi_dsub>
 800e882:	4622      	mov	r2, r4
 800e884:	462b      	mov	r3, r5
 800e886:	f7f1 fd6f 	bl	8000368 <__aeabi_dsub>
 800e88a:	a343      	add	r3, pc, #268	; (adr r3, 800e998 <__ieee754_rem_pio2+0x318>)
 800e88c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e890:	4604      	mov	r4, r0
 800e892:	460d      	mov	r5, r1
 800e894:	ec51 0b18 	vmov	r0, r1, d8
 800e898:	f7f1 ff1e 	bl	80006d8 <__aeabi_dmul>
 800e89c:	4622      	mov	r2, r4
 800e89e:	462b      	mov	r3, r5
 800e8a0:	f7f1 fd62 	bl	8000368 <__aeabi_dsub>
 800e8a4:	4602      	mov	r2, r0
 800e8a6:	460b      	mov	r3, r1
 800e8a8:	4604      	mov	r4, r0
 800e8aa:	460d      	mov	r5, r1
 800e8ac:	4640      	mov	r0, r8
 800e8ae:	4649      	mov	r1, r9
 800e8b0:	f7f1 fd5a 	bl	8000368 <__aeabi_dsub>
 800e8b4:	9a03      	ldr	r2, [sp, #12]
 800e8b6:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800e8ba:	1ad3      	subs	r3, r2, r3
 800e8bc:	2b31      	cmp	r3, #49	; 0x31
 800e8be:	dc24      	bgt.n	800e90a <__ieee754_rem_pio2+0x28a>
 800e8c0:	e9ca 0100 	strd	r0, r1, [sl]
 800e8c4:	4646      	mov	r6, r8
 800e8c6:	464f      	mov	r7, r9
 800e8c8:	e9da 8900 	ldrd	r8, r9, [sl]
 800e8cc:	4630      	mov	r0, r6
 800e8ce:	4642      	mov	r2, r8
 800e8d0:	464b      	mov	r3, r9
 800e8d2:	4639      	mov	r1, r7
 800e8d4:	f7f1 fd48 	bl	8000368 <__aeabi_dsub>
 800e8d8:	462b      	mov	r3, r5
 800e8da:	4622      	mov	r2, r4
 800e8dc:	f7f1 fd44 	bl	8000368 <__aeabi_dsub>
 800e8e0:	9b02      	ldr	r3, [sp, #8]
 800e8e2:	2b00      	cmp	r3, #0
 800e8e4:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800e8e8:	f6bf af0a 	bge.w	800e700 <__ieee754_rem_pio2+0x80>
 800e8ec:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800e8f0:	f8ca 3004 	str.w	r3, [sl, #4]
 800e8f4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800e8f8:	f8ca 8000 	str.w	r8, [sl]
 800e8fc:	f8ca 0008 	str.w	r0, [sl, #8]
 800e900:	f8ca 300c 	str.w	r3, [sl, #12]
 800e904:	f1cb 0b00 	rsb	fp, fp, #0
 800e908:	e6fa      	b.n	800e700 <__ieee754_rem_pio2+0x80>
 800e90a:	a327      	add	r3, pc, #156	; (adr r3, 800e9a8 <__ieee754_rem_pio2+0x328>)
 800e90c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e910:	ec51 0b18 	vmov	r0, r1, d8
 800e914:	f7f1 fee0 	bl	80006d8 <__aeabi_dmul>
 800e918:	4604      	mov	r4, r0
 800e91a:	460d      	mov	r5, r1
 800e91c:	4602      	mov	r2, r0
 800e91e:	460b      	mov	r3, r1
 800e920:	4640      	mov	r0, r8
 800e922:	4649      	mov	r1, r9
 800e924:	f7f1 fd20 	bl	8000368 <__aeabi_dsub>
 800e928:	4602      	mov	r2, r0
 800e92a:	460b      	mov	r3, r1
 800e92c:	4606      	mov	r6, r0
 800e92e:	460f      	mov	r7, r1
 800e930:	4640      	mov	r0, r8
 800e932:	4649      	mov	r1, r9
 800e934:	f7f1 fd18 	bl	8000368 <__aeabi_dsub>
 800e938:	4622      	mov	r2, r4
 800e93a:	462b      	mov	r3, r5
 800e93c:	f7f1 fd14 	bl	8000368 <__aeabi_dsub>
 800e940:	a31b      	add	r3, pc, #108	; (adr r3, 800e9b0 <__ieee754_rem_pio2+0x330>)
 800e942:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e946:	4604      	mov	r4, r0
 800e948:	460d      	mov	r5, r1
 800e94a:	ec51 0b18 	vmov	r0, r1, d8
 800e94e:	f7f1 fec3 	bl	80006d8 <__aeabi_dmul>
 800e952:	4622      	mov	r2, r4
 800e954:	462b      	mov	r3, r5
 800e956:	f7f1 fd07 	bl	8000368 <__aeabi_dsub>
 800e95a:	4604      	mov	r4, r0
 800e95c:	460d      	mov	r5, r1
 800e95e:	e75f      	b.n	800e820 <__ieee754_rem_pio2+0x1a0>
 800e960:	4b1b      	ldr	r3, [pc, #108]	; (800e9d0 <__ieee754_rem_pio2+0x350>)
 800e962:	4598      	cmp	r8, r3
 800e964:	dd36      	ble.n	800e9d4 <__ieee754_rem_pio2+0x354>
 800e966:	ee10 2a10 	vmov	r2, s0
 800e96a:	462b      	mov	r3, r5
 800e96c:	4620      	mov	r0, r4
 800e96e:	4629      	mov	r1, r5
 800e970:	f7f1 fcfa 	bl	8000368 <__aeabi_dsub>
 800e974:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800e978:	e9ca 0100 	strd	r0, r1, [sl]
 800e97c:	e694      	b.n	800e6a8 <__ieee754_rem_pio2+0x28>
 800e97e:	bf00      	nop
 800e980:	54400000 	.word	0x54400000
 800e984:	3ff921fb 	.word	0x3ff921fb
 800e988:	1a626331 	.word	0x1a626331
 800e98c:	3dd0b461 	.word	0x3dd0b461
 800e990:	1a600000 	.word	0x1a600000
 800e994:	3dd0b461 	.word	0x3dd0b461
 800e998:	2e037073 	.word	0x2e037073
 800e99c:	3ba3198a 	.word	0x3ba3198a
 800e9a0:	6dc9c883 	.word	0x6dc9c883
 800e9a4:	3fe45f30 	.word	0x3fe45f30
 800e9a8:	2e000000 	.word	0x2e000000
 800e9ac:	3ba3198a 	.word	0x3ba3198a
 800e9b0:	252049c1 	.word	0x252049c1
 800e9b4:	397b839a 	.word	0x397b839a
 800e9b8:	3fe921fb 	.word	0x3fe921fb
 800e9bc:	4002d97b 	.word	0x4002d97b
 800e9c0:	3ff921fb 	.word	0x3ff921fb
 800e9c4:	413921fb 	.word	0x413921fb
 800e9c8:	3fe00000 	.word	0x3fe00000
 800e9cc:	08028a70 	.word	0x08028a70
 800e9d0:	7fefffff 	.word	0x7fefffff
 800e9d4:	ea4f 5428 	mov.w	r4, r8, asr #20
 800e9d8:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 800e9dc:	ee10 0a10 	vmov	r0, s0
 800e9e0:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 800e9e4:	ee10 6a10 	vmov	r6, s0
 800e9e8:	460f      	mov	r7, r1
 800e9ea:	f7f2 f925 	bl	8000c38 <__aeabi_d2iz>
 800e9ee:	f7f1 fe09 	bl	8000604 <__aeabi_i2d>
 800e9f2:	4602      	mov	r2, r0
 800e9f4:	460b      	mov	r3, r1
 800e9f6:	4630      	mov	r0, r6
 800e9f8:	4639      	mov	r1, r7
 800e9fa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800e9fe:	f7f1 fcb3 	bl	8000368 <__aeabi_dsub>
 800ea02:	4b23      	ldr	r3, [pc, #140]	; (800ea90 <__ieee754_rem_pio2+0x410>)
 800ea04:	2200      	movs	r2, #0
 800ea06:	f7f1 fe67 	bl	80006d8 <__aeabi_dmul>
 800ea0a:	460f      	mov	r7, r1
 800ea0c:	4606      	mov	r6, r0
 800ea0e:	f7f2 f913 	bl	8000c38 <__aeabi_d2iz>
 800ea12:	f7f1 fdf7 	bl	8000604 <__aeabi_i2d>
 800ea16:	4602      	mov	r2, r0
 800ea18:	460b      	mov	r3, r1
 800ea1a:	4630      	mov	r0, r6
 800ea1c:	4639      	mov	r1, r7
 800ea1e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800ea22:	f7f1 fca1 	bl	8000368 <__aeabi_dsub>
 800ea26:	4b1a      	ldr	r3, [pc, #104]	; (800ea90 <__ieee754_rem_pio2+0x410>)
 800ea28:	2200      	movs	r2, #0
 800ea2a:	f7f1 fe55 	bl	80006d8 <__aeabi_dmul>
 800ea2e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800ea32:	ad04      	add	r5, sp, #16
 800ea34:	f04f 0803 	mov.w	r8, #3
 800ea38:	46a9      	mov	r9, r5
 800ea3a:	2600      	movs	r6, #0
 800ea3c:	2700      	movs	r7, #0
 800ea3e:	4632      	mov	r2, r6
 800ea40:	463b      	mov	r3, r7
 800ea42:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 800ea46:	46c3      	mov	fp, r8
 800ea48:	3d08      	subs	r5, #8
 800ea4a:	f108 38ff 	add.w	r8, r8, #4294967295
 800ea4e:	f7f2 f8ab 	bl	8000ba8 <__aeabi_dcmpeq>
 800ea52:	2800      	cmp	r0, #0
 800ea54:	d1f3      	bne.n	800ea3e <__ieee754_rem_pio2+0x3be>
 800ea56:	4b0f      	ldr	r3, [pc, #60]	; (800ea94 <__ieee754_rem_pio2+0x414>)
 800ea58:	9301      	str	r3, [sp, #4]
 800ea5a:	2302      	movs	r3, #2
 800ea5c:	9300      	str	r3, [sp, #0]
 800ea5e:	4622      	mov	r2, r4
 800ea60:	465b      	mov	r3, fp
 800ea62:	4651      	mov	r1, sl
 800ea64:	4648      	mov	r0, r9
 800ea66:	f000 f993 	bl	800ed90 <__kernel_rem_pio2>
 800ea6a:	9b02      	ldr	r3, [sp, #8]
 800ea6c:	2b00      	cmp	r3, #0
 800ea6e:	4683      	mov	fp, r0
 800ea70:	f6bf ae46 	bge.w	800e700 <__ieee754_rem_pio2+0x80>
 800ea74:	e9da 2100 	ldrd	r2, r1, [sl]
 800ea78:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ea7c:	e9ca 2300 	strd	r2, r3, [sl]
 800ea80:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 800ea84:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ea88:	e9ca 2302 	strd	r2, r3, [sl, #8]
 800ea8c:	e73a      	b.n	800e904 <__ieee754_rem_pio2+0x284>
 800ea8e:	bf00      	nop
 800ea90:	41700000 	.word	0x41700000
 800ea94:	08028af0 	.word	0x08028af0

0800ea98 <__ieee754_sqrt>:
 800ea98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea9c:	ec55 4b10 	vmov	r4, r5, d0
 800eaa0:	4e55      	ldr	r6, [pc, #340]	; (800ebf8 <__ieee754_sqrt+0x160>)
 800eaa2:	43ae      	bics	r6, r5
 800eaa4:	ee10 0a10 	vmov	r0, s0
 800eaa8:	ee10 3a10 	vmov	r3, s0
 800eaac:	462a      	mov	r2, r5
 800eaae:	4629      	mov	r1, r5
 800eab0:	d110      	bne.n	800ead4 <__ieee754_sqrt+0x3c>
 800eab2:	ee10 2a10 	vmov	r2, s0
 800eab6:	462b      	mov	r3, r5
 800eab8:	f7f1 fe0e 	bl	80006d8 <__aeabi_dmul>
 800eabc:	4602      	mov	r2, r0
 800eabe:	460b      	mov	r3, r1
 800eac0:	4620      	mov	r0, r4
 800eac2:	4629      	mov	r1, r5
 800eac4:	f7f1 fc52 	bl	800036c <__adddf3>
 800eac8:	4604      	mov	r4, r0
 800eaca:	460d      	mov	r5, r1
 800eacc:	ec45 4b10 	vmov	d0, r4, r5
 800ead0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ead4:	2d00      	cmp	r5, #0
 800ead6:	dc10      	bgt.n	800eafa <__ieee754_sqrt+0x62>
 800ead8:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800eadc:	4330      	orrs	r0, r6
 800eade:	d0f5      	beq.n	800eacc <__ieee754_sqrt+0x34>
 800eae0:	b15d      	cbz	r5, 800eafa <__ieee754_sqrt+0x62>
 800eae2:	ee10 2a10 	vmov	r2, s0
 800eae6:	462b      	mov	r3, r5
 800eae8:	ee10 0a10 	vmov	r0, s0
 800eaec:	f7f1 fc3c 	bl	8000368 <__aeabi_dsub>
 800eaf0:	4602      	mov	r2, r0
 800eaf2:	460b      	mov	r3, r1
 800eaf4:	f7f1 ff1a 	bl	800092c <__aeabi_ddiv>
 800eaf8:	e7e6      	b.n	800eac8 <__ieee754_sqrt+0x30>
 800eafa:	1512      	asrs	r2, r2, #20
 800eafc:	d074      	beq.n	800ebe8 <__ieee754_sqrt+0x150>
 800eafe:	07d4      	lsls	r4, r2, #31
 800eb00:	f3c1 0113 	ubfx	r1, r1, #0, #20
 800eb04:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 800eb08:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800eb0c:	bf5e      	ittt	pl
 800eb0e:	0fda      	lsrpl	r2, r3, #31
 800eb10:	005b      	lslpl	r3, r3, #1
 800eb12:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 800eb16:	2400      	movs	r4, #0
 800eb18:	0fda      	lsrs	r2, r3, #31
 800eb1a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800eb1e:	107f      	asrs	r7, r7, #1
 800eb20:	005b      	lsls	r3, r3, #1
 800eb22:	2516      	movs	r5, #22
 800eb24:	4620      	mov	r0, r4
 800eb26:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 800eb2a:	1886      	adds	r6, r0, r2
 800eb2c:	428e      	cmp	r6, r1
 800eb2e:	bfde      	ittt	le
 800eb30:	1b89      	suble	r1, r1, r6
 800eb32:	18b0      	addle	r0, r6, r2
 800eb34:	18a4      	addle	r4, r4, r2
 800eb36:	0049      	lsls	r1, r1, #1
 800eb38:	3d01      	subs	r5, #1
 800eb3a:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 800eb3e:	ea4f 0252 	mov.w	r2, r2, lsr #1
 800eb42:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800eb46:	d1f0      	bne.n	800eb2a <__ieee754_sqrt+0x92>
 800eb48:	462a      	mov	r2, r5
 800eb4a:	f04f 0e20 	mov.w	lr, #32
 800eb4e:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 800eb52:	4281      	cmp	r1, r0
 800eb54:	eb06 0c05 	add.w	ip, r6, r5
 800eb58:	dc02      	bgt.n	800eb60 <__ieee754_sqrt+0xc8>
 800eb5a:	d113      	bne.n	800eb84 <__ieee754_sqrt+0xec>
 800eb5c:	459c      	cmp	ip, r3
 800eb5e:	d811      	bhi.n	800eb84 <__ieee754_sqrt+0xec>
 800eb60:	f1bc 0f00 	cmp.w	ip, #0
 800eb64:	eb0c 0506 	add.w	r5, ip, r6
 800eb68:	da43      	bge.n	800ebf2 <__ieee754_sqrt+0x15a>
 800eb6a:	2d00      	cmp	r5, #0
 800eb6c:	db41      	blt.n	800ebf2 <__ieee754_sqrt+0x15a>
 800eb6e:	f100 0801 	add.w	r8, r0, #1
 800eb72:	1a09      	subs	r1, r1, r0
 800eb74:	459c      	cmp	ip, r3
 800eb76:	bf88      	it	hi
 800eb78:	f101 31ff 	addhi.w	r1, r1, #4294967295
 800eb7c:	eba3 030c 	sub.w	r3, r3, ip
 800eb80:	4432      	add	r2, r6
 800eb82:	4640      	mov	r0, r8
 800eb84:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 800eb88:	f1be 0e01 	subs.w	lr, lr, #1
 800eb8c:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 800eb90:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800eb94:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800eb98:	d1db      	bne.n	800eb52 <__ieee754_sqrt+0xba>
 800eb9a:	430b      	orrs	r3, r1
 800eb9c:	d006      	beq.n	800ebac <__ieee754_sqrt+0x114>
 800eb9e:	1c50      	adds	r0, r2, #1
 800eba0:	bf13      	iteet	ne
 800eba2:	3201      	addne	r2, #1
 800eba4:	3401      	addeq	r4, #1
 800eba6:	4672      	moveq	r2, lr
 800eba8:	f022 0201 	bicne.w	r2, r2, #1
 800ebac:	1063      	asrs	r3, r4, #1
 800ebae:	0852      	lsrs	r2, r2, #1
 800ebb0:	07e1      	lsls	r1, r4, #31
 800ebb2:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 800ebb6:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 800ebba:	bf48      	it	mi
 800ebbc:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 800ebc0:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 800ebc4:	4614      	mov	r4, r2
 800ebc6:	e781      	b.n	800eacc <__ieee754_sqrt+0x34>
 800ebc8:	0ad9      	lsrs	r1, r3, #11
 800ebca:	3815      	subs	r0, #21
 800ebcc:	055b      	lsls	r3, r3, #21
 800ebce:	2900      	cmp	r1, #0
 800ebd0:	d0fa      	beq.n	800ebc8 <__ieee754_sqrt+0x130>
 800ebd2:	02cd      	lsls	r5, r1, #11
 800ebd4:	d50a      	bpl.n	800ebec <__ieee754_sqrt+0x154>
 800ebd6:	f1c2 0420 	rsb	r4, r2, #32
 800ebda:	fa23 f404 	lsr.w	r4, r3, r4
 800ebde:	1e55      	subs	r5, r2, #1
 800ebe0:	4093      	lsls	r3, r2
 800ebe2:	4321      	orrs	r1, r4
 800ebe4:	1b42      	subs	r2, r0, r5
 800ebe6:	e78a      	b.n	800eafe <__ieee754_sqrt+0x66>
 800ebe8:	4610      	mov	r0, r2
 800ebea:	e7f0      	b.n	800ebce <__ieee754_sqrt+0x136>
 800ebec:	0049      	lsls	r1, r1, #1
 800ebee:	3201      	adds	r2, #1
 800ebf0:	e7ef      	b.n	800ebd2 <__ieee754_sqrt+0x13a>
 800ebf2:	4680      	mov	r8, r0
 800ebf4:	e7bd      	b.n	800eb72 <__ieee754_sqrt+0xda>
 800ebf6:	bf00      	nop
 800ebf8:	7ff00000 	.word	0x7ff00000
 800ebfc:	00000000 	.word	0x00000000

0800ec00 <__kernel_cos>:
 800ec00:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec04:	ec57 6b10 	vmov	r6, r7, d0
 800ec08:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 800ec0c:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 800ec10:	ed8d 1b00 	vstr	d1, [sp]
 800ec14:	da07      	bge.n	800ec26 <__kernel_cos+0x26>
 800ec16:	ee10 0a10 	vmov	r0, s0
 800ec1a:	4639      	mov	r1, r7
 800ec1c:	f7f2 f80c 	bl	8000c38 <__aeabi_d2iz>
 800ec20:	2800      	cmp	r0, #0
 800ec22:	f000 8088 	beq.w	800ed36 <__kernel_cos+0x136>
 800ec26:	4632      	mov	r2, r6
 800ec28:	463b      	mov	r3, r7
 800ec2a:	4630      	mov	r0, r6
 800ec2c:	4639      	mov	r1, r7
 800ec2e:	f7f1 fd53 	bl	80006d8 <__aeabi_dmul>
 800ec32:	4b51      	ldr	r3, [pc, #324]	; (800ed78 <__kernel_cos+0x178>)
 800ec34:	2200      	movs	r2, #0
 800ec36:	4604      	mov	r4, r0
 800ec38:	460d      	mov	r5, r1
 800ec3a:	f7f1 fd4d 	bl	80006d8 <__aeabi_dmul>
 800ec3e:	a340      	add	r3, pc, #256	; (adr r3, 800ed40 <__kernel_cos+0x140>)
 800ec40:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ec44:	4682      	mov	sl, r0
 800ec46:	468b      	mov	fp, r1
 800ec48:	4620      	mov	r0, r4
 800ec4a:	4629      	mov	r1, r5
 800ec4c:	f7f1 fd44 	bl	80006d8 <__aeabi_dmul>
 800ec50:	a33d      	add	r3, pc, #244	; (adr r3, 800ed48 <__kernel_cos+0x148>)
 800ec52:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ec56:	f7f1 fb89 	bl	800036c <__adddf3>
 800ec5a:	4622      	mov	r2, r4
 800ec5c:	462b      	mov	r3, r5
 800ec5e:	f7f1 fd3b 	bl	80006d8 <__aeabi_dmul>
 800ec62:	a33b      	add	r3, pc, #236	; (adr r3, 800ed50 <__kernel_cos+0x150>)
 800ec64:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ec68:	f7f1 fb7e 	bl	8000368 <__aeabi_dsub>
 800ec6c:	4622      	mov	r2, r4
 800ec6e:	462b      	mov	r3, r5
 800ec70:	f7f1 fd32 	bl	80006d8 <__aeabi_dmul>
 800ec74:	a338      	add	r3, pc, #224	; (adr r3, 800ed58 <__kernel_cos+0x158>)
 800ec76:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ec7a:	f7f1 fb77 	bl	800036c <__adddf3>
 800ec7e:	4622      	mov	r2, r4
 800ec80:	462b      	mov	r3, r5
 800ec82:	f7f1 fd29 	bl	80006d8 <__aeabi_dmul>
 800ec86:	a336      	add	r3, pc, #216	; (adr r3, 800ed60 <__kernel_cos+0x160>)
 800ec88:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ec8c:	f7f1 fb6c 	bl	8000368 <__aeabi_dsub>
 800ec90:	4622      	mov	r2, r4
 800ec92:	462b      	mov	r3, r5
 800ec94:	f7f1 fd20 	bl	80006d8 <__aeabi_dmul>
 800ec98:	a333      	add	r3, pc, #204	; (adr r3, 800ed68 <__kernel_cos+0x168>)
 800ec9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ec9e:	f7f1 fb65 	bl	800036c <__adddf3>
 800eca2:	4622      	mov	r2, r4
 800eca4:	462b      	mov	r3, r5
 800eca6:	f7f1 fd17 	bl	80006d8 <__aeabi_dmul>
 800ecaa:	4622      	mov	r2, r4
 800ecac:	462b      	mov	r3, r5
 800ecae:	f7f1 fd13 	bl	80006d8 <__aeabi_dmul>
 800ecb2:	e9dd 2300 	ldrd	r2, r3, [sp]
 800ecb6:	4604      	mov	r4, r0
 800ecb8:	460d      	mov	r5, r1
 800ecba:	4630      	mov	r0, r6
 800ecbc:	4639      	mov	r1, r7
 800ecbe:	f7f1 fd0b 	bl	80006d8 <__aeabi_dmul>
 800ecc2:	460b      	mov	r3, r1
 800ecc4:	4602      	mov	r2, r0
 800ecc6:	4629      	mov	r1, r5
 800ecc8:	4620      	mov	r0, r4
 800ecca:	f7f1 fb4d 	bl	8000368 <__aeabi_dsub>
 800ecce:	4b2b      	ldr	r3, [pc, #172]	; (800ed7c <__kernel_cos+0x17c>)
 800ecd0:	4598      	cmp	r8, r3
 800ecd2:	4606      	mov	r6, r0
 800ecd4:	460f      	mov	r7, r1
 800ecd6:	dc10      	bgt.n	800ecfa <__kernel_cos+0xfa>
 800ecd8:	4602      	mov	r2, r0
 800ecda:	460b      	mov	r3, r1
 800ecdc:	4650      	mov	r0, sl
 800ecde:	4659      	mov	r1, fp
 800ece0:	f7f1 fb42 	bl	8000368 <__aeabi_dsub>
 800ece4:	460b      	mov	r3, r1
 800ece6:	4926      	ldr	r1, [pc, #152]	; (800ed80 <__kernel_cos+0x180>)
 800ece8:	4602      	mov	r2, r0
 800ecea:	2000      	movs	r0, #0
 800ecec:	f7f1 fb3c 	bl	8000368 <__aeabi_dsub>
 800ecf0:	ec41 0b10 	vmov	d0, r0, r1
 800ecf4:	b003      	add	sp, #12
 800ecf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ecfa:	4b22      	ldr	r3, [pc, #136]	; (800ed84 <__kernel_cos+0x184>)
 800ecfc:	4920      	ldr	r1, [pc, #128]	; (800ed80 <__kernel_cos+0x180>)
 800ecfe:	4598      	cmp	r8, r3
 800ed00:	bfcc      	ite	gt
 800ed02:	4d21      	ldrgt	r5, [pc, #132]	; (800ed88 <__kernel_cos+0x188>)
 800ed04:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 800ed08:	2400      	movs	r4, #0
 800ed0a:	4622      	mov	r2, r4
 800ed0c:	462b      	mov	r3, r5
 800ed0e:	2000      	movs	r0, #0
 800ed10:	f7f1 fb2a 	bl	8000368 <__aeabi_dsub>
 800ed14:	4622      	mov	r2, r4
 800ed16:	4680      	mov	r8, r0
 800ed18:	4689      	mov	r9, r1
 800ed1a:	462b      	mov	r3, r5
 800ed1c:	4650      	mov	r0, sl
 800ed1e:	4659      	mov	r1, fp
 800ed20:	f7f1 fb22 	bl	8000368 <__aeabi_dsub>
 800ed24:	4632      	mov	r2, r6
 800ed26:	463b      	mov	r3, r7
 800ed28:	f7f1 fb1e 	bl	8000368 <__aeabi_dsub>
 800ed2c:	4602      	mov	r2, r0
 800ed2e:	460b      	mov	r3, r1
 800ed30:	4640      	mov	r0, r8
 800ed32:	4649      	mov	r1, r9
 800ed34:	e7da      	b.n	800ecec <__kernel_cos+0xec>
 800ed36:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 800ed70 <__kernel_cos+0x170>
 800ed3a:	e7db      	b.n	800ecf4 <__kernel_cos+0xf4>
 800ed3c:	f3af 8000 	nop.w
 800ed40:	be8838d4 	.word	0xbe8838d4
 800ed44:	bda8fae9 	.word	0xbda8fae9
 800ed48:	bdb4b1c4 	.word	0xbdb4b1c4
 800ed4c:	3e21ee9e 	.word	0x3e21ee9e
 800ed50:	809c52ad 	.word	0x809c52ad
 800ed54:	3e927e4f 	.word	0x3e927e4f
 800ed58:	19cb1590 	.word	0x19cb1590
 800ed5c:	3efa01a0 	.word	0x3efa01a0
 800ed60:	16c15177 	.word	0x16c15177
 800ed64:	3f56c16c 	.word	0x3f56c16c
 800ed68:	5555554c 	.word	0x5555554c
 800ed6c:	3fa55555 	.word	0x3fa55555
 800ed70:	00000000 	.word	0x00000000
 800ed74:	3ff00000 	.word	0x3ff00000
 800ed78:	3fe00000 	.word	0x3fe00000
 800ed7c:	3fd33332 	.word	0x3fd33332
 800ed80:	3ff00000 	.word	0x3ff00000
 800ed84:	3fe90000 	.word	0x3fe90000
 800ed88:	3fd20000 	.word	0x3fd20000
 800ed8c:	00000000 	.word	0x00000000

0800ed90 <__kernel_rem_pio2>:
 800ed90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed94:	ed2d 8b02 	vpush	{d8}
 800ed98:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 800ed9c:	f112 0f14 	cmn.w	r2, #20
 800eda0:	9308      	str	r3, [sp, #32]
 800eda2:	9101      	str	r1, [sp, #4]
 800eda4:	4bc4      	ldr	r3, [pc, #784]	; (800f0b8 <__kernel_rem_pio2+0x328>)
 800eda6:	99a6      	ldr	r1, [sp, #664]	; 0x298
 800eda8:	900b      	str	r0, [sp, #44]	; 0x2c
 800edaa:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800edae:	9302      	str	r3, [sp, #8]
 800edb0:	9b08      	ldr	r3, [sp, #32]
 800edb2:	f103 33ff 	add.w	r3, r3, #4294967295
 800edb6:	bfa8      	it	ge
 800edb8:	1ed4      	subge	r4, r2, #3
 800edba:	9306      	str	r3, [sp, #24]
 800edbc:	bfb2      	itee	lt
 800edbe:	2400      	movlt	r4, #0
 800edc0:	2318      	movge	r3, #24
 800edc2:	fb94 f4f3 	sdivge	r4, r4, r3
 800edc6:	f06f 0317 	mvn.w	r3, #23
 800edca:	fb04 3303 	mla	r3, r4, r3, r3
 800edce:	eb03 0a02 	add.w	sl, r3, r2
 800edd2:	9b02      	ldr	r3, [sp, #8]
 800edd4:	9a06      	ldr	r2, [sp, #24]
 800edd6:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 800f0a8 <__kernel_rem_pio2+0x318>
 800edda:	eb03 0802 	add.w	r8, r3, r2
 800edde:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 800ede0:	1aa7      	subs	r7, r4, r2
 800ede2:	ae22      	add	r6, sp, #136	; 0x88
 800ede4:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 800ede8:	2500      	movs	r5, #0
 800edea:	4545      	cmp	r5, r8
 800edec:	dd13      	ble.n	800ee16 <__kernel_rem_pio2+0x86>
 800edee:	9b08      	ldr	r3, [sp, #32]
 800edf0:	ed9f 8bad 	vldr	d8, [pc, #692]	; 800f0a8 <__kernel_rem_pio2+0x318>
 800edf4:	aa22      	add	r2, sp, #136	; 0x88
 800edf6:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 800edfa:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 800edfe:	f04f 0800 	mov.w	r8, #0
 800ee02:	9b02      	ldr	r3, [sp, #8]
 800ee04:	4598      	cmp	r8, r3
 800ee06:	dc2f      	bgt.n	800ee68 <__kernel_rem_pio2+0xd8>
 800ee08:	ed8d 8b04 	vstr	d8, [sp, #16]
 800ee0c:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 800ee10:	462f      	mov	r7, r5
 800ee12:	2600      	movs	r6, #0
 800ee14:	e01b      	b.n	800ee4e <__kernel_rem_pio2+0xbe>
 800ee16:	42ef      	cmn	r7, r5
 800ee18:	d407      	bmi.n	800ee2a <__kernel_rem_pio2+0x9a>
 800ee1a:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 800ee1e:	f7f1 fbf1 	bl	8000604 <__aeabi_i2d>
 800ee22:	e8e6 0102 	strd	r0, r1, [r6], #8
 800ee26:	3501      	adds	r5, #1
 800ee28:	e7df      	b.n	800edea <__kernel_rem_pio2+0x5a>
 800ee2a:	ec51 0b18 	vmov	r0, r1, d8
 800ee2e:	e7f8      	b.n	800ee22 <__kernel_rem_pio2+0x92>
 800ee30:	e9d7 2300 	ldrd	r2, r3, [r7]
 800ee34:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 800ee38:	f7f1 fc4e 	bl	80006d8 <__aeabi_dmul>
 800ee3c:	4602      	mov	r2, r0
 800ee3e:	460b      	mov	r3, r1
 800ee40:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800ee44:	f7f1 fa92 	bl	800036c <__adddf3>
 800ee48:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800ee4c:	3601      	adds	r6, #1
 800ee4e:	9b06      	ldr	r3, [sp, #24]
 800ee50:	429e      	cmp	r6, r3
 800ee52:	f1a7 0708 	sub.w	r7, r7, #8
 800ee56:	ddeb      	ble.n	800ee30 <__kernel_rem_pio2+0xa0>
 800ee58:	ed9d 7b04 	vldr	d7, [sp, #16]
 800ee5c:	f108 0801 	add.w	r8, r8, #1
 800ee60:	ecab 7b02 	vstmia	fp!, {d7}
 800ee64:	3508      	adds	r5, #8
 800ee66:	e7cc      	b.n	800ee02 <__kernel_rem_pio2+0x72>
 800ee68:	9b02      	ldr	r3, [sp, #8]
 800ee6a:	aa0e      	add	r2, sp, #56	; 0x38
 800ee6c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800ee70:	930d      	str	r3, [sp, #52]	; 0x34
 800ee72:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 800ee74:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800ee78:	9c02      	ldr	r4, [sp, #8]
 800ee7a:	930c      	str	r3, [sp, #48]	; 0x30
 800ee7c:	00e3      	lsls	r3, r4, #3
 800ee7e:	930a      	str	r3, [sp, #40]	; 0x28
 800ee80:	ab9a      	add	r3, sp, #616	; 0x268
 800ee82:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800ee86:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 800ee8a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800ee8e:	ab72      	add	r3, sp, #456	; 0x1c8
 800ee90:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 800ee94:	46c3      	mov	fp, r8
 800ee96:	46a1      	mov	r9, r4
 800ee98:	f1b9 0f00 	cmp.w	r9, #0
 800ee9c:	f1a5 0508 	sub.w	r5, r5, #8
 800eea0:	dc77      	bgt.n	800ef92 <__kernel_rem_pio2+0x202>
 800eea2:	ec47 6b10 	vmov	d0, r6, r7
 800eea6:	4650      	mov	r0, sl
 800eea8:	f000 fdbe 	bl	800fa28 <scalbn>
 800eeac:	ec57 6b10 	vmov	r6, r7, d0
 800eeb0:	2200      	movs	r2, #0
 800eeb2:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800eeb6:	ee10 0a10 	vmov	r0, s0
 800eeba:	4639      	mov	r1, r7
 800eebc:	f7f1 fc0c 	bl	80006d8 <__aeabi_dmul>
 800eec0:	ec41 0b10 	vmov	d0, r0, r1
 800eec4:	f000 fd28 	bl	800f918 <floor>
 800eec8:	4b7c      	ldr	r3, [pc, #496]	; (800f0bc <__kernel_rem_pio2+0x32c>)
 800eeca:	ec51 0b10 	vmov	r0, r1, d0
 800eece:	2200      	movs	r2, #0
 800eed0:	f7f1 fc02 	bl	80006d8 <__aeabi_dmul>
 800eed4:	4602      	mov	r2, r0
 800eed6:	460b      	mov	r3, r1
 800eed8:	4630      	mov	r0, r6
 800eeda:	4639      	mov	r1, r7
 800eedc:	f7f1 fa44 	bl	8000368 <__aeabi_dsub>
 800eee0:	460f      	mov	r7, r1
 800eee2:	4606      	mov	r6, r0
 800eee4:	f7f1 fea8 	bl	8000c38 <__aeabi_d2iz>
 800eee8:	9004      	str	r0, [sp, #16]
 800eeea:	f7f1 fb8b 	bl	8000604 <__aeabi_i2d>
 800eeee:	4602      	mov	r2, r0
 800eef0:	460b      	mov	r3, r1
 800eef2:	4630      	mov	r0, r6
 800eef4:	4639      	mov	r1, r7
 800eef6:	f7f1 fa37 	bl	8000368 <__aeabi_dsub>
 800eefa:	f1ba 0f00 	cmp.w	sl, #0
 800eefe:	4606      	mov	r6, r0
 800ef00:	460f      	mov	r7, r1
 800ef02:	dd6d      	ble.n	800efe0 <__kernel_rem_pio2+0x250>
 800ef04:	1e62      	subs	r2, r4, #1
 800ef06:	ab0e      	add	r3, sp, #56	; 0x38
 800ef08:	9d04      	ldr	r5, [sp, #16]
 800ef0a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800ef0e:	f1ca 0118 	rsb	r1, sl, #24
 800ef12:	fa40 f301 	asr.w	r3, r0, r1
 800ef16:	441d      	add	r5, r3
 800ef18:	408b      	lsls	r3, r1
 800ef1a:	1ac0      	subs	r0, r0, r3
 800ef1c:	ab0e      	add	r3, sp, #56	; 0x38
 800ef1e:	9504      	str	r5, [sp, #16]
 800ef20:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 800ef24:	f1ca 0317 	rsb	r3, sl, #23
 800ef28:	fa40 fb03 	asr.w	fp, r0, r3
 800ef2c:	f1bb 0f00 	cmp.w	fp, #0
 800ef30:	dd65      	ble.n	800effe <__kernel_rem_pio2+0x26e>
 800ef32:	9b04      	ldr	r3, [sp, #16]
 800ef34:	2200      	movs	r2, #0
 800ef36:	3301      	adds	r3, #1
 800ef38:	9304      	str	r3, [sp, #16]
 800ef3a:	4615      	mov	r5, r2
 800ef3c:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 800ef40:	4294      	cmp	r4, r2
 800ef42:	f300 809c 	bgt.w	800f07e <__kernel_rem_pio2+0x2ee>
 800ef46:	f1ba 0f00 	cmp.w	sl, #0
 800ef4a:	dd07      	ble.n	800ef5c <__kernel_rem_pio2+0x1cc>
 800ef4c:	f1ba 0f01 	cmp.w	sl, #1
 800ef50:	f000 80c0 	beq.w	800f0d4 <__kernel_rem_pio2+0x344>
 800ef54:	f1ba 0f02 	cmp.w	sl, #2
 800ef58:	f000 80c6 	beq.w	800f0e8 <__kernel_rem_pio2+0x358>
 800ef5c:	f1bb 0f02 	cmp.w	fp, #2
 800ef60:	d14d      	bne.n	800effe <__kernel_rem_pio2+0x26e>
 800ef62:	4632      	mov	r2, r6
 800ef64:	463b      	mov	r3, r7
 800ef66:	4956      	ldr	r1, [pc, #344]	; (800f0c0 <__kernel_rem_pio2+0x330>)
 800ef68:	2000      	movs	r0, #0
 800ef6a:	f7f1 f9fd 	bl	8000368 <__aeabi_dsub>
 800ef6e:	4606      	mov	r6, r0
 800ef70:	460f      	mov	r7, r1
 800ef72:	2d00      	cmp	r5, #0
 800ef74:	d043      	beq.n	800effe <__kernel_rem_pio2+0x26e>
 800ef76:	4650      	mov	r0, sl
 800ef78:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 800f0b0 <__kernel_rem_pio2+0x320>
 800ef7c:	f000 fd54 	bl	800fa28 <scalbn>
 800ef80:	4630      	mov	r0, r6
 800ef82:	4639      	mov	r1, r7
 800ef84:	ec53 2b10 	vmov	r2, r3, d0
 800ef88:	f7f1 f9ee 	bl	8000368 <__aeabi_dsub>
 800ef8c:	4606      	mov	r6, r0
 800ef8e:	460f      	mov	r7, r1
 800ef90:	e035      	b.n	800effe <__kernel_rem_pio2+0x26e>
 800ef92:	4b4c      	ldr	r3, [pc, #304]	; (800f0c4 <__kernel_rem_pio2+0x334>)
 800ef94:	2200      	movs	r2, #0
 800ef96:	4630      	mov	r0, r6
 800ef98:	4639      	mov	r1, r7
 800ef9a:	f7f1 fb9d 	bl	80006d8 <__aeabi_dmul>
 800ef9e:	f7f1 fe4b 	bl	8000c38 <__aeabi_d2iz>
 800efa2:	f7f1 fb2f 	bl	8000604 <__aeabi_i2d>
 800efa6:	4602      	mov	r2, r0
 800efa8:	460b      	mov	r3, r1
 800efaa:	ec43 2b18 	vmov	d8, r2, r3
 800efae:	4b46      	ldr	r3, [pc, #280]	; (800f0c8 <__kernel_rem_pio2+0x338>)
 800efb0:	2200      	movs	r2, #0
 800efb2:	f7f1 fb91 	bl	80006d8 <__aeabi_dmul>
 800efb6:	4602      	mov	r2, r0
 800efb8:	460b      	mov	r3, r1
 800efba:	4630      	mov	r0, r6
 800efbc:	4639      	mov	r1, r7
 800efbe:	f7f1 f9d3 	bl	8000368 <__aeabi_dsub>
 800efc2:	f7f1 fe39 	bl	8000c38 <__aeabi_d2iz>
 800efc6:	e9d5 2300 	ldrd	r2, r3, [r5]
 800efca:	f84b 0b04 	str.w	r0, [fp], #4
 800efce:	ec51 0b18 	vmov	r0, r1, d8
 800efd2:	f7f1 f9cb 	bl	800036c <__adddf3>
 800efd6:	f109 39ff 	add.w	r9, r9, #4294967295
 800efda:	4606      	mov	r6, r0
 800efdc:	460f      	mov	r7, r1
 800efde:	e75b      	b.n	800ee98 <__kernel_rem_pio2+0x108>
 800efe0:	d106      	bne.n	800eff0 <__kernel_rem_pio2+0x260>
 800efe2:	1e63      	subs	r3, r4, #1
 800efe4:	aa0e      	add	r2, sp, #56	; 0x38
 800efe6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800efea:	ea4f 5be0 	mov.w	fp, r0, asr #23
 800efee:	e79d      	b.n	800ef2c <__kernel_rem_pio2+0x19c>
 800eff0:	4b36      	ldr	r3, [pc, #216]	; (800f0cc <__kernel_rem_pio2+0x33c>)
 800eff2:	2200      	movs	r2, #0
 800eff4:	f7f1 fdf6 	bl	8000be4 <__aeabi_dcmpge>
 800eff8:	2800      	cmp	r0, #0
 800effa:	d13d      	bne.n	800f078 <__kernel_rem_pio2+0x2e8>
 800effc:	4683      	mov	fp, r0
 800effe:	2200      	movs	r2, #0
 800f000:	2300      	movs	r3, #0
 800f002:	4630      	mov	r0, r6
 800f004:	4639      	mov	r1, r7
 800f006:	f7f1 fdcf 	bl	8000ba8 <__aeabi_dcmpeq>
 800f00a:	2800      	cmp	r0, #0
 800f00c:	f000 80c0 	beq.w	800f190 <__kernel_rem_pio2+0x400>
 800f010:	1e65      	subs	r5, r4, #1
 800f012:	462b      	mov	r3, r5
 800f014:	2200      	movs	r2, #0
 800f016:	9902      	ldr	r1, [sp, #8]
 800f018:	428b      	cmp	r3, r1
 800f01a:	da6c      	bge.n	800f0f6 <__kernel_rem_pio2+0x366>
 800f01c:	2a00      	cmp	r2, #0
 800f01e:	f000 8089 	beq.w	800f134 <__kernel_rem_pio2+0x3a4>
 800f022:	ab0e      	add	r3, sp, #56	; 0x38
 800f024:	f1aa 0a18 	sub.w	sl, sl, #24
 800f028:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800f02c:	2b00      	cmp	r3, #0
 800f02e:	f000 80ad 	beq.w	800f18c <__kernel_rem_pio2+0x3fc>
 800f032:	4650      	mov	r0, sl
 800f034:	ed9f 0b1e 	vldr	d0, [pc, #120]	; 800f0b0 <__kernel_rem_pio2+0x320>
 800f038:	f000 fcf6 	bl	800fa28 <scalbn>
 800f03c:	ab9a      	add	r3, sp, #616	; 0x268
 800f03e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800f042:	ec57 6b10 	vmov	r6, r7, d0
 800f046:	00ec      	lsls	r4, r5, #3
 800f048:	f1a3 0898 	sub.w	r8, r3, #152	; 0x98
 800f04c:	46aa      	mov	sl, r5
 800f04e:	f1ba 0f00 	cmp.w	sl, #0
 800f052:	f280 80d6 	bge.w	800f202 <__kernel_rem_pio2+0x472>
 800f056:	ed9f 8b14 	vldr	d8, [pc, #80]	; 800f0a8 <__kernel_rem_pio2+0x318>
 800f05a:	462e      	mov	r6, r5
 800f05c:	2e00      	cmp	r6, #0
 800f05e:	f2c0 8104 	blt.w	800f26a <__kernel_rem_pio2+0x4da>
 800f062:	ab72      	add	r3, sp, #456	; 0x1c8
 800f064:	ed8d 8b06 	vstr	d8, [sp, #24]
 800f068:	f8df a064 	ldr.w	sl, [pc, #100]	; 800f0d0 <__kernel_rem_pio2+0x340>
 800f06c:	eb03 09c6 	add.w	r9, r3, r6, lsl #3
 800f070:	f04f 0800 	mov.w	r8, #0
 800f074:	1baf      	subs	r7, r5, r6
 800f076:	e0ea      	b.n	800f24e <__kernel_rem_pio2+0x4be>
 800f078:	f04f 0b02 	mov.w	fp, #2
 800f07c:	e759      	b.n	800ef32 <__kernel_rem_pio2+0x1a2>
 800f07e:	f8d8 3000 	ldr.w	r3, [r8]
 800f082:	b955      	cbnz	r5, 800f09a <__kernel_rem_pio2+0x30a>
 800f084:	b123      	cbz	r3, 800f090 <__kernel_rem_pio2+0x300>
 800f086:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 800f08a:	f8c8 3000 	str.w	r3, [r8]
 800f08e:	2301      	movs	r3, #1
 800f090:	3201      	adds	r2, #1
 800f092:	f108 0804 	add.w	r8, r8, #4
 800f096:	461d      	mov	r5, r3
 800f098:	e752      	b.n	800ef40 <__kernel_rem_pio2+0x1b0>
 800f09a:	1acb      	subs	r3, r1, r3
 800f09c:	f8c8 3000 	str.w	r3, [r8]
 800f0a0:	462b      	mov	r3, r5
 800f0a2:	e7f5      	b.n	800f090 <__kernel_rem_pio2+0x300>
 800f0a4:	f3af 8000 	nop.w
	...
 800f0b4:	3ff00000 	.word	0x3ff00000
 800f0b8:	08028c38 	.word	0x08028c38
 800f0bc:	40200000 	.word	0x40200000
 800f0c0:	3ff00000 	.word	0x3ff00000
 800f0c4:	3e700000 	.word	0x3e700000
 800f0c8:	41700000 	.word	0x41700000
 800f0cc:	3fe00000 	.word	0x3fe00000
 800f0d0:	08028bf8 	.word	0x08028bf8
 800f0d4:	1e62      	subs	r2, r4, #1
 800f0d6:	ab0e      	add	r3, sp, #56	; 0x38
 800f0d8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f0dc:	f3c3 0316 	ubfx	r3, r3, #0, #23
 800f0e0:	a90e      	add	r1, sp, #56	; 0x38
 800f0e2:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 800f0e6:	e739      	b.n	800ef5c <__kernel_rem_pio2+0x1cc>
 800f0e8:	1e62      	subs	r2, r4, #1
 800f0ea:	ab0e      	add	r3, sp, #56	; 0x38
 800f0ec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f0f0:	f3c3 0315 	ubfx	r3, r3, #0, #22
 800f0f4:	e7f4      	b.n	800f0e0 <__kernel_rem_pio2+0x350>
 800f0f6:	a90e      	add	r1, sp, #56	; 0x38
 800f0f8:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 800f0fc:	3b01      	subs	r3, #1
 800f0fe:	430a      	orrs	r2, r1
 800f100:	e789      	b.n	800f016 <__kernel_rem_pio2+0x286>
 800f102:	3301      	adds	r3, #1
 800f104:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 800f108:	2900      	cmp	r1, #0
 800f10a:	d0fa      	beq.n	800f102 <__kernel_rem_pio2+0x372>
 800f10c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f10e:	f502 721a 	add.w	r2, r2, #616	; 0x268
 800f112:	446a      	add	r2, sp
 800f114:	3a98      	subs	r2, #152	; 0x98
 800f116:	920a      	str	r2, [sp, #40]	; 0x28
 800f118:	9a08      	ldr	r2, [sp, #32]
 800f11a:	18e3      	adds	r3, r4, r3
 800f11c:	18a5      	adds	r5, r4, r2
 800f11e:	aa22      	add	r2, sp, #136	; 0x88
 800f120:	f104 0801 	add.w	r8, r4, #1
 800f124:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
 800f128:	9304      	str	r3, [sp, #16]
 800f12a:	9b04      	ldr	r3, [sp, #16]
 800f12c:	4543      	cmp	r3, r8
 800f12e:	da04      	bge.n	800f13a <__kernel_rem_pio2+0x3aa>
 800f130:	461c      	mov	r4, r3
 800f132:	e6a3      	b.n	800ee7c <__kernel_rem_pio2+0xec>
 800f134:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f136:	2301      	movs	r3, #1
 800f138:	e7e4      	b.n	800f104 <__kernel_rem_pio2+0x374>
 800f13a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f13c:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 800f140:	f7f1 fa60 	bl	8000604 <__aeabi_i2d>
 800f144:	e8e5 0102 	strd	r0, r1, [r5], #8
 800f148:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f14a:	46ab      	mov	fp, r5
 800f14c:	461c      	mov	r4, r3
 800f14e:	f04f 0900 	mov.w	r9, #0
 800f152:	2600      	movs	r6, #0
 800f154:	2700      	movs	r7, #0
 800f156:	9b06      	ldr	r3, [sp, #24]
 800f158:	4599      	cmp	r9, r3
 800f15a:	dd06      	ble.n	800f16a <__kernel_rem_pio2+0x3da>
 800f15c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f15e:	e8e3 6702 	strd	r6, r7, [r3], #8
 800f162:	f108 0801 	add.w	r8, r8, #1
 800f166:	930a      	str	r3, [sp, #40]	; 0x28
 800f168:	e7df      	b.n	800f12a <__kernel_rem_pio2+0x39a>
 800f16a:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 800f16e:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 800f172:	f7f1 fab1 	bl	80006d8 <__aeabi_dmul>
 800f176:	4602      	mov	r2, r0
 800f178:	460b      	mov	r3, r1
 800f17a:	4630      	mov	r0, r6
 800f17c:	4639      	mov	r1, r7
 800f17e:	f7f1 f8f5 	bl	800036c <__adddf3>
 800f182:	f109 0901 	add.w	r9, r9, #1
 800f186:	4606      	mov	r6, r0
 800f188:	460f      	mov	r7, r1
 800f18a:	e7e4      	b.n	800f156 <__kernel_rem_pio2+0x3c6>
 800f18c:	3d01      	subs	r5, #1
 800f18e:	e748      	b.n	800f022 <__kernel_rem_pio2+0x292>
 800f190:	ec47 6b10 	vmov	d0, r6, r7
 800f194:	f1ca 0000 	rsb	r0, sl, #0
 800f198:	f000 fc46 	bl	800fa28 <scalbn>
 800f19c:	ec57 6b10 	vmov	r6, r7, d0
 800f1a0:	4ba0      	ldr	r3, [pc, #640]	; (800f424 <__kernel_rem_pio2+0x694>)
 800f1a2:	ee10 0a10 	vmov	r0, s0
 800f1a6:	2200      	movs	r2, #0
 800f1a8:	4639      	mov	r1, r7
 800f1aa:	f7f1 fd1b 	bl	8000be4 <__aeabi_dcmpge>
 800f1ae:	b1f8      	cbz	r0, 800f1f0 <__kernel_rem_pio2+0x460>
 800f1b0:	4b9d      	ldr	r3, [pc, #628]	; (800f428 <__kernel_rem_pio2+0x698>)
 800f1b2:	2200      	movs	r2, #0
 800f1b4:	4630      	mov	r0, r6
 800f1b6:	4639      	mov	r1, r7
 800f1b8:	f7f1 fa8e 	bl	80006d8 <__aeabi_dmul>
 800f1bc:	f7f1 fd3c 	bl	8000c38 <__aeabi_d2iz>
 800f1c0:	4680      	mov	r8, r0
 800f1c2:	f7f1 fa1f 	bl	8000604 <__aeabi_i2d>
 800f1c6:	4b97      	ldr	r3, [pc, #604]	; (800f424 <__kernel_rem_pio2+0x694>)
 800f1c8:	2200      	movs	r2, #0
 800f1ca:	f7f1 fa85 	bl	80006d8 <__aeabi_dmul>
 800f1ce:	460b      	mov	r3, r1
 800f1d0:	4602      	mov	r2, r0
 800f1d2:	4639      	mov	r1, r7
 800f1d4:	4630      	mov	r0, r6
 800f1d6:	f7f1 f8c7 	bl	8000368 <__aeabi_dsub>
 800f1da:	f7f1 fd2d 	bl	8000c38 <__aeabi_d2iz>
 800f1de:	1c65      	adds	r5, r4, #1
 800f1e0:	ab0e      	add	r3, sp, #56	; 0x38
 800f1e2:	f10a 0a18 	add.w	sl, sl, #24
 800f1e6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800f1ea:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 800f1ee:	e720      	b.n	800f032 <__kernel_rem_pio2+0x2a2>
 800f1f0:	4630      	mov	r0, r6
 800f1f2:	4639      	mov	r1, r7
 800f1f4:	f7f1 fd20 	bl	8000c38 <__aeabi_d2iz>
 800f1f8:	ab0e      	add	r3, sp, #56	; 0x38
 800f1fa:	4625      	mov	r5, r4
 800f1fc:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800f200:	e717      	b.n	800f032 <__kernel_rem_pio2+0x2a2>
 800f202:	ab0e      	add	r3, sp, #56	; 0x38
 800f204:	f853 002a 	ldr.w	r0, [r3, sl, lsl #2]
 800f208:	f7f1 f9fc 	bl	8000604 <__aeabi_i2d>
 800f20c:	4632      	mov	r2, r6
 800f20e:	463b      	mov	r3, r7
 800f210:	f7f1 fa62 	bl	80006d8 <__aeabi_dmul>
 800f214:	4b84      	ldr	r3, [pc, #528]	; (800f428 <__kernel_rem_pio2+0x698>)
 800f216:	e968 0102 	strd	r0, r1, [r8, #-8]!
 800f21a:	2200      	movs	r2, #0
 800f21c:	4630      	mov	r0, r6
 800f21e:	4639      	mov	r1, r7
 800f220:	f7f1 fa5a 	bl	80006d8 <__aeabi_dmul>
 800f224:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f228:	4606      	mov	r6, r0
 800f22a:	460f      	mov	r7, r1
 800f22c:	e70f      	b.n	800f04e <__kernel_rem_pio2+0x2be>
 800f22e:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 800f232:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 800f236:	f7f1 fa4f 	bl	80006d8 <__aeabi_dmul>
 800f23a:	4602      	mov	r2, r0
 800f23c:	460b      	mov	r3, r1
 800f23e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800f242:	f7f1 f893 	bl	800036c <__adddf3>
 800f246:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800f24a:	f108 0801 	add.w	r8, r8, #1
 800f24e:	9b02      	ldr	r3, [sp, #8]
 800f250:	4598      	cmp	r8, r3
 800f252:	dc01      	bgt.n	800f258 <__kernel_rem_pio2+0x4c8>
 800f254:	45b8      	cmp	r8, r7
 800f256:	ddea      	ble.n	800f22e <__kernel_rem_pio2+0x49e>
 800f258:	ed9d 7b06 	vldr	d7, [sp, #24]
 800f25c:	ab4a      	add	r3, sp, #296	; 0x128
 800f25e:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800f262:	ed87 7b00 	vstr	d7, [r7]
 800f266:	3e01      	subs	r6, #1
 800f268:	e6f8      	b.n	800f05c <__kernel_rem_pio2+0x2cc>
 800f26a:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800f26c:	2b02      	cmp	r3, #2
 800f26e:	dc0b      	bgt.n	800f288 <__kernel_rem_pio2+0x4f8>
 800f270:	2b00      	cmp	r3, #0
 800f272:	dc35      	bgt.n	800f2e0 <__kernel_rem_pio2+0x550>
 800f274:	d059      	beq.n	800f32a <__kernel_rem_pio2+0x59a>
 800f276:	9b04      	ldr	r3, [sp, #16]
 800f278:	f003 0007 	and.w	r0, r3, #7
 800f27c:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 800f280:	ecbd 8b02 	vpop	{d8}
 800f284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f288:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 800f28a:	2b03      	cmp	r3, #3
 800f28c:	d1f3      	bne.n	800f276 <__kernel_rem_pio2+0x4e6>
 800f28e:	ab4a      	add	r3, sp, #296	; 0x128
 800f290:	4423      	add	r3, r4
 800f292:	9306      	str	r3, [sp, #24]
 800f294:	461c      	mov	r4, r3
 800f296:	469a      	mov	sl, r3
 800f298:	9502      	str	r5, [sp, #8]
 800f29a:	9b02      	ldr	r3, [sp, #8]
 800f29c:	2b00      	cmp	r3, #0
 800f29e:	f1aa 0a08 	sub.w	sl, sl, #8
 800f2a2:	dc6b      	bgt.n	800f37c <__kernel_rem_pio2+0x5ec>
 800f2a4:	46aa      	mov	sl, r5
 800f2a6:	f1ba 0f01 	cmp.w	sl, #1
 800f2aa:	f1a4 0408 	sub.w	r4, r4, #8
 800f2ae:	f300 8085 	bgt.w	800f3bc <__kernel_rem_pio2+0x62c>
 800f2b2:	9c06      	ldr	r4, [sp, #24]
 800f2b4:	2000      	movs	r0, #0
 800f2b6:	3408      	adds	r4, #8
 800f2b8:	2100      	movs	r1, #0
 800f2ba:	2d01      	cmp	r5, #1
 800f2bc:	f300 809d 	bgt.w	800f3fa <__kernel_rem_pio2+0x66a>
 800f2c0:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 800f2c4:	e9dd 784c 	ldrd	r7, r8, [sp, #304]	; 0x130
 800f2c8:	f1bb 0f00 	cmp.w	fp, #0
 800f2cc:	f040 809b 	bne.w	800f406 <__kernel_rem_pio2+0x676>
 800f2d0:	9b01      	ldr	r3, [sp, #4]
 800f2d2:	e9c3 5600 	strd	r5, r6, [r3]
 800f2d6:	e9c3 7802 	strd	r7, r8, [r3, #8]
 800f2da:	e9c3 0104 	strd	r0, r1, [r3, #16]
 800f2de:	e7ca      	b.n	800f276 <__kernel_rem_pio2+0x4e6>
 800f2e0:	3408      	adds	r4, #8
 800f2e2:	ab4a      	add	r3, sp, #296	; 0x128
 800f2e4:	441c      	add	r4, r3
 800f2e6:	462e      	mov	r6, r5
 800f2e8:	2000      	movs	r0, #0
 800f2ea:	2100      	movs	r1, #0
 800f2ec:	2e00      	cmp	r6, #0
 800f2ee:	da36      	bge.n	800f35e <__kernel_rem_pio2+0x5ce>
 800f2f0:	f1bb 0f00 	cmp.w	fp, #0
 800f2f4:	d039      	beq.n	800f36a <__kernel_rem_pio2+0x5da>
 800f2f6:	4602      	mov	r2, r0
 800f2f8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f2fc:	9c01      	ldr	r4, [sp, #4]
 800f2fe:	e9c4 2300 	strd	r2, r3, [r4]
 800f302:	4602      	mov	r2, r0
 800f304:	460b      	mov	r3, r1
 800f306:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 800f30a:	f7f1 f82d 	bl	8000368 <__aeabi_dsub>
 800f30e:	ae4c      	add	r6, sp, #304	; 0x130
 800f310:	2401      	movs	r4, #1
 800f312:	42a5      	cmp	r5, r4
 800f314:	da2c      	bge.n	800f370 <__kernel_rem_pio2+0x5e0>
 800f316:	f1bb 0f00 	cmp.w	fp, #0
 800f31a:	d002      	beq.n	800f322 <__kernel_rem_pio2+0x592>
 800f31c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f320:	4619      	mov	r1, r3
 800f322:	9b01      	ldr	r3, [sp, #4]
 800f324:	e9c3 0102 	strd	r0, r1, [r3, #8]
 800f328:	e7a5      	b.n	800f276 <__kernel_rem_pio2+0x4e6>
 800f32a:	f504 731a 	add.w	r3, r4, #616	; 0x268
 800f32e:	eb0d 0403 	add.w	r4, sp, r3
 800f332:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 800f336:	2000      	movs	r0, #0
 800f338:	2100      	movs	r1, #0
 800f33a:	2d00      	cmp	r5, #0
 800f33c:	da09      	bge.n	800f352 <__kernel_rem_pio2+0x5c2>
 800f33e:	f1bb 0f00 	cmp.w	fp, #0
 800f342:	d002      	beq.n	800f34a <__kernel_rem_pio2+0x5ba>
 800f344:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f348:	4619      	mov	r1, r3
 800f34a:	9b01      	ldr	r3, [sp, #4]
 800f34c:	e9c3 0100 	strd	r0, r1, [r3]
 800f350:	e791      	b.n	800f276 <__kernel_rem_pio2+0x4e6>
 800f352:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800f356:	f7f1 f809 	bl	800036c <__adddf3>
 800f35a:	3d01      	subs	r5, #1
 800f35c:	e7ed      	b.n	800f33a <__kernel_rem_pio2+0x5aa>
 800f35e:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800f362:	f7f1 f803 	bl	800036c <__adddf3>
 800f366:	3e01      	subs	r6, #1
 800f368:	e7c0      	b.n	800f2ec <__kernel_rem_pio2+0x55c>
 800f36a:	4602      	mov	r2, r0
 800f36c:	460b      	mov	r3, r1
 800f36e:	e7c5      	b.n	800f2fc <__kernel_rem_pio2+0x56c>
 800f370:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 800f374:	f7f0 fffa 	bl	800036c <__adddf3>
 800f378:	3401      	adds	r4, #1
 800f37a:	e7ca      	b.n	800f312 <__kernel_rem_pio2+0x582>
 800f37c:	e9da 8900 	ldrd	r8, r9, [sl]
 800f380:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 800f384:	9b02      	ldr	r3, [sp, #8]
 800f386:	3b01      	subs	r3, #1
 800f388:	9302      	str	r3, [sp, #8]
 800f38a:	4632      	mov	r2, r6
 800f38c:	463b      	mov	r3, r7
 800f38e:	4640      	mov	r0, r8
 800f390:	4649      	mov	r1, r9
 800f392:	f7f0 ffeb 	bl	800036c <__adddf3>
 800f396:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800f39a:	4602      	mov	r2, r0
 800f39c:	460b      	mov	r3, r1
 800f39e:	4640      	mov	r0, r8
 800f3a0:	4649      	mov	r1, r9
 800f3a2:	f7f0 ffe1 	bl	8000368 <__aeabi_dsub>
 800f3a6:	4632      	mov	r2, r6
 800f3a8:	463b      	mov	r3, r7
 800f3aa:	f7f0 ffdf 	bl	800036c <__adddf3>
 800f3ae:	ed9d 7b08 	vldr	d7, [sp, #32]
 800f3b2:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800f3b6:	ed8a 7b00 	vstr	d7, [sl]
 800f3ba:	e76e      	b.n	800f29a <__kernel_rem_pio2+0x50a>
 800f3bc:	e9d4 8900 	ldrd	r8, r9, [r4]
 800f3c0:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 800f3c4:	4640      	mov	r0, r8
 800f3c6:	4632      	mov	r2, r6
 800f3c8:	463b      	mov	r3, r7
 800f3ca:	4649      	mov	r1, r9
 800f3cc:	f7f0 ffce 	bl	800036c <__adddf3>
 800f3d0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800f3d4:	4602      	mov	r2, r0
 800f3d6:	460b      	mov	r3, r1
 800f3d8:	4640      	mov	r0, r8
 800f3da:	4649      	mov	r1, r9
 800f3dc:	f7f0 ffc4 	bl	8000368 <__aeabi_dsub>
 800f3e0:	4632      	mov	r2, r6
 800f3e2:	463b      	mov	r3, r7
 800f3e4:	f7f0 ffc2 	bl	800036c <__adddf3>
 800f3e8:	ed9d 7b02 	vldr	d7, [sp, #8]
 800f3ec:	e9c4 0102 	strd	r0, r1, [r4, #8]
 800f3f0:	ed84 7b00 	vstr	d7, [r4]
 800f3f4:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f3f8:	e755      	b.n	800f2a6 <__kernel_rem_pio2+0x516>
 800f3fa:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 800f3fe:	f7f0 ffb5 	bl	800036c <__adddf3>
 800f402:	3d01      	subs	r5, #1
 800f404:	e759      	b.n	800f2ba <__kernel_rem_pio2+0x52a>
 800f406:	9b01      	ldr	r3, [sp, #4]
 800f408:	9a01      	ldr	r2, [sp, #4]
 800f40a:	601d      	str	r5, [r3, #0]
 800f40c:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 800f410:	605c      	str	r4, [r3, #4]
 800f412:	609f      	str	r7, [r3, #8]
 800f414:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 800f418:	60d3      	str	r3, [r2, #12]
 800f41a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f41e:	6110      	str	r0, [r2, #16]
 800f420:	6153      	str	r3, [r2, #20]
 800f422:	e728      	b.n	800f276 <__kernel_rem_pio2+0x4e6>
 800f424:	41700000 	.word	0x41700000
 800f428:	3e700000 	.word	0x3e700000
 800f42c:	00000000 	.word	0x00000000

0800f430 <__kernel_sin>:
 800f430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f434:	ed2d 8b04 	vpush	{d8-d9}
 800f438:	eeb0 8a41 	vmov.f32	s16, s2
 800f43c:	eef0 8a61 	vmov.f32	s17, s3
 800f440:	ec55 4b10 	vmov	r4, r5, d0
 800f444:	b083      	sub	sp, #12
 800f446:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800f44a:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 800f44e:	9001      	str	r0, [sp, #4]
 800f450:	da06      	bge.n	800f460 <__kernel_sin+0x30>
 800f452:	ee10 0a10 	vmov	r0, s0
 800f456:	4629      	mov	r1, r5
 800f458:	f7f1 fbee 	bl	8000c38 <__aeabi_d2iz>
 800f45c:	2800      	cmp	r0, #0
 800f45e:	d051      	beq.n	800f504 <__kernel_sin+0xd4>
 800f460:	4622      	mov	r2, r4
 800f462:	462b      	mov	r3, r5
 800f464:	4620      	mov	r0, r4
 800f466:	4629      	mov	r1, r5
 800f468:	f7f1 f936 	bl	80006d8 <__aeabi_dmul>
 800f46c:	4682      	mov	sl, r0
 800f46e:	468b      	mov	fp, r1
 800f470:	4602      	mov	r2, r0
 800f472:	460b      	mov	r3, r1
 800f474:	4620      	mov	r0, r4
 800f476:	4629      	mov	r1, r5
 800f478:	f7f1 f92e 	bl	80006d8 <__aeabi_dmul>
 800f47c:	a341      	add	r3, pc, #260	; (adr r3, 800f584 <__kernel_sin+0x154>)
 800f47e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f482:	4680      	mov	r8, r0
 800f484:	4689      	mov	r9, r1
 800f486:	4650      	mov	r0, sl
 800f488:	4659      	mov	r1, fp
 800f48a:	f7f1 f925 	bl	80006d8 <__aeabi_dmul>
 800f48e:	a33f      	add	r3, pc, #252	; (adr r3, 800f58c <__kernel_sin+0x15c>)
 800f490:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f494:	f7f0 ff68 	bl	8000368 <__aeabi_dsub>
 800f498:	4652      	mov	r2, sl
 800f49a:	465b      	mov	r3, fp
 800f49c:	f7f1 f91c 	bl	80006d8 <__aeabi_dmul>
 800f4a0:	a33c      	add	r3, pc, #240	; (adr r3, 800f594 <__kernel_sin+0x164>)
 800f4a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4a6:	f7f0 ff61 	bl	800036c <__adddf3>
 800f4aa:	4652      	mov	r2, sl
 800f4ac:	465b      	mov	r3, fp
 800f4ae:	f7f1 f913 	bl	80006d8 <__aeabi_dmul>
 800f4b2:	a33a      	add	r3, pc, #232	; (adr r3, 800f59c <__kernel_sin+0x16c>)
 800f4b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4b8:	f7f0 ff56 	bl	8000368 <__aeabi_dsub>
 800f4bc:	4652      	mov	r2, sl
 800f4be:	465b      	mov	r3, fp
 800f4c0:	f7f1 f90a 	bl	80006d8 <__aeabi_dmul>
 800f4c4:	a337      	add	r3, pc, #220	; (adr r3, 800f5a4 <__kernel_sin+0x174>)
 800f4c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4ca:	f7f0 ff4f 	bl	800036c <__adddf3>
 800f4ce:	9b01      	ldr	r3, [sp, #4]
 800f4d0:	4606      	mov	r6, r0
 800f4d2:	460f      	mov	r7, r1
 800f4d4:	b9eb      	cbnz	r3, 800f512 <__kernel_sin+0xe2>
 800f4d6:	4602      	mov	r2, r0
 800f4d8:	460b      	mov	r3, r1
 800f4da:	4650      	mov	r0, sl
 800f4dc:	4659      	mov	r1, fp
 800f4de:	f7f1 f8fb 	bl	80006d8 <__aeabi_dmul>
 800f4e2:	a325      	add	r3, pc, #148	; (adr r3, 800f578 <__kernel_sin+0x148>)
 800f4e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4e8:	f7f0 ff3e 	bl	8000368 <__aeabi_dsub>
 800f4ec:	4642      	mov	r2, r8
 800f4ee:	464b      	mov	r3, r9
 800f4f0:	f7f1 f8f2 	bl	80006d8 <__aeabi_dmul>
 800f4f4:	4602      	mov	r2, r0
 800f4f6:	460b      	mov	r3, r1
 800f4f8:	4620      	mov	r0, r4
 800f4fa:	4629      	mov	r1, r5
 800f4fc:	f7f0 ff36 	bl	800036c <__adddf3>
 800f500:	4604      	mov	r4, r0
 800f502:	460d      	mov	r5, r1
 800f504:	ec45 4b10 	vmov	d0, r4, r5
 800f508:	b003      	add	sp, #12
 800f50a:	ecbd 8b04 	vpop	{d8-d9}
 800f50e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f512:	4b1b      	ldr	r3, [pc, #108]	; (800f580 <__kernel_sin+0x150>)
 800f514:	ec51 0b18 	vmov	r0, r1, d8
 800f518:	2200      	movs	r2, #0
 800f51a:	f7f1 f8dd 	bl	80006d8 <__aeabi_dmul>
 800f51e:	4632      	mov	r2, r6
 800f520:	ec41 0b19 	vmov	d9, r0, r1
 800f524:	463b      	mov	r3, r7
 800f526:	4640      	mov	r0, r8
 800f528:	4649      	mov	r1, r9
 800f52a:	f7f1 f8d5 	bl	80006d8 <__aeabi_dmul>
 800f52e:	4602      	mov	r2, r0
 800f530:	460b      	mov	r3, r1
 800f532:	ec51 0b19 	vmov	r0, r1, d9
 800f536:	f7f0 ff17 	bl	8000368 <__aeabi_dsub>
 800f53a:	4652      	mov	r2, sl
 800f53c:	465b      	mov	r3, fp
 800f53e:	f7f1 f8cb 	bl	80006d8 <__aeabi_dmul>
 800f542:	ec53 2b18 	vmov	r2, r3, d8
 800f546:	f7f0 ff0f 	bl	8000368 <__aeabi_dsub>
 800f54a:	a30b      	add	r3, pc, #44	; (adr r3, 800f578 <__kernel_sin+0x148>)
 800f54c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f550:	4606      	mov	r6, r0
 800f552:	460f      	mov	r7, r1
 800f554:	4640      	mov	r0, r8
 800f556:	4649      	mov	r1, r9
 800f558:	f7f1 f8be 	bl	80006d8 <__aeabi_dmul>
 800f55c:	4602      	mov	r2, r0
 800f55e:	460b      	mov	r3, r1
 800f560:	4630      	mov	r0, r6
 800f562:	4639      	mov	r1, r7
 800f564:	f7f0 ff02 	bl	800036c <__adddf3>
 800f568:	4602      	mov	r2, r0
 800f56a:	460b      	mov	r3, r1
 800f56c:	4620      	mov	r0, r4
 800f56e:	4629      	mov	r1, r5
 800f570:	f7f0 fefa 	bl	8000368 <__aeabi_dsub>
 800f574:	e7c4      	b.n	800f500 <__kernel_sin+0xd0>
 800f576:	bf00      	nop
 800f578:	55555549 	.word	0x55555549
 800f57c:	3fc55555 	.word	0x3fc55555
 800f580:	3fe00000 	.word	0x3fe00000
 800f584:	5acfd57c 	.word	0x5acfd57c
 800f588:	3de5d93a 	.word	0x3de5d93a
 800f58c:	8a2b9ceb 	.word	0x8a2b9ceb
 800f590:	3e5ae5e6 	.word	0x3e5ae5e6
 800f594:	57b1fe7d 	.word	0x57b1fe7d
 800f598:	3ec71de3 	.word	0x3ec71de3
 800f59c:	19c161d5 	.word	0x19c161d5
 800f5a0:	3f2a01a0 	.word	0x3f2a01a0
 800f5a4:	1110f8a6 	.word	0x1110f8a6
 800f5a8:	3f811111 	.word	0x3f811111
 800f5ac:	00000000 	.word	0x00000000

0800f5b0 <atan>:
 800f5b0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5b4:	ec55 4b10 	vmov	r4, r5, d0
 800f5b8:	4bc3      	ldr	r3, [pc, #780]	; (800f8c8 <atan+0x318>)
 800f5ba:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800f5be:	429e      	cmp	r6, r3
 800f5c0:	46ab      	mov	fp, r5
 800f5c2:	dd18      	ble.n	800f5f6 <atan+0x46>
 800f5c4:	4bc1      	ldr	r3, [pc, #772]	; (800f8cc <atan+0x31c>)
 800f5c6:	429e      	cmp	r6, r3
 800f5c8:	dc01      	bgt.n	800f5ce <atan+0x1e>
 800f5ca:	d109      	bne.n	800f5e0 <atan+0x30>
 800f5cc:	b144      	cbz	r4, 800f5e0 <atan+0x30>
 800f5ce:	4622      	mov	r2, r4
 800f5d0:	462b      	mov	r3, r5
 800f5d2:	4620      	mov	r0, r4
 800f5d4:	4629      	mov	r1, r5
 800f5d6:	f7f0 fec9 	bl	800036c <__adddf3>
 800f5da:	4604      	mov	r4, r0
 800f5dc:	460d      	mov	r5, r1
 800f5de:	e006      	b.n	800f5ee <atan+0x3e>
 800f5e0:	f1bb 0f00 	cmp.w	fp, #0
 800f5e4:	f300 8131 	bgt.w	800f84a <atan+0x29a>
 800f5e8:	a59b      	add	r5, pc, #620	; (adr r5, 800f858 <atan+0x2a8>)
 800f5ea:	e9d5 4500 	ldrd	r4, r5, [r5]
 800f5ee:	ec45 4b10 	vmov	d0, r4, r5
 800f5f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f5f6:	4bb6      	ldr	r3, [pc, #728]	; (800f8d0 <atan+0x320>)
 800f5f8:	429e      	cmp	r6, r3
 800f5fa:	dc14      	bgt.n	800f626 <atan+0x76>
 800f5fc:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 800f600:	429e      	cmp	r6, r3
 800f602:	dc0d      	bgt.n	800f620 <atan+0x70>
 800f604:	a396      	add	r3, pc, #600	; (adr r3, 800f860 <atan+0x2b0>)
 800f606:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f60a:	ee10 0a10 	vmov	r0, s0
 800f60e:	4629      	mov	r1, r5
 800f610:	f7f0 feac 	bl	800036c <__adddf3>
 800f614:	4baf      	ldr	r3, [pc, #700]	; (800f8d4 <atan+0x324>)
 800f616:	2200      	movs	r2, #0
 800f618:	f7f1 faee 	bl	8000bf8 <__aeabi_dcmpgt>
 800f61c:	2800      	cmp	r0, #0
 800f61e:	d1e6      	bne.n	800f5ee <atan+0x3e>
 800f620:	f04f 3aff 	mov.w	sl, #4294967295
 800f624:	e02b      	b.n	800f67e <atan+0xce>
 800f626:	f000 f963 	bl	800f8f0 <fabs>
 800f62a:	4bab      	ldr	r3, [pc, #684]	; (800f8d8 <atan+0x328>)
 800f62c:	429e      	cmp	r6, r3
 800f62e:	ec55 4b10 	vmov	r4, r5, d0
 800f632:	f300 80bf 	bgt.w	800f7b4 <atan+0x204>
 800f636:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 800f63a:	429e      	cmp	r6, r3
 800f63c:	f300 80a0 	bgt.w	800f780 <atan+0x1d0>
 800f640:	ee10 2a10 	vmov	r2, s0
 800f644:	ee10 0a10 	vmov	r0, s0
 800f648:	462b      	mov	r3, r5
 800f64a:	4629      	mov	r1, r5
 800f64c:	f7f0 fe8e 	bl	800036c <__adddf3>
 800f650:	4ba0      	ldr	r3, [pc, #640]	; (800f8d4 <atan+0x324>)
 800f652:	2200      	movs	r2, #0
 800f654:	f7f0 fe88 	bl	8000368 <__aeabi_dsub>
 800f658:	2200      	movs	r2, #0
 800f65a:	4606      	mov	r6, r0
 800f65c:	460f      	mov	r7, r1
 800f65e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800f662:	4620      	mov	r0, r4
 800f664:	4629      	mov	r1, r5
 800f666:	f7f0 fe81 	bl	800036c <__adddf3>
 800f66a:	4602      	mov	r2, r0
 800f66c:	460b      	mov	r3, r1
 800f66e:	4630      	mov	r0, r6
 800f670:	4639      	mov	r1, r7
 800f672:	f7f1 f95b 	bl	800092c <__aeabi_ddiv>
 800f676:	f04f 0a00 	mov.w	sl, #0
 800f67a:	4604      	mov	r4, r0
 800f67c:	460d      	mov	r5, r1
 800f67e:	4622      	mov	r2, r4
 800f680:	462b      	mov	r3, r5
 800f682:	4620      	mov	r0, r4
 800f684:	4629      	mov	r1, r5
 800f686:	f7f1 f827 	bl	80006d8 <__aeabi_dmul>
 800f68a:	4602      	mov	r2, r0
 800f68c:	460b      	mov	r3, r1
 800f68e:	4680      	mov	r8, r0
 800f690:	4689      	mov	r9, r1
 800f692:	f7f1 f821 	bl	80006d8 <__aeabi_dmul>
 800f696:	a374      	add	r3, pc, #464	; (adr r3, 800f868 <atan+0x2b8>)
 800f698:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f69c:	4606      	mov	r6, r0
 800f69e:	460f      	mov	r7, r1
 800f6a0:	f7f1 f81a 	bl	80006d8 <__aeabi_dmul>
 800f6a4:	a372      	add	r3, pc, #456	; (adr r3, 800f870 <atan+0x2c0>)
 800f6a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f6aa:	f7f0 fe5f 	bl	800036c <__adddf3>
 800f6ae:	4632      	mov	r2, r6
 800f6b0:	463b      	mov	r3, r7
 800f6b2:	f7f1 f811 	bl	80006d8 <__aeabi_dmul>
 800f6b6:	a370      	add	r3, pc, #448	; (adr r3, 800f878 <atan+0x2c8>)
 800f6b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f6bc:	f7f0 fe56 	bl	800036c <__adddf3>
 800f6c0:	4632      	mov	r2, r6
 800f6c2:	463b      	mov	r3, r7
 800f6c4:	f7f1 f808 	bl	80006d8 <__aeabi_dmul>
 800f6c8:	a36d      	add	r3, pc, #436	; (adr r3, 800f880 <atan+0x2d0>)
 800f6ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f6ce:	f7f0 fe4d 	bl	800036c <__adddf3>
 800f6d2:	4632      	mov	r2, r6
 800f6d4:	463b      	mov	r3, r7
 800f6d6:	f7f0 ffff 	bl	80006d8 <__aeabi_dmul>
 800f6da:	a36b      	add	r3, pc, #428	; (adr r3, 800f888 <atan+0x2d8>)
 800f6dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f6e0:	f7f0 fe44 	bl	800036c <__adddf3>
 800f6e4:	4632      	mov	r2, r6
 800f6e6:	463b      	mov	r3, r7
 800f6e8:	f7f0 fff6 	bl	80006d8 <__aeabi_dmul>
 800f6ec:	a368      	add	r3, pc, #416	; (adr r3, 800f890 <atan+0x2e0>)
 800f6ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f6f2:	f7f0 fe3b 	bl	800036c <__adddf3>
 800f6f6:	4642      	mov	r2, r8
 800f6f8:	464b      	mov	r3, r9
 800f6fa:	f7f0 ffed 	bl	80006d8 <__aeabi_dmul>
 800f6fe:	a366      	add	r3, pc, #408	; (adr r3, 800f898 <atan+0x2e8>)
 800f700:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f704:	4680      	mov	r8, r0
 800f706:	4689      	mov	r9, r1
 800f708:	4630      	mov	r0, r6
 800f70a:	4639      	mov	r1, r7
 800f70c:	f7f0 ffe4 	bl	80006d8 <__aeabi_dmul>
 800f710:	a363      	add	r3, pc, #396	; (adr r3, 800f8a0 <atan+0x2f0>)
 800f712:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f716:	f7f0 fe27 	bl	8000368 <__aeabi_dsub>
 800f71a:	4632      	mov	r2, r6
 800f71c:	463b      	mov	r3, r7
 800f71e:	f7f0 ffdb 	bl	80006d8 <__aeabi_dmul>
 800f722:	a361      	add	r3, pc, #388	; (adr r3, 800f8a8 <atan+0x2f8>)
 800f724:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f728:	f7f0 fe1e 	bl	8000368 <__aeabi_dsub>
 800f72c:	4632      	mov	r2, r6
 800f72e:	463b      	mov	r3, r7
 800f730:	f7f0 ffd2 	bl	80006d8 <__aeabi_dmul>
 800f734:	a35e      	add	r3, pc, #376	; (adr r3, 800f8b0 <atan+0x300>)
 800f736:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f73a:	f7f0 fe15 	bl	8000368 <__aeabi_dsub>
 800f73e:	4632      	mov	r2, r6
 800f740:	463b      	mov	r3, r7
 800f742:	f7f0 ffc9 	bl	80006d8 <__aeabi_dmul>
 800f746:	a35c      	add	r3, pc, #368	; (adr r3, 800f8b8 <atan+0x308>)
 800f748:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f74c:	f7f0 fe0c 	bl	8000368 <__aeabi_dsub>
 800f750:	4632      	mov	r2, r6
 800f752:	463b      	mov	r3, r7
 800f754:	f7f0 ffc0 	bl	80006d8 <__aeabi_dmul>
 800f758:	4602      	mov	r2, r0
 800f75a:	460b      	mov	r3, r1
 800f75c:	4640      	mov	r0, r8
 800f75e:	4649      	mov	r1, r9
 800f760:	f7f0 fe04 	bl	800036c <__adddf3>
 800f764:	4622      	mov	r2, r4
 800f766:	462b      	mov	r3, r5
 800f768:	f7f0 ffb6 	bl	80006d8 <__aeabi_dmul>
 800f76c:	f1ba 3fff 	cmp.w	sl, #4294967295
 800f770:	4602      	mov	r2, r0
 800f772:	460b      	mov	r3, r1
 800f774:	d14b      	bne.n	800f80e <atan+0x25e>
 800f776:	4620      	mov	r0, r4
 800f778:	4629      	mov	r1, r5
 800f77a:	f7f0 fdf5 	bl	8000368 <__aeabi_dsub>
 800f77e:	e72c      	b.n	800f5da <atan+0x2a>
 800f780:	ee10 0a10 	vmov	r0, s0
 800f784:	4b53      	ldr	r3, [pc, #332]	; (800f8d4 <atan+0x324>)
 800f786:	2200      	movs	r2, #0
 800f788:	4629      	mov	r1, r5
 800f78a:	f7f0 fded 	bl	8000368 <__aeabi_dsub>
 800f78e:	4b51      	ldr	r3, [pc, #324]	; (800f8d4 <atan+0x324>)
 800f790:	4606      	mov	r6, r0
 800f792:	460f      	mov	r7, r1
 800f794:	2200      	movs	r2, #0
 800f796:	4620      	mov	r0, r4
 800f798:	4629      	mov	r1, r5
 800f79a:	f7f0 fde7 	bl	800036c <__adddf3>
 800f79e:	4602      	mov	r2, r0
 800f7a0:	460b      	mov	r3, r1
 800f7a2:	4630      	mov	r0, r6
 800f7a4:	4639      	mov	r1, r7
 800f7a6:	f7f1 f8c1 	bl	800092c <__aeabi_ddiv>
 800f7aa:	f04f 0a01 	mov.w	sl, #1
 800f7ae:	4604      	mov	r4, r0
 800f7b0:	460d      	mov	r5, r1
 800f7b2:	e764      	b.n	800f67e <atan+0xce>
 800f7b4:	4b49      	ldr	r3, [pc, #292]	; (800f8dc <atan+0x32c>)
 800f7b6:	429e      	cmp	r6, r3
 800f7b8:	da1d      	bge.n	800f7f6 <atan+0x246>
 800f7ba:	ee10 0a10 	vmov	r0, s0
 800f7be:	4b48      	ldr	r3, [pc, #288]	; (800f8e0 <atan+0x330>)
 800f7c0:	2200      	movs	r2, #0
 800f7c2:	4629      	mov	r1, r5
 800f7c4:	f7f0 fdd0 	bl	8000368 <__aeabi_dsub>
 800f7c8:	4b45      	ldr	r3, [pc, #276]	; (800f8e0 <atan+0x330>)
 800f7ca:	4606      	mov	r6, r0
 800f7cc:	460f      	mov	r7, r1
 800f7ce:	2200      	movs	r2, #0
 800f7d0:	4620      	mov	r0, r4
 800f7d2:	4629      	mov	r1, r5
 800f7d4:	f7f0 ff80 	bl	80006d8 <__aeabi_dmul>
 800f7d8:	4b3e      	ldr	r3, [pc, #248]	; (800f8d4 <atan+0x324>)
 800f7da:	2200      	movs	r2, #0
 800f7dc:	f7f0 fdc6 	bl	800036c <__adddf3>
 800f7e0:	4602      	mov	r2, r0
 800f7e2:	460b      	mov	r3, r1
 800f7e4:	4630      	mov	r0, r6
 800f7e6:	4639      	mov	r1, r7
 800f7e8:	f7f1 f8a0 	bl	800092c <__aeabi_ddiv>
 800f7ec:	f04f 0a02 	mov.w	sl, #2
 800f7f0:	4604      	mov	r4, r0
 800f7f2:	460d      	mov	r5, r1
 800f7f4:	e743      	b.n	800f67e <atan+0xce>
 800f7f6:	462b      	mov	r3, r5
 800f7f8:	ee10 2a10 	vmov	r2, s0
 800f7fc:	4939      	ldr	r1, [pc, #228]	; (800f8e4 <atan+0x334>)
 800f7fe:	2000      	movs	r0, #0
 800f800:	f7f1 f894 	bl	800092c <__aeabi_ddiv>
 800f804:	f04f 0a03 	mov.w	sl, #3
 800f808:	4604      	mov	r4, r0
 800f80a:	460d      	mov	r5, r1
 800f80c:	e737      	b.n	800f67e <atan+0xce>
 800f80e:	4b36      	ldr	r3, [pc, #216]	; (800f8e8 <atan+0x338>)
 800f810:	4e36      	ldr	r6, [pc, #216]	; (800f8ec <atan+0x33c>)
 800f812:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 800f816:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
 800f81a:	e9da 2300 	ldrd	r2, r3, [sl]
 800f81e:	f7f0 fda3 	bl	8000368 <__aeabi_dsub>
 800f822:	4622      	mov	r2, r4
 800f824:	462b      	mov	r3, r5
 800f826:	f7f0 fd9f 	bl	8000368 <__aeabi_dsub>
 800f82a:	4602      	mov	r2, r0
 800f82c:	460b      	mov	r3, r1
 800f82e:	e9d6 0100 	ldrd	r0, r1, [r6]
 800f832:	f7f0 fd99 	bl	8000368 <__aeabi_dsub>
 800f836:	f1bb 0f00 	cmp.w	fp, #0
 800f83a:	4604      	mov	r4, r0
 800f83c:	460d      	mov	r5, r1
 800f83e:	f6bf aed6 	bge.w	800f5ee <atan+0x3e>
 800f842:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f846:	461d      	mov	r5, r3
 800f848:	e6d1      	b.n	800f5ee <atan+0x3e>
 800f84a:	a51d      	add	r5, pc, #116	; (adr r5, 800f8c0 <atan+0x310>)
 800f84c:	e9d5 4500 	ldrd	r4, r5, [r5]
 800f850:	e6cd      	b.n	800f5ee <atan+0x3e>
 800f852:	bf00      	nop
 800f854:	f3af 8000 	nop.w
 800f858:	54442d18 	.word	0x54442d18
 800f85c:	bff921fb 	.word	0xbff921fb
 800f860:	8800759c 	.word	0x8800759c
 800f864:	7e37e43c 	.word	0x7e37e43c
 800f868:	e322da11 	.word	0xe322da11
 800f86c:	3f90ad3a 	.word	0x3f90ad3a
 800f870:	24760deb 	.word	0x24760deb
 800f874:	3fa97b4b 	.word	0x3fa97b4b
 800f878:	a0d03d51 	.word	0xa0d03d51
 800f87c:	3fb10d66 	.word	0x3fb10d66
 800f880:	c54c206e 	.word	0xc54c206e
 800f884:	3fb745cd 	.word	0x3fb745cd
 800f888:	920083ff 	.word	0x920083ff
 800f88c:	3fc24924 	.word	0x3fc24924
 800f890:	5555550d 	.word	0x5555550d
 800f894:	3fd55555 	.word	0x3fd55555
 800f898:	2c6a6c2f 	.word	0x2c6a6c2f
 800f89c:	bfa2b444 	.word	0xbfa2b444
 800f8a0:	52defd9a 	.word	0x52defd9a
 800f8a4:	3fadde2d 	.word	0x3fadde2d
 800f8a8:	af749a6d 	.word	0xaf749a6d
 800f8ac:	3fb3b0f2 	.word	0x3fb3b0f2
 800f8b0:	fe231671 	.word	0xfe231671
 800f8b4:	3fbc71c6 	.word	0x3fbc71c6
 800f8b8:	9998ebc4 	.word	0x9998ebc4
 800f8bc:	3fc99999 	.word	0x3fc99999
 800f8c0:	54442d18 	.word	0x54442d18
 800f8c4:	3ff921fb 	.word	0x3ff921fb
 800f8c8:	440fffff 	.word	0x440fffff
 800f8cc:	7ff00000 	.word	0x7ff00000
 800f8d0:	3fdbffff 	.word	0x3fdbffff
 800f8d4:	3ff00000 	.word	0x3ff00000
 800f8d8:	3ff2ffff 	.word	0x3ff2ffff
 800f8dc:	40038000 	.word	0x40038000
 800f8e0:	3ff80000 	.word	0x3ff80000
 800f8e4:	bff00000 	.word	0xbff00000
 800f8e8:	08028c68 	.word	0x08028c68
 800f8ec:	08028c48 	.word	0x08028c48

0800f8f0 <fabs>:
 800f8f0:	ec51 0b10 	vmov	r0, r1, d0
 800f8f4:	ee10 2a10 	vmov	r2, s0
 800f8f8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800f8fc:	ec43 2b10 	vmov	d0, r2, r3
 800f900:	4770      	bx	lr

0800f902 <finite>:
 800f902:	b082      	sub	sp, #8
 800f904:	ed8d 0b00 	vstr	d0, [sp]
 800f908:	9801      	ldr	r0, [sp, #4]
 800f90a:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 800f90e:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 800f912:	0fc0      	lsrs	r0, r0, #31
 800f914:	b002      	add	sp, #8
 800f916:	4770      	bx	lr

0800f918 <floor>:
 800f918:	ec51 0b10 	vmov	r0, r1, d0
 800f91c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f920:	f3c1 570a 	ubfx	r7, r1, #20, #11
 800f924:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 800f928:	2e13      	cmp	r6, #19
 800f92a:	ee10 5a10 	vmov	r5, s0
 800f92e:	ee10 8a10 	vmov	r8, s0
 800f932:	460c      	mov	r4, r1
 800f934:	dc32      	bgt.n	800f99c <floor+0x84>
 800f936:	2e00      	cmp	r6, #0
 800f938:	da14      	bge.n	800f964 <floor+0x4c>
 800f93a:	a333      	add	r3, pc, #204	; (adr r3, 800fa08 <floor+0xf0>)
 800f93c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f940:	f7f0 fd14 	bl	800036c <__adddf3>
 800f944:	2200      	movs	r2, #0
 800f946:	2300      	movs	r3, #0
 800f948:	f7f1 f956 	bl	8000bf8 <__aeabi_dcmpgt>
 800f94c:	b138      	cbz	r0, 800f95e <floor+0x46>
 800f94e:	2c00      	cmp	r4, #0
 800f950:	da57      	bge.n	800fa02 <floor+0xea>
 800f952:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800f956:	431d      	orrs	r5, r3
 800f958:	d001      	beq.n	800f95e <floor+0x46>
 800f95a:	4c2d      	ldr	r4, [pc, #180]	; (800fa10 <floor+0xf8>)
 800f95c:	2500      	movs	r5, #0
 800f95e:	4621      	mov	r1, r4
 800f960:	4628      	mov	r0, r5
 800f962:	e025      	b.n	800f9b0 <floor+0x98>
 800f964:	4f2b      	ldr	r7, [pc, #172]	; (800fa14 <floor+0xfc>)
 800f966:	4137      	asrs	r7, r6
 800f968:	ea01 0307 	and.w	r3, r1, r7
 800f96c:	4303      	orrs	r3, r0
 800f96e:	d01f      	beq.n	800f9b0 <floor+0x98>
 800f970:	a325      	add	r3, pc, #148	; (adr r3, 800fa08 <floor+0xf0>)
 800f972:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f976:	f7f0 fcf9 	bl	800036c <__adddf3>
 800f97a:	2200      	movs	r2, #0
 800f97c:	2300      	movs	r3, #0
 800f97e:	f7f1 f93b 	bl	8000bf8 <__aeabi_dcmpgt>
 800f982:	2800      	cmp	r0, #0
 800f984:	d0eb      	beq.n	800f95e <floor+0x46>
 800f986:	2c00      	cmp	r4, #0
 800f988:	bfbe      	ittt	lt
 800f98a:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 800f98e:	fa43 f606 	asrlt.w	r6, r3, r6
 800f992:	19a4      	addlt	r4, r4, r6
 800f994:	ea24 0407 	bic.w	r4, r4, r7
 800f998:	2500      	movs	r5, #0
 800f99a:	e7e0      	b.n	800f95e <floor+0x46>
 800f99c:	2e33      	cmp	r6, #51	; 0x33
 800f99e:	dd0b      	ble.n	800f9b8 <floor+0xa0>
 800f9a0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800f9a4:	d104      	bne.n	800f9b0 <floor+0x98>
 800f9a6:	ee10 2a10 	vmov	r2, s0
 800f9aa:	460b      	mov	r3, r1
 800f9ac:	f7f0 fcde 	bl	800036c <__adddf3>
 800f9b0:	ec41 0b10 	vmov	d0, r0, r1
 800f9b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f9b8:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 800f9bc:	f04f 33ff 	mov.w	r3, #4294967295
 800f9c0:	fa23 f707 	lsr.w	r7, r3, r7
 800f9c4:	4207      	tst	r7, r0
 800f9c6:	d0f3      	beq.n	800f9b0 <floor+0x98>
 800f9c8:	a30f      	add	r3, pc, #60	; (adr r3, 800fa08 <floor+0xf0>)
 800f9ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f9ce:	f7f0 fccd 	bl	800036c <__adddf3>
 800f9d2:	2200      	movs	r2, #0
 800f9d4:	2300      	movs	r3, #0
 800f9d6:	f7f1 f90f 	bl	8000bf8 <__aeabi_dcmpgt>
 800f9da:	2800      	cmp	r0, #0
 800f9dc:	d0bf      	beq.n	800f95e <floor+0x46>
 800f9de:	2c00      	cmp	r4, #0
 800f9e0:	da02      	bge.n	800f9e8 <floor+0xd0>
 800f9e2:	2e14      	cmp	r6, #20
 800f9e4:	d103      	bne.n	800f9ee <floor+0xd6>
 800f9e6:	3401      	adds	r4, #1
 800f9e8:	ea25 0507 	bic.w	r5, r5, r7
 800f9ec:	e7b7      	b.n	800f95e <floor+0x46>
 800f9ee:	2301      	movs	r3, #1
 800f9f0:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 800f9f4:	fa03 f606 	lsl.w	r6, r3, r6
 800f9f8:	4435      	add	r5, r6
 800f9fa:	4545      	cmp	r5, r8
 800f9fc:	bf38      	it	cc
 800f9fe:	18e4      	addcc	r4, r4, r3
 800fa00:	e7f2      	b.n	800f9e8 <floor+0xd0>
 800fa02:	2500      	movs	r5, #0
 800fa04:	462c      	mov	r4, r5
 800fa06:	e7aa      	b.n	800f95e <floor+0x46>
 800fa08:	8800759c 	.word	0x8800759c
 800fa0c:	7e37e43c 	.word	0x7e37e43c
 800fa10:	bff00000 	.word	0xbff00000
 800fa14:	000fffff 	.word	0x000fffff

0800fa18 <nan>:
 800fa18:	ed9f 0b01 	vldr	d0, [pc, #4]	; 800fa20 <nan+0x8>
 800fa1c:	4770      	bx	lr
 800fa1e:	bf00      	nop
 800fa20:	00000000 	.word	0x00000000
 800fa24:	7ff80000 	.word	0x7ff80000

0800fa28 <scalbn>:
 800fa28:	b570      	push	{r4, r5, r6, lr}
 800fa2a:	ec55 4b10 	vmov	r4, r5, d0
 800fa2e:	f3c5 520a 	ubfx	r2, r5, #20, #11
 800fa32:	4606      	mov	r6, r0
 800fa34:	462b      	mov	r3, r5
 800fa36:	b99a      	cbnz	r2, 800fa60 <scalbn+0x38>
 800fa38:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800fa3c:	4323      	orrs	r3, r4
 800fa3e:	d036      	beq.n	800faae <scalbn+0x86>
 800fa40:	4b39      	ldr	r3, [pc, #228]	; (800fb28 <scalbn+0x100>)
 800fa42:	4629      	mov	r1, r5
 800fa44:	ee10 0a10 	vmov	r0, s0
 800fa48:	2200      	movs	r2, #0
 800fa4a:	f7f0 fe45 	bl	80006d8 <__aeabi_dmul>
 800fa4e:	4b37      	ldr	r3, [pc, #220]	; (800fb2c <scalbn+0x104>)
 800fa50:	429e      	cmp	r6, r3
 800fa52:	4604      	mov	r4, r0
 800fa54:	460d      	mov	r5, r1
 800fa56:	da10      	bge.n	800fa7a <scalbn+0x52>
 800fa58:	a32b      	add	r3, pc, #172	; (adr r3, 800fb08 <scalbn+0xe0>)
 800fa5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fa5e:	e03a      	b.n	800fad6 <scalbn+0xae>
 800fa60:	f240 71ff 	movw	r1, #2047	; 0x7ff
 800fa64:	428a      	cmp	r2, r1
 800fa66:	d10c      	bne.n	800fa82 <scalbn+0x5a>
 800fa68:	ee10 2a10 	vmov	r2, s0
 800fa6c:	4620      	mov	r0, r4
 800fa6e:	4629      	mov	r1, r5
 800fa70:	f7f0 fc7c 	bl	800036c <__adddf3>
 800fa74:	4604      	mov	r4, r0
 800fa76:	460d      	mov	r5, r1
 800fa78:	e019      	b.n	800faae <scalbn+0x86>
 800fa7a:	f3c1 520a 	ubfx	r2, r1, #20, #11
 800fa7e:	460b      	mov	r3, r1
 800fa80:	3a36      	subs	r2, #54	; 0x36
 800fa82:	4432      	add	r2, r6
 800fa84:	f240 71fe 	movw	r1, #2046	; 0x7fe
 800fa88:	428a      	cmp	r2, r1
 800fa8a:	dd08      	ble.n	800fa9e <scalbn+0x76>
 800fa8c:	2d00      	cmp	r5, #0
 800fa8e:	a120      	add	r1, pc, #128	; (adr r1, 800fb10 <scalbn+0xe8>)
 800fa90:	e9d1 0100 	ldrd	r0, r1, [r1]
 800fa94:	da1c      	bge.n	800fad0 <scalbn+0xa8>
 800fa96:	a120      	add	r1, pc, #128	; (adr r1, 800fb18 <scalbn+0xf0>)
 800fa98:	e9d1 0100 	ldrd	r0, r1, [r1]
 800fa9c:	e018      	b.n	800fad0 <scalbn+0xa8>
 800fa9e:	2a00      	cmp	r2, #0
 800faa0:	dd08      	ble.n	800fab4 <scalbn+0x8c>
 800faa2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800faa6:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800faaa:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 800faae:	ec45 4b10 	vmov	d0, r4, r5
 800fab2:	bd70      	pop	{r4, r5, r6, pc}
 800fab4:	f112 0f35 	cmn.w	r2, #53	; 0x35
 800fab8:	da19      	bge.n	800faee <scalbn+0xc6>
 800faba:	f24c 3350 	movw	r3, #50000	; 0xc350
 800fabe:	429e      	cmp	r6, r3
 800fac0:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 800fac4:	dd0a      	ble.n	800fadc <scalbn+0xb4>
 800fac6:	a112      	add	r1, pc, #72	; (adr r1, 800fb10 <scalbn+0xe8>)
 800fac8:	e9d1 0100 	ldrd	r0, r1, [r1]
 800facc:	2b00      	cmp	r3, #0
 800face:	d1e2      	bne.n	800fa96 <scalbn+0x6e>
 800fad0:	a30f      	add	r3, pc, #60	; (adr r3, 800fb10 <scalbn+0xe8>)
 800fad2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fad6:	f7f0 fdff 	bl	80006d8 <__aeabi_dmul>
 800fada:	e7cb      	b.n	800fa74 <scalbn+0x4c>
 800fadc:	a10a      	add	r1, pc, #40	; (adr r1, 800fb08 <scalbn+0xe0>)
 800fade:	e9d1 0100 	ldrd	r0, r1, [r1]
 800fae2:	2b00      	cmp	r3, #0
 800fae4:	d0b8      	beq.n	800fa58 <scalbn+0x30>
 800fae6:	a10e      	add	r1, pc, #56	; (adr r1, 800fb20 <scalbn+0xf8>)
 800fae8:	e9d1 0100 	ldrd	r0, r1, [r1]
 800faec:	e7b4      	b.n	800fa58 <scalbn+0x30>
 800faee:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800faf2:	3236      	adds	r2, #54	; 0x36
 800faf4:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 800faf8:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 800fafc:	4620      	mov	r0, r4
 800fafe:	4b0c      	ldr	r3, [pc, #48]	; (800fb30 <scalbn+0x108>)
 800fb00:	2200      	movs	r2, #0
 800fb02:	e7e8      	b.n	800fad6 <scalbn+0xae>
 800fb04:	f3af 8000 	nop.w
 800fb08:	c2f8f359 	.word	0xc2f8f359
 800fb0c:	01a56e1f 	.word	0x01a56e1f
 800fb10:	8800759c 	.word	0x8800759c
 800fb14:	7e37e43c 	.word	0x7e37e43c
 800fb18:	8800759c 	.word	0x8800759c
 800fb1c:	fe37e43c 	.word	0xfe37e43c
 800fb20:	c2f8f359 	.word	0xc2f8f359
 800fb24:	81a56e1f 	.word	0x81a56e1f
 800fb28:	43500000 	.word	0x43500000
 800fb2c:	ffff3cb0 	.word	0xffff3cb0
 800fb30:	3c900000 	.word	0x3c900000

0800fb34 <__errno>:
 800fb34:	4b01      	ldr	r3, [pc, #4]	; (800fb3c <__errno+0x8>)
 800fb36:	6818      	ldr	r0, [r3, #0]
 800fb38:	4770      	bx	lr
 800fb3a:	bf00      	nop
 800fb3c:	200000fc 	.word	0x200000fc

0800fb40 <_close>:
 800fb40:	4b02      	ldr	r3, [pc, #8]	; (800fb4c <_close+0xc>)
 800fb42:	2258      	movs	r2, #88	; 0x58
 800fb44:	601a      	str	r2, [r3, #0]
 800fb46:	f04f 30ff 	mov.w	r0, #4294967295
 800fb4a:	4770      	bx	lr
 800fb4c:	20001248 	.word	0x20001248

0800fb50 <_fstat>:
 800fb50:	4b02      	ldr	r3, [pc, #8]	; (800fb5c <_fstat+0xc>)
 800fb52:	2258      	movs	r2, #88	; 0x58
 800fb54:	601a      	str	r2, [r3, #0]
 800fb56:	f04f 30ff 	mov.w	r0, #4294967295
 800fb5a:	4770      	bx	lr
 800fb5c:	20001248 	.word	0x20001248

0800fb60 <_getpid>:
 800fb60:	4b02      	ldr	r3, [pc, #8]	; (800fb6c <_getpid+0xc>)
 800fb62:	2258      	movs	r2, #88	; 0x58
 800fb64:	601a      	str	r2, [r3, #0]
 800fb66:	f04f 30ff 	mov.w	r0, #4294967295
 800fb6a:	4770      	bx	lr
 800fb6c:	20001248 	.word	0x20001248

0800fb70 <_isatty>:
 800fb70:	4b02      	ldr	r3, [pc, #8]	; (800fb7c <_isatty+0xc>)
 800fb72:	2258      	movs	r2, #88	; 0x58
 800fb74:	601a      	str	r2, [r3, #0]
 800fb76:	2000      	movs	r0, #0
 800fb78:	4770      	bx	lr
 800fb7a:	bf00      	nop
 800fb7c:	20001248 	.word	0x20001248

0800fb80 <_kill>:
 800fb80:	4b02      	ldr	r3, [pc, #8]	; (800fb8c <_kill+0xc>)
 800fb82:	2258      	movs	r2, #88	; 0x58
 800fb84:	601a      	str	r2, [r3, #0]
 800fb86:	f04f 30ff 	mov.w	r0, #4294967295
 800fb8a:	4770      	bx	lr
 800fb8c:	20001248 	.word	0x20001248

0800fb90 <_lseek>:
 800fb90:	4b02      	ldr	r3, [pc, #8]	; (800fb9c <_lseek+0xc>)
 800fb92:	2258      	movs	r2, #88	; 0x58
 800fb94:	601a      	str	r2, [r3, #0]
 800fb96:	f04f 30ff 	mov.w	r0, #4294967295
 800fb9a:	4770      	bx	lr
 800fb9c:	20001248 	.word	0x20001248

0800fba0 <_read>:
 800fba0:	4b02      	ldr	r3, [pc, #8]	; (800fbac <_read+0xc>)
 800fba2:	2258      	movs	r2, #88	; 0x58
 800fba4:	601a      	str	r2, [r3, #0]
 800fba6:	f04f 30ff 	mov.w	r0, #4294967295
 800fbaa:	4770      	bx	lr
 800fbac:	20001248 	.word	0x20001248

0800fbb0 <_sbrk>:
 800fbb0:	4a04      	ldr	r2, [pc, #16]	; (800fbc4 <_sbrk+0x14>)
 800fbb2:	6811      	ldr	r1, [r2, #0]
 800fbb4:	4603      	mov	r3, r0
 800fbb6:	b909      	cbnz	r1, 800fbbc <_sbrk+0xc>
 800fbb8:	4903      	ldr	r1, [pc, #12]	; (800fbc8 <_sbrk+0x18>)
 800fbba:	6011      	str	r1, [r2, #0]
 800fbbc:	6810      	ldr	r0, [r2, #0]
 800fbbe:	4403      	add	r3, r0
 800fbc0:	6013      	str	r3, [r2, #0]
 800fbc2:	4770      	bx	lr
 800fbc4:	20001250 	.word	0x20001250
 800fbc8:	20001258 	.word	0x20001258

0800fbcc <_write>:
 800fbcc:	4b02      	ldr	r3, [pc, #8]	; (800fbd8 <_write+0xc>)
 800fbce:	2258      	movs	r2, #88	; 0x58
 800fbd0:	601a      	str	r2, [r3, #0]
 800fbd2:	f04f 30ff 	mov.w	r0, #4294967295
 800fbd6:	4770      	bx	lr
 800fbd8:	20001248 	.word	0x20001248

0800fbdc <_exit>:
 800fbdc:	e7fe      	b.n	800fbdc <_exit>
	...

0800fbe0 <_init>:
 800fbe0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fbe2:	bf00      	nop
 800fbe4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fbe6:	bc08      	pop	{r3}
 800fbe8:	469e      	mov	lr, r3
 800fbea:	4770      	bx	lr

0800fbec <_fini>:
 800fbec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fbee:	bf00      	nop
 800fbf0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fbf2:	bc08      	pop	{r3}
 800fbf4:	469e      	mov	lr, r3
 800fbf6:	4770      	bx	lr
